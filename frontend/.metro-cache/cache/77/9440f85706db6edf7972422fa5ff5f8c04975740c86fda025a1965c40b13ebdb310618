{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"]}},{"name":"./TabRouter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":59},"end":{"line":4,"column":55,"index":114}}],"key":"jC/Bg2g+cpTuZwE6Bq9LoiYVdNc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DrawerActions = void 0;\n  exports.DrawerRouter = DrawerRouter;\n  var _nonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  var _TabRouter = require(_dependencyMap[1], \"./TabRouter.js\");\n  const DrawerActions = exports.DrawerActions = {\n    ..._TabRouter.TabActions,\n    openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  };\n  function DrawerRouter({\n    defaultStatus = 'closed',\n    ...rest\n  }) {\n    const router = (0, _TabRouter.TabRouter)(rest);\n    const isDrawerInHistory = state => Boolean(state.history?.some(it => it.type === 'drawer'));\n    const addDrawerToHistory = state => {\n      if (isDrawerInHistory(state)) {\n        return state;\n      }\n      return {\n        ...state,\n        history: [...state.history, {\n          type: 'drawer',\n          status: defaultStatus === 'open' ? 'closed' : 'open'\n        }]\n      };\n    };\n    const removeDrawerFromHistory = state => {\n      if (!isDrawerInHistory(state)) {\n        return state;\n      }\n      return {\n        ...state,\n        history: state.history.filter(it => it.type !== 'drawer')\n      };\n    };\n    const openDrawer = state => {\n      if (defaultStatus === 'open') {\n        return removeDrawerFromHistory(state);\n      }\n      return addDrawerToHistory(state);\n    };\n    const closeDrawer = state => {\n      if (defaultStatus === 'open') {\n        return addDrawerToHistory(state);\n      }\n      return removeDrawerFromHistory(state);\n    };\n    return {\n      ...router,\n      type: 'drawer',\n      getInitialState({\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) {\n        const state = router.getInitialState({\n          routeNames,\n          routeParamList,\n          routeGetIdList\n        });\n        return {\n          ...state,\n          default: defaultStatus,\n          stale: false,\n          type: 'drawer',\n          key: `drawer-${(0, _nonSecure.nanoid)()}`\n        };\n      },\n      getRehydratedState(partialState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) {\n        if (partialState.stale === false) {\n          return partialState;\n        }\n        let state = router.getRehydratedState(partialState, {\n          routeNames,\n          routeParamList,\n          routeGetIdList\n        });\n        if (isDrawerInHistory(partialState)) {\n          // Re-sync the drawer entry in history to correct it if it was wrong\n          state = removeDrawerFromHistory(state);\n          state = addDrawerToHistory(state);\n        }\n        return {\n          ...state,\n          default: defaultStatus,\n          type: 'drawer',\n          key: `drawer-${(0, _nonSecure.nanoid)()}`\n        };\n      },\n      getStateForRouteFocus(state, key) {\n        const result = router.getStateForRouteFocus(state, key);\n        return closeDrawer(result);\n      },\n      getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n          case 'TOGGLE_DRAWER':\n            if (isDrawerInHistory(state)) {\n              return removeDrawerFromHistory(state);\n            }\n            return addDrawerToHistory(state);\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n          case 'NAVIGATE_DEPRECATED':\n            {\n              const result = router.getStateForAction(state, action, options);\n              if (result != null && result.index !== state.index) {\n                return closeDrawer(result);\n              }\n              return result;\n            }\n          case 'GO_BACK':\n            if (isDrawerInHistory(state)) {\n              return removeDrawerFromHistory(state);\n            }\n            return router.getStateForAction(state, action, options);\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    };\n  }\n});","lineCount":151,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"DrawerActions"],[7,23,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"DrawerRouter"],[8,22,1,13],[8,25,1,13,"DrawerRouter"],[8,37,1,13],[9,2,3,0],[9,6,3,0,"_nonSecure"],[9,16,3,0],[9,19,3,0,"require"],[9,26,3,0],[9,27,3,0,"_dependencyMap"],[9,41,3,0],[10,2,4,0],[10,6,4,0,"_TabRouter"],[10,16,4,0],[10,19,4,0,"require"],[10,26,4,0],[10,27,4,0,"_dependencyMap"],[10,41,4,0],[11,2,5,7],[11,8,5,13,"DrawerActions"],[11,21,5,26],[11,24,5,26,"exports"],[11,31,5,26],[11,32,5,26,"DrawerActions"],[11,45,5,26],[11,48,5,29],[12,4,6,2],[12,7,6,5,"TabActions"],[12,28,6,15],[13,4,7,2,"openDrawer"],[13,14,7,12,"openDrawer"],[13,15,7,12],[13,17,7,15],[14,6,8,4],[14,13,8,11],[15,8,9,6,"type"],[15,12,9,10],[15,14,9,12],[16,6,10,4],[16,7,10,5],[17,4,11,2],[17,5,11,3],[18,4,12,2,"closeDrawer"],[18,15,12,13,"closeDrawer"],[18,16,12,13],[18,18,12,16],[19,6,13,4],[19,13,13,11],[20,8,14,6,"type"],[20,12,14,10],[20,14,14,12],[21,6,15,4],[21,7,15,5],[22,4,16,2],[22,5,16,3],[23,4,17,2,"toggleDrawer"],[23,16,17,14,"toggleDrawer"],[23,17,17,14],[23,19,17,17],[24,6,18,4],[24,13,18,11],[25,8,19,6,"type"],[25,12,19,10],[25,14,19,12],[26,6,20,4],[26,7,20,5],[27,4,21,2],[28,2,22,0],[28,3,22,1],[29,2,23,7],[29,11,23,16,"DrawerRouter"],[29,23,23,28,"DrawerRouter"],[29,24,23,29],[30,4,24,2,"defaultStatus"],[30,17,24,15],[30,20,24,18],[30,28,24,26],[31,4,25,2],[31,7,25,5,"rest"],[32,2,26,0],[32,3,26,1],[32,5,26,3],[33,4,27,2],[33,10,27,8,"router"],[33,16,27,14],[33,19,27,17],[33,23,27,17,"TabRouter"],[33,43,27,26],[33,45,27,27,"rest"],[33,49,27,31],[33,50,27,32],[34,4,28,2],[34,10,28,8,"isDrawerInHistory"],[34,27,28,25],[34,30,28,28,"state"],[34,35,28,33],[34,39,28,37,"Boolean"],[34,46,28,44],[34,47,28,45,"state"],[34,52,28,50],[34,53,28,51,"history"],[34,60,28,58],[34,62,28,60,"some"],[34,66,28,64],[34,67,28,65,"it"],[34,69,28,67],[34,73,28,71,"it"],[34,75,28,73],[34,76,28,74,"type"],[34,80,28,78],[34,85,28,83],[34,93,28,91],[34,94,28,92],[34,95,28,93],[35,4,29,2],[35,10,29,8,"addDrawerToHistory"],[35,28,29,26],[35,31,29,29,"state"],[35,36,29,34],[35,40,29,38],[36,6,30,4],[36,10,30,8,"isDrawerInHistory"],[36,27,30,25],[36,28,30,26,"state"],[36,33,30,31],[36,34,30,32],[36,36,30,34],[37,8,31,6],[37,15,31,13,"state"],[37,20,31,18],[38,6,32,4],[39,6,33,4],[39,13,33,11],[40,8,34,6],[40,11,34,9,"state"],[40,16,34,14],[41,8,35,6,"history"],[41,15,35,13],[41,17,35,15],[41,18,35,16],[41,21,35,19,"state"],[41,26,35,24],[41,27,35,25,"history"],[41,34,35,32],[41,36,35,34],[42,10,36,8,"type"],[42,14,36,12],[42,16,36,14],[42,24,36,22],[43,10,37,8,"status"],[43,16,37,14],[43,18,37,16,"defaultStatus"],[43,31,37,29],[43,36,37,34],[43,42,37,40],[43,45,37,43],[43,53,37,51],[43,56,37,54],[44,8,38,6],[44,9,38,7],[45,6,39,4],[45,7,39,5],[46,4,40,2],[46,5,40,3],[47,4,41,2],[47,10,41,8,"removeDrawerFromHistory"],[47,33,41,31],[47,36,41,34,"state"],[47,41,41,39],[47,45,41,43],[48,6,42,4],[48,10,42,8],[48,11,42,9,"isDrawerInHistory"],[48,28,42,26],[48,29,42,27,"state"],[48,34,42,32],[48,35,42,33],[48,37,42,35],[49,8,43,6],[49,15,43,13,"state"],[49,20,43,18],[50,6,44,4],[51,6,45,4],[51,13,45,11],[52,8,46,6],[52,11,46,9,"state"],[52,16,46,14],[53,8,47,6,"history"],[53,15,47,13],[53,17,47,15,"state"],[53,22,47,20],[53,23,47,21,"history"],[53,30,47,28],[53,31,47,29,"filter"],[53,37,47,35],[53,38,47,36,"it"],[53,40,47,38],[53,44,47,42,"it"],[53,46,47,44],[53,47,47,45,"type"],[53,51,47,49],[53,56,47,54],[53,64,47,62],[54,6,48,4],[54,7,48,5],[55,4,49,2],[55,5,49,3],[56,4,50,2],[56,10,50,8,"openDrawer"],[56,20,50,18],[56,23,50,21,"state"],[56,28,50,26],[56,32,50,30],[57,6,51,4],[57,10,51,8,"defaultStatus"],[57,23,51,21],[57,28,51,26],[57,34,51,32],[57,36,51,34],[58,8,52,6],[58,15,52,13,"removeDrawerFromHistory"],[58,38,52,36],[58,39,52,37,"state"],[58,44,52,42],[58,45,52,43],[59,6,53,4],[60,6,54,4],[60,13,54,11,"addDrawerToHistory"],[60,31,54,29],[60,32,54,30,"state"],[60,37,54,35],[60,38,54,36],[61,4,55,2],[61,5,55,3],[62,4,56,2],[62,10,56,8,"closeDrawer"],[62,21,56,19],[62,24,56,22,"state"],[62,29,56,27],[62,33,56,31],[63,6,57,4],[63,10,57,8,"defaultStatus"],[63,23,57,21],[63,28,57,26],[63,34,57,32],[63,36,57,34],[64,8,58,6],[64,15,58,13,"addDrawerToHistory"],[64,33,58,31],[64,34,58,32,"state"],[64,39,58,37],[64,40,58,38],[65,6,59,4],[66,6,60,4],[66,13,60,11,"removeDrawerFromHistory"],[66,36,60,34],[66,37,60,35,"state"],[66,42,60,40],[66,43,60,41],[67,4,61,2],[67,5,61,3],[68,4,62,2],[68,11,62,9],[69,6,63,4],[69,9,63,7,"router"],[69,15,63,13],[70,6,64,4,"type"],[70,10,64,8],[70,12,64,10],[70,20,64,18],[71,6,65,4,"getInitialState"],[71,21,65,19,"getInitialState"],[71,22,65,20],[72,8,66,6,"routeNames"],[72,18,66,16],[73,8,67,6,"routeParamList"],[73,22,67,20],[74,8,68,6,"routeGetIdList"],[75,6,69,4],[75,7,69,5],[75,9,69,7],[76,8,70,6],[76,14,70,12,"state"],[76,19,70,17],[76,22,70,20,"router"],[76,28,70,26],[76,29,70,27,"getInitialState"],[76,44,70,42],[76,45,70,43],[77,10,71,8,"routeNames"],[77,20,71,18],[78,10,72,8,"routeParamList"],[78,24,72,22],[79,10,73,8,"routeGetIdList"],[80,8,74,6],[80,9,74,7],[80,10,74,8],[81,8,75,6],[81,15,75,13],[82,10,76,8],[82,13,76,11,"state"],[82,18,76,16],[83,10,77,8,"default"],[83,17,77,15],[83,19,77,17,"defaultStatus"],[83,32,77,30],[84,10,78,8,"stale"],[84,15,78,13],[84,17,78,15],[84,22,78,20],[85,10,79,8,"type"],[85,14,79,12],[85,16,79,14],[85,24,79,22],[86,10,80,8,"key"],[86,13,80,11],[86,15,80,13],[86,25,80,23],[86,29,80,23,"nanoid"],[86,46,80,29],[86,48,80,30],[86,49,80,31],[87,8,81,6],[87,9,81,7],[88,6,82,4],[88,7,82,5],[89,6,83,4,"getRehydratedState"],[89,24,83,22,"getRehydratedState"],[89,25,83,23,"partialState"],[89,37,83,35],[89,39,83,37],[90,8,84,6,"routeNames"],[90,18,84,16],[91,8,85,6,"routeParamList"],[91,22,85,20],[92,8,86,6,"routeGetIdList"],[93,6,87,4],[93,7,87,5],[93,9,87,7],[94,8,88,6],[94,12,88,10,"partialState"],[94,24,88,22],[94,25,88,23,"stale"],[94,30,88,28],[94,35,88,33],[94,40,88,38],[94,42,88,40],[95,10,89,8],[95,17,89,15,"partialState"],[95,29,89,27],[96,8,90,6],[97,8,91,6],[97,12,91,10,"state"],[97,17,91,15],[97,20,91,18,"router"],[97,26,91,24],[97,27,91,25,"getRehydratedState"],[97,45,91,43],[97,46,91,44,"partialState"],[97,58,91,56],[97,60,91,58],[98,10,92,8,"routeNames"],[98,20,92,18],[99,10,93,8,"routeParamList"],[99,24,93,22],[100,10,94,8,"routeGetIdList"],[101,8,95,6],[101,9,95,7],[101,10,95,8],[102,8,96,6],[102,12,96,10,"isDrawerInHistory"],[102,29,96,27],[102,30,96,28,"partialState"],[102,42,96,40],[102,43,96,41],[102,45,96,43],[103,10,97,8],[104,10,98,8,"state"],[104,15,98,13],[104,18,98,16,"removeDrawerFromHistory"],[104,41,98,39],[104,42,98,40,"state"],[104,47,98,45],[104,48,98,46],[105,10,99,8,"state"],[105,15,99,13],[105,18,99,16,"addDrawerToHistory"],[105,36,99,34],[105,37,99,35,"state"],[105,42,99,40],[105,43,99,41],[106,8,100,6],[107,8,101,6],[107,15,101,13],[108,10,102,8],[108,13,102,11,"state"],[108,18,102,16],[109,10,103,8,"default"],[109,17,103,15],[109,19,103,17,"defaultStatus"],[109,32,103,30],[110,10,104,8,"type"],[110,14,104,12],[110,16,104,14],[110,24,104,22],[111,10,105,8,"key"],[111,13,105,11],[111,15,105,13],[111,25,105,23],[111,29,105,23,"nanoid"],[111,46,105,29],[111,48,105,30],[111,49,105,31],[112,8,106,6],[112,9,106,7],[113,6,107,4],[113,7,107,5],[114,6,108,4,"getStateForRouteFocus"],[114,27,108,25,"getStateForRouteFocus"],[114,28,108,26,"state"],[114,33,108,31],[114,35,108,33,"key"],[114,38,108,36],[114,40,108,38],[115,8,109,6],[115,14,109,12,"result"],[115,20,109,18],[115,23,109,21,"router"],[115,29,109,27],[115,30,109,28,"getStateForRouteFocus"],[115,51,109,49],[115,52,109,50,"state"],[115,57,109,55],[115,59,109,57,"key"],[115,62,109,60],[115,63,109,61],[116,8,110,6],[116,15,110,13,"closeDrawer"],[116,26,110,24],[116,27,110,25,"result"],[116,33,110,31],[116,34,110,32],[117,6,111,4],[117,7,111,5],[118,6,112,4,"getStateForAction"],[118,23,112,21,"getStateForAction"],[118,24,112,22,"state"],[118,29,112,27],[118,31,112,29,"action"],[118,37,112,35],[118,39,112,37,"options"],[118,46,112,44],[118,48,112,46],[119,8,113,6],[119,16,113,14,"action"],[119,22,113,20],[119,23,113,21,"type"],[119,27,113,25],[120,10,114,8],[120,15,114,13],[120,28,114,26],[121,12,115,10],[121,19,115,17,"openDrawer"],[121,29,115,27],[121,30,115,28,"state"],[121,35,115,33],[121,36,115,34],[122,10,116,8],[122,15,116,13],[122,29,116,27],[123,12,117,10],[123,19,117,17,"closeDrawer"],[123,30,117,28],[123,31,117,29,"state"],[123,36,117,34],[123,37,117,35],[124,10,118,8],[124,15,118,13],[124,30,118,28],[125,12,119,10],[125,16,119,14,"isDrawerInHistory"],[125,33,119,31],[125,34,119,32,"state"],[125,39,119,37],[125,40,119,38],[125,42,119,40],[126,14,120,12],[126,21,120,19,"removeDrawerFromHistory"],[126,44,120,42],[126,45,120,43,"state"],[126,50,120,48],[126,51,120,49],[127,12,121,10],[128,12,122,10],[128,19,122,17,"addDrawerToHistory"],[128,37,122,35],[128,38,122,36,"state"],[128,43,122,41],[128,44,122,42],[129,10,123,8],[129,15,123,13],[129,24,123,22],[130,10,124,8],[130,15,124,13],[130,25,124,23],[131,10,125,8],[131,15,125,13],[131,36,125,34],[132,12,126,10],[133,14,127,12],[133,20,127,18,"result"],[133,26,127,24],[133,29,127,27,"router"],[133,35,127,33],[133,36,127,34,"getStateForAction"],[133,53,127,51],[133,54,127,52,"state"],[133,59,127,57],[133,61,127,59,"action"],[133,67,127,65],[133,69,127,67,"options"],[133,76,127,74],[133,77,127,75],[134,14,128,12],[134,18,128,16,"result"],[134,24,128,22],[134,28,128,26],[134,32,128,30],[134,36,128,34,"result"],[134,42,128,40],[134,43,128,41,"index"],[134,48,128,46],[134,53,128,51,"state"],[134,58,128,56],[134,59,128,57,"index"],[134,64,128,62],[134,66,128,64],[135,16,129,14],[135,23,129,21,"closeDrawer"],[135,34,129,32],[135,35,129,33,"result"],[135,41,129,39],[135,42,129,40],[136,14,130,12],[137,14,131,12],[137,21,131,19,"result"],[137,27,131,25],[138,12,132,10],[139,10,133,8],[139,15,133,13],[139,24,133,22],[140,12,134,10],[140,16,134,14,"isDrawerInHistory"],[140,33,134,31],[140,34,134,32,"state"],[140,39,134,37],[140,40,134,38],[140,42,134,40],[141,14,135,12],[141,21,135,19,"removeDrawerFromHistory"],[141,44,135,42],[141,45,135,43,"state"],[141,50,135,48],[141,51,135,49],[142,12,136,10],[143,12,137,10],[143,19,137,17,"router"],[143,25,137,23],[143,26,137,24,"getStateForAction"],[143,43,137,41],[143,44,137,42,"state"],[143,49,137,47],[143,51,137,49,"action"],[143,57,137,55],[143,59,137,57,"options"],[143,66,137,64],[143,67,137,65],[144,10,138,8],[145,12,139,10],[145,19,139,17,"router"],[145,25,139,23],[145,26,139,24,"getStateForAction"],[145,43,139,41],[145,44,139,42,"state"],[145,49,139,47],[145,51,139,49,"action"],[145,57,139,55],[145,59,139,57,"options"],[145,66,139,64],[145,67,139,65],[146,8,140,6],[147,6,141,4],[147,7,141,5],[148,6,142,4,"actionCreators"],[148,20,142,18],[148,22,142,20,"DrawerActions"],[149,4,143,2],[149,5,143,3],[150,2,144,0],[151,0,144,1],[151,3]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","DrawerRouter","isDrawerInHistory","state.history.some$argument_0","addDrawerToHistory","removeDrawerFromHistory","state.history.filter$argument_0","openDrawer","closeDrawer","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;ECM;GDI;EEC;GFI;EGC;GHI;OIE;4BCK,qCC,0BD,ED;6BGC;GHW;kCIC;oCCM,0BD;GJE;qBMC;GNK;sBOC;GPK;IQI;KRiB;ISC;KTwB;IUC;KVG;IWC;KX6B;CJG"}},"type":"js/module"}]}