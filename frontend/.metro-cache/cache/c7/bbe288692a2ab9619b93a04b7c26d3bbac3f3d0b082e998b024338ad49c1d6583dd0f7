{"dependencies":[{"name":"../../../exports/InteractionManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":225},"end":{"line":13,"column":69,"index":294}}],"key":"xCxB1zW50yE4RuPd5KrkShI1yG4=","exportNames":["*"],"imports":1}},{"name":"../TouchHistoryMath","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":295},"end":{"line":14,"column":51,"index":346}}],"key":"+lrQiafFPnfTWQvj2Bd8oxLYcHA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _exportsInteractionManager = require(_dependencyMap[0], \"../../../exports/InteractionManager\");\n  var InteractionManager = _interopDefault(_exportsInteractionManager);\n  var _TouchHistoryMath = require(_dependencyMap[1], \"../TouchHistoryMath\");\n  var TouchHistoryMath = _interopDefault(_TouchHistoryMath);\n  var currentCentroidXOfTouchesChangedAfter = TouchHistoryMath.default.currentCentroidXOfTouchesChangedAfter;\n  var currentCentroidYOfTouchesChangedAfter = TouchHistoryMath.default.currentCentroidYOfTouchesChangedAfter;\n  var previousCentroidXOfTouchesChangedAfter = TouchHistoryMath.default.previousCentroidXOfTouchesChangedAfter;\n  var previousCentroidYOfTouchesChangedAfter = TouchHistoryMath.default.previousCentroidYOfTouchesChangedAfter;\n  var currentCentroidX = TouchHistoryMath.default.currentCentroidX;\n  var currentCentroidY = TouchHistoryMath.default.currentCentroidY;\n\n  /**\n   * `PanResponder` reconciles several touches into a single gesture. It makes\n   * single-touch gestures resilient to extra touches, and can be used to\n   * recognize simple multi-touch gestures.\n   *\n   * By default, `PanResponder` holds an `InteractionManager` handle to block\n   * long-running JS events from interrupting active gestures.\n   *\n   * It provides a predictable wrapper of the responder handlers provided by the\n   * [gesture responder system](docs/gesture-responder-system.html).\n   * For each handler, it provides a new `gestureState` object alongside the\n   * native event object:\n   *\n   * ```\n   * onPanResponderMove: (event, gestureState) => {}\n   * ```\n   *\n   * A native event is a synthetic touch event with the following form:\n   *\n   *  - `nativeEvent`\n   *      + `changedTouches` - Array of all touch events that have changed since the last event\n   *      + `identifier` - The ID of the touch\n   *      + `locationX` - The X position of the touch, relative to the element\n   *      + `locationY` - The Y position of the touch, relative to the element\n   *      + `pageX` - The X position of the touch, relative to the root element\n   *      + `pageY` - The Y position of the touch, relative to the root element\n   *      + `target` - The node id of the element receiving the touch event\n   *      + `timestamp` - A time identifier for the touch, useful for velocity calculation\n   *      + `touches` - Array of all current touches on the screen\n   *\n   * A `gestureState` object has the following:\n   *\n   *  - `stateID` - ID of the gestureState- persisted as long as there at least\n   *     one touch on screen\n   *  - `moveX` - the latest screen coordinates of the recently-moved touch\n   *  - `moveY` - the latest screen coordinates of the recently-moved touch\n   *  - `x0` - the screen coordinates of the responder grant\n   *  - `y0` - the screen coordinates of the responder grant\n   *  - `dx` - accumulated distance of the gesture since the touch started\n   *  - `dy` - accumulated distance of the gesture since the touch started\n   *  - `vx` - current velocity of the gesture\n   *  - `vy` - current velocity of the gesture\n   *  - `numberActiveTouches` - Number of touches currently on screen\n   *\n   * ### Basic Usage\n   *\n   * ```\n   *   componentWillMount: function() {\n   *     this._panResponder = PanResponder.create({\n   *       // Ask to be the responder:\n   *       onStartShouldSetPanResponder: (evt, gestureState) => true,\n   *       onStartShouldSetPanResponderCapture: (evt, gestureState) => true,\n   *       onMoveShouldSetPanResponder: (evt, gestureState) => true,\n   *       onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n   *\n   *       onPanResponderGrant: (evt, gestureState) => {\n   *         // The gesture has started. Show visual feedback so the user knows\n   *         // what is happening!\n   *\n   *         // gestureState.d{x,y} will be set to zero now\n   *       },\n   *       onPanResponderMove: (evt, gestureState) => {\n   *         // The most recent move distance is gestureState.move{X,Y}\n   *\n   *         // The accumulated gesture distance since becoming responder is\n   *         // gestureState.d{x,y}\n   *       },\n   *       onPanResponderTerminationRequest: (evt, gestureState) => true,\n   *       onPanResponderRelease: (evt, gestureState) => {\n   *         // The user has released all touches while this view is the\n   *         // responder. This typically means a gesture has succeeded\n   *       },\n   *       onPanResponderTerminate: (evt, gestureState) => {\n   *         // Another component has become the responder, so this gesture\n   *         // should be cancelled\n   *       },\n   *       onShouldBlockNativeResponder: (evt, gestureState) => {\n   *         // Returns whether this component should block native components from becoming the JS\n   *         // responder. Returns true by default. Is currently only supported on android.\n   *         return true;\n   *       },\n   *     });\n   *   },\n   *\n   *   render: function() {\n   *     return (\n   *       <View {...this._panResponder.panHandlers} />\n   *     );\n   *   },\n   *\n   * ```\n   *\n   * ### Working Example\n   *\n   * To see it in action, try the\n   * [PanResponder example in RNTester](https://github.com/facebook/react-native/blob/master/RNTester/js/PanResponderExample.js)\n   */\n\n  var PanResponder = {\n    /**\n     *\n     * A graphical explanation of the touch data flow:\n     *\n     * +----------------------------+             +--------------------------------+\n     * | ResponderTouchHistoryStore |             |TouchHistoryMath                |\n     * +----------------------------+             +----------+---------------------+\n     * |Global store of touchHistory|             |Allocation-less math util       |\n     * |including activeness, start |             |on touch history (centroids     |\n     * |position, prev/cur position.|             |and multitouch movement etc)    |\n     * |                            |             |                                |\n     * +----^-----------------------+             +----^---------------------------+\n     *      |                                          |\n     *      | (records relevant history                |\n     *      |  of touches relevant for                 |\n     *      |  implementing higher level               |\n     *      |  gestures)                               |\n     *      |                                          |\n     * +----+-----------------------+             +----|---------------------------+\n     * | ResponderEventPlugin       |             |    |   Your App/Component      |\n     * +----------------------------+             +----|---------------------------+\n     * |Negotiates which view gets  | Low level   |    |             High level    |\n     * |onResponderMove events.     | events w/   |  +-+-------+     events w/     |\n     * |Also records history into   | touchHistory|  |   Pan   |     multitouch +  |\n     * |ResponderTouchHistoryStore. +---------------->Responder+-----> accumulative|\n     * +----------------------------+ attached to |  |         |     distance and  |\n     *                                 each event |  +---------+     velocity.     |\n     *                                            |                                |\n     *                                            |                                |\n     *                                            +--------------------------------+\n     *\n     *\n     *\n     * Gesture that calculates cumulative movement over time in a way that just\n     * \"does the right thing\" for multiple touches. The \"right thing\" is very\n     * nuanced. When moving two touches in opposite directions, the cumulative\n     * distance is zero in each dimension. When two touches move in parallel five\n     * pixels in the same direction, the cumulative distance is five, not ten. If\n     * two touches start, one moves five in a direction, then stops and the other\n     * touch moves fives in the same direction, the cumulative distance is ten.\n     *\n     * This logic requires a kind of processing of time \"clusters\" of touch events\n     * so that two touch moves that essentially occur in parallel but move every\n     * other frame respectively, are considered part of the same movement.\n     *\n     * Explanation of some of the non-obvious fields:\n     *\n     * - moveX/moveY: If no move event has been observed, then `(moveX, moveY)` is\n     *   invalid. If a move event has been observed, `(moveX, moveY)` is the\n     *   centroid of the most recently moved \"cluster\" of active touches.\n     *   (Currently all move have the same timeStamp, but later we should add some\n     *   threshold for what is considered to be \"moving\"). If a palm is\n     *   accidentally counted as a touch, but a finger is moving greatly, the palm\n     *   will move slightly, but we only want to count the single moving touch.\n     * - x0/y0: Centroid location (non-cumulative) at the time of becoming\n     *   responder.\n     * - dx/dy: Cumulative touch distance - not the same thing as sum of each touch\n     *   distance. Accounts for touch moves that are clustered together in time,\n     *   moving the same direction. Only valid when currently responder (otherwise,\n     *   it only represents the drag distance below the threshold).\n     * - vx/vy: Velocity.\n     */\n\n    _initializeGestureState(gestureState) {\n      gestureState.moveX = 0;\n      gestureState.moveY = 0;\n      gestureState.x0 = 0;\n      gestureState.y0 = 0;\n      gestureState.dx = 0;\n      gestureState.dy = 0;\n      gestureState.vx = 0;\n      gestureState.vy = 0;\n      gestureState.numberActiveTouches = 0;\n      // All `gestureState` accounts for timeStamps up until:\n      gestureState._accountsForMovesUpTo = 0;\n    },\n    /**\n     * This is nuanced and is necessary. It is incorrect to continuously take all\n     * active *and* recently moved touches, find the centroid, and track how that\n     * result changes over time. Instead, we must take all recently moved\n     * touches, and calculate how the centroid has changed just for those\n     * recently moved touches, and append that change to an accumulator. This is\n     * to (at least) handle the case where the user is moving three fingers, and\n     * then one of the fingers stops but the other two continue.\n     *\n     * This is very different than taking all of the recently moved touches and\n     * storing their centroid as `dx/dy`. For correctness, we must *accumulate\n     * changes* in the centroid of recently moved touches.\n     *\n     * There is also some nuance with how we handle multiple moved touches in a\n     * single event. With the way `ReactNativeEventEmitter` dispatches touches as\n     * individual events, multiple touches generate two 'move' events, each of\n     * them triggering `onResponderMove`. But with the way `PanResponder` works,\n     * all of the gesture inference is performed on the first dispatch, since it\n     * looks at all of the touches (even the ones for which there hasn't been a\n     * native dispatch yet). Therefore, `PanResponder` does not call\n     * `onResponderMove` passed the first dispatch. This diverges from the\n     * typical responder callback pattern (without using `PanResponder`), but\n     * avoids more dispatches than necessary.\n     */\n    _updateGestureStateOnMove(gestureState, touchHistory) {\n      gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n      gestureState.moveX = currentCentroidXOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);\n      gestureState.moveY = currentCentroidYOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);\n      var movedAfter = gestureState._accountsForMovesUpTo;\n      var prevX = previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);\n      var x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);\n      var prevY = previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);\n      var y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);\n      var nextDX = gestureState.dx + (x - prevX);\n      var nextDY = gestureState.dy + (y - prevY);\n\n      // TODO: This must be filtered intelligently.\n      var dt = touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;\n      gestureState.vx = (nextDX - gestureState.dx) / dt;\n      gestureState.vy = (nextDY - gestureState.dy) / dt;\n      gestureState.dx = nextDX;\n      gestureState.dy = nextDY;\n      gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;\n    },\n    /**\n     * @param {object} config Enhanced versions of all of the responder callbacks\n     * that provide not only the typical `ResponderSyntheticEvent`, but also the\n     * `PanResponder` gesture state.  Simply replace the word `Responder` with\n     * `PanResponder` in each of the typical `onResponder*` callbacks. For\n     * example, the `config` object would look like:\n     *\n     *  - `onMoveShouldSetPanResponder: (e, gestureState) => {...}`\n     *  - `onMoveShouldSetPanResponderCapture: (e, gestureState) => {...}`\n     *  - `onStartShouldSetPanResponder: (e, gestureState) => {...}`\n     *  - `onStartShouldSetPanResponderCapture: (e, gestureState) => {...}`\n     *  - `onPanResponderReject: (e, gestureState) => {...}`\n     *  - `onPanResponderGrant: (e, gestureState) => {...}`\n     *  - `onPanResponderStart: (e, gestureState) => {...}`\n     *  - `onPanResponderEnd: (e, gestureState) => {...}`\n     *  - `onPanResponderRelease: (e, gestureState) => {...}`\n     *  - `onPanResponderMove: (e, gestureState) => {...}`\n     *  - `onPanResponderTerminate: (e, gestureState) => {...}`\n     *  - `onPanResponderTerminationRequest: (e, gestureState) => {...}`\n     *  - `onShouldBlockNativeResponder: (e, gestureState) => {...}`\n     *\n     *  In general, for events that have capture equivalents, we update the\n     *  gestureState once in the capture phase and can use it in the bubble phase\n     *  as well.\n     *\n     *  Be careful with onStartShould* callbacks. They only reflect updated\n     *  `gestureState` for start/end events that bubble/capture to the Node.\n     *  Once the node is the responder, you can rely on every start/end event\n     *  being processed by the gesture and `gestureState` being updated\n     *  accordingly. (numberActiveTouches) may not be totally accurate unless you\n     *  are the responder.\n     */\n    create(config) {\n      var interactionState = {\n        handle: null,\n        shouldCancelClick: false,\n        timeout: null\n      };\n      var gestureState = {\n        // Useful for debugging\n        stateID: Math.random(),\n        moveX: 0,\n        moveY: 0,\n        x0: 0,\n        y0: 0,\n        dx: 0,\n        dy: 0,\n        vx: 0,\n        vy: 0,\n        numberActiveTouches: 0,\n        _accountsForMovesUpTo: 0\n      };\n      var panHandlers = {\n        onStartShouldSetResponder(event) {\n          return config.onStartShouldSetPanResponder == null ? false : config.onStartShouldSetPanResponder(event, gestureState);\n        },\n        onMoveShouldSetResponder(event) {\n          return config.onMoveShouldSetPanResponder == null ? false : config.onMoveShouldSetPanResponder(event, gestureState);\n        },\n        onStartShouldSetResponderCapture(event) {\n          // TODO: Actually, we should reinitialize the state any time\n          // touches.length increases from 0 active to > 0 active.\n          if (event.nativeEvent.touches.length === 1) {\n            PanResponder._initializeGestureState(gestureState);\n          }\n          gestureState.numberActiveTouches = event.touchHistory.numberActiveTouches;\n          return config.onStartShouldSetPanResponderCapture != null ? config.onStartShouldSetPanResponderCapture(event, gestureState) : false;\n        },\n        onMoveShouldSetResponderCapture(event) {\n          var touchHistory = event.touchHistory;\n          // Responder system incorrectly dispatches should* to current responder\n          // Filter out any touch moves past the first one - we would have\n          // already processed multi-touch geometry during the first event.\n          if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {\n            return false;\n          }\n          PanResponder._updateGestureStateOnMove(gestureState, touchHistory);\n          return config.onMoveShouldSetPanResponderCapture ? config.onMoveShouldSetPanResponderCapture(event, gestureState) : false;\n        },\n        onResponderGrant(event) {\n          if (!interactionState.handle) {\n            interactionState.handle = InteractionManager.default.createInteractionHandle();\n          }\n          if (interactionState.timeout) {\n            clearInteractionTimeout(interactionState);\n          }\n          interactionState.shouldCancelClick = true;\n          gestureState.x0 = currentCentroidX(event.touchHistory);\n          gestureState.y0 = currentCentroidY(event.touchHistory);\n          gestureState.dx = 0;\n          gestureState.dy = 0;\n          if (config.onPanResponderGrant) {\n            config.onPanResponderGrant(event, gestureState);\n          }\n          // TODO: t7467124 investigate if this can be removed\n          return config.onShouldBlockNativeResponder == null ? true : config.onShouldBlockNativeResponder(event, gestureState);\n        },\n        onResponderReject(event) {\n          clearInteractionHandle(interactionState, config.onPanResponderReject, event, gestureState);\n        },\n        onResponderRelease(event) {\n          clearInteractionHandle(interactionState, config.onPanResponderRelease, event, gestureState);\n          setInteractionTimeout(interactionState);\n          PanResponder._initializeGestureState(gestureState);\n        },\n        onResponderStart(event) {\n          var touchHistory = event.touchHistory;\n          gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n          if (config.onPanResponderStart) {\n            config.onPanResponderStart(event, gestureState);\n          }\n        },\n        onResponderMove(event) {\n          var touchHistory = event.touchHistory;\n          // Guard against the dispatch of two touch moves when there are two\n          // simultaneously changed touches.\n          if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {\n            return;\n          }\n          // Filter out any touch moves past the first one - we would have\n          // already processed multi-touch geometry during the first event.\n          PanResponder._updateGestureStateOnMove(gestureState, touchHistory);\n          if (config.onPanResponderMove) {\n            config.onPanResponderMove(event, gestureState);\n          }\n        },\n        onResponderEnd(event) {\n          var touchHistory = event.touchHistory;\n          gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n          clearInteractionHandle(interactionState, config.onPanResponderEnd, event, gestureState);\n        },\n        onResponderTerminate(event) {\n          clearInteractionHandle(interactionState, config.onPanResponderTerminate, event, gestureState);\n          setInteractionTimeout(interactionState);\n          PanResponder._initializeGestureState(gestureState);\n        },\n        onResponderTerminationRequest(event) {\n          return config.onPanResponderTerminationRequest == null ? true : config.onPanResponderTerminationRequest(event, gestureState);\n        },\n        // We do not want to trigger 'click' activated gestures or native behaviors\n        // on any pan target that is under a mouse cursor when it is released.\n        // Browsers will natively cancel 'click' events on a target if a non-mouse\n        // active pointer moves.\n        onClickCapture: event => {\n          if (interactionState.shouldCancelClick === true) {\n            event.stopPropagation();\n            event.preventDefault();\n          }\n        }\n      };\n      return {\n        panHandlers,\n        getInteractionHandle() {\n          return interactionState.handle;\n        }\n      };\n    }\n  };\n  function clearInteractionHandle(interactionState, callback, event, gestureState) {\n    if (interactionState.handle) {\n      InteractionManager.default.clearInteractionHandle(interactionState.handle);\n      interactionState.handle = null;\n    }\n    if (callback) {\n      callback(event, gestureState);\n    }\n  }\n  function clearInteractionTimeout(interactionState) {\n    clearTimeout(interactionState.timeout);\n  }\n  function setInteractionTimeout(interactionState) {\n    interactionState.timeout = setTimeout(() => {\n      interactionState.shouldCancelClick = false;\n    }, 250);\n  }\n  var _default = PanResponder;\n});","lineCount":434,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13],[17,11,11,13,"_interopDefault"],[17,27,11,13,"e"],[17,28,11,13],[18,4,11,13],[18,11,11,13,"e"],[18,12,11,13],[18,16,11,13,"e"],[18,17,11,13],[18,18,11,13,"__esModule"],[18,28,11,13],[18,31,11,13,"e"],[18,32,11,13],[19,6,11,13,"default"],[19,13,11,13],[19,15,11,13,"e"],[20,4,11,13],[21,2,11,13],[22,2,416,0,"Object"],[22,8,416,0],[22,9,416,0,"defineProperty"],[22,23,416,0],[22,24,416,0,"exports"],[22,31,416,0],[23,4,416,0,"enumerable"],[23,14,416,0],[24,4,416,0,"get"],[24,7,416,0],[24,18,416,0,"get"],[24,19,416,0],[25,6,416,0],[25,13,416,0,"_default"],[25,21,416,0],[26,4,416,0],[27,2,416,0],[28,2,13,0],[28,6,13,0,"_exportsInteractionManager"],[28,32,13,0],[28,35,13,0,"require"],[28,42,13,0],[28,43,13,0,"_dependencyMap"],[28,57,13,0],[29,2,13,0],[29,6,13,0,"InteractionManager"],[29,24,13,0],[29,27,13,0,"_interopDefault"],[29,42,13,0],[29,43,13,0,"_exportsInteractionManager"],[29,69,13,0],[30,2,14,0],[30,6,14,0,"_TouchHistoryMath"],[30,23,14,0],[30,26,14,0,"require"],[30,33,14,0],[30,34,14,0,"_dependencyMap"],[30,48,14,0],[31,2,14,0],[31,6,14,0,"TouchHistoryMath"],[31,22,14,0],[31,25,14,0,"_interopDefault"],[31,40,14,0],[31,41,14,0,"_TouchHistoryMath"],[31,58,14,0],[32,2,15,0],[32,6,15,4,"currentCentroidXOfTouchesChangedAfter"],[32,43,15,41],[32,46,15,44,"TouchHistoryMath"],[32,62,15,60],[32,63,15,60,"default"],[32,70,15,60],[32,71,15,61,"currentCentroidXOfTouchesChangedAfter"],[32,108,15,98],[33,2,16,0],[33,6,16,4,"currentCentroidYOfTouchesChangedAfter"],[33,43,16,41],[33,46,16,44,"TouchHistoryMath"],[33,62,16,60],[33,63,16,60,"default"],[33,70,16,60],[33,71,16,61,"currentCentroidYOfTouchesChangedAfter"],[33,108,16,98],[34,2,17,0],[34,6,17,4,"previousCentroidXOfTouchesChangedAfter"],[34,44,17,42],[34,47,17,45,"TouchHistoryMath"],[34,63,17,61],[34,64,17,61,"default"],[34,71,17,61],[34,72,17,62,"previousCentroidXOfTouchesChangedAfter"],[34,110,17,100],[35,2,18,0],[35,6,18,4,"previousCentroidYOfTouchesChangedAfter"],[35,44,18,42],[35,47,18,45,"TouchHistoryMath"],[35,63,18,61],[35,64,18,61,"default"],[35,71,18,61],[35,72,18,62,"previousCentroidYOfTouchesChangedAfter"],[35,110,18,100],[36,2,19,0],[36,6,19,4,"currentCentroidX"],[36,22,19,20],[36,25,19,23,"TouchHistoryMath"],[36,41,19,39],[36,42,19,39,"default"],[36,49,19,39],[36,50,19,40,"currentCentroidX"],[36,66,19,56],[37,2,20,0],[37,6,20,4,"currentCentroidY"],[37,22,20,20],[37,25,20,23,"TouchHistoryMath"],[37,41,20,39],[37,42,20,39,"default"],[37,49,20,39],[37,50,20,40,"currentCentroidY"],[37,66,20,56],[39,2,22,0],[40,0,23,0],[41,0,24,0],[42,0,25,0],[43,0,26,0],[44,0,27,0],[45,0,28,0],[46,0,29,0],[47,0,30,0],[48,0,31,0],[49,0,32,0],[50,0,33,0],[51,0,34,0],[52,0,35,0],[53,0,36,0],[54,0,37,0],[55,0,38,0],[56,0,39,0],[57,0,40,0],[58,0,41,0],[59,0,42,0],[60,0,43,0],[61,0,44,0],[62,0,45,0],[63,0,46,0],[64,0,47,0],[65,0,48,0],[66,0,49,0],[67,0,50,0],[68,0,51,0],[69,0,52,0],[70,0,53,0],[71,0,54,0],[72,0,55,0],[73,0,56,0],[74,0,57,0],[75,0,58,0],[76,0,59,0],[77,0,60,0],[78,0,61,0],[79,0,62,0],[80,0,63,0],[81,0,64,0],[82,0,65,0],[83,0,66,0],[84,0,67,0],[85,0,68,0],[86,0,69,0],[87,0,70,0],[88,0,71,0],[89,0,72,0],[90,0,73,0],[91,0,74,0],[92,0,75,0],[93,0,76,0],[94,0,77,0],[95,0,78,0],[96,0,79,0],[97,0,80,0],[98,0,81,0],[99,0,82,0],[100,0,83,0],[101,0,84,0],[102,0,85,0],[103,0,86,0],[104,0,87,0],[105,0,88,0],[106,0,89,0],[107,0,90,0],[108,0,91,0],[109,0,92,0],[110,0,93,0],[111,0,94,0],[112,0,95,0],[113,0,96,0],[114,0,97,0],[115,0,98,0],[116,0,99,0],[117,0,100,0],[118,0,101,0],[119,0,102,0],[120,0,103,0],[121,0,104,0],[122,0,105,0],[123,0,106,0],[124,0,107,0],[125,0,108,0],[126,0,109,0],[127,0,110,0],[128,0,111,0],[129,0,112,0],[130,0,113,0],[131,0,114,0],[132,0,115,0],[133,0,116,0],[134,0,117,0],[135,0,118,0],[137,2,120,0],[137,6,120,4,"PanResponder"],[137,18,120,16],[137,21,120,19],[138,4,121,2],[139,0,122,0],[140,0,123,0],[141,0,124,0],[142,0,125,0],[143,0,126,0],[144,0,127,0],[145,0,128,0],[146,0,129,0],[147,0,130,0],[148,0,131,0],[149,0,132,0],[150,0,133,0],[151,0,134,0],[152,0,135,0],[153,0,136,0],[154,0,137,0],[155,0,138,0],[156,0,139,0],[157,0,140,0],[158,0,141,0],[159,0,142,0],[160,0,143,0],[161,0,144,0],[162,0,145,0],[163,0,146,0],[164,0,147,0],[165,0,148,0],[166,0,149,0],[167,0,150,0],[168,0,151,0],[169,0,152,0],[170,0,153,0],[171,0,154,0],[172,0,155,0],[173,0,156,0],[174,0,157,0],[175,0,158,0],[176,0,159,0],[177,0,160,0],[178,0,161,0],[179,0,162,0],[180,0,163,0],[181,0,164,0],[182,0,165,0],[183,0,166,0],[184,0,167,0],[185,0,168,0],[186,0,169,0],[187,0,170,0],[188,0,171,0],[189,0,172,0],[190,0,173,0],[191,0,174,0],[192,0,175,0],[193,0,176,0],[194,0,177,0],[195,0,178,0],[196,0,179,0],[197,0,180,0],[198,0,181,0],[199,0,182,0],[201,4,184,2,"_initializeGestureState"],[201,27,184,25,"_initializeGestureState"],[201,28,184,26,"gestureState"],[201,40,184,38],[201,42,184,40],[202,6,185,4,"gestureState"],[202,18,185,16],[202,19,185,17,"moveX"],[202,24,185,22],[202,27,185,25],[202,28,185,26],[203,6,186,4,"gestureState"],[203,18,186,16],[203,19,186,17,"moveY"],[203,24,186,22],[203,27,186,25],[203,28,186,26],[204,6,187,4,"gestureState"],[204,18,187,16],[204,19,187,17,"x0"],[204,21,187,19],[204,24,187,22],[204,25,187,23],[205,6,188,4,"gestureState"],[205,18,188,16],[205,19,188,17,"y0"],[205,21,188,19],[205,24,188,22],[205,25,188,23],[206,6,189,4,"gestureState"],[206,18,189,16],[206,19,189,17,"dx"],[206,21,189,19],[206,24,189,22],[206,25,189,23],[207,6,190,4,"gestureState"],[207,18,190,16],[207,19,190,17,"dy"],[207,21,190,19],[207,24,190,22],[207,25,190,23],[208,6,191,4,"gestureState"],[208,18,191,16],[208,19,191,17,"vx"],[208,21,191,19],[208,24,191,22],[208,25,191,23],[209,6,192,4,"gestureState"],[209,18,192,16],[209,19,192,17,"vy"],[209,21,192,19],[209,24,192,22],[209,25,192,23],[210,6,193,4,"gestureState"],[210,18,193,16],[210,19,193,17,"numberActiveTouches"],[210,38,193,36],[210,41,193,39],[210,42,193,40],[211,6,194,4],[212,6,195,4,"gestureState"],[212,18,195,16],[212,19,195,17,"_accountsForMovesUpTo"],[212,40,195,38],[212,43,195,41],[212,44,195,42],[213,4,196,2],[213,5,196,3],[214,4,197,2],[215,0,198,0],[216,0,199,0],[217,0,200,0],[218,0,201,0],[219,0,202,0],[220,0,203,0],[221,0,204,0],[222,0,205,0],[223,0,206,0],[224,0,207,0],[225,0,208,0],[226,0,209,0],[227,0,210,0],[228,0,211,0],[229,0,212,0],[230,0,213,0],[231,0,214,0],[232,0,215,0],[233,0,216,0],[234,0,217,0],[235,0,218,0],[236,0,219,0],[237,0,220,0],[238,4,221,2,"_updateGestureStateOnMove"],[238,29,221,27,"_updateGestureStateOnMove"],[238,30,221,28,"gestureState"],[238,42,221,40],[238,44,221,42,"touchHistory"],[238,56,221,54],[238,58,221,56],[239,6,222,4,"gestureState"],[239,18,222,16],[239,19,222,17,"numberActiveTouches"],[239,38,222,36],[239,41,222,39,"touchHistory"],[239,53,222,51],[239,54,222,52,"numberActiveTouches"],[239,73,222,71],[240,6,223,4,"gestureState"],[240,18,223,16],[240,19,223,17,"moveX"],[240,24,223,22],[240,27,223,25,"currentCentroidXOfTouchesChangedAfter"],[240,64,223,62],[240,65,223,63,"touchHistory"],[240,77,223,75],[240,79,223,77,"gestureState"],[240,91,223,89],[240,92,223,90,"_accountsForMovesUpTo"],[240,113,223,111],[240,114,223,112],[241,6,224,4,"gestureState"],[241,18,224,16],[241,19,224,17,"moveY"],[241,24,224,22],[241,27,224,25,"currentCentroidYOfTouchesChangedAfter"],[241,64,224,62],[241,65,224,63,"touchHistory"],[241,77,224,75],[241,79,224,77,"gestureState"],[241,91,224,89],[241,92,224,90,"_accountsForMovesUpTo"],[241,113,224,111],[241,114,224,112],[242,6,225,4],[242,10,225,8,"movedAfter"],[242,20,225,18],[242,23,225,21,"gestureState"],[242,35,225,33],[242,36,225,34,"_accountsForMovesUpTo"],[242,57,225,55],[243,6,226,4],[243,10,226,8,"prevX"],[243,15,226,13],[243,18,226,16,"previousCentroidXOfTouchesChangedAfter"],[243,56,226,54],[243,57,226,55,"touchHistory"],[243,69,226,67],[243,71,226,69,"movedAfter"],[243,81,226,79],[243,82,226,80],[244,6,227,4],[244,10,227,8,"x"],[244,11,227,9],[244,14,227,12,"currentCentroidXOfTouchesChangedAfter"],[244,51,227,49],[244,52,227,50,"touchHistory"],[244,64,227,62],[244,66,227,64,"movedAfter"],[244,76,227,74],[244,77,227,75],[245,6,228,4],[245,10,228,8,"prevY"],[245,15,228,13],[245,18,228,16,"previousCentroidYOfTouchesChangedAfter"],[245,56,228,54],[245,57,228,55,"touchHistory"],[245,69,228,67],[245,71,228,69,"movedAfter"],[245,81,228,79],[245,82,228,80],[246,6,229,4],[246,10,229,8,"y"],[246,11,229,9],[246,14,229,12,"currentCentroidYOfTouchesChangedAfter"],[246,51,229,49],[246,52,229,50,"touchHistory"],[246,64,229,62],[246,66,229,64,"movedAfter"],[246,76,229,74],[246,77,229,75],[247,6,230,4],[247,10,230,8,"nextDX"],[247,16,230,14],[247,19,230,17,"gestureState"],[247,31,230,29],[247,32,230,30,"dx"],[247,34,230,32],[247,38,230,36,"x"],[247,39,230,37],[247,42,230,40,"prevX"],[247,47,230,45],[247,48,230,46],[248,6,231,4],[248,10,231,8,"nextDY"],[248,16,231,14],[248,19,231,17,"gestureState"],[248,31,231,29],[248,32,231,30,"dy"],[248,34,231,32],[248,38,231,36,"y"],[248,39,231,37],[248,42,231,40,"prevY"],[248,47,231,45],[248,48,231,46],[250,6,233,4],[251,6,234,4],[251,10,234,8,"dt"],[251,12,234,10],[251,15,234,13,"touchHistory"],[251,27,234,25],[251,28,234,26,"mostRecentTimeStamp"],[251,47,234,45],[251,50,234,48,"gestureState"],[251,62,234,60],[251,63,234,61,"_accountsForMovesUpTo"],[251,84,234,82],[252,6,235,4,"gestureState"],[252,18,235,16],[252,19,235,17,"vx"],[252,21,235,19],[252,24,235,22],[252,25,235,23,"nextDX"],[252,31,235,29],[252,34,235,32,"gestureState"],[252,46,235,44],[252,47,235,45,"dx"],[252,49,235,47],[252,53,235,51,"dt"],[252,55,235,53],[253,6,236,4,"gestureState"],[253,18,236,16],[253,19,236,17,"vy"],[253,21,236,19],[253,24,236,22],[253,25,236,23,"nextDY"],[253,31,236,29],[253,34,236,32,"gestureState"],[253,46,236,44],[253,47,236,45,"dy"],[253,49,236,47],[253,53,236,51,"dt"],[253,55,236,53],[254,6,237,4,"gestureState"],[254,18,237,16],[254,19,237,17,"dx"],[254,21,237,19],[254,24,237,22,"nextDX"],[254,30,237,28],[255,6,238,4,"gestureState"],[255,18,238,16],[255,19,238,17,"dy"],[255,21,238,19],[255,24,238,22,"nextDY"],[255,30,238,28],[256,6,239,4,"gestureState"],[256,18,239,16],[256,19,239,17,"_accountsForMovesUpTo"],[256,40,239,38],[256,43,239,41,"touchHistory"],[256,55,239,53],[256,56,239,54,"mostRecentTimeStamp"],[256,75,239,73],[257,4,240,2],[257,5,240,3],[258,4,241,2],[259,0,242,0],[260,0,243,0],[261,0,244,0],[262,0,245,0],[263,0,246,0],[264,0,247,0],[265,0,248,0],[266,0,249,0],[267,0,250,0],[268,0,251,0],[269,0,252,0],[270,0,253,0],[271,0,254,0],[272,0,255,0],[273,0,256,0],[274,0,257,0],[275,0,258,0],[276,0,259,0],[277,0,260,0],[278,0,261,0],[279,0,262,0],[280,0,263,0],[281,0,264,0],[282,0,265,0],[283,0,266,0],[284,0,267,0],[285,0,268,0],[286,0,269,0],[287,0,270,0],[288,0,271,0],[289,0,272,0],[290,4,273,2,"create"],[290,10,273,8,"create"],[290,11,273,9,"config"],[290,17,273,15],[290,19,273,17],[291,6,274,4],[291,10,274,8,"interactionState"],[291,26,274,24],[291,29,274,27],[292,8,275,6,"handle"],[292,14,275,12],[292,16,275,14],[292,20,275,18],[293,8,276,6,"shouldCancelClick"],[293,25,276,23],[293,27,276,25],[293,32,276,30],[294,8,277,6,"timeout"],[294,15,277,13],[294,17,277,15],[295,6,278,4],[295,7,278,5],[296,6,279,4],[296,10,279,8,"gestureState"],[296,22,279,20],[296,25,279,23],[297,8,280,6],[298,8,281,6,"stateID"],[298,15,281,13],[298,17,281,15,"Math"],[298,21,281,19],[298,22,281,20,"random"],[298,28,281,26],[298,29,281,27],[298,30,281,28],[299,8,282,6,"moveX"],[299,13,282,11],[299,15,282,13],[299,16,282,14],[300,8,283,6,"moveY"],[300,13,283,11],[300,15,283,13],[300,16,283,14],[301,8,284,6,"x0"],[301,10,284,8],[301,12,284,10],[301,13,284,11],[302,8,285,6,"y0"],[302,10,285,8],[302,12,285,10],[302,13,285,11],[303,8,286,6,"dx"],[303,10,286,8],[303,12,286,10],[303,13,286,11],[304,8,287,6,"dy"],[304,10,287,8],[304,12,287,10],[304,13,287,11],[305,8,288,6,"vx"],[305,10,288,8],[305,12,288,10],[305,13,288,11],[306,8,289,6,"vy"],[306,10,289,8],[306,12,289,10],[306,13,289,11],[307,8,290,6,"numberActiveTouches"],[307,27,290,25],[307,29,290,27],[307,30,290,28],[308,8,291,6,"_accountsForMovesUpTo"],[308,29,291,27],[308,31,291,29],[309,6,292,4],[309,7,292,5],[310,6,293,4],[310,10,293,8,"panHandlers"],[310,21,293,19],[310,24,293,22],[311,8,294,6,"onStartShouldSetResponder"],[311,33,294,31,"onStartShouldSetResponder"],[311,34,294,32,"event"],[311,39,294,37],[311,41,294,39],[312,10,295,8],[312,17,295,15,"config"],[312,23,295,21],[312,24,295,22,"onStartShouldSetPanResponder"],[312,52,295,50],[312,56,295,54],[312,60,295,58],[312,63,295,61],[312,68,295,66],[312,71,295,69,"config"],[312,77,295,75],[312,78,295,76,"onStartShouldSetPanResponder"],[312,106,295,104],[312,107,295,105,"event"],[312,112,295,110],[312,114,295,112,"gestureState"],[312,126,295,124],[312,127,295,125],[313,8,296,6],[313,9,296,7],[314,8,297,6,"onMoveShouldSetResponder"],[314,32,297,30,"onMoveShouldSetResponder"],[314,33,297,31,"event"],[314,38,297,36],[314,40,297,38],[315,10,298,8],[315,17,298,15,"config"],[315,23,298,21],[315,24,298,22,"onMoveShouldSetPanResponder"],[315,51,298,49],[315,55,298,53],[315,59,298,57],[315,62,298,60],[315,67,298,65],[315,70,298,68,"config"],[315,76,298,74],[315,77,298,75,"onMoveShouldSetPanResponder"],[315,104,298,102],[315,105,298,103,"event"],[315,110,298,108],[315,112,298,110,"gestureState"],[315,124,298,122],[315,125,298,123],[316,8,299,6],[316,9,299,7],[317,8,300,6,"onStartShouldSetResponderCapture"],[317,40,300,38,"onStartShouldSetResponderCapture"],[317,41,300,39,"event"],[317,46,300,44],[317,48,300,46],[318,10,301,8],[319,10,302,8],[320,10,303,8],[320,14,303,12,"event"],[320,19,303,17],[320,20,303,18,"nativeEvent"],[320,31,303,29],[320,32,303,30,"touches"],[320,39,303,37],[320,40,303,38,"length"],[320,46,303,44],[320,51,303,49],[320,52,303,50],[320,54,303,52],[321,12,304,10,"PanResponder"],[321,24,304,22],[321,25,304,23,"_initializeGestureState"],[321,48,304,46],[321,49,304,47,"gestureState"],[321,61,304,59],[321,62,304,60],[322,10,305,8],[323,10,306,8,"gestureState"],[323,22,306,20],[323,23,306,21,"numberActiveTouches"],[323,42,306,40],[323,45,306,43,"event"],[323,50,306,48],[323,51,306,49,"touchHistory"],[323,63,306,61],[323,64,306,62,"numberActiveTouches"],[323,83,306,81],[324,10,307,8],[324,17,307,15,"config"],[324,23,307,21],[324,24,307,22,"onStartShouldSetPanResponderCapture"],[324,59,307,57],[324,63,307,61],[324,67,307,65],[324,70,307,68,"config"],[324,76,307,74],[324,77,307,75,"onStartShouldSetPanResponderCapture"],[324,112,307,110],[324,113,307,111,"event"],[324,118,307,116],[324,120,307,118,"gestureState"],[324,132,307,130],[324,133,307,131],[324,136,307,134],[324,141,307,139],[325,8,308,6],[325,9,308,7],[326,8,309,6,"onMoveShouldSetResponderCapture"],[326,39,309,37,"onMoveShouldSetResponderCapture"],[326,40,309,38,"event"],[326,45,309,43],[326,47,309,45],[327,10,310,8],[327,14,310,12,"touchHistory"],[327,26,310,24],[327,29,310,27,"event"],[327,34,310,32],[327,35,310,33,"touchHistory"],[327,47,310,45],[328,10,311,8],[329,10,312,8],[330,10,313,8],[331,10,314,8],[331,14,314,12,"gestureState"],[331,26,314,24],[331,27,314,25,"_accountsForMovesUpTo"],[331,48,314,46],[331,53,314,51,"touchHistory"],[331,65,314,63],[331,66,314,64,"mostRecentTimeStamp"],[331,85,314,83],[331,87,314,85],[332,12,315,10],[332,19,315,17],[332,24,315,22],[333,10,316,8],[334,10,317,8,"PanResponder"],[334,22,317,20],[334,23,317,21,"_updateGestureStateOnMove"],[334,48,317,46],[334,49,317,47,"gestureState"],[334,61,317,59],[334,63,317,61,"touchHistory"],[334,75,317,73],[334,76,317,74],[335,10,318,8],[335,17,318,15,"config"],[335,23,318,21],[335,24,318,22,"onMoveShouldSetPanResponderCapture"],[335,58,318,56],[335,61,318,59,"config"],[335,67,318,65],[335,68,318,66,"onMoveShouldSetPanResponderCapture"],[335,102,318,100],[335,103,318,101,"event"],[335,108,318,106],[335,110,318,108,"gestureState"],[335,122,318,120],[335,123,318,121],[335,126,318,124],[335,131,318,129],[336,8,319,6],[336,9,319,7],[337,8,320,6,"onResponderGrant"],[337,24,320,22,"onResponderGrant"],[337,25,320,23,"event"],[337,30,320,28],[337,32,320,30],[338,10,321,8],[338,14,321,12],[338,15,321,13,"interactionState"],[338,31,321,29],[338,32,321,30,"handle"],[338,38,321,36],[338,40,321,38],[339,12,322,10,"interactionState"],[339,28,322,26],[339,29,322,27,"handle"],[339,35,322,33],[339,38,322,36,"InteractionManager"],[339,56,322,54],[339,57,322,54,"default"],[339,64,322,54],[339,65,322,55,"createInteractionHandle"],[339,88,322,78],[339,89,322,79],[339,90,322,80],[340,10,323,8],[341,10,324,8],[341,14,324,12,"interactionState"],[341,30,324,28],[341,31,324,29,"timeout"],[341,38,324,36],[341,40,324,38],[342,12,325,10,"clearInteractionTimeout"],[342,35,325,33],[342,36,325,34,"interactionState"],[342,52,325,50],[342,53,325,51],[343,10,326,8],[344,10,327,8,"interactionState"],[344,26,327,24],[344,27,327,25,"shouldCancelClick"],[344,44,327,42],[344,47,327,45],[344,51,327,49],[345,10,328,8,"gestureState"],[345,22,328,20],[345,23,328,21,"x0"],[345,25,328,23],[345,28,328,26,"currentCentroidX"],[345,44,328,42],[345,45,328,43,"event"],[345,50,328,48],[345,51,328,49,"touchHistory"],[345,63,328,61],[345,64,328,62],[346,10,329,8,"gestureState"],[346,22,329,20],[346,23,329,21,"y0"],[346,25,329,23],[346,28,329,26,"currentCentroidY"],[346,44,329,42],[346,45,329,43,"event"],[346,50,329,48],[346,51,329,49,"touchHistory"],[346,63,329,61],[346,64,329,62],[347,10,330,8,"gestureState"],[347,22,330,20],[347,23,330,21,"dx"],[347,25,330,23],[347,28,330,26],[347,29,330,27],[348,10,331,8,"gestureState"],[348,22,331,20],[348,23,331,21,"dy"],[348,25,331,23],[348,28,331,26],[348,29,331,27],[349,10,332,8],[349,14,332,12,"config"],[349,20,332,18],[349,21,332,19,"onPanResponderGrant"],[349,40,332,38],[349,42,332,40],[350,12,333,10,"config"],[350,18,333,16],[350,19,333,17,"onPanResponderGrant"],[350,38,333,36],[350,39,333,37,"event"],[350,44,333,42],[350,46,333,44,"gestureState"],[350,58,333,56],[350,59,333,57],[351,10,334,8],[352,10,335,8],[353,10,336,8],[353,17,336,15,"config"],[353,23,336,21],[353,24,336,22,"onShouldBlockNativeResponder"],[353,52,336,50],[353,56,336,54],[353,60,336,58],[353,63,336,61],[353,67,336,65],[353,70,336,68,"config"],[353,76,336,74],[353,77,336,75,"onShouldBlockNativeResponder"],[353,105,336,103],[353,106,336,104,"event"],[353,111,336,109],[353,113,336,111,"gestureState"],[353,125,336,123],[353,126,336,124],[354,8,337,6],[354,9,337,7],[355,8,338,6,"onResponderReject"],[355,25,338,23,"onResponderReject"],[355,26,338,24,"event"],[355,31,338,29],[355,33,338,31],[356,10,339,8,"clearInteractionHandle"],[356,32,339,30],[356,33,339,31,"interactionState"],[356,49,339,47],[356,51,339,49,"config"],[356,57,339,55],[356,58,339,56,"onPanResponderReject"],[356,78,339,76],[356,80,339,78,"event"],[356,85,339,83],[356,87,339,85,"gestureState"],[356,99,339,97],[356,100,339,98],[357,8,340,6],[357,9,340,7],[358,8,341,6,"onResponderRelease"],[358,26,341,24,"onResponderRelease"],[358,27,341,25,"event"],[358,32,341,30],[358,34,341,32],[359,10,342,8,"clearInteractionHandle"],[359,32,342,30],[359,33,342,31,"interactionState"],[359,49,342,47],[359,51,342,49,"config"],[359,57,342,55],[359,58,342,56,"onPanResponderRelease"],[359,79,342,77],[359,81,342,79,"event"],[359,86,342,84],[359,88,342,86,"gestureState"],[359,100,342,98],[359,101,342,99],[360,10,343,8,"setInteractionTimeout"],[360,31,343,29],[360,32,343,30,"interactionState"],[360,48,343,46],[360,49,343,47],[361,10,344,8,"PanResponder"],[361,22,344,20],[361,23,344,21,"_initializeGestureState"],[361,46,344,44],[361,47,344,45,"gestureState"],[361,59,344,57],[361,60,344,58],[362,8,345,6],[362,9,345,7],[363,8,346,6,"onResponderStart"],[363,24,346,22,"onResponderStart"],[363,25,346,23,"event"],[363,30,346,28],[363,32,346,30],[364,10,347,8],[364,14,347,12,"touchHistory"],[364,26,347,24],[364,29,347,27,"event"],[364,34,347,32],[364,35,347,33,"touchHistory"],[364,47,347,45],[365,10,348,8,"gestureState"],[365,22,348,20],[365,23,348,21,"numberActiveTouches"],[365,42,348,40],[365,45,348,43,"touchHistory"],[365,57,348,55],[365,58,348,56,"numberActiveTouches"],[365,77,348,75],[366,10,349,8],[366,14,349,12,"config"],[366,20,349,18],[366,21,349,19,"onPanResponderStart"],[366,40,349,38],[366,42,349,40],[367,12,350,10,"config"],[367,18,350,16],[367,19,350,17,"onPanResponderStart"],[367,38,350,36],[367,39,350,37,"event"],[367,44,350,42],[367,46,350,44,"gestureState"],[367,58,350,56],[367,59,350,57],[368,10,351,8],[369,8,352,6],[369,9,352,7],[370,8,353,6,"onResponderMove"],[370,23,353,21,"onResponderMove"],[370,24,353,22,"event"],[370,29,353,27],[370,31,353,29],[371,10,354,8],[371,14,354,12,"touchHistory"],[371,26,354,24],[371,29,354,27,"event"],[371,34,354,32],[371,35,354,33,"touchHistory"],[371,47,354,45],[372,10,355,8],[373,10,356,8],[374,10,357,8],[374,14,357,12,"gestureState"],[374,26,357,24],[374,27,357,25,"_accountsForMovesUpTo"],[374,48,357,46],[374,53,357,51,"touchHistory"],[374,65,357,63],[374,66,357,64,"mostRecentTimeStamp"],[374,85,357,83],[374,87,357,85],[375,12,358,10],[376,10,359,8],[377,10,360,8],[378,10,361,8],[379,10,362,8,"PanResponder"],[379,22,362,20],[379,23,362,21,"_updateGestureStateOnMove"],[379,48,362,46],[379,49,362,47,"gestureState"],[379,61,362,59],[379,63,362,61,"touchHistory"],[379,75,362,73],[379,76,362,74],[380,10,363,8],[380,14,363,12,"config"],[380,20,363,18],[380,21,363,19,"onPanResponderMove"],[380,39,363,37],[380,41,363,39],[381,12,364,10,"config"],[381,18,364,16],[381,19,364,17,"onPanResponderMove"],[381,37,364,35],[381,38,364,36,"event"],[381,43,364,41],[381,45,364,43,"gestureState"],[381,57,364,55],[381,58,364,56],[382,10,365,8],[383,8,366,6],[383,9,366,7],[384,8,367,6,"onResponderEnd"],[384,22,367,20,"onResponderEnd"],[384,23,367,21,"event"],[384,28,367,26],[384,30,367,28],[385,10,368,8],[385,14,368,12,"touchHistory"],[385,26,368,24],[385,29,368,27,"event"],[385,34,368,32],[385,35,368,33,"touchHistory"],[385,47,368,45],[386,10,369,8,"gestureState"],[386,22,369,20],[386,23,369,21,"numberActiveTouches"],[386,42,369,40],[386,45,369,43,"touchHistory"],[386,57,369,55],[386,58,369,56,"numberActiveTouches"],[386,77,369,75],[387,10,370,8,"clearInteractionHandle"],[387,32,370,30],[387,33,370,31,"interactionState"],[387,49,370,47],[387,51,370,49,"config"],[387,57,370,55],[387,58,370,56,"onPanResponderEnd"],[387,75,370,73],[387,77,370,75,"event"],[387,82,370,80],[387,84,370,82,"gestureState"],[387,96,370,94],[387,97,370,95],[388,8,371,6],[388,9,371,7],[389,8,372,6,"onResponderTerminate"],[389,28,372,26,"onResponderTerminate"],[389,29,372,27,"event"],[389,34,372,32],[389,36,372,34],[390,10,373,8,"clearInteractionHandle"],[390,32,373,30],[390,33,373,31,"interactionState"],[390,49,373,47],[390,51,373,49,"config"],[390,57,373,55],[390,58,373,56,"onPanResponderTerminate"],[390,81,373,79],[390,83,373,81,"event"],[390,88,373,86],[390,90,373,88,"gestureState"],[390,102,373,100],[390,103,373,101],[391,10,374,8,"setInteractionTimeout"],[391,31,374,29],[391,32,374,30,"interactionState"],[391,48,374,46],[391,49,374,47],[392,10,375,8,"PanResponder"],[392,22,375,20],[392,23,375,21,"_initializeGestureState"],[392,46,375,44],[392,47,375,45,"gestureState"],[392,59,375,57],[392,60,375,58],[393,8,376,6],[393,9,376,7],[394,8,377,6,"onResponderTerminationRequest"],[394,37,377,35,"onResponderTerminationRequest"],[394,38,377,36,"event"],[394,43,377,41],[394,45,377,43],[395,10,378,8],[395,17,378,15,"config"],[395,23,378,21],[395,24,378,22,"onPanResponderTerminationRequest"],[395,56,378,54],[395,60,378,58],[395,64,378,62],[395,67,378,65],[395,71,378,69],[395,74,378,72,"config"],[395,80,378,78],[395,81,378,79,"onPanResponderTerminationRequest"],[395,113,378,111],[395,114,378,112,"event"],[395,119,378,117],[395,121,378,119,"gestureState"],[395,133,378,131],[395,134,378,132],[396,8,379,6],[396,9,379,7],[397,8,380,6],[398,8,381,6],[399,8,382,6],[400,8,383,6],[401,8,384,6,"onClickCapture"],[401,22,384,20],[401,24,384,22,"event"],[401,29,384,27],[401,33,384,31],[402,10,385,8],[402,14,385,12,"interactionState"],[402,30,385,28],[402,31,385,29,"shouldCancelClick"],[402,48,385,46],[402,53,385,51],[402,57,385,55],[402,59,385,57],[403,12,386,10,"event"],[403,17,386,15],[403,18,386,16,"stopPropagation"],[403,33,386,31],[403,34,386,32],[403,35,386,33],[404,12,387,10,"event"],[404,17,387,15],[404,18,387,16,"preventDefault"],[404,32,387,30],[404,33,387,31],[404,34,387,32],[405,10,388,8],[406,8,389,6],[407,6,390,4],[407,7,390,5],[408,6,391,4],[408,13,391,11],[409,8,392,6,"panHandlers"],[409,19,392,17],[410,8,393,6,"getInteractionHandle"],[410,28,393,26,"getInteractionHandle"],[410,29,393,26],[410,31,393,29],[411,10,394,8],[411,17,394,15,"interactionState"],[411,33,394,31],[411,34,394,32,"handle"],[411,40,394,38],[412,8,395,6],[413,6,396,4],[413,7,396,5],[414,4,397,2],[415,2,398,0],[415,3,398,1],[416,2,399,0],[416,11,399,9,"clearInteractionHandle"],[416,33,399,31,"clearInteractionHandle"],[416,34,399,32,"interactionState"],[416,50,399,48],[416,52,399,50,"callback"],[416,60,399,58],[416,62,399,60,"event"],[416,67,399,65],[416,69,399,67,"gestureState"],[416,81,399,79],[416,83,399,81],[417,4,400,2],[417,8,400,6,"interactionState"],[417,24,400,22],[417,25,400,23,"handle"],[417,31,400,29],[417,33,400,31],[418,6,401,4,"InteractionManager"],[418,24,401,22],[418,25,401,22,"default"],[418,32,401,22],[418,33,401,23,"clearInteractionHandle"],[418,55,401,45],[418,56,401,46,"interactionState"],[418,72,401,62],[418,73,401,63,"handle"],[418,79,401,69],[418,80,401,70],[419,6,402,4,"interactionState"],[419,22,402,20],[419,23,402,21,"handle"],[419,29,402,27],[419,32,402,30],[419,36,402,34],[420,4,403,2],[421,4,404,2],[421,8,404,6,"callback"],[421,16,404,14],[421,18,404,16],[422,6,405,4,"callback"],[422,14,405,12],[422,15,405,13,"event"],[422,20,405,18],[422,22,405,20,"gestureState"],[422,34,405,32],[422,35,405,33],[423,4,406,2],[424,2,407,0],[425,2,408,0],[425,11,408,9,"clearInteractionTimeout"],[425,34,408,32,"clearInteractionTimeout"],[425,35,408,33,"interactionState"],[425,51,408,49],[425,53,408,51],[426,4,409,2,"clearTimeout"],[426,16,409,14],[426,17,409,15,"interactionState"],[426,33,409,31],[426,34,409,32,"timeout"],[426,41,409,39],[426,42,409,40],[427,2,410,0],[428,2,411,0],[428,11,411,9,"setInteractionTimeout"],[428,32,411,30,"setInteractionTimeout"],[428,33,411,31,"interactionState"],[428,49,411,47],[428,51,411,49],[429,4,412,2,"interactionState"],[429,20,412,18],[429,21,412,19,"timeout"],[429,28,412,26],[429,31,412,29,"setTimeout"],[429,41,412,39],[429,42,412,40],[429,48,412,46],[430,6,413,4,"interactionState"],[430,22,413,20],[430,23,413,21,"shouldCancelClick"],[430,40,413,38],[430,43,413,41],[430,48,413,46],[431,4,414,2],[431,5,414,3],[431,7,414,5],[431,10,414,8],[431,11,414,9],[432,2,415,0],[433,2,416,0],[433,6,416,0,"_default"],[433,14,416,0],[433,17,416,15,"PanResponder"],[433,29,416,27],[434,0,416,28],[434,3]],"functionMap":{"names":["<global>","PanResponder._initializeGestureState","PanResponder._updateGestureStateOnMove","PanResponder.create","panHandlers.onStartShouldSetResponder","panHandlers.onMoveShouldSetResponder","panHandlers.onStartShouldSetResponderCapture","panHandlers.onMoveShouldSetResponderCapture","panHandlers.onResponderGrant","panHandlers.onResponderReject","panHandlers.onResponderRelease","panHandlers.onResponderStart","panHandlers.onResponderMove","panHandlers.onResponderEnd","panHandlers.onResponderTerminate","panHandlers.onResponderTerminationRequest","panHandlers.onClickCapture","getInteractionHandle","clearInteractionHandle","clearInteractionTimeout","setInteractionTimeout","setTimeout$argument_0"],"mappings":"AAA;ECuL;GDY;EEyB;GFmB;EGiC;MCqB;ODE;MEC;OFE;MGC;OHQ;MIC;OJU;MKC;OLiB;MMC;ONE;MOC;OPI;MQC;ORM;MSC;OTa;MUC;OVI;MWC;OXI;MYC;OZE;sBaK;ObK;McI;OdE;GHE;AkBE;ClBQ;AmBC;CnBE;AoBC;wCCC;GDE;CpBC"},"hasCjsExports":false},"type":"js/module"}]}