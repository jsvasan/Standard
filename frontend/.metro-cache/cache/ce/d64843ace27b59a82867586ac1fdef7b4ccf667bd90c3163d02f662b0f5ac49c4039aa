{"dependencies":[{"name":"./loadBundle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":174},"end":{"line":8,"column":47,"index":221}}],"key":"jljeoWVQzF4LXjGM8Z03gUTHSCQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.buildAsyncRequire = buildAsyncRequire;\n  var _loadBundle = require(_dependencyMap[0], \"./loadBundle\");\n  /**\n   * Copyright Â© 2022 650 Industries.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  /**\n   * Must satisfy the requirements of the Metro bundler.\n   * https://github.com/react-native-community/discussions-and-proposals/blob/main/proposals/0605-lazy-bundling.md#__loadbundleasync-in-metro\n   */\n\n  /** Create an `loadBundleAsync` function in the expected shape for Metro bundler. */\n  function buildAsyncRequire() {\n    const cache = new Map();\n    return async function universal_loadBundleAsync(path) {\n      if (cache.has(path)) {\n        return cache.get(path);\n      }\n      const promise = (0, _loadBundle.loadBundleAsync)(path).catch(error => {\n        cache.delete(path);\n        throw error;\n      });\n      cache.set(path, promise);\n      return promise;\n    };\n  }\n});","lineCount":36,"map":[[7,2,17,0,"exports"],[7,9,17,0],[7,10,17,0,"buildAsyncRequire"],[7,27,17,0],[7,30,17,0,"buildAsyncRequire"],[7,47,17,0],[8,2,8,0],[8,6,8,0,"_loadBundle"],[8,17,8,0],[8,20,8,0,"require"],[8,27,8,0],[8,28,8,0,"_dependencyMap"],[8,42,8,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[16,2,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[21,2,16,0],[22,2,17,7],[22,11,17,16,"buildAsyncRequire"],[22,28,17,33,"buildAsyncRequire"],[22,29,17,33],[22,31,17,50],[23,4,18,2],[23,10,18,8,"cache"],[23,15,18,13],[23,18,18,16],[23,22,18,20,"Map"],[23,25,18,23],[23,26,18,47],[23,27,18,48],[24,4,20,2],[24,11,20,9],[24,26,20,24,"universal_loadBundleAsync"],[24,51,20,49,"universal_loadBundleAsync"],[24,52,20,50,"path"],[24,56,20,62],[24,58,20,79],[25,6,21,4],[25,10,21,8,"cache"],[25,15,21,13],[25,16,21,14,"has"],[25,19,21,17],[25,20,21,18,"path"],[25,24,21,22],[25,25,21,23],[25,27,21,25],[26,8,22,6],[26,15,22,13,"cache"],[26,20,22,18],[26,21,22,19,"get"],[26,24,22,22],[26,25,22,23,"path"],[26,29,22,27],[26,30,22,28],[27,6,23,4],[28,6,25,4],[28,12,25,10,"promise"],[28,19,25,17],[28,22,25,20],[28,26,25,20,"loadBundleAsync"],[28,37,25,35],[28,38,25,35,"loadBundleAsync"],[28,53,25,35],[28,55,25,36,"path"],[28,59,25,40],[28,60,25,41],[28,61,25,42,"catch"],[28,66,25,47],[28,67,25,49,"error"],[28,72,25,54],[28,76,25,59],[29,8,26,6,"cache"],[29,13,26,11],[29,14,26,12,"delete"],[29,20,26,18],[29,21,26,19,"path"],[29,25,26,23],[29,26,26,24],[30,8,27,6],[30,14,27,12,"error"],[30,19,27,17],[31,6,28,4],[31,7,28,5],[31,8,28,6],[32,6,30,4,"cache"],[32,11,30,9],[32,12,30,10,"set"],[32,15,30,13],[32,16,30,14,"path"],[32,20,30,18],[32,22,30,20,"promise"],[32,29,30,27],[32,30,30,28],[33,6,32,4],[33,13,32,11,"promise"],[33,20,32,18],[34,4,33,2],[34,5,33,3],[35,2,34,0],[36,0,34,1],[36,3]],"functionMap":{"names":["<global>","buildAsyncRequire","universal_loadBundleAsync","loadBundleAsync._catch$argument_0"],"mappings":"AAA;OCgB;SCG;gDCK;KDG;GDK;CDC"},"hasCjsExports":false},"type":"js/module"}]}