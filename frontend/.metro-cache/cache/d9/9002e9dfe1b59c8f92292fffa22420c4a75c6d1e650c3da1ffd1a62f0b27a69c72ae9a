{"dependencies":[{"name":"./PressResponder","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":225},"end":{"line":13,"column":46,"index":271}}],"key":"VTnA46f1LLg+qllCjEBmzDcyfSg=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":272},"end":{"line":14,"column":57,"index":329}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return usePressEvents;\n    }\n  });\n  var _PressResponder = require(_dependencyMap[0], \"./PressResponder\");\n  var PressResponder = _interopDefault(_PressResponder);\n  var _react = require(_dependencyMap[1], \"react\");\n  function usePressEvents(hostRef, config) {\n    var pressResponderRef = (0, _react.useRef)(null);\n    if (pressResponderRef.current == null) {\n      pressResponderRef.current = new PressResponder.default(config);\n    }\n    var pressResponder = pressResponderRef.current;\n\n    // Re-configure to use the current node and configuration.\n    (0, _react.useEffect)(() => {\n      pressResponder.configure(config);\n    }, [config, pressResponder]);\n\n    // Reset the `pressResponder` when cleanup needs to occur. This is\n    // a separate effect because we do not want to rest the responder when `config` changes.\n    (0, _react.useEffect)(() => {\n      return () => {\n        pressResponder.reset();\n      };\n    }, [pressResponder]);\n    (0, _react.useDebugValue)(config);\n    return pressResponder.getEventHandlers();\n  }\n});","lineCount":53,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13],[17,11,11,13,"_interopDefault"],[17,27,11,13,"e"],[17,28,11,13],[18,4,11,13],[18,11,11,13,"e"],[18,12,11,13],[18,16,11,13,"e"],[18,17,11,13],[18,18,11,13,"__esModule"],[18,28,11,13],[18,31,11,13,"e"],[18,32,11,13],[19,6,11,13,"default"],[19,13,11,13],[19,15,11,13,"e"],[20,4,11,13],[21,2,11,13],[22,2,15,15,"Object"],[22,8,15,15],[22,9,15,15,"defineProperty"],[22,23,15,15],[22,24,15,15,"exports"],[22,31,15,15],[23,4,15,15,"enumerable"],[23,14,15,15],[24,4,15,15,"get"],[24,7,15,15],[24,18,15,15,"get"],[24,19,15,15],[25,6,15,15],[25,13,15,15,"usePressEvents"],[25,27,15,15],[26,4,15,15],[27,2,15,15],[28,2,13,0],[28,6,13,0,"_PressResponder"],[28,21,13,0],[28,24,13,0,"require"],[28,31,13,0],[28,32,13,0,"_dependencyMap"],[28,46,13,0],[29,2,13,0],[29,6,13,0,"PressResponder"],[29,20,13,0],[29,23,13,0,"_interopDefault"],[29,38,13,0],[29,39,13,0,"_PressResponder"],[29,54,13,0],[30,2,14,0],[30,6,14,0,"_react"],[30,12,14,0],[30,15,14,0,"require"],[30,22,14,0],[30,23,14,0,"_dependencyMap"],[30,37,14,0],[31,2,15,15],[31,11,15,24,"usePressEvents"],[31,25,15,38,"usePressEvents"],[31,26,15,39,"hostRef"],[31,33,15,46],[31,35,15,48,"config"],[31,41,15,54],[31,43,15,56],[32,4,16,2],[32,8,16,6,"pressResponderRef"],[32,25,16,23],[32,28,16,26],[32,32,16,26,"useRef"],[32,38,16,32],[32,39,16,32,"useRef"],[32,45,16,32],[32,47,16,33],[32,51,16,37],[32,52,16,38],[33,4,17,2],[33,8,17,6,"pressResponderRef"],[33,25,17,23],[33,26,17,24,"current"],[33,33,17,31],[33,37,17,35],[33,41,17,39],[33,43,17,41],[34,6,18,4,"pressResponderRef"],[34,23,18,21],[34,24,18,22,"current"],[34,31,18,29],[34,34,18,32],[34,38,18,36,"PressResponder"],[34,52,18,50],[34,53,18,50,"default"],[34,60,18,50],[34,61,18,51,"config"],[34,67,18,57],[34,68,18,58],[35,4,19,2],[36,4,20,2],[36,8,20,6,"pressResponder"],[36,22,20,20],[36,25,20,23,"pressResponderRef"],[36,42,20,40],[36,43,20,41,"current"],[36,50,20,48],[38,4,22,2],[39,4,23,2],[39,8,23,2,"useEffect"],[39,14,23,11],[39,15,23,11,"useEffect"],[39,24,23,11],[39,26,23,12],[39,32,23,18],[40,6,24,4,"pressResponder"],[40,20,24,18],[40,21,24,19,"configure"],[40,30,24,28],[40,31,24,29,"config"],[40,37,24,35],[40,38,24,36],[41,4,25,2],[41,5,25,3],[41,7,25,5],[41,8,25,6,"config"],[41,14,25,12],[41,16,25,14,"pressResponder"],[41,30,25,28],[41,31,25,29],[41,32,25,30],[43,4,27,2],[44,4,28,2],[45,4,29,2],[45,8,29,2,"useEffect"],[45,14,29,11],[45,15,29,11,"useEffect"],[45,24,29,11],[45,26,29,12],[45,32,29,18],[46,6,30,4],[46,13,30,11],[46,19,30,17],[47,8,31,6,"pressResponder"],[47,22,31,20],[47,23,31,21,"reset"],[47,28,31,26],[47,29,31,27],[47,30,31,28],[48,6,32,4],[48,7,32,5],[49,4,33,2],[49,5,33,3],[49,7,33,5],[49,8,33,6,"pressResponder"],[49,22,33,20],[49,23,33,21],[49,24,33,22],[50,4,34,2],[50,8,34,2,"useDebugValue"],[50,14,34,15],[50,15,34,15,"useDebugValue"],[50,28,34,15],[50,30,34,16,"config"],[50,36,34,22],[50,37,34,23],[51,4,35,2],[51,11,35,9,"pressResponder"],[51,25,35,23],[51,26,35,24,"getEventHandlers"],[51,42,35,40],[51,43,35,41],[51,44,35,42],[52,2,36,0],[53,0,36,1],[53,3]],"functionMap":{"names":["<global>","usePressEvents","useEffect$argument_0","<anonymous>"],"mappings":"AAA;eCc;YCQ;GDE;YCI;WCC;KDE;GDC"},"hasCjsExports":false},"type":"js/module"}]}