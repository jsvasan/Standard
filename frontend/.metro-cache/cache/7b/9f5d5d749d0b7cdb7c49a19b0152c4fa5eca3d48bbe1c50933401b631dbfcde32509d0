{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.enableFreeze = enableFreeze;\n  exports.enableScreens = enableScreens;\n  exports.freezeEnabled = freezeEnabled;\n  exports.isNativePlatformSupported = void 0;\n  exports.screensEnabled = screensEnabled;\n  var _Platform = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\"));\n  var _UIManager = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/UIManager\"));\n  const isNativePlatformSupported = exports.isNativePlatformSupported = _Platform.default.OS === 'ios' || _Platform.default.OS === 'android' || _Platform.default.OS === 'windows';\n  let ENABLE_SCREENS = isNativePlatformSupported;\n  function enableScreens(shouldEnableScreens = true) {\n    ENABLE_SCREENS = shouldEnableScreens;\n    if (!isNativePlatformSupported) {\n      return;\n    }\n    if (ENABLE_SCREENS && !_UIManager.default.getViewManagerConfig('RNSScreen')) {\n      console.error(`Screen native module hasn't been linked. Please check the react-native-screens README for more details`);\n    }\n  }\n  let ENABLE_FREEZE = false;\n  function enableFreeze(shouldEnableReactFreeze = true) {\n    if (!isNativePlatformSupported) {\n      return;\n    }\n    ENABLE_FREEZE = shouldEnableReactFreeze;\n  }\n  function screensEnabled() {\n    return ENABLE_SCREENS;\n  }\n  function freezeEnabled() {\n    return ENABLE_FREEZE;\n  }\n});","lineCount":39,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"enableFreeze"],[8,22,1,13],[8,25,1,13,"enableFreeze"],[8,37,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"enableScreens"],[9,23,1,13],[9,26,1,13,"enableScreens"],[9,39,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"freezeEnabled"],[10,23,1,13],[10,26,1,13,"freezeEnabled"],[10,39,1,13],[11,2,1,13,"exports"],[11,9,1,13],[11,10,1,13,"isNativePlatformSupported"],[11,35,1,13],[12,2,1,13,"exports"],[12,9,1,13],[12,10,1,13,"screensEnabled"],[12,24,1,13],[12,27,1,13,"screensEnabled"],[12,41,1,13],[13,2,1,13],[13,6,1,13,"_Platform"],[13,15,1,13],[13,18,1,13,"_interopRequireDefault"],[13,40,1,13],[13,41,1,13,"require"],[13,48,1,13],[13,49,1,13,"_dependencyMap"],[13,63,1,13],[14,2,1,13],[14,6,1,13,"_UIManager"],[14,16,1,13],[14,19,1,13,"_interopRequireDefault"],[14,41,1,13],[14,42,1,13,"require"],[14,49,1,13],[14,50,1,13,"_dependencyMap"],[14,64,1,13],[15,2,4,7],[15,8,4,13,"isNativePlatformSupported"],[15,33,4,38],[15,36,4,38,"exports"],[15,43,4,38],[15,44,4,38,"isNativePlatformSupported"],[15,69,4,38],[15,72,4,41,"Platform"],[15,89,4,49],[15,90,4,50,"OS"],[15,92,4,52],[15,97,4,57],[15,102,4,62],[15,106,4,66,"Platform"],[15,123,4,74],[15,124,4,75,"OS"],[15,126,4,77],[15,131,4,82],[15,140,4,91],[15,144,4,95,"Platform"],[15,161,4,103],[15,162,4,104,"OS"],[15,164,4,106],[15,169,4,111],[15,178,4,120],[16,2,5,0],[16,6,5,4,"ENABLE_SCREENS"],[16,20,5,18],[16,23,5,21,"isNativePlatformSupported"],[16,48,5,46],[17,2,6,7],[17,11,6,16,"enableScreens"],[17,24,6,29,"enableScreens"],[17,25,6,30,"shouldEnableScreens"],[17,44,6,49],[17,47,6,52],[17,51,6,56],[17,53,6,58],[18,4,7,2,"ENABLE_SCREENS"],[18,18,7,16],[18,21,7,19,"shouldEnableScreens"],[18,40,7,38],[19,4,8,2],[19,8,8,6],[19,9,8,7,"isNativePlatformSupported"],[19,34,8,32],[19,36,8,34],[20,6,9,4],[21,4,10,2],[22,4,11,2],[22,8,11,6,"ENABLE_SCREENS"],[22,22,11,20],[22,26,11,24],[22,27,11,25,"UIManager"],[22,45,11,34],[22,46,11,35,"getViewManagerConfig"],[22,66,11,55],[22,67,11,56],[22,78,11,67],[22,79,11,68],[22,81,11,70],[23,6,12,4,"console"],[23,13,12,11],[23,14,12,12,"error"],[23,19,12,17],[23,20,12,18],[23,124,12,122],[23,125,12,123],[24,4,13,2],[25,2,14,0],[26,2,15,0],[26,6,15,4,"ENABLE_FREEZE"],[26,19,15,17],[26,22,15,20],[26,27,15,25],[27,2,16,7],[27,11,16,16,"enableFreeze"],[27,23,16,28,"enableFreeze"],[27,24,16,29,"shouldEnableReactFreeze"],[27,47,16,52],[27,50,16,55],[27,54,16,59],[27,56,16,61],[28,4,17,2],[28,8,17,6],[28,9,17,7,"isNativePlatformSupported"],[28,34,17,32],[28,36,17,34],[29,6,18,4],[30,4,19,2],[31,4,20,2,"ENABLE_FREEZE"],[31,17,20,15],[31,20,20,18,"shouldEnableReactFreeze"],[31,43,20,41],[32,2,21,0],[33,2,22,7],[33,11,22,16,"screensEnabled"],[33,25,22,30,"screensEnabled"],[33,26,22,30],[33,28,22,33],[34,4,23,2],[34,11,23,9,"ENABLE_SCREENS"],[34,25,23,23],[35,2,24,0],[36,2,25,7],[36,11,25,16,"freezeEnabled"],[36,24,25,29,"freezeEnabled"],[36,25,25,29],[36,27,25,32],[37,4,26,2],[37,11,26,9,"ENABLE_FREEZE"],[37,24,26,22],[38,2,27,0],[39,0,27,1],[39,3]],"functionMap":{"names":["<global>","enableScreens","enableFreeze","screensEnabled","freezeEnabled"],"mappings":"AAA;OCK;CDQ;OEE;CFK;OGC;CHE;OIC;CJE"}},"type":"js/module"}]}