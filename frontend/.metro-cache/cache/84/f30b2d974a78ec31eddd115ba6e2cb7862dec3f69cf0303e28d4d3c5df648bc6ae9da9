{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"../../Core/Devtools/parseErrorStack","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":66}}],"key":"HKAH228Ju0Kl+/iZZFVvHwdXEII=","exportNames":["*"]}},{"name":"../../UTFSequence","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":44}}],"key":"W567LGfeb+S/8nkNG3ztIZ+5t/k=","exportNames":["*"]}},{"name":"../../Utilities/stringifySafe","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":58}}],"key":"HIOISlXeitP2wbg1E8dZUtIWYyI=","exportNames":["*"]}},{"name":"ansi-regex","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0},"end":{"line":17,"column":35}}],"key":"KUULiKFnqjWNy0wY4RUnwKpe0lM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.hasComponentStack = hasComponentStack;\n  exports.parseComponentStack = parseComponentStack;\n  exports.parseInterpolation = parseInterpolation;\n  exports.parseLogBoxException = parseLogBoxException;\n  exports.parseLogBoxLog = parseLogBoxLog;\n  exports.withoutANSIColorStyles = withoutANSIColorStyles;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _parseErrorStack = _interopRequireDefault(require(_dependencyMap[2], \"../../Core/Devtools/parseErrorStack\"));\n  var _UTFSequence = _interopRequireDefault(require(_dependencyMap[3], \"../../UTFSequence\"));\n  var _stringifySafe = _interopRequireDefault(require(_dependencyMap[4], \"../../Utilities/stringifySafe\"));\n  var _ansiRegex = _interopRequireDefault(require(_dependencyMap[5], \"ansi-regex\"));\n  var ANSI_REGEX = (0, _ansiRegex.default)().source;\n  var RE_TRANSFORM_ERROR = /^TransformError /;\n  var RE_COMPONENT_STACK_LINE = /\\n {4}(in|at) /;\n  var RE_COMPONENT_STACK_LINE_GLOBAL = /\\n {4}(in|at) /g;\n  var RE_COMPONENT_STACK_LINE_OLD = / {4}in/;\n  var RE_COMPONENT_STACK_LINE_NEW = / {4}at/;\n  var RE_COMPONENT_STACK_LINE_STACK_FRAME = /@.*\\n/;\n  var RE_BABEL_TRANSFORM_ERROR_FORMAT = /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/;\n  var RE_COMPONENT_STACK_WITH_SOURCE = /(.*) \\(at (.*\\.(?:js|jsx|ts|tsx)):([\\d]+)\\)/;\n  var RE_COMPONENT_STACK_NO_SOURCE = /(.*) \\(created by .*\\)/;\n  var RE_BABEL_CODE_FRAME_ERROR_FORMAT = /^(?:TransformError )?(?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*):? (?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*?)(\\/(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*): ((?:[\\0-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])+?)\\n([ >]{2}[\\t-\\r 0-9\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+ \\|(?:[\\0-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])+|\\x1B(?:[\\0-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])+)/;\n  var RE_METRO_ERROR_FORMAT = /^(?:InternalError Metro has encountered an error:) ((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*): ((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*) \\(([0-9]+):([0-9]+)\\)\\n\\n((?:[\\0-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])+)/;\n  var RE_BABEL_CODE_FRAME_MARKER_PATTERN = new RegExp(['^', `(?:${ANSI_REGEX})*`, '>', `(?:${ANSI_REGEX})*`, ' +', '[0-9]+', ' \\\\|'].join(''), 'm');\n  function hasComponentStack(args) {\n    for (var arg of args) {\n      if (typeof arg === 'string' && isComponentStack(arg)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var SUBSTITUTION = _UTFSequence.default.BOM + '%s';\n  function parseInterpolation(args) {\n    var categoryParts = [];\n    var contentParts = [];\n    var substitutionOffsets = [];\n    var remaining = [...args];\n    if (typeof remaining[0] === 'string') {\n      var formatString = String(remaining.shift());\n      var formatStringParts = formatString.split('%s');\n      var substitutionCount = formatStringParts.length - 1;\n      var substitutions = remaining.splice(0, substitutionCount);\n      var categoryString = '';\n      var contentString = '';\n      var substitutionIndex = 0;\n      for (var formatStringPart of formatStringParts) {\n        categoryString += formatStringPart;\n        contentString += formatStringPart;\n        if (substitutionIndex < substitutionCount) {\n          if (substitutionIndex < substitutions.length) {\n            var substitution = typeof substitutions[substitutionIndex] === 'string' ? substitutions[substitutionIndex] : (0, _stringifySafe.default)(substitutions[substitutionIndex]);\n            substitutionOffsets.push({\n              length: substitution.length,\n              offset: contentString.length\n            });\n            categoryString += SUBSTITUTION;\n            contentString += substitution;\n          } else {\n            substitutionOffsets.push({\n              length: 2,\n              offset: contentString.length\n            });\n            categoryString += '%s';\n            contentString += '%s';\n          }\n          substitutionIndex++;\n        }\n      }\n      categoryParts.push(categoryString);\n      contentParts.push(contentString);\n    }\n    var remainingArgs = remaining.map(arg => {\n      return typeof arg === 'string' ? arg : (0, _stringifySafe.default)(arg);\n    });\n    categoryParts.push(...remainingArgs);\n    contentParts.push(...remainingArgs);\n    return {\n      category: categoryParts.join(' '),\n      message: {\n        content: contentParts.join(' '),\n        substitutions: substitutionOffsets\n      }\n    };\n  }\n  function isComponentStack(consoleArgument) {\n    var isOldComponentStackFormat = RE_COMPONENT_STACK_LINE_OLD.test(consoleArgument);\n    var isNewComponentStackFormat = RE_COMPONENT_STACK_LINE_NEW.test(consoleArgument);\n    var isNewJSCComponentStackFormat = RE_COMPONENT_STACK_LINE_STACK_FRAME.test(consoleArgument);\n    return isOldComponentStackFormat || isNewComponentStackFormat || isNewJSCComponentStackFormat;\n  }\n  function parseComponentStack(message) {\n    var stack = (0, _parseErrorStack.default)(message);\n    if (stack && stack.length > 0) {\n      return {\n        type: 'stack',\n        stack: stack.map(frame => ({\n          content: frame.methodName,\n          collapse: frame.collapse || false,\n          fileName: frame.file == null ? 'unknown' : frame.file,\n          location: {\n            column: frame.column == null ? -1 : frame.column,\n            row: frame.lineNumber == null ? -1 : frame.lineNumber\n          }\n        }))\n      };\n    }\n    var legacyStack = message.split(RE_COMPONENT_STACK_LINE_GLOBAL).map(s => {\n      if (!s) {\n        return null;\n      }\n      var match = s.match(RE_COMPONENT_STACK_WITH_SOURCE);\n      if (match) {\n        var _match$slice = match.slice(1),\n          _match$slice2 = (0, _slicedToArray2.default)(_match$slice, 3),\n          content = _match$slice2[0],\n          fileName = _match$slice2[1],\n          row = _match$slice2[2];\n        return {\n          content,\n          fileName,\n          location: {\n            column: -1,\n            row: parseInt(row, 10)\n          }\n        };\n      }\n      var matchWithoutSource = s.match(RE_COMPONENT_STACK_NO_SOURCE);\n      if (matchWithoutSource) {\n        return {\n          content: matchWithoutSource[1],\n          fileName: '',\n          location: null\n        };\n      }\n      return null;\n    }).filter(Boolean);\n    return {\n      type: 'legacy',\n      stack: legacyStack\n    };\n  }\n  function parseLogBoxException(error) {\n    var message = error.originalMessage != null ? error.originalMessage : 'Unknown';\n    var metroInternalError = message.match(RE_METRO_ERROR_FORMAT);\n    if (metroInternalError) {\n      var _metroInternalError$s = metroInternalError.slice(1),\n        _metroInternalError$s2 = (0, _slicedToArray2.default)(_metroInternalError$s, 5),\n        content = _metroInternalError$s2[0],\n        fileName = _metroInternalError$s2[1],\n        row = _metroInternalError$s2[2],\n        column = _metroInternalError$s2[3],\n        codeFrame = _metroInternalError$s2[4];\n      return {\n        level: 'fatal',\n        type: 'Metro Error',\n        stack: [],\n        isComponentError: false,\n        componentStackType: 'legacy',\n        componentStack: [],\n        codeFrame: {\n          fileName,\n          location: {\n            row: parseInt(row, 10),\n            column: parseInt(column, 10)\n          },\n          content: codeFrame\n        },\n        message: {\n          content,\n          substitutions: []\n        },\n        category: `${fileName}-${row}-${column}`,\n        extraData: error.extraData\n      };\n    }\n    var babelTransformError = message.match(RE_BABEL_TRANSFORM_ERROR_FORMAT);\n    if (babelTransformError) {\n      var _babelTransformError$ = babelTransformError.slice(1),\n        _babelTransformError$2 = (0, _slicedToArray2.default)(_babelTransformError$, 5),\n        _fileName = _babelTransformError$2[0],\n        _content = _babelTransformError$2[1],\n        _row = _babelTransformError$2[2],\n        _column = _babelTransformError$2[3],\n        _codeFrame = _babelTransformError$2[4];\n      return {\n        level: 'syntax',\n        stack: [],\n        isComponentError: false,\n        componentStackType: 'legacy',\n        componentStack: [],\n        codeFrame: {\n          fileName: _fileName,\n          location: {\n            row: parseInt(_row, 10),\n            column: parseInt(_column, 10)\n          },\n          content: _codeFrame\n        },\n        message: {\n          content: _content,\n          substitutions: []\n        },\n        category: `${_fileName}-${_row}-${_column}`,\n        extraData: error.extraData\n      };\n    }\n    if (RE_BABEL_CODE_FRAME_MARKER_PATTERN.test(message)) {\n      var babelCodeFrameError = message.match(RE_BABEL_CODE_FRAME_ERROR_FORMAT);\n      if (babelCodeFrameError) {\n        var _babelCodeFrameError$ = babelCodeFrameError.slice(1),\n          _babelCodeFrameError$2 = (0, _slicedToArray2.default)(_babelCodeFrameError$, 3),\n          _fileName2 = _babelCodeFrameError$2[0],\n          _content2 = _babelCodeFrameError$2[1],\n          _codeFrame2 = _babelCodeFrameError$2[2];\n        return {\n          level: 'syntax',\n          stack: [],\n          isComponentError: false,\n          componentStackType: 'legacy',\n          componentStack: [],\n          codeFrame: {\n            fileName: _fileName2,\n            location: null,\n            content: _codeFrame2\n          },\n          message: {\n            content: _content2,\n            substitutions: []\n          },\n          category: `${_fileName2}-${1}-${1}`,\n          extraData: error.extraData\n        };\n      }\n    }\n    if (message.match(RE_TRANSFORM_ERROR)) {\n      return {\n        level: 'syntax',\n        stack: error.stack,\n        isComponentError: error.isComponentError,\n        componentStackType: 'legacy',\n        componentStack: [],\n        message: {\n          content: message,\n          substitutions: []\n        },\n        category: message,\n        extraData: error.extraData\n      };\n    }\n    var componentStack = error.componentStack;\n    if (error.isFatal || error.isComponentError) {\n      if (componentStack != null) {\n        var _parseComponentStack = parseComponentStack(componentStack),\n          type = _parseComponentStack.type,\n          stack = _parseComponentStack.stack;\n        return {\n          level: 'fatal',\n          stack: error.stack,\n          isComponentError: error.isComponentError,\n          componentStackType: type,\n          componentStack: stack,\n          extraData: error.extraData,\n          ...parseInterpolation([message])\n        };\n      } else {\n        return {\n          level: 'fatal',\n          stack: error.stack,\n          isComponentError: error.isComponentError,\n          componentStackType: 'legacy',\n          componentStack: [],\n          extraData: error.extraData,\n          ...parseInterpolation([message])\n        };\n      }\n    }\n    if (componentStack != null) {\n      var _parseComponentStack2 = parseComponentStack(componentStack),\n        _type = _parseComponentStack2.type,\n        _stack = _parseComponentStack2.stack;\n      return {\n        level: 'error',\n        stack: error.stack,\n        isComponentError: error.isComponentError,\n        componentStackType: _type,\n        componentStack: _stack,\n        extraData: error.extraData,\n        ...parseInterpolation([message])\n      };\n    }\n    return {\n      level: 'error',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      extraData: error.extraData,\n      ...parseLogBoxLog([message])\n    };\n  }\n  function withoutANSIColorStyles(message) {\n    if (typeof message !== 'string') {\n      return message;\n    }\n    return message.replace(/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, '');\n  }\n  function parseLogBoxLog(args) {\n    var message = withoutANSIColorStyles(args[0]);\n    var argsWithoutComponentStack = [];\n    var componentStack = [];\n    var componentStackType = 'legacy';\n    if (typeof message === 'string' && message.slice(-2) === '%s' && args.length > 0) {\n      var lastArg = args[args.length - 1];\n      if (typeof lastArg === 'string' && isComponentStack(lastArg)) {\n        argsWithoutComponentStack = args.slice(0, -1);\n        argsWithoutComponentStack[0] = message.slice(0, -2);\n        var _parseComponentStack3 = parseComponentStack(lastArg),\n          type = _parseComponentStack3.type,\n          stack = _parseComponentStack3.stack;\n        componentStack = stack;\n        componentStackType = type;\n      }\n    }\n    if (componentStack.length === 0 && argsWithoutComponentStack.length === 0) {\n      for (var arg of args) {\n        if (typeof arg === 'string' && isComponentStack(arg)) {\n          var messageEndIndex = arg.search(RE_COMPONENT_STACK_LINE);\n          if (messageEndIndex < 0) {\n            messageEndIndex = arg.search(/\\n/);\n          }\n          if (messageEndIndex > 0) {\n            argsWithoutComponentStack.push(arg.slice(0, messageEndIndex));\n          }\n          var _parseComponentStack4 = parseComponentStack(arg),\n            _type2 = _parseComponentStack4.type,\n            _stack2 = _parseComponentStack4.stack;\n          componentStack = _stack2;\n          componentStackType = _type2;\n        } else {\n          argsWithoutComponentStack.push(arg);\n        }\n      }\n    }\n    return {\n      ...parseInterpolation(argsWithoutComponentStack),\n      componentStack,\n      componentStackType\n    };\n  }\n});","lineCount":354,"map":[[13,2,14,0],[13,6,14,0,"_parseErrorStack"],[13,22,14,0],[13,25,14,0,"_interopRequireDefault"],[13,47,14,0],[13,48,14,0,"require"],[13,55,14,0],[13,56,14,0,"_dependencyMap"],[13,70,14,0],[14,2,15,0],[14,6,15,0,"_UTFSequence"],[14,18,15,0],[14,21,15,0,"_interopRequireDefault"],[14,43,15,0],[14,44,15,0,"require"],[14,51,15,0],[14,52,15,0,"_dependencyMap"],[14,66,15,0],[15,2,16,0],[15,6,16,0,"_stringifySafe"],[15,20,16,0],[15,23,16,0,"_interopRequireDefault"],[15,45,16,0],[15,46,16,0,"require"],[15,53,16,0],[15,54,16,0,"_dependencyMap"],[15,68,16,0],[16,2,17,0],[16,6,17,0,"_ansiRegex"],[16,16,17,0],[16,19,17,0,"_interopRequireDefault"],[16,41,17,0],[16,42,17,0,"require"],[16,49,17,0],[16,50,17,0,"_dependencyMap"],[16,64,17,0],[17,2,19,0],[17,6,19,6,"ANSI_REGEX"],[17,16,19,16],[17,19,19,19],[17,23,19,19,"ansiRegex"],[17,41,19,28],[17,43,19,29],[17,44,19,30],[17,45,19,31,"source"],[17,51,19,37],[18,2,21,0],[18,6,21,6,"RE_TRANSFORM_ERROR"],[18,24,21,24],[18,27,21,27],[18,45,21,45],[19,2,22,0],[19,6,22,6,"RE_COMPONENT_STACK_LINE"],[19,29,22,29],[19,32,22,32],[19,48,22,48],[20,2,23,0],[20,6,23,6,"RE_COMPONENT_STACK_LINE_GLOBAL"],[20,36,23,36],[20,39,23,39],[20,56,23,56],[21,2,24,0],[21,6,24,6,"RE_COMPONENT_STACK_LINE_OLD"],[21,33,24,33],[21,36,24,36],[21,44,24,44],[22,2,25,0],[22,6,25,6,"RE_COMPONENT_STACK_LINE_NEW"],[22,33,25,33],[22,36,25,36],[22,44,25,44],[23,2,26,0],[23,6,26,6,"RE_COMPONENT_STACK_LINE_STACK_FRAME"],[23,41,26,41],[23,44,26,44],[23,51,26,51],[24,2,36,0],[24,6,36,6,"RE_BABEL_TRANSFORM_ERROR_FORMAT"],[24,37,36,37],[24,40,37,2],[24,136,37,98],[25,2,44,0],[25,6,44,6,"RE_COMPONENT_STACK_WITH_SOURCE"],[25,36,44,36],[25,39,45,2],[25,84,45,47],[26,2,51,0],[26,6,51,6,"RE_COMPONENT_STACK_NO_SOURCE"],[26,34,51,34],[26,37,51,37],[26,61,51,61],[27,2,60,0],[27,6,60,6,"RE_BABEL_CODE_FRAME_ERROR_FORMAT"],[27,38,60,38],[27,41,62,2],[27,793,62,104],[28,2,72,0],[28,6,72,6,"RE_METRO_ERROR_FORMAT"],[28,27,72,27],[28,30,73,2],[28,482,73,95],[29,2,76,0],[29,6,76,6,"RE_BABEL_CODE_FRAME_MARKER_PATTERN"],[29,40,76,40],[29,43,76,43],[29,47,76,47,"RegExp"],[29,53,76,53],[29,54,77,2],[29,55,79,4],[29,58,79,7],[29,60,81,4],[29,66,81,10,"ANSI_REGEX"],[29,76,81,20],[29,80,81,24],[29,82,83,4],[29,85,83,7],[29,87,85,4],[29,93,85,10,"ANSI_REGEX"],[29,103,85,20],[29,107,85,24],[29,109,87,4],[29,113,87,8],[29,115,89,4],[29,123,89,12],[29,125,91,4],[29,131,91,10],[29,132,92,3],[29,133,92,4,"join"],[29,137,92,8],[29,138,92,9],[29,140,92,11],[29,141,92,12],[29,143,93,2],[29,146,94,0],[29,147,94,1],[30,2,96,7],[30,11,96,16,"hasComponentStack"],[30,28,96,33,"hasComponentStack"],[30,29,96,34,"args"],[30,33,96,61],[30,35,96,72],[31,4,97,2],[31,9,97,7],[31,13,97,13,"arg"],[31,16,97,16],[31,20,97,20,"args"],[31,24,97,24],[31,26,97,26],[32,6,98,4],[32,10,98,8],[32,17,98,15,"arg"],[32,20,98,18],[32,25,98,23],[32,33,98,31],[32,37,98,35,"isComponentStack"],[32,53,98,51],[32,54,98,52,"arg"],[32,57,98,55],[32,58,98,56],[32,60,98,58],[33,8,99,6],[33,15,99,13],[33,19,99,17],[34,6,100,4],[35,4,101,2],[36,4,102,2],[36,11,102,9],[36,16,102,14],[37,2,103,0],[38,2,137,0],[38,6,137,6,"SUBSTITUTION"],[38,18,137,18],[38,21,137,21,"UTFSequence"],[38,41,137,32],[38,42,137,33,"BOM"],[38,45,137,36],[38,48,137,39],[38,52,137,43],[39,2,139,7],[39,11,139,16,"parseInterpolation"],[39,29,139,34,"parseInterpolation"],[39,30,139,35,"args"],[39,34,139,62],[39,36,142,3],[40,4,143,2],[40,8,143,8,"categoryParts"],[40,21,143,21],[40,24,143,24],[40,26,143,26],[41,4,144,2],[41,8,144,8,"contentParts"],[41,20,144,20],[41,23,144,23],[41,25,144,25],[42,4,145,2],[42,8,145,8,"substitutionOffsets"],[42,27,145,27],[42,30,145,30],[42,32,145,32],[43,4,147,2],[43,8,147,8,"remaining"],[43,17,147,17],[43,20,147,20],[43,21,147,21],[43,24,147,24,"args"],[43,28,147,28],[43,29,147,29],[44,4,148,2],[44,8,148,6],[44,15,148,13,"remaining"],[44,24,148,22],[44,25,148,23],[44,26,148,24],[44,27,148,25],[44,32,148,30],[44,40,148,38],[44,42,148,40],[45,6,149,4],[45,10,149,10,"formatString"],[45,22,149,22],[45,25,149,25,"String"],[45,31,149,31],[45,32,149,32,"remaining"],[45,41,149,41],[45,42,149,42,"shift"],[45,47,149,47],[45,48,149,48],[45,49,149,49],[45,50,149,50],[46,6,150,4],[46,10,150,10,"formatStringParts"],[46,27,150,27],[46,30,150,30,"formatString"],[46,42,150,42],[46,43,150,43,"split"],[46,48,150,48],[46,49,150,49],[46,53,150,53],[46,54,150,54],[47,6,151,4],[47,10,151,10,"substitutionCount"],[47,27,151,27],[47,30,151,30,"formatStringParts"],[47,47,151,47],[47,48,151,48,"length"],[47,54,151,54],[47,57,151,57],[47,58,151,58],[48,6,152,4],[48,10,152,10,"substitutions"],[48,23,152,23],[48,26,152,26,"remaining"],[48,35,152,35],[48,36,152,36,"splice"],[48,42,152,42],[48,43,152,43],[48,44,152,44],[48,46,152,46,"substitutionCount"],[48,63,152,63],[48,64,152,64],[49,6,154,4],[49,10,154,8,"categoryString"],[49,24,154,22],[49,27,154,25],[49,29,154,27],[50,6,155,4],[50,10,155,8,"contentString"],[50,23,155,21],[50,26,155,24],[50,28,155,26],[51,6,157,4],[51,10,157,8,"substitutionIndex"],[51,27,157,25],[51,30,157,28],[51,31,157,29],[52,6,158,4],[52,11,158,9],[52,15,158,15,"formatStringPart"],[52,31,158,31],[52,35,158,35,"formatStringParts"],[52,52,158,52],[52,54,158,54],[53,8,159,6,"categoryString"],[53,22,159,20],[53,26,159,24,"formatStringPart"],[53,42,159,40],[54,8,160,6,"contentString"],[54,21,160,19],[54,25,160,23,"formatStringPart"],[54,41,160,39],[55,8,162,6],[55,12,162,10,"substitutionIndex"],[55,29,162,27],[55,32,162,30,"substitutionCount"],[55,49,162,47],[55,51,162,49],[56,10,163,8],[56,14,163,12,"substitutionIndex"],[56,31,163,29],[56,34,163,32,"substitutions"],[56,47,163,45],[56,48,163,46,"length"],[56,54,163,52],[56,56,163,54],[57,12,167,10],[57,16,167,16,"substitution"],[57,28,167,28],[57,31,168,12],[57,38,168,19,"substitutions"],[57,51,168,32],[57,52,168,33,"substitutionIndex"],[57,69,168,50],[57,70,168,51],[57,75,168,56],[57,83,168,64],[57,86,169,16,"substitutions"],[57,99,169,29],[57,100,169,30,"substitutionIndex"],[57,117,169,47],[57,118,169,48],[57,121,170,16],[57,125,170,16,"stringifySafe"],[57,147,170,29],[57,149,170,30,"substitutions"],[57,162,170,43],[57,163,170,44,"substitutionIndex"],[57,180,170,61],[57,181,170,62],[57,182,170,63],[58,12,171,10,"substitutionOffsets"],[58,31,171,29],[58,32,171,30,"push"],[58,36,171,34],[58,37,171,35],[59,14,172,12,"length"],[59,20,172,18],[59,22,172,20,"substitution"],[59,34,172,32],[59,35,172,33,"length"],[59,41,172,39],[60,14,173,12,"offset"],[60,20,173,18],[60,22,173,20,"contentString"],[60,35,173,33],[60,36,173,34,"length"],[61,12,174,10],[61,13,174,11],[61,14,174,12],[62,12,176,10,"categoryString"],[62,26,176,24],[62,30,176,28,"SUBSTITUTION"],[62,42,176,40],[63,12,177,10,"contentString"],[63,25,177,23],[63,29,177,27,"substitution"],[63,41,177,39],[64,10,178,8],[64,11,178,9],[64,17,178,15],[65,12,179,10,"substitutionOffsets"],[65,31,179,29],[65,32,179,30,"push"],[65,36,179,34],[65,37,179,35],[66,14,180,12,"length"],[66,20,180,18],[66,22,180,20],[66,23,180,21],[67,14,181,12,"offset"],[67,20,181,18],[67,22,181,20,"contentString"],[67,35,181,33],[67,36,181,34,"length"],[68,12,182,10],[68,13,182,11],[68,14,182,12],[69,12,184,10,"categoryString"],[69,26,184,24],[69,30,184,28],[69,34,184,32],[70,12,185,10,"contentString"],[70,25,185,23],[70,29,185,27],[70,33,185,31],[71,10,186,8],[72,10,188,8,"substitutionIndex"],[72,27,188,25],[72,29,188,27],[73,8,189,6],[74,6,190,4],[75,6,192,4,"categoryParts"],[75,19,192,17],[75,20,192,18,"push"],[75,24,192,22],[75,25,192,23,"categoryString"],[75,39,192,37],[75,40,192,38],[76,6,193,4,"contentParts"],[76,18,193,16],[76,19,193,17,"push"],[76,23,193,21],[76,24,193,22,"contentString"],[76,37,193,35],[76,38,193,36],[77,4,194,2],[78,4,196,2],[78,8,196,8,"remainingArgs"],[78,21,196,21],[78,24,196,24,"remaining"],[78,33,196,33],[78,34,196,34,"map"],[78,37,196,37],[78,38,196,38,"arg"],[78,41,196,41],[78,45,196,45],[79,6,200,4],[79,13,200,11],[79,20,200,18,"arg"],[79,23,200,21],[79,28,200,26],[79,36,200,34],[79,39,200,37,"arg"],[79,42,200,40],[79,45,200,43],[79,49,200,43,"stringifySafe"],[79,71,200,56],[79,73,200,57,"arg"],[79,76,200,60],[79,77,200,61],[80,4,201,2],[80,5,201,3],[80,6,201,4],[81,4,202,2,"categoryParts"],[81,17,202,15],[81,18,202,16,"push"],[81,22,202,20],[81,23,202,21],[81,26,202,24,"remainingArgs"],[81,39,202,37],[81,40,202,38],[82,4,203,2,"contentParts"],[82,16,203,14],[82,17,203,15,"push"],[82,21,203,19],[82,22,203,20],[82,25,203,23,"remainingArgs"],[82,38,203,36],[82,39,203,37],[83,4,205,2],[83,11,205,9],[84,6,206,4,"category"],[84,14,206,12],[84,16,206,14,"categoryParts"],[84,29,206,27],[84,30,206,28,"join"],[84,34,206,32],[84,35,206,33],[84,38,206,36],[84,39,206,37],[85,6,207,4,"message"],[85,13,207,11],[85,15,207,13],[86,8,208,6,"content"],[86,15,208,13],[86,17,208,15,"contentParts"],[86,29,208,27],[86,30,208,28,"join"],[86,34,208,32],[86,35,208,33],[86,38,208,36],[86,39,208,37],[87,8,209,6,"substitutions"],[87,21,209,19],[87,23,209,21,"substitutionOffsets"],[88,6,210,4],[89,4,211,2],[89,5,211,3],[90,2,212,0],[91,2,214,0],[91,11,214,9,"isComponentStack"],[91,27,214,25,"isComponentStack"],[91,28,214,26,"consoleArgument"],[91,43,214,49],[91,45,214,51],[92,4,215,2],[92,8,215,8,"isOldComponentStackFormat"],[92,33,215,33],[92,36,216,4,"RE_COMPONENT_STACK_LINE_OLD"],[92,63,216,31],[92,64,216,32,"test"],[92,68,216,36],[92,69,216,37,"consoleArgument"],[92,84,216,52],[92,85,216,53],[93,4,217,2],[93,8,217,8,"isNewComponentStackFormat"],[93,33,217,33],[93,36,218,4,"RE_COMPONENT_STACK_LINE_NEW"],[93,63,218,31],[93,64,218,32,"test"],[93,68,218,36],[93,69,218,37,"consoleArgument"],[93,84,218,52],[93,85,218,53],[94,4,219,2],[94,8,219,8,"isNewJSCComponentStackFormat"],[94,36,219,36],[94,39,220,4,"RE_COMPONENT_STACK_LINE_STACK_FRAME"],[94,74,220,39],[94,75,220,40,"test"],[94,79,220,44],[94,80,220,45,"consoleArgument"],[94,95,220,60],[94,96,220,61],[95,4,222,2],[95,11,223,4,"isOldComponentStackFormat"],[95,36,223,29],[95,40,224,4,"isNewComponentStackFormat"],[95,65,224,29],[95,69,225,4,"isNewJSCComponentStackFormat"],[95,97,225,32],[96,2,227,0],[97,2,229,7],[97,11,229,16,"parseComponentStack"],[97,30,229,35,"parseComponentStack"],[97,31,229,36,"message"],[97,38,229,51],[97,40,232,2],[98,4,236,2],[98,8,236,8,"stack"],[98,13,236,13],[98,16,236,16],[98,20,236,16,"parseErrorStack"],[98,44,236,31],[98,46,236,32,"message"],[98,53,236,39],[98,54,236,40],[99,4,237,2],[99,8,237,6,"stack"],[99,13,237,11],[99,17,237,15,"stack"],[99,22,237,20],[99,23,237,21,"length"],[99,29,237,27],[99,32,237,30],[99,33,237,31],[99,35,237,33],[100,6,238,4],[100,13,238,11],[101,8,239,6,"type"],[101,12,239,10],[101,14,239,12],[101,21,239,19],[102,8,240,6,"stack"],[102,13,240,11],[102,15,240,13,"stack"],[102,20,240,18],[102,21,240,19,"map"],[102,24,240,22],[102,25,240,23,"frame"],[102,30,240,28],[102,35,240,33],[103,10,241,8,"content"],[103,17,241,15],[103,19,241,17,"frame"],[103,24,241,22],[103,25,241,23,"methodName"],[103,35,241,33],[104,10,242,8,"collapse"],[104,18,242,16],[104,20,242,18,"frame"],[104,25,242,23],[104,26,242,24,"collapse"],[104,34,242,32],[104,38,242,36],[104,43,242,41],[105,10,243,8,"fileName"],[105,18,243,16],[105,20,243,18,"frame"],[105,25,243,23],[105,26,243,24,"file"],[105,30,243,28],[105,34,243,32],[105,38,243,36],[105,41,243,39],[105,50,243,48],[105,53,243,51,"frame"],[105,58,243,56],[105,59,243,57,"file"],[105,63,243,61],[106,10,244,8,"location"],[106,18,244,16],[106,20,244,18],[107,12,245,10,"column"],[107,18,245,16],[107,20,245,18,"frame"],[107,25,245,23],[107,26,245,24,"column"],[107,32,245,30],[107,36,245,34],[107,40,245,38],[107,43,245,41],[107,44,245,42],[107,45,245,43],[107,48,245,46,"frame"],[107,53,245,51],[107,54,245,52,"column"],[107,60,245,58],[108,12,246,10,"row"],[108,15,246,13],[108,17,246,15,"frame"],[108,22,246,20],[108,23,246,21,"lineNumber"],[108,33,246,31],[108,37,246,35],[108,41,246,39],[108,44,246,42],[108,45,246,43],[108,46,246,44],[108,49,246,47,"frame"],[108,54,246,52],[108,55,246,53,"lineNumber"],[109,10,247,8],[110,8,248,6],[110,9,248,7],[110,10,248,8],[111,6,249,4],[111,7,249,5],[112,4,250,2],[113,4,251,2],[113,8,251,8,"legacyStack"],[113,19,251,19],[113,22,251,22,"message"],[113,29,251,29],[113,30,252,5,"split"],[113,35,252,10],[113,36,252,11,"RE_COMPONENT_STACK_LINE_GLOBAL"],[113,66,252,41],[113,67,252,42],[113,68,253,5,"map"],[113,71,253,8],[113,72,253,9,"s"],[113,73,253,10],[113,77,253,14],[114,6,254,6],[114,10,254,10],[114,11,254,11,"s"],[114,12,254,12],[114,14,254,14],[115,8,255,8],[115,15,255,15],[115,19,255,19],[116,6,256,6],[117,6,257,6],[117,10,257,12,"match"],[117,15,257,17],[117,18,257,20,"s"],[117,19,257,21],[117,20,257,22,"match"],[117,25,257,27],[117,26,257,28,"RE_COMPONENT_STACK_WITH_SOURCE"],[117,56,257,58],[117,57,257,59],[118,6,258,6],[118,10,258,10,"match"],[118,15,258,15],[118,17,258,17],[119,8,259,8],[119,12,259,8,"_match$slice"],[119,24,259,8],[119,27,259,39,"match"],[119,32,259,44],[119,33,259,45,"slice"],[119,38,259,50],[119,39,259,51],[119,40,259,52],[119,41,259,53],[120,10,259,53,"_match$slice2"],[120,23,259,53],[120,30,259,53,"_slicedToArray2"],[120,45,259,53],[120,46,259,53,"default"],[120,53,259,53],[120,55,259,53,"_match$slice"],[120,67,259,53],[121,10,259,13,"content"],[121,17,259,20],[121,20,259,20,"_match$slice2"],[121,33,259,20],[122,10,259,22,"fileName"],[122,18,259,30],[122,21,259,30,"_match$slice2"],[122,34,259,30],[123,10,259,32,"row"],[123,13,259,35],[123,16,259,35,"_match$slice2"],[123,29,259,35],[124,8,260,8],[124,15,260,15],[125,10,261,10,"content"],[125,17,261,17],[126,10,262,10,"fileName"],[126,18,262,18],[127,10,263,10,"location"],[127,18,263,18],[127,20,263,20],[128,12,263,21,"column"],[128,18,263,27],[128,20,263,29],[128,21,263,30],[128,22,263,31],[129,12,263,33,"row"],[129,15,263,36],[129,17,263,38,"parseInt"],[129,25,263,46],[129,26,263,47,"row"],[129,29,263,50],[129,31,263,52],[129,33,263,54],[130,10,263,55],[131,8,264,8],[131,9,264,9],[132,6,265,6],[133,6,268,6],[133,10,268,12,"matchWithoutSource"],[133,28,268,30],[133,31,268,33,"s"],[133,32,268,34],[133,33,268,35,"match"],[133,38,268,40],[133,39,268,41,"RE_COMPONENT_STACK_NO_SOURCE"],[133,67,268,69],[133,68,268,70],[134,6,269,6],[134,10,269,10,"matchWithoutSource"],[134,28,269,28],[134,30,269,30],[135,8,270,8],[135,15,270,15],[136,10,271,10,"content"],[136,17,271,17],[136,19,271,19,"matchWithoutSource"],[136,37,271,37],[136,38,271,38],[136,39,271,39],[136,40,271,40],[137,10,272,10,"fileName"],[137,18,272,18],[137,20,272,20],[137,22,272,22],[138,10,273,10,"location"],[138,18,273,18],[138,20,273,20],[139,8,274,8],[139,9,274,9],[140,6,275,6],[141,6,277,6],[141,13,277,13],[141,17,277,17],[142,4,278,4],[142,5,278,5],[142,6,278,6],[142,7,279,5,"filter"],[142,13,279,11],[142,14,279,12,"Boolean"],[142,21,279,19],[142,22,279,20],[143,4,281,2],[143,11,281,9],[144,6,282,4,"type"],[144,10,282,8],[144,12,282,10],[144,20,282,18],[145,6,283,4,"stack"],[145,11,283,9],[145,13,283,11,"legacyStack"],[146,4,284,2],[146,5,284,3],[147,2,285,0],[148,2,287,7],[148,11,287,16,"parseLogBoxException"],[148,31,287,36,"parseLogBoxException"],[148,32,288,2,"error"],[148,37,288,30],[148,39,289,17],[149,4,290,2],[149,8,290,8,"message"],[149,15,290,15],[149,18,291,4,"error"],[149,23,291,9],[149,24,291,10,"originalMessage"],[149,39,291,25],[149,43,291,29],[149,47,291,33],[149,50,291,36,"error"],[149,55,291,41],[149,56,291,42,"originalMessage"],[149,71,291,57],[149,74,291,60],[149,83,291,69],[150,4,293,2],[150,8,293,8,"metroInternalError"],[150,26,293,26],[150,29,293,29,"message"],[150,36,293,36],[150,37,293,37,"match"],[150,42,293,42],[150,43,293,43,"RE_METRO_ERROR_FORMAT"],[150,64,293,64],[150,65,293,65],[151,4,294,2],[151,8,294,6,"metroInternalError"],[151,26,294,24],[151,28,294,26],[152,6,295,4],[152,10,295,4,"_metroInternalError$s"],[152,31,295,4],[152,34,296,6,"metroInternalError"],[152,52,296,24],[152,53,296,25,"slice"],[152,58,296,30],[152,59,296,31],[152,60,296,32],[152,61,296,33],[153,8,296,33,"_metroInternalError$s2"],[153,30,296,33],[153,37,296,33,"_slicedToArray2"],[153,52,296,33],[153,53,296,33,"default"],[153,60,296,33],[153,62,296,33,"_metroInternalError$s"],[153,83,296,33],[154,8,295,11,"content"],[154,15,295,18],[154,18,295,18,"_metroInternalError$s2"],[154,40,295,18],[155,8,295,20,"fileName"],[155,16,295,28],[155,19,295,28,"_metroInternalError$s2"],[155,41,295,28],[156,8,295,30,"row"],[156,11,295,33],[156,14,295,33,"_metroInternalError$s2"],[156,36,295,33],[157,8,295,35,"column"],[157,14,295,41],[157,17,295,41,"_metroInternalError$s2"],[157,39,295,41],[158,8,295,43,"codeFrame"],[158,17,295,52],[158,20,295,52,"_metroInternalError$s2"],[158,42,295,52],[159,6,298,4],[159,13,298,11],[160,8,299,6,"level"],[160,13,299,11],[160,15,299,13],[160,22,299,20],[161,8,300,6,"type"],[161,12,300,10],[161,14,300,12],[161,27,300,25],[162,8,301,6,"stack"],[162,13,301,11],[162,15,301,13],[162,17,301,15],[163,8,302,6,"isComponentError"],[163,24,302,22],[163,26,302,24],[163,31,302,29],[164,8,303,6,"componentStackType"],[164,26,303,24],[164,28,303,26],[164,36,303,34],[165,8,304,6,"componentStack"],[165,22,304,20],[165,24,304,22],[165,26,304,24],[166,8,305,6,"codeFrame"],[166,17,305,15],[166,19,305,17],[167,10,306,8,"fileName"],[167,18,306,16],[168,10,307,8,"location"],[168,18,307,16],[168,20,307,18],[169,12,308,10,"row"],[169,15,308,13],[169,17,308,15,"parseInt"],[169,25,308,23],[169,26,308,24,"row"],[169,29,308,27],[169,31,308,29],[169,33,308,31],[169,34,308,32],[170,12,309,10,"column"],[170,18,309,16],[170,20,309,18,"parseInt"],[170,28,309,26],[170,29,309,27,"column"],[170,35,309,33],[170,37,309,35],[170,39,309,37],[171,10,310,8],[171,11,310,9],[172,10,311,8,"content"],[172,17,311,15],[172,19,311,17,"codeFrame"],[173,8,312,6],[173,9,312,7],[174,8,313,6,"message"],[174,15,313,13],[174,17,313,15],[175,10,314,8,"content"],[175,17,314,15],[176,10,315,8,"substitutions"],[176,23,315,21],[176,25,315,23],[177,8,316,6],[177,9,316,7],[178,8,317,6,"category"],[178,16,317,14],[178,18,317,16],[178,21,317,19,"fileName"],[178,29,317,27],[178,33,317,31,"row"],[178,36,317,34],[178,40,317,38,"column"],[178,46,317,44],[178,48,317,46],[179,8,318,6,"extraData"],[179,17,318,15],[179,19,318,17,"error"],[179,24,318,22],[179,25,318,23,"extraData"],[180,6,319,4],[180,7,319,5],[181,4,320,2],[182,4,322,2],[182,8,322,8,"babelTransformError"],[182,27,322,27],[182,30,322,30,"message"],[182,37,322,37],[182,38,322,38,"match"],[182,43,322,43],[182,44,322,44,"RE_BABEL_TRANSFORM_ERROR_FORMAT"],[182,75,322,75],[182,76,322,76],[183,4,323,2],[183,8,323,6,"babelTransformError"],[183,27,323,25],[183,29,323,27],[184,6,325,4],[184,10,325,4,"_babelTransformError$"],[184,31,325,4],[184,34,326,6,"babelTransformError"],[184,53,326,25],[184,54,326,26,"slice"],[184,59,326,31],[184,60,326,32],[184,61,326,33],[184,62,326,34],[185,8,326,34,"_babelTransformError$2"],[185,30,326,34],[185,37,326,34,"_slicedToArray2"],[185,52,326,34],[185,53,326,34,"default"],[185,60,326,34],[185,62,326,34,"_babelTransformError$"],[185,83,326,34],[186,8,325,11,"fileName"],[186,17,325,19],[186,20,325,19,"_babelTransformError$2"],[186,42,325,19],[187,8,325,21,"content"],[187,16,325,28],[187,19,325,28,"_babelTransformError$2"],[187,41,325,28],[188,8,325,30,"row"],[188,12,325,33],[188,15,325,33,"_babelTransformError$2"],[188,37,325,33],[189,8,325,35,"column"],[189,15,325,41],[189,18,325,41,"_babelTransformError$2"],[189,40,325,41],[190,8,325,43,"codeFrame"],[190,18,325,52],[190,21,325,52,"_babelTransformError$2"],[190,43,325,52],[191,6,328,4],[191,13,328,11],[192,8,329,6,"level"],[192,13,329,11],[192,15,329,13],[192,23,329,21],[193,8,330,6,"stack"],[193,13,330,11],[193,15,330,13],[193,17,330,15],[194,8,331,6,"isComponentError"],[194,24,331,22],[194,26,331,24],[194,31,331,29],[195,8,332,6,"componentStackType"],[195,26,332,24],[195,28,332,26],[195,36,332,34],[196,8,333,6,"componentStack"],[196,22,333,20],[196,24,333,22],[196,26,333,24],[197,8,334,6,"codeFrame"],[197,17,334,15],[197,19,334,17],[198,10,335,8,"fileName"],[198,18,335,16],[198,20,335,8,"fileName"],[198,29,335,16],[199,10,336,8,"location"],[199,18,336,16],[199,20,336,18],[200,12,337,10,"row"],[200,15,337,13],[200,17,337,15,"parseInt"],[200,25,337,23],[200,26,337,24,"row"],[200,30,337,27],[200,32,337,29],[200,34,337,31],[200,35,337,32],[201,12,338,10,"column"],[201,18,338,16],[201,20,338,18,"parseInt"],[201,28,338,26],[201,29,338,27,"column"],[201,36,338,33],[201,38,338,35],[201,40,338,37],[202,10,339,8],[202,11,339,9],[203,10,340,8,"content"],[203,17,340,15],[203,19,340,17,"codeFrame"],[204,8,341,6],[204,9,341,7],[205,8,342,6,"message"],[205,15,342,13],[205,17,342,15],[206,10,343,8,"content"],[206,17,343,15],[206,19,343,8,"content"],[206,27,343,15],[207,10,344,8,"substitutions"],[207,23,344,21],[207,25,344,23],[208,8,345,6],[208,9,345,7],[209,8,346,6,"category"],[209,16,346,14],[209,18,346,16],[209,21,346,19,"fileName"],[209,30,346,27],[209,34,346,31,"row"],[209,38,346,34],[209,42,346,38,"column"],[209,49,346,44],[209,51,346,46],[210,8,347,6,"extraData"],[210,17,347,15],[210,19,347,17,"error"],[210,24,347,22],[210,25,347,23,"extraData"],[211,6,348,4],[211,7,348,5],[212,4,349,2],[213,4,353,2],[213,8,353,6,"RE_BABEL_CODE_FRAME_MARKER_PATTERN"],[213,42,353,40],[213,43,353,41,"test"],[213,47,353,45],[213,48,353,46,"message"],[213,55,353,53],[213,56,353,54],[213,58,353,56],[214,6,354,4],[214,10,354,10,"babelCodeFrameError"],[214,29,354,29],[214,32,354,32,"message"],[214,39,354,39],[214,40,354,40,"match"],[214,45,354,45],[214,46,354,46,"RE_BABEL_CODE_FRAME_ERROR_FORMAT"],[214,78,354,78],[214,79,354,79],[215,6,356,4],[215,10,356,8,"babelCodeFrameError"],[215,29,356,27],[215,31,356,29],[216,8,358,6],[216,12,358,6,"_babelCodeFrameError$"],[216,33,358,6],[216,36,358,45,"babelCodeFrameError"],[216,55,358,64],[216,56,358,65,"slice"],[216,61,358,70],[216,62,358,71],[216,63,358,72],[216,64,358,73],[217,10,358,73,"_babelCodeFrameError$2"],[217,32,358,73],[217,39,358,73,"_slicedToArray2"],[217,54,358,73],[217,55,358,73,"default"],[217,62,358,73],[217,64,358,73,"_babelCodeFrameError$"],[217,85,358,73],[218,10,358,13,"fileName"],[218,20,358,21],[218,23,358,21,"_babelCodeFrameError$2"],[218,45,358,21],[219,10,358,23,"content"],[219,19,358,30],[219,22,358,30,"_babelCodeFrameError$2"],[219,44,358,30],[220,10,358,32,"codeFrame"],[220,21,358,41],[220,24,358,41,"_babelCodeFrameError$2"],[220,46,358,41],[221,8,359,6],[221,15,359,13],[222,10,360,8,"level"],[222,15,360,13],[222,17,360,15],[222,25,360,23],[223,10,361,8,"stack"],[223,15,361,13],[223,17,361,15],[223,19,361,17],[224,10,362,8,"isComponentError"],[224,26,362,24],[224,28,362,26],[224,33,362,31],[225,10,363,8,"componentStackType"],[225,28,363,26],[225,30,363,28],[225,38,363,36],[226,10,364,8,"componentStack"],[226,24,364,22],[226,26,364,24],[226,28,364,26],[227,10,365,8,"codeFrame"],[227,19,365,17],[227,21,365,19],[228,12,366,10,"fileName"],[228,20,366,18],[228,22,366,10,"fileName"],[228,32,366,18],[229,12,367,10,"location"],[229,20,367,18],[229,22,367,20],[229,26,367,24],[230,12,368,10,"content"],[230,19,368,17],[230,21,368,19,"codeFrame"],[231,10,369,8],[231,11,369,9],[232,10,370,8,"message"],[232,17,370,15],[232,19,370,17],[233,12,371,10,"content"],[233,19,371,17],[233,21,371,10,"content"],[233,30,371,17],[234,12,372,10,"substitutions"],[234,25,372,23],[234,27,372,25],[235,10,373,8],[235,11,373,9],[236,10,374,8,"category"],[236,18,374,16],[236,20,374,18],[236,23,374,21,"fileName"],[236,33,374,29],[236,37,374,33],[236,38,374,34],[236,42,374,38],[236,43,374,39],[236,45,374,41],[237,10,375,8,"extraData"],[237,19,375,17],[237,21,375,19,"error"],[237,26,375,24],[237,27,375,25,"extraData"],[238,8,376,6],[238,9,376,7],[239,6,377,4],[240,4,378,2],[241,4,380,2],[241,8,380,6,"message"],[241,15,380,13],[241,16,380,14,"match"],[241,21,380,19],[241,22,380,20,"RE_TRANSFORM_ERROR"],[241,40,380,38],[241,41,380,39],[241,43,380,41],[242,6,381,4],[242,13,381,11],[243,8,382,6,"level"],[243,13,382,11],[243,15,382,13],[243,23,382,21],[244,8,383,6,"stack"],[244,13,383,11],[244,15,383,13,"error"],[244,20,383,18],[244,21,383,19,"stack"],[244,26,383,24],[245,8,384,6,"isComponentError"],[245,24,384,22],[245,26,384,24,"error"],[245,31,384,29],[245,32,384,30,"isComponentError"],[245,48,384,46],[246,8,385,6,"componentStackType"],[246,26,385,24],[246,28,385,26],[246,36,385,34],[247,8,386,6,"componentStack"],[247,22,386,20],[247,24,386,22],[247,26,386,24],[248,8,387,6,"message"],[248,15,387,13],[248,17,387,15],[249,10,388,8,"content"],[249,17,388,15],[249,19,388,17,"message"],[249,26,388,24],[250,10,389,8,"substitutions"],[250,23,389,21],[250,25,389,23],[251,8,390,6],[251,9,390,7],[252,8,391,6,"category"],[252,16,391,14],[252,18,391,16,"message"],[252,25,391,23],[253,8,392,6,"extraData"],[253,17,392,15],[253,19,392,17,"error"],[253,24,392,22],[253,25,392,23,"extraData"],[254,6,393,4],[254,7,393,5],[255,4,394,2],[256,4,396,2],[256,8,396,8,"componentStack"],[256,22,396,22],[256,25,396,25,"error"],[256,30,396,30],[256,31,396,31,"componentStack"],[256,45,396,45],[257,4,397,2],[257,8,397,6,"error"],[257,13,397,11],[257,14,397,12,"isFatal"],[257,21,397,19],[257,25,397,23,"error"],[257,30,397,28],[257,31,397,29,"isComponentError"],[257,47,397,45],[257,49,397,47],[258,6,398,4],[258,10,398,8,"componentStack"],[258,24,398,22],[258,28,398,26],[258,32,398,30],[258,34,398,32],[259,8,399,6],[259,12,399,6,"_parseComponentStack"],[259,32,399,6],[259,35,399,28,"parseComponentStack"],[259,54,399,47],[259,55,399,48,"componentStack"],[259,69,399,62],[259,70,399,63],[260,10,399,13,"type"],[260,14,399,17],[260,17,399,17,"_parseComponentStack"],[260,37,399,17],[260,38,399,13,"type"],[260,42,399,17],[261,10,399,19,"stack"],[261,15,399,24],[261,18,399,24,"_parseComponentStack"],[261,38,399,24],[261,39,399,19,"stack"],[261,44,399,24],[262,8,400,6],[262,15,400,13],[263,10,401,8,"level"],[263,15,401,13],[263,17,401,15],[263,24,401,22],[264,10,402,8,"stack"],[264,15,402,13],[264,17,402,15,"error"],[264,22,402,20],[264,23,402,21,"stack"],[264,28,402,26],[265,10,403,8,"isComponentError"],[265,26,403,24],[265,28,403,26,"error"],[265,33,403,31],[265,34,403,32,"isComponentError"],[265,50,403,48],[266,10,404,8,"componentStackType"],[266,28,404,26],[266,30,404,28,"type"],[266,34,404,32],[267,10,405,8,"componentStack"],[267,24,405,22],[267,26,405,24,"stack"],[267,31,405,29],[268,10,406,8,"extraData"],[268,19,406,17],[268,21,406,19,"error"],[268,26,406,24],[268,27,406,25,"extraData"],[268,36,406,34],[269,10,407,8],[269,13,407,11,"parseInterpolation"],[269,31,407,29],[269,32,407,30],[269,33,407,31,"message"],[269,40,407,38],[269,41,407,39],[270,8,408,6],[270,9,408,7],[271,6,409,4],[271,7,409,5],[271,13,409,11],[272,8,410,6],[272,15,410,13],[273,10,411,8,"level"],[273,15,411,13],[273,17,411,15],[273,24,411,22],[274,10,412,8,"stack"],[274,15,412,13],[274,17,412,15,"error"],[274,22,412,20],[274,23,412,21,"stack"],[274,28,412,26],[275,10,413,8,"isComponentError"],[275,26,413,24],[275,28,413,26,"error"],[275,33,413,31],[275,34,413,32,"isComponentError"],[275,50,413,48],[276,10,414,8,"componentStackType"],[276,28,414,26],[276,30,414,28],[276,38,414,36],[277,10,415,8,"componentStack"],[277,24,415,22],[277,26,415,24],[277,28,415,26],[278,10,416,8,"extraData"],[278,19,416,17],[278,21,416,19,"error"],[278,26,416,24],[278,27,416,25,"extraData"],[278,36,416,34],[279,10,417,8],[279,13,417,11,"parseInterpolation"],[279,31,417,29],[279,32,417,30],[279,33,417,31,"message"],[279,40,417,38],[279,41,417,39],[280,8,418,6],[280,9,418,7],[281,6,419,4],[282,4,420,2],[283,4,422,2],[283,8,422,6,"componentStack"],[283,22,422,20],[283,26,422,24],[283,30,422,28],[283,32,422,30],[284,6,424,4],[284,10,424,4,"_parseComponentStack2"],[284,31,424,4],[284,34,424,26,"parseComponentStack"],[284,53,424,45],[284,54,424,46,"componentStack"],[284,68,424,60],[284,69,424,61],[285,8,424,11,"type"],[285,13,424,15],[285,16,424,15,"_parseComponentStack2"],[285,37,424,15],[285,38,424,11,"type"],[285,42,424,15],[286,8,424,17,"stack"],[286,14,424,22],[286,17,424,22,"_parseComponentStack2"],[286,38,424,22],[286,39,424,17,"stack"],[286,44,424,22],[287,6,425,4],[287,13,425,11],[288,8,426,6,"level"],[288,13,426,11],[288,15,426,13],[288,22,426,20],[289,8,427,6,"stack"],[289,13,427,11],[289,15,427,13,"error"],[289,20,427,18],[289,21,427,19,"stack"],[289,26,427,24],[290,8,428,6,"isComponentError"],[290,24,428,22],[290,26,428,24,"error"],[290,31,428,29],[290,32,428,30,"isComponentError"],[290,48,428,46],[291,8,429,6,"componentStackType"],[291,26,429,24],[291,28,429,26,"type"],[291,33,429,30],[292,8,430,6,"componentStack"],[292,22,430,20],[292,24,430,22,"stack"],[292,30,430,27],[293,8,431,6,"extraData"],[293,17,431,15],[293,19,431,17,"error"],[293,24,431,22],[293,25,431,23,"extraData"],[293,34,431,32],[294,8,432,6],[294,11,432,9,"parseInterpolation"],[294,29,432,27],[294,30,432,28],[294,31,432,29,"message"],[294,38,432,36],[294,39,432,37],[295,6,433,4],[295,7,433,5],[296,4,434,2],[297,4,438,2],[297,11,438,9],[298,6,439,4,"level"],[298,11,439,9],[298,13,439,11],[298,20,439,18],[299,6,440,4,"stack"],[299,11,440,9],[299,13,440,11,"error"],[299,18,440,16],[299,19,440,17,"stack"],[299,24,440,22],[300,6,441,4,"isComponentError"],[300,22,441,20],[300,24,441,22,"error"],[300,29,441,27],[300,30,441,28,"isComponentError"],[300,46,441,44],[301,6,442,4,"extraData"],[301,15,442,13],[301,17,442,15,"error"],[301,22,442,20],[301,23,442,21,"extraData"],[301,32,442,30],[302,6,443,4],[302,9,443,7,"parseLogBoxLog"],[302,23,443,21],[302,24,443,22],[302,25,443,23,"message"],[302,32,443,30],[302,33,443,31],[303,4,444,2],[303,5,444,3],[304,2,445,0],[305,2,447,7],[305,11,447,16,"withoutANSIColorStyles"],[305,33,447,38,"withoutANSIColorStyles"],[305,34,447,39,"message"],[305,41,447,53],[305,43,447,62],[306,4,448,2],[306,8,448,6],[306,15,448,13,"message"],[306,22,448,20],[306,27,448,25],[306,35,448,33],[306,37,448,35],[307,6,449,4],[307,13,449,11,"message"],[307,20,449,18],[308,4,450,2],[309,4,452,2],[309,11,452,9,"message"],[309,18,452,16],[309,19,452,17,"replace"],[309,26,452,24],[309,27,454,4],[309,104,454,81],[309,106,455,4],[309,108,456,2],[309,109,456,3],[310,2,457,0],[311,2,459,7],[311,11,459,16,"parseLogBoxLog"],[311,25,459,30,"parseLogBoxLog"],[311,26,459,31,"args"],[311,30,459,58],[311,32,464,2],[312,4,465,2],[312,8,465,8,"message"],[312,15,465,15],[312,18,465,18,"withoutANSIColorStyles"],[312,40,465,40],[312,41,465,41,"args"],[312,45,465,45],[312,46,465,46],[312,47,465,47],[312,48,465,48],[312,49,465,49],[313,4,466,2],[313,8,466,6,"argsWithoutComponentStack"],[313,33,466,45],[313,36,466,48],[313,38,466,50],[314,4,467,2],[314,8,467,6,"componentStack"],[314,22,467,36],[314,25,467,39],[314,27,467,41],[315,4,468,2],[315,8,468,6,"componentStackType"],[315,26,468,24],[315,29,468,27],[315,37,468,35],[316,4,471,2],[316,8,472,4],[316,15,472,11,"message"],[316,22,472,18],[316,27,472,23],[316,35,472,31],[316,39,473,4,"message"],[316,46,473,11],[316,47,473,12,"slice"],[316,52,473,17],[316,53,473,18],[316,54,473,19],[316,55,473,20],[316,56,473,21],[316,61,473,26],[316,65,473,30],[316,69,474,4,"args"],[316,73,474,8],[316,74,474,9,"length"],[316,80,474,15],[316,83,474,18],[316,84,474,19],[316,86,475,4],[317,6,476,4],[317,10,476,10,"lastArg"],[317,17,476,17],[317,20,476,20,"args"],[317,24,476,24],[317,25,476,25,"args"],[317,29,476,29],[317,30,476,30,"length"],[317,36,476,36],[317,39,476,39],[317,40,476,40],[317,41,476,41],[318,6,477,4],[318,10,477,8],[318,17,477,15,"lastArg"],[318,24,477,22],[318,29,477,27],[318,37,477,35],[318,41,477,39,"isComponentStack"],[318,57,477,55],[318,58,477,56,"lastArg"],[318,65,477,63],[318,66,477,64],[318,68,477,66],[319,8,478,6,"argsWithoutComponentStack"],[319,33,478,31],[319,36,478,34,"args"],[319,40,478,38],[319,41,478,39,"slice"],[319,46,478,44],[319,47,478,45],[319,48,478,46],[319,50,478,48],[319,51,478,49],[319,52,478,50],[319,53,478,51],[320,8,479,6,"argsWithoutComponentStack"],[320,33,479,31],[320,34,479,32],[320,35,479,33],[320,36,479,34],[320,39,479,37,"message"],[320,46,479,44],[320,47,479,45,"slice"],[320,52,479,50],[320,53,479,51],[320,54,479,52],[320,56,479,54],[320,57,479,55],[320,58,479,56],[320,59,479,57],[321,8,480,6],[321,12,480,6,"_parseComponentStack3"],[321,33,480,6],[321,36,480,28,"parseComponentStack"],[321,55,480,47],[321,56,480,48,"lastArg"],[321,63,480,55],[321,64,480,56],[322,10,480,13,"type"],[322,14,480,17],[322,17,480,17,"_parseComponentStack3"],[322,38,480,17],[322,39,480,13,"type"],[322,43,480,17],[323,10,480,19,"stack"],[323,15,480,24],[323,18,480,24,"_parseComponentStack3"],[323,39,480,24],[323,40,480,19,"stack"],[323,45,480,24],[324,8,481,6,"componentStack"],[324,22,481,20],[324,25,481,23,"stack"],[324,30,481,28],[325,8,482,6,"componentStackType"],[325,26,482,24],[325,29,482,27,"type"],[325,33,482,31],[326,6,483,4],[327,4,484,2],[328,4,486,2],[328,8,486,6,"componentStack"],[328,22,486,20],[328,23,486,21,"length"],[328,29,486,27],[328,34,486,32],[328,35,486,33],[328,39,486,37,"argsWithoutComponentStack"],[328,64,486,62],[328,65,486,63,"length"],[328,71,486,69],[328,76,486,74],[328,77,486,75],[328,79,486,77],[329,6,488,4],[329,11,488,9],[329,15,488,15,"arg"],[329,18,488,18],[329,22,488,22,"args"],[329,26,488,26],[329,28,488,28],[330,8,489,6],[330,12,489,10],[330,19,489,17,"arg"],[330,22,489,20],[330,27,489,25],[330,35,489,33],[330,39,489,37,"isComponentStack"],[330,55,489,53],[330,56,489,54,"arg"],[330,59,489,57],[330,60,489,58],[330,62,489,60],[331,10,491,8],[331,14,491,12,"messageEndIndex"],[331,29,491,27],[331,32,491,30,"arg"],[331,35,491,33],[331,36,491,34,"search"],[331,42,491,40],[331,43,491,41,"RE_COMPONENT_STACK_LINE"],[331,66,491,64],[331,67,491,65],[332,10,492,8],[332,14,492,12,"messageEndIndex"],[332,29,492,27],[332,32,492,30],[332,33,492,31],[332,35,492,33],[333,12,494,10,"messageEndIndex"],[333,27,494,25],[333,30,494,28,"arg"],[333,33,494,31],[333,34,494,32,"search"],[333,40,494,38],[333,41,494,39],[333,45,494,43],[333,46,494,44],[334,10,495,8],[335,10,496,8],[335,14,496,12,"messageEndIndex"],[335,29,496,27],[335,32,496,30],[335,33,496,31],[335,35,496,33],[336,12,497,10,"argsWithoutComponentStack"],[336,37,497,35],[336,38,497,36,"push"],[336,42,497,40],[336,43,497,41,"arg"],[336,46,497,44],[336,47,497,45,"slice"],[336,52,497,50],[336,53,497,51],[336,54,497,52],[336,56,497,54,"messageEndIndex"],[336,71,497,69],[336,72,497,70],[336,73,497,71],[337,10,498,8],[338,10,500,8],[338,14,500,8,"_parseComponentStack4"],[338,35,500,8],[338,38,500,30,"parseComponentStack"],[338,57,500,49],[338,58,500,50,"arg"],[338,61,500,53],[338,62,500,54],[339,12,500,15,"type"],[339,18,500,19],[339,21,500,19,"_parseComponentStack4"],[339,42,500,19],[339,43,500,15,"type"],[339,47,500,19],[340,12,500,21,"stack"],[340,19,500,26],[340,22,500,26,"_parseComponentStack4"],[340,43,500,26],[340,44,500,21,"stack"],[340,49,500,26],[341,10,501,8,"componentStack"],[341,24,501,22],[341,27,501,25,"stack"],[341,34,501,30],[342,10,502,8,"componentStackType"],[342,28,502,26],[342,31,502,29,"type"],[342,37,502,33],[343,8,503,6],[343,9,503,7],[343,15,503,13],[344,10,504,8,"argsWithoutComponentStack"],[344,35,504,33],[344,36,504,34,"push"],[344,40,504,38],[344,41,504,39,"arg"],[344,44,504,42],[344,45,504,43],[345,8,505,6],[346,6,506,4],[347,4,507,2],[348,4,509,2],[348,11,509,9],[349,6,510,4],[349,9,510,7,"parseInterpolation"],[349,27,510,25],[349,28,510,26,"argsWithoutComponentStack"],[349,53,510,51],[349,54,510,52],[350,6,511,4,"componentStack"],[350,20,511,18],[351,6,512,4,"componentStackType"],[352,4,513,2],[352,5,513,3],[353,2,514,0],[354,0,514,1],[354,3]],"functionMap":{"names":["<global>","hasComponentStack","parseInterpolation","remaining.map$argument_0","isComponentStack","parseComponentStack","stack.map$argument_0","message.split.map$argument_0","parseLogBoxException","withoutANSIColorStyles","parseLogBoxLog"],"mappings":"AAA;OC+F;CDO;OEoC;sCCyD;GDK;CFW;AIE;CJa;OKE;uBCW;QDQ;SEK;KFyB;CLO;OQE;CR8J;OSE;CTU;OUE"}},"type":"js/module"}]}