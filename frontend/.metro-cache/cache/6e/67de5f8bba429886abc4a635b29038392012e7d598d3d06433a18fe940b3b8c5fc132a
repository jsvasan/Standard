{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":225},"end":{"line":13,"column":65,"index":290}}],"key":"SfRhzMj3Ex6qA89WTFEUm9Lj49A=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createForOfIteratorHelperLoose","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":291},"end":{"line":14,"column":100,"index":391}}],"key":"Y/2Rvrgl4aDxeJKdk1U58Vc2xw8=","exportNames":["*"]}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":392},"end":{"line":15,"column":43,"index":435}}],"key":"bGUa+dDG2WEhPiIlobT3urS95UE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _objectSpread2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread2\"));\n  var _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\n  var _invariant = _interopRequireDefault(require(_dependencyMap[3], \"fbjs/lib/invariant\"));\n  /**\n   * A Utility class for calculating viewable items based on current metrics like scroll position and\n   * layout.\n   *\n   * An item is said to be in a \"viewable\" state when any of the following\n   * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n   * is true):\n   *\n   * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n   *   visible in the view area >= `itemVisiblePercentThreshold`.\n   * - Entirely visible on screen\n   */\n  class ViewabilityHelper {\n    constructor(config) {\n      if (config === void 0) {\n        config = {\n          viewAreaCoveragePercentThreshold: 0\n        };\n      }\n      this._hasInteracted = false;\n      this._timers = new Set();\n      this._viewableIndices = [];\n      this._viewableItems = new Map();\n      this._config = config;\n    }\n\n    /**\n     * Cleanup, e.g. on unmount. Clears any pending timers.\n     */\n    dispose() {\n      /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.63 was deployed. To see\n       * the error delete this comment and run Flow. */\n      this._timers.forEach(clearTimeout);\n    }\n\n    /**\n     * Determines which items are viewable based on the current metrics and config.\n     */\n    computeViewableItems(props, scrollOffset, viewportHeight, getFrameMetrics,\n    // Optional optimization to reduce the scan size\n    renderRange) {\n      var itemCount = props.getItemCount(props.data);\n      var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n      var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n      var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n      (0, _invariant.default)(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n      var viewableIndices = [];\n      if (itemCount === 0) {\n        return viewableIndices;\n      }\n      var firstVisible = -1;\n      var _ref = renderRange || {\n          first: 0,\n          last: itemCount - 1\n        },\n        first = _ref.first,\n        last = _ref.last;\n      if (last >= itemCount) {\n        console.warn('Invalid render range computing viewability ' + JSON.stringify({\n          renderRange,\n          itemCount\n        }));\n        return [];\n      }\n      for (var idx = first; idx <= last; idx++) {\n        var metrics = getFrameMetrics(idx, props);\n        if (!metrics) {\n          continue;\n        }\n        var top = metrics.offset - scrollOffset;\n        var bottom = top + metrics.length;\n        if (top < viewportHeight && bottom > 0) {\n          firstVisible = idx;\n          if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n            viewableIndices.push(idx);\n          }\n        } else if (firstVisible >= 0) {\n          break;\n        }\n      }\n      return viewableIndices;\n    }\n\n    /**\n     * Figures out which items are viewable and how that has changed from before and calls\n     * `onViewableItemsChanged` as appropriate.\n     */\n    onUpdate(props, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged,\n    // Optional optimization to reduce the scan size\n    renderRange) {\n      var itemCount = props.getItemCount(props.data);\n      if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0, props)) {\n        return;\n      }\n      var viewableIndices = [];\n      if (itemCount) {\n        viewableIndices = this.computeViewableItems(props, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n      }\n      if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every((v, ii) => v === viewableIndices[ii])) {\n        // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n        // extra work in those cases.\n        return;\n      }\n      this._viewableIndices = viewableIndices;\n      if (this._config.minimumViewTime) {\n        var handle = setTimeout(() => {\n          /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n           * comment suppresses an error found when Flow v0.63 was deployed. To\n           * see the error delete this comment and run Flow. */\n          this._timers.delete(handle);\n          this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);\n        }, this._config.minimumViewTime);\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To see\n         * the error delete this comment and run Flow. */\n        this._timers.add(handle);\n      } else {\n        this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);\n      }\n    }\n\n    /**\n     * clean-up cached _viewableIndices to evaluate changed items on next update\n     */\n    resetViewableIndices() {\n      this._viewableIndices = [];\n    }\n\n    /**\n     * Records that an interaction has happened even if there has been no scroll.\n     */\n    recordInteraction() {\n      this._hasInteracted = true;\n    }\n    _onUpdateSync(props, viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n      // Filter out indices that have gone out of view since this call was scheduled.\n      viewableIndicesToCheck = viewableIndicesToCheck.filter(ii => this._viewableIndices.includes(ii));\n      var prevItems = this._viewableItems;\n      var nextItems = new Map(viewableIndicesToCheck.map(ii => {\n        var viewable = createViewToken(ii, true, props);\n        return [viewable.key, viewable];\n      }));\n      var changed = [];\n      for (var _iterator = (0, _createForOfIteratorHelperLoose2.default)(nextItems), _step; !(_step = _iterator()).done;) {\n        var _step$value = _step.value,\n          key = _step$value[0],\n          viewable = _step$value[1];\n        if (!prevItems.has(key)) {\n          changed.push(viewable);\n        }\n      }\n      for (var _iterator2 = (0, _createForOfIteratorHelperLoose2.default)(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n        var _step2$value = _step2.value,\n          _key = _step2$value[0],\n          _viewable = _step2$value[1];\n        if (!nextItems.has(_key)) {\n          changed.push((0, _objectSpread2.default)((0, _objectSpread2.default)({}, _viewable), {}, {\n            isViewable: false\n          }));\n        }\n      }\n      if (changed.length > 0) {\n        this._viewableItems = nextItems;\n        onViewableItemsChanged({\n          viewableItems: Array.from(nextItems.values()),\n          changed,\n          viewabilityConfig: this._config\n        });\n      }\n    }\n  }\n  function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n    if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n      return true;\n    } else {\n      var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n      var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n      return percent >= viewablePercentThreshold;\n    }\n  }\n  function _getPixelsVisible(top, bottom, viewportHeight) {\n    var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n    return Math.max(0, visibleHeight);\n  }\n  function _isEntirelyVisible(top, bottom, viewportHeight) {\n    return top >= 0 && bottom <= viewportHeight && bottom > top;\n  }\n  var _default = exports.default = ViewabilityHelper;\n});","lineCount":213,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"require"],[14,38,11,13],[14,39,11,13,"_dependencyMap"],[14,53,11,13],[15,2,11,13,"Object"],[15,8,11,13],[15,9,11,13,"defineProperty"],[15,23,11,13],[15,24,11,13,"exports"],[15,31,11,13],[16,4,11,13,"value"],[16,9,11,13],[17,2,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"default"],[18,17,11,13],[19,2,13,0],[19,6,13,0,"_objectSpread2"],[19,20,13,0],[19,23,13,0,"_interopRequireDefault"],[19,45,13,0],[19,46,13,0,"require"],[19,53,13,0],[19,54,13,0,"_dependencyMap"],[19,68,13,0],[20,2,14,0],[20,6,14,0,"_createForOfIteratorHelperLoose2"],[20,38,14,0],[20,41,14,0,"_interopRequireDefault"],[20,63,14,0],[20,64,14,0,"require"],[20,71,14,0],[20,72,14,0,"_dependencyMap"],[20,86,14,0],[21,2,15,0],[21,6,15,0,"_invariant"],[21,16,15,0],[21,19,15,0,"_interopRequireDefault"],[21,41,15,0],[21,42,15,0,"require"],[21,49,15,0],[21,50,15,0,"_dependencyMap"],[21,64,15,0],[22,2,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,2,28,0],[34,8,28,6,"ViewabilityHelper"],[34,25,28,23],[34,26,28,24],[35,4,29,2,"constructor"],[35,15,29,13,"constructor"],[35,16,29,14,"config"],[35,22,29,20],[35,24,29,22],[36,6,30,4],[36,10,30,8,"config"],[36,16,30,14],[36,21,30,19],[36,26,30,24],[36,27,30,25],[36,29,30,27],[37,8,31,6,"config"],[37,14,31,12],[37,17,31,15],[38,10,32,8,"viewAreaCoveragePercentThreshold"],[38,42,32,40],[38,44,32,42],[39,8,33,6],[39,9,33,7],[40,6,34,4],[41,6,35,4],[41,10,35,8],[41,11,35,9,"_hasInteracted"],[41,25,35,23],[41,28,35,26],[41,33,35,31],[42,6,36,4],[42,10,36,8],[42,11,36,9,"_timers"],[42,18,36,16],[42,21,36,19],[42,25,36,23,"Set"],[42,28,36,26],[42,29,36,27],[42,30,36,28],[43,6,37,4],[43,10,37,8],[43,11,37,9,"_viewableIndices"],[43,27,37,25],[43,30,37,28],[43,32,37,30],[44,6,38,4],[44,10,38,8],[44,11,38,9,"_viewableItems"],[44,25,38,23],[44,28,38,26],[44,32,38,30,"Map"],[44,35,38,33],[44,36,38,34],[44,37,38,35],[45,6,39,4],[45,10,39,8],[45,11,39,9,"_config"],[45,18,39,16],[45,21,39,19,"config"],[45,27,39,25],[46,4,40,2],[48,4,42,2],[49,0,43,0],[50,0,44,0],[51,4,45,2,"dispose"],[51,11,45,9,"dispose"],[51,12,45,9],[51,14,45,12],[52,6,46,4],[53,0,47,0],[54,0,48,0],[55,6,49,4],[55,10,49,8],[55,11,49,9,"_timers"],[55,18,49,16],[55,19,49,17,"forEach"],[55,26,49,24],[55,27,49,25,"clearTimeout"],[55,39,49,37],[55,40,49,38],[56,4,50,2],[58,4,52,2],[59,0,53,0],[60,0,54,0],[61,4,55,2,"computeViewableItems"],[61,24,55,22,"computeViewableItems"],[61,25,55,23,"props"],[61,30,55,28],[61,32,55,30,"scrollOffset"],[61,44,55,42],[61,46,55,44,"viewportHeight"],[61,60,55,58],[61,62,55,60,"getFrameMetrics"],[61,77,55,75],[62,4,56,2],[63,4,57,2,"renderRange"],[63,15,57,13],[63,17,57,15],[64,6,58,4],[64,10,58,8,"itemCount"],[64,19,58,17],[64,22,58,20,"props"],[64,27,58,25],[64,28,58,26,"getItemCount"],[64,40,58,38],[64,41,58,39,"props"],[64,46,58,44],[64,47,58,45,"data"],[64,51,58,49],[64,52,58,50],[65,6,59,4],[65,10,59,8,"_this$_config"],[65,23,59,21],[65,26,59,24],[65,30,59,28],[65,31,59,29,"_config"],[65,38,59,36],[66,8,60,6,"itemVisiblePercentThreshold"],[66,35,60,33],[66,38,60,36,"_this$_config"],[66,51,60,49],[66,52,60,50,"itemVisiblePercentThreshold"],[66,79,60,77],[67,8,61,6,"viewAreaCoveragePercentThreshold"],[67,40,61,38],[67,43,61,41,"_this$_config"],[67,56,61,54],[67,57,61,55,"viewAreaCoveragePercentThreshold"],[67,89,61,87],[68,6,62,4],[68,10,62,8,"viewAreaMode"],[68,22,62,20],[68,25,62,23,"viewAreaCoveragePercentThreshold"],[68,57,62,55],[68,61,62,59],[68,65,62,63],[69,6,63,4],[69,10,63,8,"viewablePercentThreshold"],[69,34,63,32],[69,37,63,35,"viewAreaMode"],[69,49,63,47],[69,52,63,50,"viewAreaCoveragePercentThreshold"],[69,84,63,82],[69,87,63,85,"itemVisiblePercentThreshold"],[69,114,63,112],[70,6,64,4],[70,10,64,4,"invariant"],[70,28,64,13],[70,30,64,14,"viewablePercentThreshold"],[70,54,64,38],[70,58,64,42],[70,62,64,46],[70,66,64,50,"itemVisiblePercentThreshold"],[70,93,64,77],[70,97,64,81],[70,101,64,85],[70,107,64,91,"viewAreaCoveragePercentThreshold"],[70,139,64,123],[70,143,64,127],[70,147,64,131],[70,148,64,132],[70,150,64,134],[70,239,64,223],[70,240,64,224],[71,6,65,4],[71,10,65,8,"viewableIndices"],[71,25,65,23],[71,28,65,26],[71,30,65,28],[72,6,66,4],[72,10,66,8,"itemCount"],[72,19,66,17],[72,24,66,22],[72,25,66,23],[72,27,66,25],[73,8,67,6],[73,15,67,13,"viewableIndices"],[73,30,67,28],[74,6,68,4],[75,6,69,4],[75,10,69,8,"firstVisible"],[75,22,69,20],[75,25,69,23],[75,26,69,24],[75,27,69,25],[76,6,70,4],[76,10,70,8,"_ref"],[76,14,70,12],[76,17,70,15,"renderRange"],[76,28,70,26],[76,32,70,30],[77,10,71,8,"first"],[77,15,71,13],[77,17,71,15],[77,18,71,16],[78,10,72,8,"last"],[78,14,72,12],[78,16,72,14,"itemCount"],[78,25,72,23],[78,28,72,26],[79,8,73,6],[79,9,73,7],[80,8,74,6,"first"],[80,13,74,11],[80,16,74,14,"_ref"],[80,20,74,18],[80,21,74,19,"first"],[80,26,74,24],[81,8,75,6,"last"],[81,12,75,10],[81,15,75,13,"_ref"],[81,19,75,17],[81,20,75,18,"last"],[81,24,75,22],[82,6,76,4],[82,10,76,8,"last"],[82,14,76,12],[82,18,76,16,"itemCount"],[82,27,76,25],[82,29,76,27],[83,8,77,6,"console"],[83,15,77,13],[83,16,77,14,"warn"],[83,20,77,18],[83,21,77,19],[83,66,77,64],[83,69,77,67,"JSON"],[83,73,77,71],[83,74,77,72,"stringify"],[83,83,77,81],[83,84,77,82],[84,10,78,8,"renderRange"],[84,21,78,19],[85,10,79,8,"itemCount"],[86,8,80,6],[86,9,80,7],[86,10,80,8],[86,11,80,9],[87,8,81,6],[87,15,81,13],[87,17,81,15],[88,6,82,4],[89,6,83,4],[89,11,83,9],[89,15,83,13,"idx"],[89,18,83,16],[89,21,83,19,"first"],[89,26,83,24],[89,28,83,26,"idx"],[89,31,83,29],[89,35,83,33,"last"],[89,39,83,37],[89,41,83,39,"idx"],[89,44,83,42],[89,46,83,44],[89,48,83,46],[90,8,84,6],[90,12,84,10,"metrics"],[90,19,84,17],[90,22,84,20,"getFrameMetrics"],[90,37,84,35],[90,38,84,36,"idx"],[90,41,84,39],[90,43,84,41,"props"],[90,48,84,46],[90,49,84,47],[91,8,85,6],[91,12,85,10],[91,13,85,11,"metrics"],[91,20,85,18],[91,22,85,20],[92,10,86,8],[93,8,87,6],[94,8,88,6],[94,12,88,10,"top"],[94,15,88,13],[94,18,88,16,"metrics"],[94,25,88,23],[94,26,88,24,"offset"],[94,32,88,30],[94,35,88,33,"scrollOffset"],[94,47,88,45],[95,8,89,6],[95,12,89,10,"bottom"],[95,18,89,16],[95,21,89,19,"top"],[95,24,89,22],[95,27,89,25,"metrics"],[95,34,89,32],[95,35,89,33,"length"],[95,41,89,39],[96,8,90,6],[96,12,90,10,"top"],[96,15,90,13],[96,18,90,16,"viewportHeight"],[96,32,90,30],[96,36,90,34,"bottom"],[96,42,90,40],[96,45,90,43],[96,46,90,44],[96,48,90,46],[97,10,91,8,"firstVisible"],[97,22,91,20],[97,25,91,23,"idx"],[97,28,91,26],[98,10,92,8],[98,14,92,12,"_isViewable"],[98,25,92,23],[98,26,92,24,"viewAreaMode"],[98,38,92,36],[98,40,92,38,"viewablePercentThreshold"],[98,64,92,62],[98,66,92,64,"top"],[98,69,92,67],[98,71,92,69,"bottom"],[98,77,92,75],[98,79,92,77,"viewportHeight"],[98,93,92,91],[98,95,92,93,"metrics"],[98,102,92,100],[98,103,92,101,"length"],[98,109,92,107],[98,110,92,108],[98,112,92,110],[99,12,93,10,"viewableIndices"],[99,27,93,25],[99,28,93,26,"push"],[99,32,93,30],[99,33,93,31,"idx"],[99,36,93,34],[99,37,93,35],[100,10,94,8],[101,8,95,6],[101,9,95,7],[101,15,95,13],[101,19,95,17,"firstVisible"],[101,31,95,29],[101,35,95,33],[101,36,95,34],[101,38,95,36],[102,10,96,8],[103,8,97,6],[104,6,98,4],[105,6,99,4],[105,13,99,11,"viewableIndices"],[105,28,99,26],[106,4,100,2],[108,4,102,2],[109,0,103,0],[110,0,104,0],[111,0,105,0],[112,4,106,2,"onUpdate"],[112,12,106,10,"onUpdate"],[112,13,106,11,"props"],[112,18,106,16],[112,20,106,18,"scrollOffset"],[112,32,106,30],[112,34,106,32,"viewportHeight"],[112,48,106,46],[112,50,106,48,"getFrameMetrics"],[112,65,106,63],[112,67,106,65,"createViewToken"],[112,82,106,80],[112,84,106,82,"onViewableItemsChanged"],[112,106,106,104],[113,4,107,2],[114,4,108,2,"renderRange"],[114,15,108,13],[114,17,108,15],[115,6,109,4],[115,10,109,8,"itemCount"],[115,19,109,17],[115,22,109,20,"props"],[115,27,109,25],[115,28,109,26,"getItemCount"],[115,40,109,38],[115,41,109,39,"props"],[115,46,109,44],[115,47,109,45,"data"],[115,51,109,49],[115,52,109,50],[116,6,110,4],[116,10,110,8],[116,14,110,12],[116,15,110,13,"_config"],[116,22,110,20],[116,23,110,21,"waitForInteraction"],[116,41,110,39],[116,45,110,43],[116,46,110,44],[116,50,110,48],[116,51,110,49,"_hasInteracted"],[116,65,110,63],[116,69,110,67,"itemCount"],[116,78,110,76],[116,83,110,81],[116,84,110,82],[116,88,110,86],[116,89,110,87,"getFrameMetrics"],[116,104,110,102],[116,105,110,103],[116,106,110,104],[116,108,110,106,"props"],[116,113,110,111],[116,114,110,112],[116,116,110,114],[117,8,111,6],[118,6,112,4],[119,6,113,4],[119,10,113,8,"viewableIndices"],[119,25,113,23],[119,28,113,26],[119,30,113,28],[120,6,114,4],[120,10,114,8,"itemCount"],[120,19,114,17],[120,21,114,19],[121,8,115,6,"viewableIndices"],[121,23,115,21],[121,26,115,24],[121,30,115,28],[121,31,115,29,"computeViewableItems"],[121,51,115,49],[121,52,115,50,"props"],[121,57,115,55],[121,59,115,57,"scrollOffset"],[121,71,115,69],[121,73,115,71,"viewportHeight"],[121,87,115,85],[121,89,115,87,"getFrameMetrics"],[121,104,115,102],[121,106,115,104,"renderRange"],[121,117,115,115],[121,118,115,116],[122,6,116,4],[123,6,117,4],[123,10,117,8],[123,14,117,12],[123,15,117,13,"_viewableIndices"],[123,31,117,29],[123,32,117,30,"length"],[123,38,117,36],[123,43,117,41,"viewableIndices"],[123,58,117,56],[123,59,117,57,"length"],[123,65,117,63],[123,69,117,67],[123,73,117,71],[123,74,117,72,"_viewableIndices"],[123,90,117,88],[123,91,117,89,"every"],[123,96,117,94],[123,97,117,95],[123,98,117,96,"v"],[123,99,117,97],[123,101,117,99,"ii"],[123,103,117,101],[123,108,117,106,"v"],[123,109,117,107],[123,114,117,112,"viewableIndices"],[123,129,117,127],[123,130,117,128,"ii"],[123,132,117,130],[123,133,117,131],[123,134,117,132],[123,136,117,134],[124,8,118,6],[125,8,119,6],[126,8,120,6],[127,6,121,4],[128,6,122,4],[128,10,122,8],[128,11,122,9,"_viewableIndices"],[128,27,122,25],[128,30,122,28,"viewableIndices"],[128,45,122,43],[129,6,123,4],[129,10,123,8],[129,14,123,12],[129,15,123,13,"_config"],[129,22,123,20],[129,23,123,21,"minimumViewTime"],[129,38,123,36],[129,40,123,38],[130,8,124,6],[130,12,124,10,"handle"],[130,18,124,16],[130,21,124,19,"setTimeout"],[130,31,124,29],[130,32,124,30],[130,38,124,36],[131,10,125,8],[132,0,126,0],[133,0,127,0],[134,10,128,8],[134,14,128,12],[134,15,128,13,"_timers"],[134,22,128,20],[134,23,128,21,"delete"],[134,29,128,27],[134,30,128,28,"handle"],[134,36,128,34],[134,37,128,35],[135,10,129,8],[135,14,129,12],[135,15,129,13,"_onUpdateSync"],[135,28,129,26],[135,29,129,27,"props"],[135,34,129,32],[135,36,129,34,"viewableIndices"],[135,51,129,49],[135,53,129,51,"onViewableItemsChanged"],[135,75,129,73],[135,77,129,75,"createViewToken"],[135,92,129,90],[135,93,129,91],[136,8,130,6],[136,9,130,7],[136,11,130,9],[136,15,130,13],[136,16,130,14,"_config"],[136,23,130,21],[136,24,130,22,"minimumViewTime"],[136,39,130,37],[136,40,130,38],[137,8,131,6],[138,0,132,0],[139,0,133,0],[140,8,134,6],[140,12,134,10],[140,13,134,11,"_timers"],[140,20,134,18],[140,21,134,19,"add"],[140,24,134,22],[140,25,134,23,"handle"],[140,31,134,29],[140,32,134,30],[141,6,135,4],[141,7,135,5],[141,13,135,11],[142,8,136,6],[142,12,136,10],[142,13,136,11,"_onUpdateSync"],[142,26,136,24],[142,27,136,25,"props"],[142,32,136,30],[142,34,136,32,"viewableIndices"],[142,49,136,47],[142,51,136,49,"onViewableItemsChanged"],[142,73,136,71],[142,75,136,73,"createViewToken"],[142,90,136,88],[142,91,136,89],[143,6,137,4],[144,4,138,2],[146,4,140,2],[147,0,141,0],[148,0,142,0],[149,4,143,2,"resetViewableIndices"],[149,24,143,22,"resetViewableIndices"],[149,25,143,22],[149,27,143,25],[150,6,144,4],[150,10,144,8],[150,11,144,9,"_viewableIndices"],[150,27,144,25],[150,30,144,28],[150,32,144,30],[151,4,145,2],[153,4,147,2],[154,0,148,0],[155,0,149,0],[156,4,150,2,"recordInteraction"],[156,21,150,19,"recordInteraction"],[156,22,150,19],[156,24,150,22],[157,6,151,4],[157,10,151,8],[157,11,151,9,"_hasInteracted"],[157,25,151,23],[157,28,151,26],[157,32,151,30],[158,4,152,2],[159,4,153,2,"_onUpdateSync"],[159,17,153,15,"_onUpdateSync"],[159,18,153,16,"props"],[159,23,153,21],[159,25,153,23,"viewableIndicesToCheck"],[159,47,153,45],[159,49,153,47,"onViewableItemsChanged"],[159,71,153,69],[159,73,153,71,"createViewToken"],[159,88,153,86],[159,90,153,88],[160,6,154,4],[161,6,155,4,"viewableIndicesToCheck"],[161,28,155,26],[161,31,155,29,"viewableIndicesToCheck"],[161,53,155,51],[161,54,155,52,"filter"],[161,60,155,58],[161,61,155,59,"ii"],[161,63,155,61],[161,67,155,65],[161,71,155,69],[161,72,155,70,"_viewableIndices"],[161,88,155,86],[161,89,155,87,"includes"],[161,97,155,95],[161,98,155,96,"ii"],[161,100,155,98],[161,101,155,99],[161,102,155,100],[162,6,156,4],[162,10,156,8,"prevItems"],[162,19,156,17],[162,22,156,20],[162,26,156,24],[162,27,156,25,"_viewableItems"],[162,41,156,39],[163,6,157,4],[163,10,157,8,"nextItems"],[163,19,157,17],[163,22,157,20],[163,26,157,24,"Map"],[163,29,157,27],[163,30,157,28,"viewableIndicesToCheck"],[163,52,157,50],[163,53,157,51,"map"],[163,56,157,54],[163,57,157,55,"ii"],[163,59,157,57],[163,63,157,61],[164,8,158,6],[164,12,158,10,"viewable"],[164,20,158,18],[164,23,158,21,"createViewToken"],[164,38,158,36],[164,39,158,37,"ii"],[164,41,158,39],[164,43,158,41],[164,47,158,45],[164,49,158,47,"props"],[164,54,158,52],[164,55,158,53],[165,8,159,6],[165,15,159,13],[165,16,159,14,"viewable"],[165,24,159,22],[165,25,159,23,"key"],[165,28,159,26],[165,30,159,28,"viewable"],[165,38,159,36],[165,39,159,37],[166,6,160,4],[166,7,160,5],[166,8,160,6],[166,9,160,7],[167,6,161,4],[167,10,161,8,"changed"],[167,17,161,15],[167,20,161,18],[167,22,161,20],[168,6,162,4],[168,11,162,9],[168,15,162,13,"_iterator"],[168,24,162,22],[168,27,162,25],[168,31,162,25,"_createForOfIteratorHelperLoose"],[168,71,162,56],[168,73,162,57,"nextItems"],[168,82,162,66],[168,83,162,67],[168,85,162,69,"_step"],[168,90,162,74],[168,92,162,76],[168,93,162,77],[168,94,162,78,"_step"],[168,99,162,83],[168,102,162,86,"_iterator"],[168,111,162,95],[168,112,162,96],[168,113,162,97],[168,115,162,99,"done"],[168,119,162,103],[168,122,162,106],[169,8,163,6],[169,12,163,10,"_step$value"],[169,23,163,21],[169,26,163,24,"_step"],[169,31,163,29],[169,32,163,30,"value"],[169,37,163,35],[170,10,164,8,"key"],[170,13,164,11],[170,16,164,14,"_step$value"],[170,27,164,25],[170,28,164,26],[170,29,164,27],[170,30,164,28],[171,10,165,8,"viewable"],[171,18,165,16],[171,21,165,19,"_step$value"],[171,32,165,30],[171,33,165,31],[171,34,165,32],[171,35,165,33],[172,8,166,6],[172,12,166,10],[172,13,166,11,"prevItems"],[172,22,166,20],[172,23,166,21,"has"],[172,26,166,24],[172,27,166,25,"key"],[172,30,166,28],[172,31,166,29],[172,33,166,31],[173,10,167,8,"changed"],[173,17,167,15],[173,18,167,16,"push"],[173,22,167,20],[173,23,167,21,"viewable"],[173,31,167,29],[173,32,167,30],[174,8,168,6],[175,6,169,4],[176,6,170,4],[176,11,170,9],[176,15,170,13,"_iterator2"],[176,25,170,23],[176,28,170,26],[176,32,170,26,"_createForOfIteratorHelperLoose"],[176,72,170,57],[176,74,170,58,"prevItems"],[176,83,170,67],[176,84,170,68],[176,86,170,70,"_step2"],[176,92,170,76],[176,94,170,78],[176,95,170,79],[176,96,170,80,"_step2"],[176,102,170,86],[176,105,170,89,"_iterator2"],[176,115,170,99],[176,116,170,100],[176,117,170,101],[176,119,170,103,"done"],[176,123,170,107],[176,126,170,110],[177,8,171,6],[177,12,171,10,"_step2$value"],[177,24,171,22],[177,27,171,25,"_step2"],[177,33,171,31],[177,34,171,32,"value"],[177,39,171,37],[178,10,172,8,"_key"],[178,14,172,12],[178,17,172,15,"_step2$value"],[178,29,172,27],[178,30,172,28],[178,31,172,29],[178,32,172,30],[179,10,173,8,"_viewable"],[179,19,173,17],[179,22,173,20,"_step2$value"],[179,34,173,32],[179,35,173,33],[179,36,173,34],[179,37,173,35],[180,8,174,6],[180,12,174,10],[180,13,174,11,"nextItems"],[180,22,174,20],[180,23,174,21,"has"],[180,26,174,24],[180,27,174,25,"_key"],[180,31,174,29],[180,32,174,30],[180,34,174,32],[181,10,175,8,"changed"],[181,17,175,15],[181,18,175,16,"push"],[181,22,175,20],[181,23,175,21],[181,27,175,21,"_objectSpread"],[181,49,175,34],[181,51,175,35],[181,55,175,35,"_objectSpread"],[181,77,175,48],[181,79,175,49],[181,80,175,50],[181,81,175,51],[181,83,175,53,"_viewable"],[181,92,175,62],[181,93,175,63],[181,95,175,65],[181,96,175,66],[181,97,175,67],[181,99,175,69],[182,12,176,10,"isViewable"],[182,22,176,20],[182,24,176,22],[183,10,177,8],[183,11,177,9],[183,12,177,10],[183,13,177,11],[184,8,178,6],[185,6,179,4],[186,6,180,4],[186,10,180,8,"changed"],[186,17,180,15],[186,18,180,16,"length"],[186,24,180,22],[186,27,180,25],[186,28,180,26],[186,30,180,28],[187,8,181,6],[187,12,181,10],[187,13,181,11,"_viewableItems"],[187,27,181,25],[187,30,181,28,"nextItems"],[187,39,181,37],[188,8,182,6,"onViewableItemsChanged"],[188,30,182,28],[188,31,182,29],[189,10,183,8,"viewableItems"],[189,23,183,21],[189,25,183,23,"Array"],[189,30,183,28],[189,31,183,29,"from"],[189,35,183,33],[189,36,183,34,"nextItems"],[189,45,183,43],[189,46,183,44,"values"],[189,52,183,50],[189,53,183,51],[189,54,183,52],[189,55,183,53],[190,10,184,8,"changed"],[190,17,184,15],[191,10,185,8,"viewabilityConfig"],[191,27,185,25],[191,29,185,27],[191,33,185,31],[191,34,185,32,"_config"],[192,8,186,6],[192,9,186,7],[192,10,186,8],[193,6,187,4],[194,4,188,2],[195,2,189,0],[196,2,190,0],[196,11,190,9,"_isViewable"],[196,22,190,20,"_isViewable"],[196,23,190,21,"viewAreaMode"],[196,35,190,33],[196,37,190,35,"viewablePercentThreshold"],[196,61,190,59],[196,63,190,61,"top"],[196,66,190,64],[196,68,190,66,"bottom"],[196,74,190,72],[196,76,190,74,"viewportHeight"],[196,90,190,88],[196,92,190,90,"itemLength"],[196,102,190,100],[196,104,190,102],[197,4,191,2],[197,8,191,6,"_isEntirelyVisible"],[197,26,191,24],[197,27,191,25,"top"],[197,30,191,28],[197,32,191,30,"bottom"],[197,38,191,36],[197,40,191,38,"viewportHeight"],[197,54,191,52],[197,55,191,53],[197,57,191,55],[198,6,192,4],[198,13,192,11],[198,17,192,15],[199,4,193,2],[199,5,193,3],[199,11,193,9],[200,6,194,4],[200,10,194,8,"pixels"],[200,16,194,14],[200,19,194,17,"_getPixelsVisible"],[200,36,194,34],[200,37,194,35,"top"],[200,40,194,38],[200,42,194,40,"bottom"],[200,48,194,46],[200,50,194,48,"viewportHeight"],[200,64,194,62],[200,65,194,63],[201,6,195,4],[201,10,195,8,"percent"],[201,17,195,15],[201,20,195,18],[201,23,195,21],[201,27,195,25,"viewAreaMode"],[201,39,195,37],[201,42,195,40,"pixels"],[201,48,195,46],[201,51,195,49,"viewportHeight"],[201,65,195,63],[201,68,195,66,"pixels"],[201,74,195,72],[201,77,195,75,"itemLength"],[201,87,195,85],[201,88,195,86],[202,6,196,4],[202,13,196,11,"percent"],[202,20,196,18],[202,24,196,22,"viewablePercentThreshold"],[202,48,196,46],[203,4,197,2],[204,2,198,0],[205,2,199,0],[205,11,199,9,"_getPixelsVisible"],[205,28,199,26,"_getPixelsVisible"],[205,29,199,27,"top"],[205,32,199,30],[205,34,199,32,"bottom"],[205,40,199,38],[205,42,199,40,"viewportHeight"],[205,56,199,54],[205,58,199,56],[206,4,200,2],[206,8,200,6,"visibleHeight"],[206,21,200,19],[206,24,200,22,"Math"],[206,28,200,26],[206,29,200,27,"min"],[206,32,200,30],[206,33,200,31,"bottom"],[206,39,200,37],[206,41,200,39,"viewportHeight"],[206,55,200,53],[206,56,200,54],[206,59,200,57,"Math"],[206,63,200,61],[206,64,200,62,"max"],[206,67,200,65],[206,68,200,66,"top"],[206,71,200,69],[206,73,200,71],[206,74,200,72],[206,75,200,73],[207,4,201,2],[207,11,201,9,"Math"],[207,15,201,13],[207,16,201,14,"max"],[207,19,201,17],[207,20,201,18],[207,21,201,19],[207,23,201,21,"visibleHeight"],[207,36,201,34],[207,37,201,35],[208,2,202,0],[209,2,203,0],[209,11,203,9,"_isEntirelyVisible"],[209,29,203,27,"_isEntirelyVisible"],[209,30,203,28,"top"],[209,33,203,31],[209,35,203,33,"bottom"],[209,41,203,39],[209,43,203,41,"viewportHeight"],[209,57,203,55],[209,59,203,57],[210,4,204,2],[210,11,204,9,"top"],[210,14,204,12],[210,18,204,16],[210,19,204,17],[210,23,204,21,"bottom"],[210,29,204,27],[210,33,204,31,"viewportHeight"],[210,47,204,45],[210,51,204,49,"bottom"],[210,57,204,55],[210,60,204,58,"top"],[210,63,204,61],[211,2,205,0],[212,2,205,1],[212,6,205,1,"_default"],[212,14,205,1],[212,17,205,1,"exports"],[212,24,205,1],[212,25,205,1,"default"],[212,32,205,1],[212,35,206,15,"ViewabilityHelper"],[212,52,206,32],[213,0,206,32],[213,3]],"functionMap":{"names":["<global>","ViewabilityHelper","ViewabilityHelper#constructor","ViewabilityHelper#dispose","ViewabilityHelper#computeViewableItems","ViewabilityHelper#onUpdate","_viewableIndices.every$argument_0","setTimeout$argument_0","ViewabilityHelper#resetViewableIndices","ViewabilityHelper#recordInteraction","ViewabilityHelper#_onUpdateSync","viewableIndicesToCheck.filter$argument_0","viewableIndicesToCheck.map$argument_0","_isViewable","_getPixelsVisible","_isEntirelyVisible"],"mappings":"AAA;AC2B;ECC;GDW;EEK;GFK;EGK;GH6C;EIM;+FCW,oCD;8BEO;OFM;GJQ;EOK;GPE;EQK;GRE;ESC;2DCE,wCD;uDEE;KFG;GT4B;CDC;AaC;CbQ;AcC;CdG;AeC;CfE"}},"type":"js/module"}]}