{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"../../Network/RCTNetworking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":53}}],"key":"IjQZJFiRZ8/W2RgBFjTf2RYlTtU=","exportNames":["*"],"imports":1}},{"name":"../../Utilities/DevLoadingView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":60}}],"key":"hSetIeYo5PcRD3IMHiziq7qAPKI=","exportNames":["*"],"imports":1}},{"name":"../../Utilities/HMRClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":50}}],"key":"dMYf3QJK2QvBY8pRVXYjPVp86Sk=","exportNames":["*"],"imports":1}},{"name":"./getDevServer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":42}}],"key":"WKfBgnKYQ+362ADqmV6Rh2L8YC4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return loadBundleFromServer;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _NetworkRCTNetworking = require(_dependencyMap[1], \"../../Network/RCTNetworking\");\n  var Networking = _interopDefault(_NetworkRCTNetworking);\n  var _UtilitiesDevLoadingView = require(_dependencyMap[2], \"../../Utilities/DevLoadingView\");\n  var DevLoadingView = _interopDefault(_UtilitiesDevLoadingView);\n  var _UtilitiesHMRClient = require(_dependencyMap[3], \"../../Utilities/HMRClient\");\n  var HMRClient = _interopDefault(_UtilitiesHMRClient);\n  var _getDevServer2 = require(_dependencyMap[4], \"./getDevServer\");\n  var getDevServer = _interopDefault(_getDevServer2);\n  var pendingRequests = 0;\n  var cachedPromisesByUrl = new Map();\n  function asyncRequest(url) {\n    var id = null;\n    var responseText = null;\n    var headers = null;\n    var dataListener;\n    var completeListener;\n    var responseListener;\n    var incrementalDataListener;\n    return new Promise((resolve, reject) => {\n      dataListener = Networking.default.addListener('didReceiveNetworkData', _ref => {\n        var _ref2 = (0, _slicedToArray.default)(_ref, 2),\n          requestId = _ref2[0],\n          response = _ref2[1];\n        if (requestId === id) {\n          responseText = response;\n        }\n      });\n      incrementalDataListener = Networking.default.addListener('didReceiveNetworkIncrementalData', _ref3 => {\n        var _ref4 = (0, _slicedToArray.default)(_ref3, 2),\n          requestId = _ref4[0],\n          data = _ref4[1];\n        if (requestId === id) {\n          if (responseText != null) {\n            responseText += data;\n          } else {\n            responseText = data;\n          }\n        }\n      });\n      responseListener = Networking.default.addListener('didReceiveNetworkResponse', _ref5 => {\n        var _ref6 = (0, _slicedToArray.default)(_ref5, 3),\n          requestId = _ref6[0],\n          status = _ref6[1],\n          responseHeaders = _ref6[2];\n        if (requestId === id) {\n          headers = responseHeaders;\n        }\n      });\n      completeListener = Networking.default.addListener('didCompleteNetworkResponse', _ref7 => {\n        var _ref8 = (0, _slicedToArray.default)(_ref7, 2),\n          requestId = _ref8[0],\n          error = _ref8[1];\n        if (requestId === id) {\n          if (error) {\n            reject(error);\n          } else {\n            resolve({\n              body: responseText,\n              headers\n            });\n          }\n        }\n      });\n      Networking.default.sendRequest('GET', 'asyncRequest', url, {}, '', 'text', true, 0, requestId => {\n        id = requestId;\n      }, true);\n    }).finally(() => {\n      dataListener?.remove();\n      completeListener?.remove();\n      responseListener?.remove();\n      incrementalDataListener?.remove();\n    });\n  }\n  function buildUrlForBundle(bundlePathAndQuery) {\n    var _getDevServer = (0, getDevServer.default)(),\n      serverUrl = _getDevServer.url;\n    return serverUrl.replace(/\\/+$/, '') + '/' + bundlePathAndQuery.replace(/^\\/+/, '');\n  }\n  function loadBundleFromServer(bundlePathAndQuery) {\n    var requestUrl = buildUrlForBundle(bundlePathAndQuery);\n    var loadPromise = cachedPromisesByUrl.get(requestUrl);\n    if (loadPromise) {\n      return loadPromise;\n    }\n    DevLoadingView.default.showMessage('Downloading...', 'load');\n    ++pendingRequests;\n    loadPromise = asyncRequest(requestUrl).then(_ref9 => {\n      var body = _ref9.body,\n        headers = _ref9.headers;\n      if (headers['Content-Type'] != null && headers['Content-Type'].indexOf('application/json') >= 0) {\n        throw new Error(JSON.parse(body).message || `Unknown error fetching '${bundlePathAndQuery}'`);\n      }\n      HMRClient.default.registerBundle(requestUrl);\n      if (global.globalEvalWithSourceUrl) {\n        global.globalEvalWithSourceUrl(body, requestUrl);\n      } else {\n        eval(body);\n      }\n    }).catch(e => {\n      cachedPromisesByUrl.delete(requestUrl);\n      throw e;\n    }).finally(() => {\n      if (! --pendingRequests) {\n        DevLoadingView.default.hide();\n      }\n    });\n    cachedPromisesByUrl.set(requestUrl, loadPromise);\n    return loadPromise;\n  }\n});","lineCount":129,"map":[[12,2,106,15,"Object"],[12,8,106,15],[12,9,106,15,"defineProperty"],[12,23,106,15],[12,24,106,15,"exports"],[12,31,106,15],[13,4,106,15,"enumerable"],[13,14,106,15],[14,4,106,15,"get"],[14,7,106,15],[14,18,106,15,"get"],[14,19,106,15],[15,6,106,15],[15,13,106,15,"loadBundleFromServer"],[15,33,106,15],[16,4,106,15],[17,2,106,15],[18,2,154,1],[18,6,154,1,"_babelRuntimeHelpersSlicedToArray"],[18,39,154,1],[18,42,154,1,"require"],[18,49,154,1],[18,50,154,1,"_dependencyMap"],[18,64,154,1],[19,2,154,1],[19,6,154,1,"_slicedToArray"],[19,20,154,1],[19,23,154,1,"_interopDefault"],[19,38,154,1],[19,39,154,1,"_babelRuntimeHelpersSlicedToArray"],[19,72,154,1],[20,2,12,0],[20,6,12,0,"_NetworkRCTNetworking"],[20,27,12,0],[20,30,12,0,"require"],[20,37,12,0],[20,38,12,0,"_dependencyMap"],[20,52,12,0],[21,2,12,0],[21,6,12,0,"Networking"],[21,16,12,0],[21,19,12,0,"_interopDefault"],[21,34,12,0],[21,35,12,0,"_NetworkRCTNetworking"],[21,56,12,0],[22,2,13,0],[22,6,13,0,"_UtilitiesDevLoadingView"],[22,30,13,0],[22,33,13,0,"require"],[22,40,13,0],[22,41,13,0,"_dependencyMap"],[22,55,13,0],[23,2,13,0],[23,6,13,0,"DevLoadingView"],[23,20,13,0],[23,23,13,0,"_interopDefault"],[23,38,13,0],[23,39,13,0,"_UtilitiesDevLoadingView"],[23,63,13,0],[24,2,14,0],[24,6,14,0,"_UtilitiesHMRClient"],[24,25,14,0],[24,28,14,0,"require"],[24,35,14,0],[24,36,14,0,"_dependencyMap"],[24,50,14,0],[25,2,14,0],[25,6,14,0,"HMRClient"],[25,15,14,0],[25,18,14,0,"_interopDefault"],[25,33,14,0],[25,34,14,0,"_UtilitiesHMRClient"],[25,53,14,0],[26,2,15,0],[26,6,15,0,"_getDevServer2"],[26,20,15,0],[26,23,15,0,"require"],[26,30,15,0],[26,31,15,0,"_dependencyMap"],[26,45,15,0],[27,2,15,0],[27,6,15,0,"getDevServer"],[27,18,15,0],[27,21,15,0,"_interopDefault"],[27,36,15,0],[27,37,15,0,"_getDevServer2"],[27,51,15,0],[28,2,19,0],[28,6,19,4,"pendingRequests"],[28,21,19,19],[28,24,19,22],[28,25,19,23],[29,2,21,0],[29,6,21,6,"cachedPromisesByUrl"],[29,25,21,25],[29,28,21,28],[29,32,21,32,"Map"],[29,35,21,35],[29,36,21,59],[29,37,21,60],[30,2,23,0],[30,11,23,9,"asyncRequest"],[30,23,23,21,"asyncRequest"],[30,24,24,2,"url"],[30,27,24,13],[30,29,25,56],[31,4,26,2],[31,8,26,6,"id"],[31,10,26,8],[31,13,26,11],[31,17,26,15],[32,4,27,2],[32,8,27,6,"responseText"],[32,20,27,18],[32,23,27,21],[32,27,27,25],[33,4,28,2],[33,8,28,6,"headers"],[33,15,28,13],[33,18,28,16],[33,22,28,20],[34,4,29,2],[34,8,29,6,"dataListener"],[34,20,29,18],[35,4,30,2],[35,8,30,6,"completeListener"],[35,24,30,22],[36,4,31,2],[36,8,31,6,"responseListener"],[36,24,31,22],[37,4,32,2],[37,8,32,6,"incrementalDataListener"],[37,31,32,29],[38,4,33,2],[38,11,33,9],[38,15,33,13,"Promise"],[38,22,33,20],[38,23,34,4],[38,24,34,5,"resolve"],[38,31,34,12],[38,33,34,14,"reject"],[38,39,34,20],[38,44,34,25],[39,6,35,6,"dataListener"],[39,18,35,18],[39,21,35,21,"Networking"],[39,31,35,31],[39,32,35,31,"default"],[39,39,35,31],[39,40,35,32,"addListener"],[39,51,35,43],[39,52,36,8],[39,75,36,31],[39,77,37,8,"_ref"],[39,81,37,8],[39,85,37,35],[40,8,37,35],[40,12,37,35,"_ref2"],[40,17,37,35],[40,24,37,35,"_slicedToArray"],[40,38,37,35],[40,39,37,35,"default"],[40,46,37,35],[40,48,37,35,"_ref"],[40,52,37,35],[41,10,37,10,"requestId"],[41,19,37,19],[41,22,37,19,"_ref2"],[41,27,37,19],[42,10,37,21,"response"],[42,18,37,29],[42,21,37,29,"_ref2"],[42,26,37,29],[43,8,38,10],[43,12,38,14,"requestId"],[43,21,38,23],[43,26,38,28,"id"],[43,28,38,30],[43,30,38,32],[44,10,39,12,"responseText"],[44,22,39,24],[44,25,39,27,"response"],[44,33,39,35],[45,8,40,10],[46,6,41,8],[46,7,42,6],[46,8,42,7],[47,6,43,6,"incrementalDataListener"],[47,29,43,29],[47,32,43,32,"Networking"],[47,42,43,42],[47,43,43,42,"default"],[47,50,43,42],[47,51,43,43,"addListener"],[47,62,43,54],[47,63,44,8],[47,97,44,42],[47,99,45,8,"_ref3"],[47,104,45,8],[47,108,45,31],[48,8,45,31],[48,12,45,31,"_ref4"],[48,17,45,31],[48,24,45,31,"_slicedToArray"],[48,38,45,31],[48,39,45,31,"default"],[48,46,45,31],[48,48,45,31,"_ref3"],[48,53,45,31],[49,10,45,10,"requestId"],[49,19,45,19],[49,22,45,19,"_ref4"],[49,27,45,19],[50,10,45,21,"data"],[50,14,45,25],[50,17,45,25,"_ref4"],[50,22,45,25],[51,8,46,10],[51,12,46,14,"requestId"],[51,21,46,23],[51,26,46,28,"id"],[51,28,46,30],[51,30,46,32],[52,10,47,12],[52,14,47,16,"responseText"],[52,26,47,28],[52,30,47,32],[52,34,47,36],[52,36,47,38],[53,12,48,14,"responseText"],[53,24,48,26],[53,28,48,30,"data"],[53,32,48,34],[54,10,49,12],[54,11,49,13],[54,17,49,19],[55,12,50,14,"responseText"],[55,24,50,26],[55,27,50,29,"data"],[55,31,50,33],[56,10,51,12],[57,8,52,10],[58,6,53,8],[58,7,54,6],[58,8,54,7],[59,6,55,6,"responseListener"],[59,22,55,22],[59,25,55,25,"Networking"],[59,35,55,35],[59,36,55,35,"default"],[59,43,55,35],[59,44,55,36,"addListener"],[59,55,55,47],[59,56,56,8],[59,83,56,35],[59,85,57,8,"_ref5"],[59,90,57,8],[59,94,57,50],[60,8,57,50],[60,12,57,50,"_ref6"],[60,17,57,50],[60,24,57,50,"_slicedToArray"],[60,38,57,50],[60,39,57,50,"default"],[60,46,57,50],[60,48,57,50,"_ref5"],[60,53,57,50],[61,10,57,10,"requestId"],[61,19,57,19],[61,22,57,19,"_ref6"],[61,27,57,19],[62,10,57,21,"status"],[62,16,57,27],[62,19,57,27,"_ref6"],[62,24,57,27],[63,10,57,29,"responseHeaders"],[63,25,57,44],[63,28,57,44,"_ref6"],[63,33,57,44],[64,8,58,10],[64,12,58,14,"requestId"],[64,21,58,23],[64,26,58,28,"id"],[64,28,58,30],[64,30,58,32],[65,10,59,12,"headers"],[65,17,59,19],[65,20,59,22,"responseHeaders"],[65,35,59,37],[66,8,60,10],[67,6,61,8],[67,7,62,6],[67,8,62,7],[68,6,63,6,"completeListener"],[68,22,63,22],[68,25,63,25,"Networking"],[68,35,63,35],[68,36,63,35,"default"],[68,43,63,35],[68,44,63,36,"addListener"],[68,55,63,47],[68,56,64,8],[68,84,64,36],[68,86,65,8,"_ref7"],[68,91,65,8],[68,95,65,32],[69,8,65,32],[69,12,65,32,"_ref8"],[69,17,65,32],[69,24,65,32,"_slicedToArray"],[69,38,65,32],[69,39,65,32,"default"],[69,46,65,32],[69,48,65,32,"_ref7"],[69,53,65,32],[70,10,65,10,"requestId"],[70,19,65,19],[70,22,65,19,"_ref8"],[70,27,65,19],[71,10,65,21,"error"],[71,15,65,26],[71,18,65,26,"_ref8"],[71,23,65,26],[72,8,66,10],[72,12,66,14,"requestId"],[72,21,66,23],[72,26,66,28,"id"],[72,28,66,30],[72,30,66,32],[73,10,67,12],[73,14,67,16,"error"],[73,19,67,21],[73,21,67,23],[74,12,68,14,"reject"],[74,18,68,20],[74,19,68,21,"error"],[74,24,68,26],[74,25,68,27],[75,10,69,12],[75,11,69,13],[75,17,69,19],[76,12,71,14,"resolve"],[76,19,71,21],[76,20,71,22],[77,14,71,23,"body"],[77,18,71,27],[77,20,71,29,"responseText"],[77,32,71,41],[78,14,71,43,"headers"],[79,12,71,50],[79,13,71,51],[79,14,71,52],[80,10,72,12],[81,8,73,10],[82,6,74,8],[82,7,75,6],[82,8,75,7],[83,6,76,6,"Networking"],[83,16,76,16],[83,17,76,16,"default"],[83,24,76,16],[83,25,76,17,"sendRequest"],[83,36,76,28],[83,37,77,8],[83,42,77,13],[83,44,78,8],[83,58,78,22],[83,60,79,8,"url"],[83,63,79,11],[83,65,80,8],[83,66,80,9],[83,67,80,10],[83,69,81,8],[83,71,81,10],[83,73,82,8],[83,79,82,14],[83,81,83,8],[83,85,83,12],[83,87,84,8],[83,88,84,9],[83,90,85,8,"requestId"],[83,99,85,17],[83,103,85,21],[84,8,86,10,"id"],[84,10,86,12],[84,13,86,15,"requestId"],[84,22,86,24],[85,6,87,8],[85,7,87,9],[85,9,88,8],[85,13,89,6],[85,14,89,7],[86,4,90,4],[86,5,91,2],[86,6,91,3],[86,7,91,4,"finally"],[86,14,91,11],[86,15,91,12],[86,21,91,18],[87,6,92,4,"dataListener"],[87,18,92,16],[87,20,92,18,"remove"],[87,26,92,24],[87,27,92,25],[87,28,92,26],[88,6,93,4,"completeListener"],[88,22,93,20],[88,24,93,22,"remove"],[88,30,93,28],[88,31,93,29],[88,32,93,30],[89,6,94,4,"responseListener"],[89,22,94,20],[89,24,94,22,"remove"],[89,30,94,28],[89,31,94,29],[89,32,94,30],[90,6,95,4,"incrementalDataListener"],[90,29,95,27],[90,31,95,29,"remove"],[90,37,95,35],[90,38,95,36],[90,39,95,37],[91,4,96,2],[91,5,96,3],[91,6,96,4],[92,2,97,0],[93,2,99,0],[93,11,99,9,"buildUrlForBundle"],[93,28,99,26,"buildUrlForBundle"],[93,29,99,27,"bundlePathAndQuery"],[93,47,99,53],[93,49,99,55],[94,4,100,2],[94,8,100,2,"_getDevServer"],[94,21,100,2],[94,24,100,27],[94,28,100,27,"getDevServer"],[94,40,100,39],[94,41,100,39,"default"],[94,48,100,39],[94,50,100,40],[94,51,100,41],[95,6,100,14,"serverUrl"],[95,15,100,23],[95,18,100,23,"_getDevServer"],[95,31,100,23],[95,32,100,9,"url"],[95,35,100,12],[96,4,101,2],[96,11,102,4,"serverUrl"],[96,20,102,13],[96,21,102,14,"replace"],[96,28,102,21],[96,29,102,22],[96,35,102,28],[96,37,102,30],[96,39,102,32],[96,40,102,33],[96,43,102,36],[96,46,102,39],[96,49,102,42,"bundlePathAndQuery"],[96,67,102,60],[96,68,102,61,"replace"],[96,75,102,68],[96,76,102,69],[96,82,102,75],[96,84,102,77],[96,86,102,79],[96,87,102,80],[97,2,104,0],[98,2,106,15],[98,11,106,24,"loadBundleFromServer"],[98,31,106,44,"loadBundleFromServer"],[98,32,107,2,"bundlePathAndQuery"],[98,50,107,28],[98,52,108,17],[99,4,109,2],[99,8,109,8,"requestUrl"],[99,18,109,18],[99,21,109,21,"buildUrlForBundle"],[99,38,109,38],[99,39,109,39,"bundlePathAndQuery"],[99,57,109,57],[99,58,109,58],[100,4,110,2],[100,8,110,6,"loadPromise"],[100,19,110,17],[100,22,110,20,"cachedPromisesByUrl"],[100,41,110,39],[100,42,110,40,"get"],[100,45,110,43],[100,46,110,44,"requestUrl"],[100,56,110,54],[100,57,110,55],[101,4,112,2],[101,8,112,6,"loadPromise"],[101,19,112,17],[101,21,112,19],[102,6,113,4],[102,13,113,11,"loadPromise"],[102,24,113,22],[103,4,114,2],[104,4,115,2,"DevLoadingView"],[104,18,115,16],[104,19,115,16,"default"],[104,26,115,16],[104,27,115,17,"showMessage"],[104,38,115,28],[104,39,115,29],[104,55,115,45],[104,57,115,47],[104,63,115,53],[104,64,115,54],[105,4,116,2],[105,6,116,4,"pendingRequests"],[105,21,116,19],[106,4,118,2,"loadPromise"],[106,15,118,13],[106,18,118,16,"asyncRequest"],[106,30,118,28],[106,31,118,29,"requestUrl"],[106,41,118,39],[106,42,118,40],[106,43,119,5,"then"],[106,47,119,9],[106,48,119,16,"_ref9"],[106,53,119,16],[106,57,119,37],[107,6,119,37],[107,10,119,18,"body"],[107,14,119,22],[107,17,119,22,"_ref9"],[107,22,119,22],[107,23,119,18,"body"],[107,27,119,22],[108,8,119,24,"headers"],[108,15,119,31],[108,18,119,31,"_ref9"],[108,23,119,31],[108,24,119,24,"headers"],[108,31,119,31],[109,6,120,6],[109,10,121,8,"headers"],[109,17,121,15],[109,18,121,16],[109,32,121,30],[109,33,121,31],[109,37,121,35],[109,41,121,39],[109,45,122,8,"headers"],[109,52,122,15],[109,53,122,16],[109,67,122,30],[109,68,122,31],[109,69,122,32,"indexOf"],[109,76,122,39],[109,77,122,40],[109,95,122,58],[109,96,122,59],[109,100,122,63],[109,101,122,64],[109,103,123,8],[110,8,125,8],[110,14,125,14],[110,18,125,18,"Error"],[110,23,125,23],[110,24,126,10,"JSON"],[110,28,126,14],[110,29,126,15,"parse"],[110,34,126,20],[110,35,126,21,"body"],[110,39,126,25],[110,40,126,26],[110,41,126,27,"message"],[110,48,126,34],[110,52,127,12],[110,79,127,39,"bundlePathAndQuery"],[110,97,127,57],[110,100,128,8],[110,101,128,9],[111,6,129,6],[112,6,131,6,"HMRClient"],[112,15,131,15],[112,16,131,15,"default"],[112,23,131,15],[112,24,131,16,"registerBundle"],[112,38,131,30],[112,39,131,31,"requestUrl"],[112,49,131,41],[112,50,131,42],[113,6,135,6],[113,10,135,10,"global"],[113,16,135,16],[113,17,135,17,"globalEvalWithSourceUrl"],[113,40,135,40],[113,42,135,42],[114,8,136,8,"global"],[114,14,136,14],[114,15,136,15,"globalEvalWithSourceUrl"],[114,38,136,38],[114,39,136,39,"body"],[114,43,136,43],[114,45,136,45,"requestUrl"],[114,55,136,55],[114,56,136,56],[115,6,137,6],[115,7,137,7],[115,13,137,13],[116,8,139,8,"eval"],[116,12,139,12],[116,13,139,13,"body"],[116,17,139,17],[116,18,139,18],[117,6,140,6],[118,4,141,4],[118,5,141,5],[118,6,141,6],[118,7,142,5,"catch"],[118,12,142,10],[118,13,142,17,"e"],[118,14,142,18],[118,18,142,22],[119,6,143,6,"cachedPromisesByUrl"],[119,25,143,25],[119,26,143,26,"delete"],[119,32,143,32],[119,33,143,33,"requestUrl"],[119,43,143,43],[119,44,143,44],[120,6,144,6],[120,12,144,12,"e"],[120,13,144,13],[121,4,145,4],[121,5,145,5],[121,6,145,6],[121,7,146,5,"finally"],[121,14,146,12],[121,15,146,13],[121,21,146,19],[122,6,147,6],[122,10,147,10],[122,11,147,11],[122,14,147,13,"pendingRequests"],[122,29,147,28],[122,31,147,30],[123,8,148,8,"DevLoadingView"],[123,22,148,22],[123,23,148,22,"default"],[123,30,148,22],[123,31,148,23,"hide"],[123,35,148,27],[123,36,148,28],[123,37,148,29],[124,6,149,6],[125,4,150,4],[125,5,150,5],[125,6,150,6],[126,4,152,2,"cachedPromisesByUrl"],[126,23,152,21],[126,24,152,22,"set"],[126,27,152,25],[126,28,152,26,"requestUrl"],[126,38,152,36],[126,40,152,38,"loadPromise"],[126,51,152,49],[126,52,152,50],[127,4,153,2],[127,11,153,9,"loadPromise"],[127,22,153,20],[128,2,154,0],[129,0,154,1],[129,3]],"functionMap":{"names":["<global>","asyncRequest","Promise$argument_0","Networking.addListener$argument_1","Networking.sendRequest$argument_8","Promise._finally$argument_0","buildUrlForBundle","loadBundleFromServer","asyncRequest.then$argument_0","asyncRequest.then._catch$argument_0","asyncRequest.then._catch._finally$argument_0"],"mappings":"AAA;ACsB;ICW;QCG;SDI;QCI;SDQ;QCI;SDI;QCI;SDS;QEW;SFE;KDG;YIC;GJK;CDC;AME;CNK;eOE;gBCa;KDsB;iBEC;KFG;aGC;KHI"},"hasCjsExports":false},"type":"js/module"}]}