{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./BatchedBridge","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":22},"end":{"line":15,"column":48}}],"key":"pZMcJWKis6r8zImtFNHls0vi+s0=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":18},"end":{"line":16,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}},{"name":"../Utilities/defineLazyObjectProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":191,"column":4},"end":{"line":191,"column":52}}],"key":"iAPGUMITE/2KH0DH4/f0/lVJtsQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var BatchedBridge = require(_dependencyMap[1], \"./BatchedBridge\").default;\n  var invariant = require(_dependencyMap[2], \"invariant\");\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n    var _config = (0, _slicedToArray.default)(config, 5),\n      moduleName = _config[0],\n      constants = _config[1],\n      methods = _config[2],\n      promiseMethods = _config[3],\n      syncMethods = _config[4];\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n    var module = {};\n    methods && methods.forEach((methodName, methodID) => {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID) || false;\n      var isSync = syncMethods && arrayContains(syncMethods, methodID) || false;\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n    Object.assign(module, constants);\n    if (module.getConstants == null) {\n      module.getConstants = () => constants || Object.freeze({});\n    } else {\n      console.warn(`Unable to define method 'getConstants()' on NativeModule '${moduleName}'. NativeModule '${moduleName}' already has a constant or method called 'getConstants'. Please remove it.`);\n    }\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n    return {\n      name: moduleName,\n      module\n    };\n  }\n  global.__fbGenNativeModule = genModule;\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n    if (type === 'promise') {\n      fn = function promiseMethodWrapper() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var enqueueingFrameError = new Error();\n        return new Promise((resolve, reject) => {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, data => resolve(data), errorData => reject(updateErrorWithErrorData(errorData, enqueueingFrameError)));\n        });\n      };\n    } else {\n      fn = function nonPromiseMethodWrapper() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        var newArgs = args.slice(0, args.length - callbackCount);\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, newArgs, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, newArgs, onFail, onSuccess);\n        }\n      };\n    }\n    fn.type = type;\n    return fn;\n  }\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n  function updateErrorWithErrorData(errorData, error) {\n    return Object.assign(error, errorData || {});\n  }\n  var NativeModules = {};\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n    var defineLazyObjectProperty = require(_dependencyMap[3], \"../Utilities/defineLazyObjectProperty\").default;\n    (bridgeConfig.remoteModuleConfig || []).forEach((config, moduleID) => {\n      var info = genModule(config, moduleID);\n      if (!info) {\n        return;\n      }\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: () => loadModule(info.name, moduleID)\n        });\n      }\n    });\n  }\n  var _default = NativeModules;\n});","lineCount":131,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13],[7,11,11,13,"_interopDefault"],[7,27,11,13,"e"],[7,28,11,13],[8,4,11,13],[8,11,11,13,"e"],[8,12,11,13],[8,16,11,13,"e"],[8,17,11,13],[8,18,11,13,"__esModule"],[8,28,11,13],[8,31,11,13,"e"],[8,32,11,13],[9,6,11,13,"default"],[9,13,11,13],[9,15,11,13,"e"],[10,4,11,13],[11,2,11,13],[12,2,214,0,"Object"],[12,8,214,0],[12,9,214,0,"defineProperty"],[12,23,214,0],[12,24,214,0,"exports"],[12,31,214,0],[13,4,214,0,"enumerable"],[13,14,214,0],[14,4,214,0,"get"],[14,7,214,0],[14,18,214,0,"get"],[14,19,214,0],[15,6,214,0],[15,13,214,0,"_default"],[15,21,214,0],[16,4,214,0],[17,2,214,0],[18,2,214,29],[18,6,214,29,"_babelRuntimeHelpersSlicedToArray"],[18,39,214,29],[18,42,214,29,"require"],[18,49,214,29],[18,50,214,29,"_dependencyMap"],[18,64,214,29],[19,2,214,29],[19,6,214,29,"_slicedToArray"],[19,20,214,29],[19,23,214,29,"_interopDefault"],[19,38,214,29],[19,39,214,29,"_babelRuntimeHelpersSlicedToArray"],[19,72,214,29],[20,2,15,0],[20,6,15,6,"BatchedBridge"],[20,19,15,19],[20,22,15,22,"require"],[20,29,15,29],[20,30,15,29,"_dependencyMap"],[20,44,15,29],[20,66,15,47],[20,67,15,48],[20,68,15,49,"default"],[20,75,15,56],[21,2,16,0],[21,6,16,6,"invariant"],[21,15,16,15],[21,18,16,18,"require"],[21,25,16,25],[21,26,16,25,"_dependencyMap"],[21,40,16,25],[21,56,16,37],[21,57,16,38],[22,2,28,0],[22,11,28,9,"genModule"],[22,20,28,18,"genModule"],[22,21,29,2,"config"],[22,27,29,23],[22,29,30,2,"moduleID"],[22,37,30,18],[22,39,35,2],[23,4,36,2],[23,8,36,6],[23,9,36,7,"config"],[23,15,36,13],[23,17,36,15],[24,6,37,4],[24,13,37,11],[24,17,37,15],[25,4,38,2],[26,4,40,2],[26,8,40,2,"_config"],[26,15,40,2],[26,22,40,2,"_slicedToArray"],[26,36,40,2],[26,37,40,2,"default"],[26,44,40,2],[26,46,40,72,"config"],[26,52,40,78],[27,6,40,9,"moduleName"],[27,16,40,19],[27,19,40,19,"_config"],[27,26,40,19],[28,6,40,21,"constants"],[28,15,40,30],[28,18,40,30,"_config"],[28,25,40,30],[29,6,40,32,"methods"],[29,13,40,39],[29,16,40,39,"_config"],[29,23,40,39],[30,6,40,41,"promiseMethods"],[30,20,40,55],[30,23,40,55,"_config"],[30,30,40,55],[31,6,40,57,"syncMethods"],[31,17,40,68],[31,20,40,68,"_config"],[31,27,40,68],[32,4,41,2,"invariant"],[32,13,41,11],[32,14,42,4],[32,15,42,5,"moduleName"],[32,25,42,15],[32,26,42,16,"startsWith"],[32,36,42,26],[32,37,42,27],[32,42,42,32],[32,43,42,33],[32,47,42,37],[32,48,42,38,"moduleName"],[32,58,42,48],[32,59,42,49,"startsWith"],[32,69,42,59],[32,70,42,60],[32,74,42,64],[32,75,42,65],[32,77,43,4],[32,143,43,70],[32,146,44,6],[32,163,44,23],[32,166,45,6,"moduleName"],[32,176,46,2],[32,177,46,3],[33,4,48,2],[33,8,48,6],[33,9,48,7,"constants"],[33,18,48,16],[33,22,48,20],[33,23,48,21,"methods"],[33,30,48,28],[33,32,48,30],[34,6,50,4],[34,13,50,11],[35,8,50,12,"name"],[35,12,50,16],[35,14,50,18,"moduleName"],[36,6,50,28],[36,7,50,29],[37,4,51,2],[38,4,53,2],[38,8,53,8,"module"],[38,14,53,33],[38,17,53,36],[38,18,53,37],[38,19,53,38],[39,4,54,2,"methods"],[39,11,54,9],[39,15,55,4,"methods"],[39,22,55,11],[39,23,55,12,"forEach"],[39,30,55,19],[39,31,55,20],[39,32,55,21,"methodName"],[39,42,55,31],[39,44,55,33,"methodID"],[39,52,55,41],[39,57,55,46],[40,6,56,6],[40,10,56,12,"isPromise"],[40,19,56,21],[40,22,57,9,"promiseMethods"],[40,36,57,23],[40,40,57,27,"arrayContains"],[40,53,57,40],[40,54,57,41,"promiseMethods"],[40,68,57,55],[40,70,57,57,"methodID"],[40,78,57,65],[40,79,57,66],[40,83,57,71],[40,88,57,76],[41,6,58,6],[41,10,58,12,"isSync"],[41,16,58,18],[41,19,59,9,"syncMethods"],[41,30,59,20],[41,34,59,24,"arrayContains"],[41,47,59,37],[41,48,59,38,"syncMethods"],[41,59,59,49],[41,61,59,51,"methodID"],[41,69,59,59],[41,70,59,60],[41,74,59,65],[41,79,59,70],[42,6,60,6,"invariant"],[42,15,60,15],[42,16,61,8],[42,17,61,9,"isPromise"],[42,26,61,18],[42,30,61,22],[42,31,61,23,"isSync"],[42,37,61,29],[42,39,62,8],[42,96,63,6],[42,97,63,7],[43,6,64,6],[43,10,64,12,"methodType"],[43,20,64,22],[43,23,64,25,"isPromise"],[43,32,64,34],[43,35,64,37],[43,44,64,46],[43,47,64,49,"isSync"],[43,53,64,55],[43,56,64,58],[43,62,64,64],[43,65,64,67],[43,72,64,74],[44,6,65,6,"module"],[44,12,65,12],[44,13,65,13,"methodName"],[44,23,65,23],[44,24,65,24],[44,27,65,27,"genMethod"],[44,36,65,36],[44,37,65,37,"moduleID"],[44,45,65,45],[44,47,65,47,"methodID"],[44,55,65,55],[44,57,65,57,"methodType"],[44,67,65,67],[44,68,65,68],[45,4,66,4],[45,5,66,5],[45,6,66,6],[46,4,68,2,"Object"],[46,10,68,8],[46,11,68,9,"assign"],[46,17,68,15],[46,18,68,16,"module"],[46,24,68,22],[46,26,68,24,"constants"],[46,35,68,33],[46,36,68,34],[47,4,70,2],[47,8,70,6,"module"],[47,14,70,12],[47,15,70,13,"getConstants"],[47,27,70,25],[47,31,70,29],[47,35,70,33],[47,37,70,35],[48,6,71,4,"module"],[48,12,71,10],[48,13,71,11,"getConstants"],[48,25,71,23],[48,28,71,26],[48,34,71,32,"constants"],[48,43,71,41],[48,47,71,45,"Object"],[48,53,71,51],[48,54,71,52,"freeze"],[48,60,71,58],[48,61,71,59],[48,62,71,60],[48,63,71,61],[48,64,71,62],[49,4,72,2],[49,5,72,3],[49,11,72,9],[50,6,73,4,"console"],[50,13,73,11],[50,14,73,12,"warn"],[50,18,73,16],[50,19,74,6],[50,80,74,67,"moduleName"],[50,90,74,77],[50,110,74,97,"moduleName"],[50,120,74,107],[50,197,75,4],[50,198,75,5],[51,4,76,2],[52,4,78,2],[52,8,78,6,"__DEV__"],[52,15,78,13],[52,17,78,15],[53,6,79,4,"BatchedBridge"],[53,19,79,17],[53,20,79,18,"createDebugLookup"],[53,37,79,35],[53,38,79,36,"moduleID"],[53,46,79,44],[53,48,79,46,"moduleName"],[53,58,79,56],[53,60,79,58,"methods"],[53,67,79,65],[53,68,79,66],[54,4,80,2],[55,4,82,2],[55,11,82,9],[56,6,82,10,"name"],[56,10,82,14],[56,12,82,16,"moduleName"],[56,22,82,26],[57,6,82,28,"module"],[58,4,82,34],[58,5,82,35],[59,2,83,0],[60,2,86,0,"global"],[60,8,86,6],[60,9,86,7,"__fbGenNativeModule"],[60,28,86,26],[60,31,86,29,"genModule"],[60,40,86,38],[61,2,88,0],[61,11,88,9,"loadModule"],[61,21,88,19,"loadModule"],[61,22,88,20,"name"],[61,26,88,32],[61,28,88,34,"moduleID"],[61,36,88,50],[61,38,88,60],[62,4,89,2,"invariant"],[62,13,89,11],[62,14,90,4,"global"],[62,20,90,10],[62,21,90,11,"nativeRequireModuleConfig"],[62,46,90,36],[62,48,91,4],[62,110,92,2],[62,111,92,3],[63,4,93,2],[63,8,93,8,"config"],[63,14,93,14],[63,17,93,17,"global"],[63,23,93,23],[63,24,93,24,"nativeRequireModuleConfig"],[63,49,93,49],[63,50,93,50,"name"],[63,54,93,54],[63,55,93,55],[64,4,94,2],[64,8,94,8,"info"],[64,12,94,12],[64,15,94,15,"genModule"],[64,24,94,24],[64,25,94,25,"config"],[64,31,94,31],[64,33,94,33,"moduleID"],[64,41,94,41],[64,42,94,42],[65,4,95,2],[65,11,95,9,"info"],[65,15,95,13],[65,19,95,17,"info"],[65,23,95,21],[65,24,95,22,"module"],[65,30,95,28],[66,2,96,0],[67,2,98,0],[67,11,98,9,"genMethod"],[67,20,98,18,"genMethod"],[67,21,98,19,"moduleID"],[67,29,98,35],[67,31,98,37,"methodID"],[67,39,98,53],[67,41,98,55,"type"],[67,45,98,71],[67,47,98,73],[68,4,99,2],[68,8,99,6,"fn"],[68,10,99,8],[68,13,99,11],[68,17,99,15],[69,4,100,2],[69,8,100,6,"type"],[69,12,100,10],[69,17,100,15],[69,26,100,24],[69,28,100,26],[70,6,101,4,"fn"],[70,8,101,6],[70,11,101,9],[70,20,101,18,"promiseMethodWrapper"],[70,40,101,38,"promiseMethodWrapper"],[70,41,101,38],[70,43,101,62],[71,8,101,62],[71,17,101,62,"_len"],[71,21,101,62],[71,24,101,62,"arguments"],[71,33,101,62],[71,34,101,62,"length"],[71,40,101,62],[71,42,101,42,"args"],[71,46,101,46],[71,53,101,46,"Array"],[71,58,101,46],[71,59,101,46,"_len"],[71,63,101,46],[71,66,101,46,"_key"],[71,70,101,46],[71,76,101,46,"_key"],[71,80,101,46],[71,83,101,46,"_len"],[71,87,101,46],[71,89,101,46,"_key"],[71,93,101,46],[72,10,101,42,"args"],[72,14,101,46],[72,15,101,46,"_key"],[72,19,101,46],[72,23,101,46,"arguments"],[72,32,101,46],[72,33,101,46,"_key"],[72,37,101,46],[73,8,101,46],[74,8,106,6],[74,12,106,12,"enqueueingFrameError"],[74,32,106,47],[74,35,106,50],[74,39,106,54,"Error"],[74,44,106,59],[74,45,106,60],[74,46,106,61],[75,8,107,6],[75,15,107,13],[75,19,107,17,"Promise"],[75,26,107,24],[75,27,107,25],[75,28,107,26,"resolve"],[75,35,107,33],[75,37,107,35,"reject"],[75,43,107,41],[75,48,107,46],[76,10,108,8,"BatchedBridge"],[76,23,108,21],[76,24,108,22,"enqueueNativeCall"],[76,41,108,39],[76,42,109,10,"moduleID"],[76,50,109,18],[76,52,110,10,"methodID"],[76,60,110,18],[76,62,111,10,"args"],[76,66,111,14],[76,68,112,10,"data"],[76,72,112,14],[76,76,112,18,"resolve"],[76,83,112,25],[76,84,112,26,"data"],[76,88,112,30],[76,89,112,31],[76,91,113,10,"errorData"],[76,100,113,19],[76,104,114,12,"reject"],[76,110,114,18],[76,111,115,14,"updateErrorWithErrorData"],[76,135,115,38],[76,136,116,17,"errorData"],[76,145,116,26],[76,147,117,16,"enqueueingFrameError"],[76,167,118,14],[76,168,119,12],[76,169,120,8],[76,170,120,9],[77,8,121,6],[77,9,121,7],[77,10,121,8],[78,6,122,4],[78,7,122,5],[79,4,123,2],[79,5,123,3],[79,11,123,9],[80,6,124,4,"fn"],[80,8,124,6],[80,11,124,9],[80,20,124,18,"nonPromiseMethodWrapper"],[80,43,124,41,"nonPromiseMethodWrapper"],[80,44,124,41],[80,46,124,65],[81,8,124,65],[81,17,124,65,"_len2"],[81,22,124,65],[81,25,124,65,"arguments"],[81,34,124,65],[81,35,124,65,"length"],[81,41,124,65],[81,43,124,45,"args"],[81,47,124,49],[81,54,124,49,"Array"],[81,59,124,49],[81,60,124,49,"_len2"],[81,65,124,49],[81,68,124,49,"_key2"],[81,73,124,49],[81,79,124,49,"_key2"],[81,84,124,49],[81,87,124,49,"_len2"],[81,92,124,49],[81,94,124,49,"_key2"],[81,99,124,49],[82,10,124,45,"args"],[82,14,124,49],[82,15,124,49,"_key2"],[82,20,124,49],[82,24,124,49,"arguments"],[82,33,124,49],[82,34,124,49,"_key2"],[82,39,124,49],[83,8,124,49],[84,8,125,6],[84,12,125,12,"lastArg"],[84,19,125,19],[84,22,125,22,"args"],[84,26,125,26],[84,27,125,27,"length"],[84,33,125,33],[84,36,125,36],[84,37,125,37],[84,40,125,40,"args"],[84,44,125,44],[84,45,125,45,"args"],[84,49,125,49],[84,50,125,50,"length"],[84,56,125,56],[84,59,125,59],[84,60,125,60],[84,61,125,61],[84,64,125,64],[84,68,125,68],[85,8,126,6],[85,12,126,12,"secondLastArg"],[85,25,126,25],[85,28,126,28,"args"],[85,32,126,32],[85,33,126,33,"length"],[85,39,126,39],[85,42,126,42],[85,43,126,43],[85,46,126,46,"args"],[85,50,126,50],[85,51,126,51,"args"],[85,55,126,55],[85,56,126,56,"length"],[85,62,126,62],[85,65,126,65],[85,66,126,66],[85,67,126,67],[85,70,126,70],[85,74,126,74],[86,8,127,6],[86,12,127,12,"hasSuccessCallback"],[86,30,127,30],[86,33,127,33],[86,40,127,40,"lastArg"],[86,47,127,47],[86,52,127,52],[86,62,127,62],[87,8,128,6],[87,12,128,12,"hasErrorCallback"],[87,28,128,28],[87,31,128,31],[87,38,128,38,"secondLastArg"],[87,51,128,51],[87,56,128,56],[87,66,128,66],[88,8,129,6,"hasErrorCallback"],[88,24,129,22],[88,28,130,8,"invariant"],[88,37,130,17],[88,38,131,10,"hasSuccessCallback"],[88,56,131,28],[88,58,132,10],[88,112,133,8],[88,113,133,9],[89,8,135,6],[89,12,135,12,"onSuccess"],[89,21,135,39],[89,24,135,42,"hasSuccessCallback"],[89,42,135,60],[89,45,135,63,"lastArg"],[89,52,135,70],[89,55,135,73],[89,59,135,77],[90,8,137,6],[90,12,137,12,"onFail"],[90,18,137,36],[90,21,137,39,"hasErrorCallback"],[90,37,137,55],[90,40,137,58,"secondLastArg"],[90,53,137,71],[90,56,137,74],[90,60,137,78],[91,8,139,6],[91,12,139,12,"callbackCount"],[91,25,139,25],[91,28,139,28,"hasSuccessCallback"],[91,46,139,46],[91,49,139,49,"hasErrorCallback"],[91,65,139,65],[92,8,140,6],[92,12,140,12,"newArgs"],[92,19,140,19],[92,22,140,22,"args"],[92,26,140,26],[92,27,140,27,"slice"],[92,32,140,32],[92,33,140,33],[92,34,140,34],[92,36,140,36,"args"],[92,40,140,40],[92,41,140,41,"length"],[92,47,140,47],[92,50,140,50,"callbackCount"],[92,63,140,63],[92,64,140,64],[93,8,141,6],[93,12,141,10,"type"],[93,16,141,14],[93,21,141,19],[93,27,141,25],[93,29,141,27],[94,10,142,8],[94,17,142,15,"BatchedBridge"],[94,30,142,28],[94,31,142,29,"callNativeSyncHook"],[94,49,142,47],[94,50,143,10,"moduleID"],[94,58,143,18],[94,60,144,10,"methodID"],[94,68,144,18],[94,70,145,10,"newArgs"],[94,77,145,17],[94,79,146,10,"onFail"],[94,85,146,16],[94,87,147,10,"onSuccess"],[94,96,148,8],[94,97,148,9],[95,8,149,6],[95,9,149,7],[95,15,149,13],[96,10,150,8,"BatchedBridge"],[96,23,150,21],[96,24,150,22,"enqueueNativeCall"],[96,41,150,39],[96,42,151,10,"moduleID"],[96,50,151,18],[96,52,152,10,"methodID"],[96,60,152,18],[96,62,153,10,"newArgs"],[96,69,153,17],[96,71,154,10,"onFail"],[96,77,154,16],[96,79,155,10,"onSuccess"],[96,88,156,8],[96,89,156,9],[97,8,157,6],[98,6,158,4],[98,7,158,5],[99,4,159,2],[100,4,161,2,"fn"],[100,6,161,4],[100,7,161,5,"type"],[100,11,161,9],[100,14,161,12,"type"],[100,18,161,16],[101,4,162,2],[101,11,162,9,"fn"],[101,13,162,11],[102,2,163,0],[103,2,165,0],[103,11,165,9,"arrayContains"],[103,24,165,22,"arrayContains"],[103,25,165,26,"array"],[103,30,165,50],[103,32,165,52,"value"],[103,37,165,60],[103,39,165,71],[104,4,166,2],[104,11,166,9,"array"],[104,16,166,14],[104,17,166,15,"indexOf"],[104,24,166,22],[104,25,166,23,"value"],[104,30,166,28],[104,31,166,29],[104,36,166,34],[104,37,166,35],[104,38,166,36],[105,2,167,0],[106,2,169,0],[106,11,169,9,"updateErrorWithErrorData"],[106,35,169,33,"updateErrorWithErrorData"],[106,36,170,2,"errorData"],[106,45,170,35],[106,47,171,2,"error"],[106,52,171,22],[106,54,172,17],[107,4,176,2],[107,11,176,9,"Object"],[107,17,176,15],[107,18,176,16,"assign"],[107,24,176,22],[107,25,176,23,"error"],[107,30,176,28],[107,32,176,30,"errorData"],[107,41,176,39],[107,45,176,43],[107,46,176,44],[107,47,176,45],[107,48,176,46],[108,2,177,0],[109,2,180,0],[109,6,180,4,"NativeModules"],[109,19,180,51],[109,22,180,54],[109,23,180,55],[109,24,180,56],[110,2,181,0],[110,6,181,4,"global"],[110,12,181,10],[110,13,181,11,"nativeModuleProxy"],[110,30,181,28],[110,32,181,30],[111,4,182,2,"NativeModules"],[111,17,182,15],[111,20,182,18,"global"],[111,26,182,24],[111,27,182,25,"nativeModuleProxy"],[111,44,182,42],[112,2,183,0],[112,3,183,1],[112,9,183,7],[113,4,184,2],[113,8,184,8,"bridgeConfig"],[113,20,184,20],[113,23,184,23,"global"],[113,29,184,29],[113,30,184,30,"__fbBatchedBridgeConfig"],[113,53,184,53],[114,4,185,2,"invariant"],[114,13,185,11],[114,14,186,4,"bridgeConfig"],[114,26,186,16],[114,28,187,4],[114,94,188,2],[114,95,188,3],[115,4,190,2],[115,8,190,8,"defineLazyObjectProperty"],[115,32,190,32],[115,35,191,4,"require"],[115,42,191,11],[115,43,191,11,"_dependencyMap"],[115,57,191,11],[115,101,191,51],[115,102,191,52],[115,103,191,53,"default"],[115,110,191,60],[116,4,192,2],[116,5,192,3,"bridgeConfig"],[116,17,192,15],[116,18,192,16,"remoteModuleConfig"],[116,36,192,34],[116,40,192,38],[116,42,192,40],[116,44,192,42,"forEach"],[116,51,192,49],[116,52,193,4],[116,53,193,5,"config"],[116,59,193,25],[116,61,193,27,"moduleID"],[116,69,193,43],[116,74,193,48],[117,6,196,6],[117,10,196,12,"info"],[117,14,196,16],[117,17,196,19,"genModule"],[117,26,196,28],[117,27,196,29,"config"],[117,33,196,35],[117,35,196,37,"moduleID"],[117,43,196,45],[117,44,196,46],[118,6,197,6],[118,10,197,10],[118,11,197,11,"info"],[118,15,197,15],[118,17,197,17],[119,8,198,8],[120,6,199,6],[121,6,201,6],[121,10,201,10,"info"],[121,14,201,14],[121,15,201,15,"module"],[121,21,201,21],[121,23,201,23],[122,8,202,8,"NativeModules"],[122,21,202,21],[122,22,202,22,"info"],[122,26,202,26],[122,27,202,27,"name"],[122,31,202,31],[122,32,202,32],[122,35,202,35,"info"],[122,39,202,39],[122,40,202,40,"module"],[122,46,202,46],[123,6,203,6],[123,7,203,7],[123,13,205,11],[124,8,206,8,"defineLazyObjectProperty"],[124,32,206,32],[124,33,206,33,"NativeModules"],[124,46,206,46],[124,48,206,48,"info"],[124,52,206,52],[124,53,206,53,"name"],[124,57,206,57],[124,59,206,59],[125,10,207,10,"get"],[125,13,207,13],[125,15,207,15,"get"],[125,16,207,15],[125,21,207,21,"loadModule"],[125,31,207,31],[125,32,207,32,"info"],[125,36,207,36],[125,37,207,37,"name"],[125,41,207,41],[125,43,207,43,"moduleID"],[125,51,207,51],[126,8,208,8],[126,9,208,9],[126,10,208,10],[127,6,209,6],[128,4,210,4],[128,5,211,2],[128,6,211,3],[129,2,212,0],[130,2,214,0],[130,6,214,0,"_default"],[130,14,214,0],[130,17,214,15,"NativeModules"],[130,30,214,28],[131,0,214,29],[131,3]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","promiseMethodWrapper","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","nonPromiseMethodWrapper","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC2B;oBC2B;KDW;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCM;UCK,qBD;UEC;aFM;ODE;KDC;SKE;KLkC;CLK;AWE;CXE;AYE;CZQ;IagB;eCc,qCD;KbG"},"hasCjsExports":false},"type":"js/module"}]}