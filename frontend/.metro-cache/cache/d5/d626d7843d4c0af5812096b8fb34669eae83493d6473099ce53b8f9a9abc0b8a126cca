{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":190},"end":{"line":5,"column":52,"index":225}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":28,"index":255},"end":{"line":6,"column":56,"index":283}}],"key":"lFSV8MloDpR3EnWyvloF9Uq7qFY=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":305},"end":{"line":7,"column":42,"index":327}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"]}},{"name":"./getReactNavigationConfig","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":35,"index":364},"end":{"line":8,"column":72,"index":401}}],"key":"vHLl09Fo1cot8Q7f7epxLLVamLs=","exportNames":["*"]}},{"name":"./getRoutesRedirects","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":29,"index":432},"end":{"line":9,"column":60,"index":463}}],"key":"E6xJvmMQ8Tg9oU66GfkFALUrP4w=","exportNames":["*"]}},{"name":"./link/linking","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":483},"end":{"line":10,"column":43,"index":508}}],"key":"I1McWHLUyOzTMAaygW/PL/mjMmY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getNavigationConfig = getNavigationConfig;\n  exports.getLinkingConfig = getLinkingConfig;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const expo_modules_core_1 = require(_dependencyMap[1], \"expo-modules-core\");\n  const constants_1 = require(_dependencyMap[2], \"./constants\");\n  const getReactNavigationConfig_1 = require(_dependencyMap[3], \"./getReactNavigationConfig\");\n  const getRoutesRedirects_1 = require(_dependencyMap[4], \"./getRoutesRedirects\");\n  const linking_1 = require(_dependencyMap[5], \"./link/linking\");\n  function getNavigationConfig(routes, metaOnly = true) {\n    return {\n      screens: {\n        [constants_1.INTERNAL_SLOT_NAME]: {\n          path: '',\n          ...(0, getReactNavigationConfig_1.getReactNavigationConfig)(routes, metaOnly)\n        }\n      }\n    };\n  }\n  function getLinkingConfig(routes, context, getRouteInfo, {\n    metaOnly = true,\n    serverUrl,\n    redirects\n  } = {}) {\n    // Returning `undefined` / `null from `getInitialURL` are valid values, so we need to track if it's been called.\n    let hasCachedInitialUrl = false;\n    let initialUrl;\n    const nativeLinkingKey = context.keys().find(key => key.match(/^\\.\\/\\+native-intent\\.[tj]sx?$/));\n    const nativeLinking = nativeLinkingKey ? context(nativeLinkingKey) : undefined;\n    const config = getNavigationConfig(routes, metaOnly);\n    return {\n      prefixes: [],\n      config,\n      // A custom getInitialURL is used on native to ensure the app always starts at\n      // the root path if it's launched from something other than a deep link.\n      // This helps keep the native functionality working like the web functionality.\n      // For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n      // then `/index` would be used on web and `/settings` would be used on native.\n      getInitialURL() {\n        // Expo Router calls `getInitialURL` twice, which may confuse the user if they provide a custom `getInitialURL`.\n        // Therefor we memoize the result.\n        if (!hasCachedInitialUrl) {\n          if (expo_modules_core_1.Platform.OS === 'web') {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n          } else {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n            if (typeof initialUrl === 'string') {\n              initialUrl = (0, getRoutesRedirects_1.applyRedirects)(initialUrl, redirects);\n              if (initialUrl && typeof nativeLinking?.redirectSystemPath === 'function') {\n                initialUrl = nativeLinking.redirectSystemPath({\n                  path: initialUrl,\n                  initial: true\n                });\n              }\n            } else if (initialUrl) {\n              initialUrl = initialUrl.then(url => {\n                url = (0, getRoutesRedirects_1.applyRedirects)(url, redirects);\n                if (url && typeof nativeLinking?.redirectSystemPath === 'function') {\n                  return nativeLinking.redirectSystemPath({\n                    path: url,\n                    initial: true\n                  });\n                }\n                return url;\n              });\n            }\n          }\n          hasCachedInitialUrl = true;\n        }\n        return initialUrl;\n      },\n      subscribe: (0, linking_1.subscribe)(nativeLinking, redirects),\n      getStateFromPath: (path, options) => {\n        return (0, linking_1.getStateFromPath)(path, options, getRouteInfo().segments);\n      },\n      getPathFromState(state, options) {\n        return (0, linking_1.getPathFromState)(state, {\n          ...config,\n          ...options,\n          screens: config.screens ?? options?.screens ?? {}\n        }) ?? '/';\n      },\n      // Add all functions to ensure the types never need to fallback.\n      // This is a convenience for usage in the package.\n      getActionFromState: native_1.getActionFromState\n    };\n  }\n});","lineCount":93,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getNavigationConfig"],[7,29,3,27],[7,32,3,30,"getNavigationConfig"],[7,51,3,49],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"getLinkingConfig"],[8,26,4,24],[8,29,4,27,"getLinkingConfig"],[8,45,4,43],[9,2,5,0],[9,8,5,6,"native_1"],[9,16,5,14],[9,19,5,17,"require"],[9,26,5,24],[9,27,5,24,"_dependencyMap"],[9,41,5,24],[9,72,5,51],[9,73,5,52],[10,2,6,0],[10,8,6,6,"expo_modules_core_1"],[10,27,6,25],[10,30,6,28,"require"],[10,37,6,35],[10,38,6,35,"_dependencyMap"],[10,52,6,35],[10,76,6,55],[10,77,6,56],[11,2,7,0],[11,8,7,6,"constants_1"],[11,19,7,17],[11,22,7,20,"require"],[11,29,7,27],[11,30,7,27,"_dependencyMap"],[11,44,7,27],[11,62,7,41],[11,63,7,42],[12,2,8,0],[12,8,8,6,"getReactNavigationConfig_1"],[12,34,8,32],[12,37,8,35,"require"],[12,44,8,42],[12,45,8,42,"_dependencyMap"],[12,59,8,42],[12,92,8,71],[12,93,8,72],[13,2,9,0],[13,8,9,6,"getRoutesRedirects_1"],[13,28,9,26],[13,31,9,29,"require"],[13,38,9,36],[13,39,9,36,"_dependencyMap"],[13,53,9,36],[13,80,9,59],[13,81,9,60],[14,2,10,0],[14,8,10,6,"linking_1"],[14,17,10,15],[14,20,10,18,"require"],[14,27,10,25],[14,28,10,25,"_dependencyMap"],[14,42,10,25],[14,63,10,42],[14,64,10,43],[15,2,11,0],[15,11,11,9,"getNavigationConfig"],[15,30,11,28,"getNavigationConfig"],[15,31,11,29,"routes"],[15,37,11,35],[15,39,11,37,"metaOnly"],[15,47,11,45],[15,50,11,48],[15,54,11,52],[15,56,11,54],[16,4,12,4],[16,11,12,11],[17,6,13,8,"screens"],[17,13,13,15],[17,15,13,17],[18,8,14,12],[18,9,14,13,"constants_1"],[18,20,14,24],[18,21,14,25,"INTERNAL_SLOT_NAME"],[18,39,14,43],[18,42,14,46],[19,10,15,16,"path"],[19,14,15,20],[19,16,15,22],[19,18,15,24],[20,10,16,16],[20,13,16,19],[20,14,16,20],[20,15,16,21],[20,17,16,23,"getReactNavigationConfig_1"],[20,43,16,49],[20,44,16,50,"getReactNavigationConfig"],[20,68,16,74],[20,70,16,76,"routes"],[20,76,16,82],[20,78,16,84,"metaOnly"],[20,86,16,92],[21,8,17,12],[22,6,18,8],[23,4,19,4],[23,5,19,5],[24,2,20,0],[25,2,21,0],[25,11,21,9,"getLinkingConfig"],[25,27,21,25,"getLinkingConfig"],[25,28,21,26,"routes"],[25,34,21,32],[25,36,21,34,"context"],[25,43,21,41],[25,45,21,43,"getRouteInfo"],[25,57,21,55],[25,59,21,57],[26,4,21,59,"metaOnly"],[26,12,21,67],[26,15,21,70],[26,19,21,74],[27,4,21,76,"serverUrl"],[27,13,21,85],[28,4,21,87,"redirects"],[29,2,21,97],[29,3,21,98],[29,6,21,101],[29,7,21,102],[29,8,21,103],[29,10,21,105],[30,4,22,4],[31,4,23,4],[31,8,23,8,"hasCachedInitialUrl"],[31,27,23,27],[31,30,23,30],[31,35,23,35],[32,4,24,4],[32,8,24,8,"initialUrl"],[32,18,24,18],[33,4,25,4],[33,10,25,10,"nativeLinkingKey"],[33,26,25,26],[33,29,25,29,"context"],[33,36,25,36],[33,37,26,9,"keys"],[33,41,26,13],[33,42,26,14],[33,43,26,15],[33,44,27,9,"find"],[33,48,27,13],[33,49,27,15,"key"],[33,52,27,18],[33,56,27,23,"key"],[33,59,27,26],[33,60,27,27,"match"],[33,65,27,32],[33,66,27,33],[33,98,27,65],[33,99,27,66],[33,100,27,67],[34,4,28,4],[34,10,28,10,"nativeLinking"],[34,23,28,23],[34,26,28,26,"nativeLinkingKey"],[34,42,28,42],[34,45,29,10,"context"],[34,52,29,17],[34,53,29,18,"nativeLinkingKey"],[34,69,29,34],[34,70,29,35],[34,73,30,10,"undefined"],[34,82,30,19],[35,4,31,4],[35,10,31,10,"config"],[35,16,31,16],[35,19,31,19,"getNavigationConfig"],[35,38,31,38],[35,39,31,39,"routes"],[35,45,31,45],[35,47,31,47,"metaOnly"],[35,55,31,55],[35,56,31,56],[36,4,32,4],[36,11,32,11],[37,6,33,8,"prefixes"],[37,14,33,16],[37,16,33,18],[37,18,33,20],[38,6,34,8,"config"],[38,12,34,14],[39,6,35,8],[40,6,36,8],[41,6,37,8],[42,6,38,8],[43,6,39,8],[44,6,40,8,"getInitialURL"],[44,19,40,21,"getInitialURL"],[44,20,40,21],[44,22,40,24],[45,8,41,12],[46,8,42,12],[47,8,43,12],[47,12,43,16],[47,13,43,17,"hasCachedInitialUrl"],[47,32,43,36],[47,34,43,38],[48,10,44,16],[48,14,44,20,"expo_modules_core_1"],[48,33,44,39],[48,34,44,40,"Platform"],[48,42,44,48],[48,43,44,49,"OS"],[48,45,44,51],[48,50,44,56],[48,55,44,61],[48,57,44,63],[49,12,45,20,"initialUrl"],[49,22,45,30],[49,25,45,33,"serverUrl"],[49,34,45,42],[49,38,45,46],[49,39,45,47],[49,40,45,48],[49,42,45,50,"linking_1"],[49,51,45,59],[49,52,45,60,"getInitialURL"],[49,65,45,73],[49,67,45,75],[49,68,45,76],[50,10,46,16],[50,11,46,17],[50,17,47,21],[51,12,48,20,"initialUrl"],[51,22,48,30],[51,25,48,33,"serverUrl"],[51,34,48,42],[51,38,48,46],[51,39,48,47],[51,40,48,48],[51,42,48,50,"linking_1"],[51,51,48,59],[51,52,48,60,"getInitialURL"],[51,65,48,73],[51,67,48,75],[51,68,48,76],[52,12,49,20],[52,16,49,24],[52,23,49,31,"initialUrl"],[52,33,49,41],[52,38,49,46],[52,46,49,54],[52,48,49,56],[53,14,50,24,"initialUrl"],[53,24,50,34],[53,27,50,37],[53,28,50,38],[53,29,50,39],[53,31,50,41,"getRoutesRedirects_1"],[53,51,50,61],[53,52,50,62,"applyRedirects"],[53,66,50,76],[53,68,50,78,"initialUrl"],[53,78,50,88],[53,80,50,90,"redirects"],[53,89,50,99],[53,90,50,100],[54,14,51,24],[54,18,51,28,"initialUrl"],[54,28,51,38],[54,32,51,42],[54,39,51,49,"nativeLinking"],[54,52,51,62],[54,54,51,64,"redirectSystemPath"],[54,72,51,82],[54,77,51,87],[54,87,51,97],[54,89,51,99],[55,16,52,28,"initialUrl"],[55,26,52,38],[55,29,52,41,"nativeLinking"],[55,42,52,54],[55,43,52,55,"redirectSystemPath"],[55,61,52,73],[55,62,52,74],[56,18,52,76,"path"],[56,22,52,80],[56,24,52,82,"initialUrl"],[56,34,52,92],[57,18,52,94,"initial"],[57,25,52,101],[57,27,52,103],[58,16,52,108],[58,17,52,109],[58,18,52,110],[59,14,53,24],[60,12,54,20],[60,13,54,21],[60,19,55,25],[60,23,55,29,"initialUrl"],[60,33,55,39],[60,35,55,41],[61,14,56,24,"initialUrl"],[61,24,56,34],[61,27,56,37,"initialUrl"],[61,37,56,47],[61,38,56,48,"then"],[61,42,56,52],[61,43,56,54,"url"],[61,46,56,57],[61,50,56,62],[62,16,57,28,"url"],[62,19,57,31],[62,22,57,34],[62,23,57,35],[62,24,57,36],[62,26,57,38,"getRoutesRedirects_1"],[62,46,57,58],[62,47,57,59,"applyRedirects"],[62,61,57,73],[62,63,57,75,"url"],[62,66,57,78],[62,68,57,80,"redirects"],[62,77,57,89],[62,78,57,90],[63,16,58,28],[63,20,58,32,"url"],[63,23,58,35],[63,27,58,39],[63,34,58,46,"nativeLinking"],[63,47,58,59],[63,49,58,61,"redirectSystemPath"],[63,67,58,79],[63,72,58,84],[63,82,58,94],[63,84,58,96],[64,18,59,32],[64,25,59,39,"nativeLinking"],[64,38,59,52],[64,39,59,53,"redirectSystemPath"],[64,57,59,71],[64,58,59,72],[65,20,59,74,"path"],[65,24,59,78],[65,26,59,80,"url"],[65,29,59,83],[66,20,59,85,"initial"],[66,27,59,92],[66,29,59,94],[67,18,59,99],[67,19,59,100],[67,20,59,101],[68,16,60,28],[69,16,61,28],[69,23,61,35,"url"],[69,26,61,38],[70,14,62,24],[70,15,62,25],[70,16,62,26],[71,12,63,20],[72,10,64,16],[73,10,65,16,"hasCachedInitialUrl"],[73,29,65,35],[73,32,65,38],[73,36,65,42],[74,8,66,12],[75,8,67,12],[75,15,67,19,"initialUrl"],[75,25,67,29],[76,6,68,8],[76,7,68,9],[77,6,69,8,"subscribe"],[77,15,69,17],[77,17,69,19],[77,18,69,20],[77,19,69,21],[77,21,69,23,"linking_1"],[77,30,69,32],[77,31,69,33,"subscribe"],[77,40,69,42],[77,42,69,44,"nativeLinking"],[77,55,69,57],[77,57,69,59,"redirects"],[77,66,69,68],[77,67,69,69],[78,6,70,8,"getStateFromPath"],[78,22,70,24],[78,24,70,26,"getStateFromPath"],[78,25,70,27,"path"],[78,29,70,31],[78,31,70,33,"options"],[78,38,70,40],[78,43,70,45],[79,8,71,12],[79,15,71,19],[79,16,71,20],[79,17,71,21],[79,19,71,23,"linking_1"],[79,28,71,32],[79,29,71,33,"getStateFromPath"],[79,45,71,49],[79,47,71,51,"path"],[79,51,71,55],[79,53,71,57,"options"],[79,60,71,64],[79,62,71,66,"getRouteInfo"],[79,74,71,78],[79,75,71,79],[79,76,71,80],[79,77,71,81,"segments"],[79,85,71,89],[79,86,71,90],[80,6,72,8],[80,7,72,9],[81,6,73,8,"getPathFromState"],[81,22,73,24,"getPathFromState"],[81,23,73,25,"state"],[81,28,73,30],[81,30,73,32,"options"],[81,37,73,39],[81,39,73,41],[82,8,74,12],[82,15,74,20],[82,16,74,21],[82,17,74,22],[82,19,74,24,"linking_1"],[82,28,74,33],[82,29,74,34,"getPathFromState"],[82,45,74,50],[82,47,74,52,"state"],[82,52,74,57],[82,54,74,59],[83,10,75,16],[83,13,75,19,"config"],[83,19,75,25],[84,10,76,16],[84,13,76,19,"options"],[84,20,76,26],[85,10,77,16,"screens"],[85,17,77,23],[85,19,77,25,"config"],[85,25,77,31],[85,26,77,32,"screens"],[85,33,77,39],[85,37,77,43,"options"],[85,44,77,50],[85,46,77,52,"screens"],[85,53,77,59],[85,57,77,63],[85,58,77,64],[86,8,78,12],[86,9,78,13],[86,10,78,14],[86,14,78,18],[86,17,78,21],[87,6,79,8],[87,7,79,9],[88,6,80,8],[89,6,81,8],[90,6,82,8,"getActionFromState"],[90,24,82,26],[90,26,82,28,"native_1"],[90,34,82,36],[90,35,82,37,"getActionFromState"],[91,4,83,4],[91,5,83,5],[92,2,84,0],[93,0,84,1],[93,3]],"functionMap":{"names":["<global>","getNavigationConfig","getLinkingConfig","context.keys.find$argument_0","getInitialURL","initialUrl.then$argument_0","getStateFromPath","getPathFromState"],"mappings":"AAA;ACU;CDS;AEC;cCM,oDD;QEa;qDCgB;yBDM;SFM;0BIE;SJE;QKC;SLM;CFK"}},"type":"js/module"}]}