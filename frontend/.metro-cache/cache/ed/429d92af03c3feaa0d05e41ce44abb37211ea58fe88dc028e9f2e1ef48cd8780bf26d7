{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createStringifySafeWithLimits = createStringifySafeWithLimits;\n  exports.default = void 0;\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  /**\n   * Tries to stringify with JSON.stringify and toString, but catches exceptions\n   * (e.g. from circular objects) and always returns a string and never throws.\n   */\n  function createStringifySafeWithLimits(limits) {\n    var _limits$maxDepth = limits.maxDepth,\n      maxDepth = _limits$maxDepth === void 0 ? Number.POSITIVE_INFINITY : _limits$maxDepth,\n      _limits$maxStringLimi = limits.maxStringLimit,\n      maxStringLimit = _limits$maxStringLimi === void 0 ? Number.POSITIVE_INFINITY : _limits$maxStringLimi,\n      _limits$maxArrayLimit = limits.maxArrayLimit,\n      maxArrayLimit = _limits$maxArrayLimit === void 0 ? Number.POSITIVE_INFINITY : _limits$maxArrayLimit,\n      _limits$maxObjectKeys = limits.maxObjectKeysLimit,\n      maxObjectKeysLimit = _limits$maxObjectKeys === void 0 ? Number.POSITIVE_INFINITY : _limits$maxObjectKeys;\n    var stack = [];\n    function replacer(_key, value) {\n      while (stack.length && this !== stack[0]) {\n        stack.shift();\n      }\n      if (typeof value === 'string') {\n        var truncatedString = '...(truncated)...';\n        if (value.length > maxStringLimit + truncatedString.length) {\n          return value.substring(0, maxStringLimit) + truncatedString;\n        }\n        return value;\n      }\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      var retval = value;\n      if (Array.isArray(value)) {\n        if (stack.length >= maxDepth) {\n          retval = `[ ... array with ${value.length} values ... ]`;\n        } else if (value.length > maxArrayLimit) {\n          retval = value.slice(0, maxArrayLimit).concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);\n        }\n      } else {\n        // Add refinement after Array.isArray call.\n        if (typeof value !== 'object') {\n          throw new Error('This was already found earlier');\n        }\n        var keys = Object.keys(value);\n        if (stack.length >= maxDepth) {\n          retval = `{ ... object with ${keys.length} keys ... }`;\n        } else if (keys.length > maxObjectKeysLimit) {\n          // Return a sample of the keys.\n          retval = {};\n          for (var k of keys.slice(0, maxObjectKeysLimit)) {\n            retval[k] = value[k];\n          }\n          var truncatedKey = '...(truncated keys)...';\n          retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n        }\n      }\n      stack.unshift(retval);\n      return retval;\n    }\n    return function stringifySafe(arg) {\n      if (arg === undefined) {\n        return 'undefined';\n      } else if (arg === null) {\n        return 'null';\n      } else if (typeof arg === 'function') {\n        try {\n          return arg.toString();\n        } catch {\n          return '[function unknown]';\n        }\n      } else if (arg instanceof Error) {\n        return arg.name + ': ' + arg.message;\n      } else {\n        // Perform a try catch, just in case the object has a circular\n        // reference or stringify throws for some other reason.\n        try {\n          var ret = JSON.stringify(arg, replacer);\n          if (ret === undefined) {\n            return '[\"' + typeof arg + '\" failed to stringify]';\n          }\n          return ret;\n        } catch {\n          if (typeof arg.toString === 'function') {\n            try {\n              // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.\n              return arg.toString();\n            } catch {}\n          }\n        }\n      }\n      return '[\"' + typeof arg + '\" failed to stringify]';\n    };\n  }\n  var stringifySafe = createStringifySafeWithLimits({\n    maxDepth: 10,\n    maxStringLimit: 100,\n    maxArrayLimit: 50,\n    maxObjectKeysLimit: 50\n  });\n  var _default = exports.default = stringifySafe;\n});","lineCount":112,"map":[[7,2,1,0],[8,0,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[15,2,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,2,13,7],[19,11,13,16,"createStringifySafeWithLimits"],[19,40,13,45,"createStringifySafeWithLimits"],[19,41,13,46,"limits"],[19,47,18,1],[19,49,18,25],[20,4,19,2],[20,8,19,2,"_limits$maxDepth"],[20,24,19,2],[20,27,24,6,"limits"],[20,33,24,12],[20,34,20,4,"maxDepth"],[20,42,20,12],[21,6,20,4,"maxDepth"],[21,14,20,12],[21,17,20,12,"_limits$maxDepth"],[21,33,20,12],[21,47,20,15,"Number"],[21,53,20,21],[21,54,20,22,"POSITIVE_INFINITY"],[21,71,20,39],[21,74,20,39,"_limits$maxDepth"],[21,90,20,39],[22,6,20,39,"_limits$maxStringLimi"],[22,27,20,39],[22,30,24,6,"limits"],[22,36,24,12],[22,37,21,4,"maxStringLimit"],[22,51,21,18],[23,6,21,4,"maxStringLimit"],[23,20,21,18],[23,23,21,18,"_limits$maxStringLimi"],[23,44,21,18],[23,58,21,21,"Number"],[23,64,21,27],[23,65,21,28,"POSITIVE_INFINITY"],[23,82,21,45],[23,85,21,45,"_limits$maxStringLimi"],[23,106,21,45],[24,6,21,45,"_limits$maxArrayLimit"],[24,27,21,45],[24,30,24,6,"limits"],[24,36,24,12],[24,37,22,4,"maxArrayLimit"],[24,50,22,17],[25,6,22,4,"maxArrayLimit"],[25,19,22,17],[25,22,22,17,"_limits$maxArrayLimit"],[25,43,22,17],[25,57,22,20,"Number"],[25,63,22,26],[25,64,22,27,"POSITIVE_INFINITY"],[25,81,22,44],[25,84,22,44,"_limits$maxArrayLimit"],[25,105,22,44],[26,6,22,44,"_limits$maxObjectKeys"],[26,27,22,44],[26,30,24,6,"limits"],[26,36,24,12],[26,37,23,4,"maxObjectKeysLimit"],[26,55,23,22],[27,6,23,4,"maxObjectKeysLimit"],[27,24,23,22],[27,27,23,22,"_limits$maxObjectKeys"],[27,48,23,22],[27,62,23,25,"Number"],[27,68,23,31],[27,69,23,32,"POSITIVE_INFINITY"],[27,86,23,49],[27,89,23,49,"_limits$maxObjectKeys"],[27,110,23,49],[28,4,25,2],[28,8,25,8,"stack"],[28,13,25,20],[28,16,25,23],[28,18,25,25],[29,4,26,2],[29,13,26,11,"replacer"],[29,21,26,19,"replacer"],[29,22,26,35,"_key"],[29,26,26,47],[29,28,26,49,"value"],[29,33,26,59],[29,35,26,66],[30,6,27,4],[30,13,27,11,"stack"],[30,18,27,16],[30,19,27,17,"length"],[30,25,27,23],[30,29,27,27],[30,33,27,31],[30,38,27,36,"stack"],[30,43,27,41],[30,44,27,42],[30,45,27,43],[30,46,27,44],[30,48,27,46],[31,8,28,6,"stack"],[31,13,28,11],[31,14,28,12,"shift"],[31,19,28,17],[31,20,28,18],[31,21,28,19],[32,6,29,4],[33,6,31,4],[33,10,31,8],[33,17,31,15,"value"],[33,22,31,20],[33,27,31,25],[33,35,31,33],[33,37,31,35],[34,8,32,6],[34,12,32,12,"truncatedString"],[34,27,32,27],[34,30,32,30],[34,49,32,49],[35,8,33,6],[35,12,33,10,"value"],[35,17,33,15],[35,18,33,16,"length"],[35,24,33,22],[35,27,33,25,"maxStringLimit"],[35,41,33,39],[35,44,33,42,"truncatedString"],[35,59,33,57],[35,60,33,58,"length"],[35,66,33,64],[35,68,33,66],[36,10,34,8],[36,17,34,15,"value"],[36,22,34,20],[36,23,34,21,"substring"],[36,32,34,30],[36,33,34,31],[36,34,34,32],[36,36,34,34,"maxStringLimit"],[36,50,34,48],[36,51,34,49],[36,54,34,52,"truncatedString"],[36,69,34,67],[37,8,35,6],[38,8,36,6],[38,15,36,13,"value"],[38,20,36,18],[39,6,37,4],[40,6,38,4],[40,10,38,8],[40,17,38,15,"value"],[40,22,38,20],[40,27,38,25],[40,35,38,33],[40,39,38,37,"value"],[40,44,38,42],[40,49,38,47],[40,53,38,51],[40,55,38,53],[41,8,39,6],[41,15,39,13,"value"],[41,20,39,18],[42,6,40,4],[43,6,42,4],[43,10,42,8,"retval"],[43,16,42,14],[43,19,42,17,"value"],[43,24,42,22],[44,6,43,4],[44,10,43,8,"Array"],[44,15,43,13],[44,16,43,14,"isArray"],[44,23,43,21],[44,24,43,22,"value"],[44,29,43,27],[44,30,43,28],[44,32,43,30],[45,8,44,6],[45,12,44,10,"stack"],[45,17,44,15],[45,18,44,16,"length"],[45,24,44,22],[45,28,44,26,"maxDepth"],[45,36,44,34],[45,38,44,36],[46,10,45,8,"retval"],[46,16,45,14],[46,19,45,17],[46,39,45,37,"value"],[46,44,45,42],[46,45,45,43,"length"],[46,51,45,49],[46,66,45,64],[47,8,46,6],[47,9,46,7],[47,15,46,13],[47,19,46,17,"value"],[47,24,46,22],[47,25,46,23,"length"],[47,31,46,29],[47,34,46,32,"maxArrayLimit"],[47,47,46,45],[47,49,46,47],[48,10,47,8,"retval"],[48,16,47,14],[48,19,47,17,"value"],[48,24,47,22],[48,25,48,11,"slice"],[48,30,48,16],[48,31,48,17],[48,32,48,18],[48,34,48,20,"maxArrayLimit"],[48,47,48,33],[48,48,48,34],[48,49,49,11,"concat"],[48,55,49,17],[48,56,49,18],[48,57,49,19],[48,70,49,32,"value"],[48,75,49,37],[48,76,49,38,"length"],[48,82,49,44],[48,85,49,47,"maxArrayLimit"],[48,98,49,60],[48,121,49,83],[48,122,49,84],[48,123,49,85],[49,8,50,6],[50,6,51,4],[50,7,51,5],[50,13,51,11],[51,8,52,6],[52,8,53,6],[52,12,53,10],[52,19,53,17,"value"],[52,24,53,22],[52,29,53,27],[52,37,53,35],[52,39,53,37],[53,10,54,8],[53,16,54,14],[53,20,54,18,"Error"],[53,25,54,23],[53,26,54,24],[53,58,54,56],[53,59,54,57],[54,8,55,6],[55,8,56,6],[55,12,56,12,"keys"],[55,16,56,16],[55,19,56,19,"Object"],[55,25,56,25],[55,26,56,26,"keys"],[55,30,56,30],[55,31,56,31,"value"],[55,36,56,36],[55,37,56,37],[56,8,57,6],[56,12,57,10,"stack"],[56,17,57,15],[56,18,57,16,"length"],[56,24,57,22],[56,28,57,26,"maxDepth"],[56,36,57,34],[56,38,57,36],[57,10,58,8,"retval"],[57,16,58,14],[57,19,58,17],[57,40,58,38,"keys"],[57,44,58,42],[57,45,58,43,"length"],[57,51,58,49],[57,64,58,62],[58,8,59,6],[58,9,59,7],[58,15,59,13],[58,19,59,17,"keys"],[58,23,59,21],[58,24,59,22,"length"],[58,30,59,28],[58,33,59,31,"maxObjectKeysLimit"],[58,51,59,49],[58,53,59,51],[59,10,60,8],[60,10,61,8,"retval"],[60,16,61,14],[60,19,61,17],[60,20,61,18],[60,21,61,19],[61,10,62,8],[61,15,62,13],[61,19,62,19,"k"],[61,20,62,20],[61,24,62,24,"keys"],[61,28,62,28],[61,29,62,29,"slice"],[61,34,62,34],[61,35,62,35],[61,36,62,36],[61,38,62,38,"maxObjectKeysLimit"],[61,56,62,56],[61,57,62,57],[61,59,62,59],[62,12,63,10,"retval"],[62,18,63,16],[62,19,63,17,"k"],[62,20,63,18],[62,21,63,19],[62,24,63,22,"value"],[62,29,63,27],[62,30,63,28,"k"],[62,31,63,29],[62,32,63,30],[63,10,64,8],[64,10,65,8],[64,14,65,14,"truncatedKey"],[64,26,65,26],[64,29,65,29],[64,53,65,53],[65,10,66,8,"retval"],[65,16,66,14],[65,17,66,15,"truncatedKey"],[65,29,66,27],[65,30,66,28],[65,33,66,31,"keys"],[65,37,66,35],[65,38,66,36,"length"],[65,44,66,42],[65,47,66,45,"maxObjectKeysLimit"],[65,65,66,63],[66,8,67,6],[67,6,68,4],[68,6,69,4,"stack"],[68,11,69,9],[68,12,69,10,"unshift"],[68,19,69,17],[68,20,69,18,"retval"],[68,26,69,24],[68,27,69,25],[69,6,70,4],[69,13,70,11,"retval"],[69,19,70,17],[70,4,71,2],[71,4,73,2],[71,11,73,9],[71,20,73,18,"stringifySafe"],[71,33,73,31,"stringifySafe"],[71,34,73,32,"arg"],[71,37,73,40],[71,39,73,50],[72,6,74,4],[72,10,74,8,"arg"],[72,13,74,11],[72,18,74,16,"undefined"],[72,27,74,25],[72,29,74,27],[73,8,75,6],[73,15,75,13],[73,26,75,24],[74,6,76,4],[74,7,76,5],[74,13,76,11],[74,17,76,15,"arg"],[74,20,76,18],[74,25,76,23],[74,29,76,27],[74,31,76,29],[75,8,77,6],[75,15,77,13],[75,21,77,19],[76,6,78,4],[76,7,78,5],[76,13,78,11],[76,17,78,15],[76,24,78,22,"arg"],[76,27,78,25],[76,32,78,30],[76,42,78,40],[76,44,78,42],[77,8,79,6],[77,12,79,10],[78,10,80,8],[78,17,80,15,"arg"],[78,20,80,18],[78,21,80,19,"toString"],[78,29,80,27],[78,30,80,28],[78,31,80,29],[79,8,81,6],[79,9,81,7],[79,10,81,8],[79,16,81,14],[80,10,82,8],[80,17,82,15],[80,37,82,35],[81,8,83,6],[82,6,84,4],[82,7,84,5],[82,13,84,11],[82,17,84,15,"arg"],[82,20,84,18],[82,32,84,30,"Error"],[82,37,84,35],[82,39,84,37],[83,8,85,6],[83,15,85,13,"arg"],[83,18,85,16],[83,19,85,17,"name"],[83,23,85,21],[83,26,85,24],[83,30,85,28],[83,33,85,31,"arg"],[83,36,85,34],[83,37,85,35,"message"],[83,44,85,42],[84,6,86,4],[84,7,86,5],[84,13,86,11],[85,8,87,6],[86,8,88,6],[87,8,89,6],[87,12,89,10],[88,10,90,8],[88,14,90,14,"ret"],[88,17,90,17],[88,20,90,20,"JSON"],[88,24,90,24],[88,25,90,25,"stringify"],[88,34,90,34],[88,35,90,35,"arg"],[88,38,90,38],[88,40,90,40,"replacer"],[88,48,90,48],[88,49,90,49],[89,10,91,8],[89,14,91,12,"ret"],[89,17,91,15],[89,22,91,20,"undefined"],[89,31,91,29],[89,33,91,31],[90,12,92,10],[90,19,92,17],[90,23,92,21],[90,26,92,24],[90,33,92,31,"arg"],[90,36,92,34],[90,39,92,37],[90,63,92,61],[91,10,93,8],[92,10,94,8],[92,17,94,15,"ret"],[92,20,94,18],[93,8,95,6],[93,9,95,7],[93,10,95,8],[93,16,95,14],[94,10,96,8],[94,14,96,12],[94,21,96,19,"arg"],[94,24,96,22],[94,25,96,23,"toString"],[94,33,96,31],[94,38,96,36],[94,48,96,46],[94,50,96,48],[95,12,97,10],[95,16,97,14],[96,14,98,12],[97,14,99,12],[97,21,99,19,"arg"],[97,24,99,22],[97,25,99,23,"toString"],[97,33,99,31],[97,34,99,32],[97,35,99,33],[98,12,100,10],[98,13,100,11],[98,14,100,12],[98,20,100,18],[98,21,100,19],[99,10,101,8],[100,8,102,6],[101,6,103,4],[102,6,104,4],[102,13,104,11],[102,17,104,15],[102,20,104,18],[102,27,104,25,"arg"],[102,30,104,28],[102,33,104,31],[102,57,104,55],[103,4,105,2],[103,5,105,3],[104,2,106,0],[105,2,108,0],[105,6,108,6,"stringifySafe"],[105,19,108,19],[105,22,108,22,"createStringifySafeWithLimits"],[105,51,108,51],[105,52,108,52],[106,4,109,2,"maxDepth"],[106,12,109,10],[106,14,109,12],[106,16,109,14],[107,4,110,2,"maxStringLimit"],[107,18,110,16],[107,20,110,18],[107,23,110,21],[108,4,111,2,"maxArrayLimit"],[108,17,111,15],[108,19,111,17],[108,21,111,19],[109,4,112,2,"maxObjectKeysLimit"],[109,22,112,20],[109,24,112,22],[110,2,113,0],[110,3,113,1],[110,4,113,2],[111,2,113,3],[111,6,113,3,"_default"],[111,14,113,3],[111,17,113,3,"exports"],[111,24,113,3],[111,25,113,3,"default"],[111,32,113,3],[111,35,115,15,"stringifySafe"],[111,48,115,28],[112,0,115,28],[112,3]],"functionMap":{"names":["<global>","createStringifySafeWithLimits","replacer","stringifySafe"],"mappings":"AAA;OCY;ECa;GD6C;SEE;GFgC;CDC"}},"type":"js/module"}]}