{"dependencies":[{"name":"../../exports/UIManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":235},"end":{"line":11,"column":48,"index":283}}],"key":"T/vWYjlvrKciCNPz1Vnh/vAWL08=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _exportsUIManager = require(_dependencyMap[0], \"../../exports/UIManager\");\n  var UIManager = _interopDefault(_exportsUIManager);\n  /**\n   * Copyright (c) Nicolas Gallagher.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  /**\n   * This class is responsible for coordinating the \"focused\"\n   * state for TextInputs. All calls relating to the keyboard\n   * should be funneled through here\n   */\n  var TextInputState = {\n    /**\n     * Internal state\n     */\n    _currentlyFocusedNode: null,\n    /**\n     * Returns the ID of the currently focused text field, if one exists\n     * If no text field is focused it returns null\n     */\n    currentlyFocusedField() {\n      if (document.activeElement !== this._currentlyFocusedNode) {\n        this._currentlyFocusedNode = null;\n      }\n      return this._currentlyFocusedNode;\n    },\n    /**\n     * @param {Object} TextInputID id of the text field to focus\n     * Focuses the specified text field\n     * noop if the text field was already focused\n     */\n    focusTextInput(textFieldNode) {\n      if (textFieldNode !== null) {\n        this._currentlyFocusedNode = textFieldNode;\n        if (document.activeElement !== textFieldNode) {\n          UIManager.default.focus(textFieldNode);\n        }\n      }\n    },\n    /**\n     * @param {Object} textFieldNode id of the text field to focus\n     * Unfocuses the specified text field\n     * noop if it wasn't focused\n     */\n    blurTextInput(textFieldNode) {\n      if (textFieldNode !== null) {\n        this._currentlyFocusedNode = null;\n        if (document.activeElement === textFieldNode) {\n          UIManager.default.blur(textFieldNode);\n        }\n      }\n    }\n  };\n  var _default = TextInputState;\n});","lineCount":78,"map":[[12,2,60,0,"Object"],[12,8,60,0],[12,9,60,0,"defineProperty"],[12,23,60,0],[12,24,60,0,"exports"],[12,31,60,0],[13,4,60,0,"enumerable"],[13,14,60,0],[14,4,60,0,"get"],[14,7,60,0],[14,18,60,0,"get"],[14,19,60,0],[15,6,60,0],[15,13,60,0,"_default"],[15,21,60,0],[16,4,60,0],[17,2,60,0],[18,2,11,0],[18,6,11,0,"_exportsUIManager"],[18,23,11,0],[18,26,11,0,"require"],[18,33,11,0],[18,34,11,0,"_dependencyMap"],[18,48,11,0],[19,2,11,0],[19,6,11,0,"UIManager"],[19,15,11,0],[19,18,11,0,"_interopDefault"],[19,33,11,0],[19,34,11,0,"_exportsUIManager"],[19,51,11,0],[20,2,1,0],[21,0,2,0],[22,0,3,0],[23,0,4,0],[24,0,5,0],[25,0,6,0],[26,0,7,0],[27,0,8,0],[28,0,9,0],[30,2,13,0],[31,0,14,0],[32,0,15,0],[33,0,16,0],[34,0,17,0],[35,2,18,0],[35,6,18,4,"TextInputState"],[35,20,18,18],[35,23,18,21],[36,4,19,2],[37,0,20,0],[38,0,21,0],[39,4,22,2,"_currentlyFocusedNode"],[39,25,22,23],[39,27,22,25],[39,31,22,29],[40,4,23,2],[41,0,24,0],[42,0,25,0],[43,0,26,0],[44,4,27,2,"currentlyFocusedField"],[44,25,27,23,"currentlyFocusedField"],[44,26,27,23],[44,28,27,26],[45,6,28,4],[45,10,28,8,"document"],[45,18,28,16],[45,19,28,17,"activeElement"],[45,32,28,30],[45,37,28,35],[45,41,28,39],[45,42,28,40,"_currentlyFocusedNode"],[45,63,28,61],[45,65,28,63],[46,8,29,6],[46,12,29,10],[46,13,29,11,"_currentlyFocusedNode"],[46,34,29,32],[46,37,29,35],[46,41,29,39],[47,6,30,4],[48,6,31,4],[48,13,31,11],[48,17,31,15],[48,18,31,16,"_currentlyFocusedNode"],[48,39,31,37],[49,4,32,2],[49,5,32,3],[50,4,33,2],[51,0,34,0],[52,0,35,0],[53,0,36,0],[54,0,37,0],[55,4,38,2,"focusTextInput"],[55,18,38,16,"focusTextInput"],[55,19,38,17,"textFieldNode"],[55,32,38,30],[55,34,38,32],[56,6,39,4],[56,10,39,8,"textFieldNode"],[56,23,39,21],[56,28,39,26],[56,32,39,30],[56,34,39,32],[57,8,40,6],[57,12,40,10],[57,13,40,11,"_currentlyFocusedNode"],[57,34,40,32],[57,37,40,35,"textFieldNode"],[57,50,40,48],[58,8,41,6],[58,12,41,10,"document"],[58,20,41,18],[58,21,41,19,"activeElement"],[58,34,41,32],[58,39,41,37,"textFieldNode"],[58,52,41,50],[58,54,41,52],[59,10,42,8,"UIManager"],[59,19,42,17],[59,20,42,17,"default"],[59,27,42,17],[59,28,42,18,"focus"],[59,33,42,23],[59,34,42,24,"textFieldNode"],[59,47,42,37],[59,48,42,38],[60,8,43,6],[61,6,44,4],[62,4,45,2],[62,5,45,3],[63,4,46,2],[64,0,47,0],[65,0,48,0],[66,0,49,0],[67,0,50,0],[68,4,51,2,"blurTextInput"],[68,17,51,15,"blurTextInput"],[68,18,51,16,"textFieldNode"],[68,31,51,29],[68,33,51,31],[69,6,52,4],[69,10,52,8,"textFieldNode"],[69,23,52,21],[69,28,52,26],[69,32,52,30],[69,34,52,32],[70,8,53,6],[70,12,53,10],[70,13,53,11,"_currentlyFocusedNode"],[70,34,53,32],[70,37,53,35],[70,41,53,39],[71,8,54,6],[71,12,54,10,"document"],[71,20,54,18],[71,21,54,19,"activeElement"],[71,34,54,32],[71,39,54,37,"textFieldNode"],[71,52,54,50],[71,54,54,52],[72,10,55,8,"UIManager"],[72,19,55,17],[72,20,55,17,"default"],[72,27,55,17],[72,28,55,18,"blur"],[72,32,55,22],[72,33,55,23,"textFieldNode"],[72,46,55,36],[72,47,55,37],[73,8,56,6],[74,6,57,4],[75,4,58,2],[76,2,59,0],[76,3,59,1],[77,2,60,0],[77,6,60,0,"_default"],[77,14,60,0],[77,17,60,15,"TextInputState"],[77,31,60,29],[78,0,60,30],[78,3]],"functionMap":{"names":["<global>","TextInputState.currentlyFocusedField","TextInputState.focusTextInput","TextInputState.blurTextInput"],"mappings":"AAA;EC0B;GDK;EEM;GFO;EGM;GHO"},"hasCjsExports":false},"type":"js/module"}]}