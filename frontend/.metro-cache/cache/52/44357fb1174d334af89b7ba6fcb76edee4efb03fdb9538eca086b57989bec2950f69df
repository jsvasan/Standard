{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":61}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var LogBoxSymbolication = _interopRequireWildcard(require(_dependencyMap[3], \"./LogBoxSymbolication\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function convertComponentStateToStack(componentStack) {\n    return componentStack.map(frame => ({\n      column: frame?.location?.column,\n      file: frame.fileName,\n      lineNumber: frame?.location?.row,\n      methodName: frame.content,\n      collapse: false\n    }));\n  }\n  function convertStackToComponentStack(stack) {\n    var componentStack = [];\n    for (var i = 0; i < stack.length; i++) {\n      var frame = stack[i];\n      if (frame.lineNumber != null && frame.column != null) {\n        componentStack.push({\n          fileName: frame?.file || '',\n          location: {\n            row: frame.lineNumber,\n            column: frame.column\n          },\n          content: frame.methodName,\n          collapse: false\n        });\n      }\n    }\n    return componentStack;\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck2.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.symbolicatedComponentStack = {\n        error: null,\n        componentStack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.componentStackType = data.componentStackType || 'legacy';\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.extraData = data.extraData;\n      this.count = 1;\n      this.onNotificationPress = data.onNotificationPress;\n    }\n    return (0, _createClass2.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"getAvailableComponentStack\",\n      value: function getAvailableComponentStack() {\n        if (this.componentStackType === 'legacy') {\n          return this.componentStack;\n        }\n        return this.symbolicatedComponentStack.status === 'COMPLETE' ? this.symbolicatedComponentStack.componentStack : this.componentStack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        var retry = false;\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          retry = true;\n        }\n        if (this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(convertComponentStateToStack(this.componentStack));\n          retry = true;\n        }\n        if (retry) {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        if (this.symbolicated.status !== 'PENDING' && this.symbolicated.status !== 'COMPLETE') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(data => {\n            this.updateStatus(null, data?.stack, data?.codeFrame, callback);\n          }, error => {\n            this.updateStatus(error, null, null, callback);\n          });\n        }\n        if (this.componentStack != null && this.componentStackType === 'stack' && this.symbolicatedComponentStack.status !== 'PENDING' && this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          this.updateComponentStackStatus(null, null, null, callback);\n          var componentStackFrames = convertComponentStateToStack(this.componentStack);\n          LogBoxSymbolication.symbolicate(componentStackFrames, []).then(data => {\n            this.updateComponentStackStatus(null, convertStackToComponentStack(data.stack), data?.codeFrame, callback);\n          }, error => {\n            this.updateComponentStackStatus(error, null, null, callback);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n        if (error != null) {\n          this.symbolicated = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }, {\n      key: \"updateComponentStackStatus\",\n      value: function updateComponentStackStatus(error, componentStack, codeFrame, callback) {\n        var lastStatus = this.symbolicatedComponentStack.status;\n        if (error != null) {\n          this.symbolicatedComponentStack = {\n            error,\n            componentStack: null,\n            status: 'FAILED'\n          };\n        } else if (componentStack != null) {\n          if (codeFrame) {\n            this.componentCodeFrame = codeFrame;\n          }\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicatedComponentStack.status) {\n          callback(this.symbolicatedComponentStack.status);\n        }\n      }\n    }]);\n  }();\n  var _default = exports.default = LogBoxLog;\n});","lineCount":189,"map":[[9,2,20,0],[9,6,20,0,"LogBoxSymbolication"],[9,25,20,0],[9,28,20,0,"_interopRequireWildcard"],[9,51,20,0],[9,52,20,0,"require"],[9,59,20,0],[9,60,20,0,"_dependencyMap"],[9,74,20,0],[10,2,20,61],[10,11,20,61,"_interopRequireWildcard"],[10,35,20,61,"e"],[10,36,20,61],[10,38,20,61,"t"],[10,39,20,61],[10,68,20,61,"WeakMap"],[10,75,20,61],[10,81,20,61,"r"],[10,82,20,61],[10,89,20,61,"WeakMap"],[10,96,20,61],[10,100,20,61,"n"],[10,101,20,61],[10,108,20,61,"WeakMap"],[10,115,20,61],[10,127,20,61,"_interopRequireWildcard"],[10,150,20,61],[10,162,20,61,"_interopRequireWildcard"],[10,163,20,61,"e"],[10,164,20,61],[10,166,20,61,"t"],[10,167,20,61],[10,176,20,61,"t"],[10,177,20,61],[10,181,20,61,"e"],[10,182,20,61],[10,186,20,61,"e"],[10,187,20,61],[10,188,20,61,"__esModule"],[10,198,20,61],[10,207,20,61,"e"],[10,208,20,61],[10,214,20,61,"o"],[10,215,20,61],[10,217,20,61,"i"],[10,218,20,61],[10,220,20,61,"f"],[10,221,20,61],[10,226,20,61,"__proto__"],[10,235,20,61],[10,243,20,61,"default"],[10,250,20,61],[10,252,20,61,"e"],[10,253,20,61],[10,270,20,61,"e"],[10,271,20,61],[10,294,20,61,"e"],[10,295,20,61],[10,320,20,61,"e"],[10,321,20,61],[10,330,20,61,"f"],[10,331,20,61],[10,337,20,61,"o"],[10,338,20,61],[10,341,20,61,"t"],[10,342,20,61],[10,345,20,61,"n"],[10,346,20,61],[10,349,20,61,"r"],[10,350,20,61],[10,358,20,61,"o"],[10,359,20,61],[10,360,20,61,"has"],[10,363,20,61],[10,364,20,61,"e"],[10,365,20,61],[10,375,20,61,"o"],[10,376,20,61],[10,377,20,61,"get"],[10,380,20,61],[10,381,20,61,"e"],[10,382,20,61],[10,385,20,61,"o"],[10,386,20,61],[10,387,20,61,"set"],[10,390,20,61],[10,391,20,61,"e"],[10,392,20,61],[10,394,20,61,"f"],[10,395,20,61],[10,409,20,61,"_t"],[10,411,20,61],[10,415,20,61,"e"],[10,416,20,61],[10,432,20,61,"_t"],[10,434,20,61],[10,441,20,61,"hasOwnProperty"],[10,455,20,61],[10,456,20,61,"call"],[10,460,20,61],[10,461,20,61,"e"],[10,462,20,61],[10,464,20,61,"_t"],[10,466,20,61],[10,473,20,61,"i"],[10,474,20,61],[10,478,20,61,"o"],[10,479,20,61],[10,482,20,61,"Object"],[10,488,20,61],[10,489,20,61,"defineProperty"],[10,503,20,61],[10,508,20,61,"Object"],[10,514,20,61],[10,515,20,61,"getOwnPropertyDescriptor"],[10,539,20,61],[10,540,20,61,"e"],[10,541,20,61],[10,543,20,61,"_t"],[10,545,20,61],[10,552,20,61,"i"],[10,553,20,61],[10,554,20,61,"get"],[10,557,20,61],[10,561,20,61,"i"],[10,562,20,61],[10,563,20,61,"set"],[10,566,20,61],[10,570,20,61,"o"],[10,571,20,61],[10,572,20,61,"f"],[10,573,20,61],[10,575,20,61,"_t"],[10,577,20,61],[10,579,20,61,"i"],[10,580,20,61],[10,584,20,61,"f"],[10,585,20,61],[10,586,20,61,"_t"],[10,588,20,61],[10,592,20,61,"e"],[10,593,20,61],[10,594,20,61,"_t"],[10,596,20,61],[10,607,20,61,"f"],[10,608,20,61],[10,613,20,61,"e"],[10,614,20,61],[10,616,20,61,"t"],[10,617,20,61],[11,2,28,0],[11,11,28,9,"convertComponentStateToStack"],[11,39,28,37,"convertComponentStateToStack"],[11,40,28,38,"componentStack"],[11,54,28,68],[11,56,28,77],[12,4,29,2],[12,11,29,9,"componentStack"],[12,25,29,23],[12,26,29,24,"map"],[12,29,29,27],[12,30,29,28,"frame"],[12,35,29,33],[12,40,29,38],[13,6,30,4,"column"],[13,12,30,10],[13,14,30,12,"frame"],[13,19,30,17],[13,21,30,19,"location"],[13,29,30,27],[13,31,30,29,"column"],[13,37,30,35],[14,6,31,4,"file"],[14,10,31,8],[14,12,31,10,"frame"],[14,17,31,15],[14,18,31,16,"fileName"],[14,26,31,24],[15,6,32,4,"lineNumber"],[15,16,32,14],[15,18,32,16,"frame"],[15,23,32,21],[15,25,32,23,"location"],[15,33,32,31],[15,35,32,33,"row"],[15,38,32,36],[16,6,33,4,"methodName"],[16,16,33,14],[16,18,33,16,"frame"],[16,23,33,21],[16,24,33,22,"content"],[16,31,33,29],[17,6,34,4,"collapse"],[17,14,34,12],[17,16,34,14],[18,4,35,2],[18,5,35,3],[18,6,35,4],[18,7,35,5],[19,2,36,0],[20,2,38,0],[20,11,38,9,"convertStackToComponentStack"],[20,39,38,37,"convertStackToComponentStack"],[20,40,38,38,"stack"],[20,45,38,50],[20,47,38,68],[21,4,39,2],[21,8,39,8,"componentStack"],[21,22,39,22],[21,25,39,25],[21,27,39,27],[22,4,40,2],[22,9,40,7],[22,13,40,11,"i"],[22,14,40,12],[22,17,40,15],[22,18,40,16],[22,20,40,18,"i"],[22,21,40,19],[22,24,40,22,"stack"],[22,29,40,27],[22,30,40,28,"length"],[22,36,40,34],[22,38,40,36,"i"],[22,39,40,37],[22,41,40,39],[22,43,40,41],[23,6,41,4],[23,10,41,10,"frame"],[23,15,41,15],[23,18,41,18,"stack"],[23,23,41,23],[23,24,41,24,"i"],[23,25,41,25],[23,26,41,26],[24,6,43,4],[24,10,43,8,"frame"],[24,15,43,13],[24,16,43,14,"lineNumber"],[24,26,43,24],[24,30,43,28],[24,34,43,32],[24,38,43,36,"frame"],[24,43,43,41],[24,44,43,42,"column"],[24,50,43,48],[24,54,43,52],[24,58,43,56],[24,60,43,58],[25,8,44,6,"componentStack"],[25,22,44,20],[25,23,44,21,"push"],[25,27,44,25],[25,28,44,26],[26,10,45,8,"fileName"],[26,18,45,16],[26,20,45,18,"frame"],[26,25,45,23],[26,27,45,25,"file"],[26,31,45,29],[26,35,45,33],[26,37,45,35],[27,10,46,8,"location"],[27,18,46,16],[27,20,46,18],[28,12,47,10,"row"],[28,15,47,13],[28,17,47,15,"frame"],[28,22,47,20],[28,23,47,21,"lineNumber"],[28,33,47,31],[29,12,48,10,"column"],[29,18,48,16],[29,20,48,18,"frame"],[29,25,48,23],[29,26,48,24,"column"],[30,10,49,8],[30,11,49,9],[31,10,50,8,"content"],[31,17,50,15],[31,19,50,17,"frame"],[31,24,50,22],[31,25,50,23,"methodName"],[31,35,50,33],[32,10,51,8,"collapse"],[32,18,51,16],[32,20,51,18],[33,8,52,6],[33,9,52,7],[33,10,52,8],[34,6,53,4],[35,4,54,2],[36,4,55,2],[36,11,55,9,"componentStack"],[36,25,55,23],[37,2,56,0],[38,2,56,1],[38,6,72,6,"LogBoxLog"],[38,15,72,15],[39,4,109,2],[39,13,109,2,"LogBoxLog"],[39,23,109,14,"data"],[39,27,109,33],[39,29,109,35],[40,6,109,35],[40,10,109,35,"_classCallCheck2"],[40,26,109,35],[40,27,109,35,"default"],[40,34,109,35],[40,42,109,35,"LogBoxLog"],[40,51,109,35],[41,6,109,35],[41,11,85,2,"symbolicated"],[41,23,85,14],[41,26,89,65],[42,8,90,4,"error"],[42,13,90,9],[42,15,90,11],[42,19,90,15],[43,8,91,4,"stack"],[43,13,91,9],[43,15,91,11],[43,19,91,15],[44,8,92,4,"status"],[44,14,92,10],[44,16,92,12],[45,6,93,2],[45,7,93,3],[46,6,93,3],[46,11,94,2,"symbolicatedComponentStack"],[46,37,94,28],[46,40,102,74],[47,8,103,4,"error"],[47,13,103,9],[47,15,103,11],[47,19,103,15],[48,8,104,4,"componentStack"],[48,22,104,18],[48,24,104,20],[48,28,104,24],[49,8,105,4,"status"],[49,14,105,10],[49,16,105,12],[50,6,106,2],[50,7,106,3],[51,6,110,4],[51,10,110,8],[51,11,110,9,"level"],[51,16,110,14],[51,19,110,17,"data"],[51,23,110,21],[51,24,110,22,"level"],[51,29,110,27],[52,6,111,4],[52,10,111,8],[52,11,111,9,"type"],[52,15,111,13],[52,18,111,16,"data"],[52,22,111,20],[52,23,111,21,"type"],[52,27,111,25],[53,6,112,4],[53,10,112,8],[53,11,112,9,"message"],[53,18,112,16],[53,21,112,19,"data"],[53,25,112,23],[53,26,112,24,"message"],[53,33,112,31],[54,6,113,4],[54,10,113,8],[54,11,113,9,"stack"],[54,16,113,14],[54,19,113,17,"data"],[54,23,113,21],[54,24,113,22,"stack"],[54,29,113,27],[55,6,114,4],[55,10,114,8],[55,11,114,9,"category"],[55,19,114,17],[55,22,114,20,"data"],[55,26,114,24],[55,27,114,25,"category"],[55,35,114,33],[56,6,115,4],[56,10,115,8],[56,11,115,9,"componentStack"],[56,25,115,23],[56,28,115,26,"data"],[56,32,115,30],[56,33,115,31,"componentStack"],[56,47,115,45],[57,6,116,4],[57,10,116,8],[57,11,116,9,"componentStackType"],[57,29,116,27],[57,32,116,30,"data"],[57,36,116,34],[57,37,116,35,"componentStackType"],[57,55,116,53],[57,59,116,57],[57,67,116,65],[58,6,117,4],[58,10,117,8],[58,11,117,9,"codeFrame"],[58,20,117,18],[58,23,117,21,"data"],[58,27,117,25],[58,28,117,26,"codeFrame"],[58,37,117,35],[59,6,118,4],[59,10,118,8],[59,11,118,9,"isComponentError"],[59,27,118,25],[59,30,118,28,"data"],[59,34,118,32],[59,35,118,33,"isComponentError"],[59,51,118,49],[60,6,119,4],[60,10,119,8],[60,11,119,9,"extraData"],[60,20,119,18],[60,23,119,21,"data"],[60,27,119,25],[60,28,119,26,"extraData"],[60,37,119,35],[61,6,120,4],[61,10,120,8],[61,11,120,9,"count"],[61,16,120,14],[61,19,120,17],[61,20,120,18],[62,6,121,4],[62,10,121,8],[62,11,121,9,"onNotificationPress"],[62,30,121,28],[62,33,121,31,"data"],[62,37,121,35],[62,38,121,36,"onNotificationPress"],[62,57,121,55],[63,4,122,2],[64,4,122,3],[64,15,122,3,"_createClass2"],[64,28,122,3],[64,29,122,3,"default"],[64,36,122,3],[64,38,122,3,"LogBoxLog"],[64,47,122,3],[65,6,122,3,"key"],[65,9,122,3],[66,6,122,3,"value"],[66,11,122,3],[66,13,124,2],[66,22,124,2,"incrementCount"],[66,36,124,16,"incrementCount"],[66,37,124,16],[66,39,124,25],[67,8,125,4],[67,12,125,8],[67,13,125,9,"count"],[67,18,125,14],[67,22,125,18],[67,23,125,19],[68,6,126,2],[69,4,126,3],[70,6,126,3,"key"],[70,9,126,3],[71,6,126,3,"value"],[71,11,126,3],[71,13,128,2],[71,22,128,2,"getAvailableStack"],[71,39,128,19,"getAvailableStack"],[71,40,128,19],[71,42,128,29],[72,8,129,4],[72,15,129,11],[72,19,129,15],[72,20,129,16,"symbolicated"],[72,32,129,28],[72,33,129,29,"status"],[72,39,129,35],[72,44,129,40],[72,54,129,50],[72,57,130,8],[72,61,130,12],[72,62,130,13,"symbolicated"],[72,74,130,25],[72,75,130,26,"stack"],[72,80,130,31],[72,83,131,8],[72,87,131,12],[72,88,131,13,"stack"],[72,93,131,18],[73,6,132,2],[74,4,132,3],[75,6,132,3,"key"],[75,9,132,3],[76,6,132,3,"value"],[76,11,132,3],[76,13,134,2],[76,22,134,2,"getAvailableComponentStack"],[76,48,134,28,"getAvailableComponentStack"],[76,49,134,28],[76,51,134,47],[77,8,135,4],[77,12,135,8],[77,16,135,12],[77,17,135,13,"componentStackType"],[77,35,135,31],[77,40,135,36],[77,48,135,44],[77,50,135,46],[78,10,136,6],[78,17,136,13],[78,21,136,17],[78,22,136,18,"componentStack"],[78,36,136,32],[79,8,137,4],[80,8,138,4],[80,15,138,11],[80,19,138,15],[80,20,138,16,"symbolicatedComponentStack"],[80,46,138,42],[80,47,138,43,"status"],[80,53,138,49],[80,58,138,54],[80,68,138,64],[80,71,139,8],[80,75,139,12],[80,76,139,13,"symbolicatedComponentStack"],[80,102,139,39],[80,103,139,40,"componentStack"],[80,117,139,54],[80,120,140,8],[80,124,140,12],[80,125,140,13,"componentStack"],[80,139,140,27],[81,6,141,2],[82,4,141,3],[83,6,141,3,"key"],[83,9,141,3],[84,6,141,3,"value"],[84,11,141,3],[84,13,143,2],[84,22,143,2,"retrySymbolicate"],[84,38,143,18,"retrySymbolicate"],[84,39,143,19,"callback"],[84,47,143,67],[84,49,143,75],[85,8,144,4],[85,12,144,8,"retry"],[85,17,144,13],[85,20,144,16],[85,25,144,21],[86,8,145,4],[86,12,145,8],[86,16,145,12],[86,17,145,13,"symbolicated"],[86,29,145,25],[86,30,145,26,"status"],[86,36,145,32],[86,41,145,37],[86,51,145,47],[86,53,145,49],[87,10,146,6,"LogBoxSymbolication"],[87,29,146,25],[87,30,146,26,"deleteStack"],[87,41,146,37],[87,42,146,38],[87,46,146,42],[87,47,146,43,"stack"],[87,52,146,48],[87,53,146,49],[88,10,147,6,"retry"],[88,15,147,11],[88,18,147,14],[88,22,147,18],[89,8,148,4],[90,8,149,4],[90,12,149,8],[90,16,149,12],[90,17,149,13,"symbolicatedComponentStack"],[90,43,149,39],[90,44,149,40,"status"],[90,50,149,46],[90,55,149,51],[90,65,149,61],[90,67,149,63],[91,10,150,6,"LogBoxSymbolication"],[91,29,150,25],[91,30,150,26,"deleteStack"],[91,41,150,37],[91,42,151,8,"convertComponentStateToStack"],[91,70,151,36],[91,71,151,37],[91,75,151,41],[91,76,151,42,"componentStack"],[91,90,151,56],[91,91,152,6],[91,92,152,7],[92,10,153,6,"retry"],[92,15,153,11],[92,18,153,14],[92,22,153,18],[93,8,154,4],[94,8,155,4],[94,12,155,8,"retry"],[94,17,155,13],[94,19,155,15],[95,10,156,6],[95,14,156,10],[95,15,156,11,"handleSymbolicate"],[95,32,156,28],[95,33,156,29,"callback"],[95,41,156,37],[95,42,156,38],[96,8,157,4],[97,6,158,2],[98,4,158,3],[99,6,158,3,"key"],[99,9,158,3],[100,6,158,3,"value"],[100,11,158,3],[100,13,160,2],[100,22,160,2,"symbolicate"],[100,33,160,13,"symbolicate"],[100,34,160,14,"callback"],[100,42,160,62],[100,44,160,70],[101,8,161,4],[101,12,161,8],[101,16,161,12],[101,17,161,13,"symbolicated"],[101,29,161,25],[101,30,161,26,"status"],[101,36,161,32],[101,41,161,37],[101,47,161,43],[101,49,161,45],[102,10,162,6],[102,14,162,10],[102,15,162,11,"handleSymbolicate"],[102,32,162,28],[102,33,162,29,"callback"],[102,41,162,37],[102,42,162,38],[103,8,163,4],[104,6,164,2],[105,4,164,3],[106,6,164,3,"key"],[106,9,164,3],[107,6,164,3,"value"],[107,11,164,3],[107,13,166,2],[107,22,166,2,"handleSymbolicate"],[107,39,166,19,"handleSymbolicate"],[107,40,166,20,"callback"],[107,48,166,68],[107,50,166,76],[108,8,167,4],[108,12,168,6],[108,16,168,10],[108,17,168,11,"symbolicated"],[108,29,168,23],[108,30,168,24,"status"],[108,36,168,30],[108,41,168,35],[108,50,168,44],[108,54,169,6],[108,58,169,10],[108,59,169,11,"symbolicated"],[108,71,169,23],[108,72,169,24,"status"],[108,78,169,30],[108,83,169,35],[108,93,169,45],[108,95,170,6],[109,10,171,6],[109,14,171,10],[109,15,171,11,"updateStatus"],[109,27,171,23],[109,28,171,24],[109,32,171,28],[109,34,171,30],[109,38,171,34],[109,40,171,36],[109,44,171,40],[109,46,171,42,"callback"],[109,54,171,50],[109,55,171,51],[110,10,172,6,"LogBoxSymbolication"],[110,29,172,25],[110,30,172,26,"symbolicate"],[110,41,172,37],[110,42,172,38],[110,46,172,42],[110,47,172,43,"stack"],[110,52,172,48],[110,54,172,50],[110,58,172,54],[110,59,172,55,"extraData"],[110,68,172,64],[110,69,172,65],[110,70,172,66,"then"],[110,74,172,70],[110,75,173,8,"data"],[110,79,173,12],[110,83,173,16],[111,12,174,10],[111,16,174,14],[111,17,174,15,"updateStatus"],[111,29,174,27],[111,30,174,28],[111,34,174,32],[111,36,174,34,"data"],[111,40,174,38],[111,42,174,40,"stack"],[111,47,174,45],[111,49,174,47,"data"],[111,53,174,51],[111,55,174,53,"codeFrame"],[111,64,174,62],[111,66,174,64,"callback"],[111,74,174,72],[111,75,174,73],[112,10,175,8],[112,11,175,9],[112,13,176,8,"error"],[112,18,176,13],[112,22,176,17],[113,12,177,10],[113,16,177,14],[113,17,177,15,"updateStatus"],[113,29,177,27],[113,30,177,28,"error"],[113,35,177,33],[113,37,177,35],[113,41,177,39],[113,43,177,41],[113,47,177,45],[113,49,177,47,"callback"],[113,57,177,55],[113,58,177,56],[114,10,178,8],[114,11,179,6],[114,12,179,7],[115,8,180,4],[116,8,181,4],[116,12,182,6],[116,16,182,10],[116,17,182,11,"componentStack"],[116,31,182,25],[116,35,182,29],[116,39,182,33],[116,43,183,6],[116,47,183,10],[116,48,183,11,"componentStackType"],[116,66,183,29],[116,71,183,34],[116,78,183,41],[116,82,184,6],[116,86,184,10],[116,87,184,11,"symbolicatedComponentStack"],[116,113,184,37],[116,114,184,38,"status"],[116,120,184,44],[116,125,184,49],[116,134,184,58],[116,138,185,6],[116,142,185,10],[116,143,185,11,"symbolicatedComponentStack"],[116,169,185,37],[116,170,185,38,"status"],[116,176,185,44],[116,181,185,49],[116,191,185,59],[116,193,186,6],[117,10,187,6],[117,14,187,10],[117,15,187,11,"updateComponentStackStatus"],[117,41,187,37],[117,42,187,38],[117,46,187,42],[117,48,187,44],[117,52,187,48],[117,54,187,50],[117,58,187,54],[117,60,187,56,"callback"],[117,68,187,64],[117,69,187,65],[118,10,188,6],[118,14,188,12,"componentStackFrames"],[118,34,188,32],[118,37,188,35,"convertComponentStateToStack"],[118,65,188,63],[118,66,189,8],[118,70,189,12],[118,71,189,13,"componentStack"],[118,85,190,6],[118,86,190,7],[119,10,191,6,"LogBoxSymbolication"],[119,29,191,25],[119,30,191,26,"symbolicate"],[119,41,191,37],[119,42,191,38,"componentStackFrames"],[119,62,191,58],[119,64,191,60],[119,66,191,62],[119,67,191,63],[119,68,191,64,"then"],[119,72,191,68],[119,73,192,8,"data"],[119,77,192,12],[119,81,192,16],[120,12,193,10],[120,16,193,14],[120,17,193,15,"updateComponentStackStatus"],[120,43,193,41],[120,44,194,12],[120,48,194,16],[120,50,195,12,"convertStackToComponentStack"],[120,78,195,40],[120,79,195,41,"data"],[120,83,195,45],[120,84,195,46,"stack"],[120,89,195,51],[120,90,195,52],[120,92,196,12,"data"],[120,96,196,16],[120,98,196,18,"codeFrame"],[120,107,196,27],[120,109,197,12,"callback"],[120,117,198,10],[120,118,198,11],[121,10,199,8],[121,11,199,9],[121,13,200,8,"error"],[121,18,200,13],[121,22,200,17],[122,12,201,10],[122,16,201,14],[122,17,201,15,"updateComponentStackStatus"],[122,43,201,41],[122,44,201,42,"error"],[122,49,201,47],[122,51,201,49],[122,55,201,53],[122,57,201,55],[122,61,201,59],[122,63,201,61,"callback"],[122,71,201,69],[122,72,201,70],[123,10,202,8],[123,11,203,6],[123,12,203,7],[124,8,204,4],[125,6,205,2],[126,4,205,3],[127,6,205,3,"key"],[127,9,205,3],[128,6,205,3,"value"],[128,11,205,3],[128,13,207,2],[128,22,207,2,"updateStatus"],[128,34,207,14,"updateStatus"],[128,35,208,4,"error"],[128,40,208,17],[128,42,209,4,"stack"],[128,47,209,17],[128,49,210,4,"codeFrame"],[128,58,210,25],[128,60,211,4,"callback"],[128,68,211,52],[128,70,212,10],[129,8,213,4],[129,12,213,10,"lastStatus"],[129,22,213,20],[129,25,213,23],[129,29,213,27],[129,30,213,28,"symbolicated"],[129,42,213,40],[129,43,213,41,"status"],[129,49,213,47],[130,8,214,4],[130,12,214,8,"error"],[130,17,214,13],[130,21,214,17],[130,25,214,21],[130,27,214,23],[131,10,215,6],[131,14,215,10],[131,15,215,11,"symbolicated"],[131,27,215,23],[131,30,215,26],[132,12,216,8,"error"],[132,17,216,13],[133,12,217,8,"stack"],[133,17,217,13],[133,19,217,15],[133,23,217,19],[134,12,218,8,"status"],[134,18,218,14],[134,20,218,16],[135,10,219,6],[135,11,219,7],[136,8,220,4],[136,9,220,5],[136,15,220,11],[136,19,220,15,"stack"],[136,24,220,20],[136,28,220,24],[136,32,220,28],[136,34,220,30],[137,10,221,6],[137,14,221,10,"codeFrame"],[137,23,221,19],[137,25,221,21],[138,12,222,8],[138,16,222,12],[138,17,222,13,"codeFrame"],[138,26,222,22],[138,29,222,25,"codeFrame"],[138,38,222,34],[139,10,223,6],[140,10,225,6],[140,14,225,10],[140,15,225,11,"symbolicated"],[140,27,225,23],[140,30,225,26],[141,12,226,8,"error"],[141,17,226,13],[141,19,226,15],[141,23,226,19],[142,12,227,8,"stack"],[142,17,227,13],[143,12,228,8,"status"],[143,18,228,14],[143,20,228,16],[144,10,229,6],[144,11,229,7],[145,8,230,4],[145,9,230,5],[145,15,230,11],[146,10,231,6],[146,14,231,10],[146,15,231,11,"symbolicated"],[146,27,231,23],[146,30,231,26],[147,12,232,8,"error"],[147,17,232,13],[147,19,232,15],[147,23,232,19],[148,12,233,8,"stack"],[148,17,233,13],[148,19,233,15],[148,23,233,19],[149,12,234,8,"status"],[149,18,234,14],[149,20,234,16],[150,10,235,6],[150,11,235,7],[151,8,236,4],[152,8,238,4],[152,12,238,8,"callback"],[152,20,238,16],[152,24,238,20,"lastStatus"],[152,34,238,30],[152,39,238,35],[152,43,238,39],[152,44,238,40,"symbolicated"],[152,56,238,52],[152,57,238,53,"status"],[152,63,238,59],[152,65,238,61],[153,10,239,6,"callback"],[153,18,239,14],[153,19,239,15],[153,23,239,19],[153,24,239,20,"symbolicated"],[153,36,239,32],[153,37,239,33,"status"],[153,43,239,39],[153,44,239,40],[154,8,240,4],[155,6,241,2],[156,4,241,3],[157,6,241,3,"key"],[157,9,241,3],[158,6,241,3,"value"],[158,11,241,3],[158,13,243,2],[158,22,243,2,"updateComponentStackStatus"],[158,48,243,28,"updateComponentStackStatus"],[158,49,244,4,"error"],[158,54,244,17],[158,56,245,4,"componentStack"],[158,70,245,35],[158,72,246,4,"codeFrame"],[158,81,246,25],[158,83,247,4,"callback"],[158,91,247,52],[158,93,248,10],[159,8,249,4],[159,12,249,10,"lastStatus"],[159,22,249,20],[159,25,249,23],[159,29,249,27],[159,30,249,28,"symbolicatedComponentStack"],[159,56,249,54],[159,57,249,55,"status"],[159,63,249,61],[160,8,250,4],[160,12,250,8,"error"],[160,17,250,13],[160,21,250,17],[160,25,250,21],[160,27,250,23],[161,10,251,6],[161,14,251,10],[161,15,251,11,"symbolicatedComponentStack"],[161,41,251,37],[161,44,251,40],[162,12,252,8,"error"],[162,17,252,13],[163,12,253,8,"componentStack"],[163,26,253,22],[163,28,253,24],[163,32,253,28],[164,12,254,8,"status"],[164,18,254,14],[164,20,254,16],[165,10,255,6],[165,11,255,7],[166,8,256,4],[166,9,256,5],[166,15,256,11],[166,19,256,15,"componentStack"],[166,33,256,29],[166,37,256,33],[166,41,256,37],[166,43,256,39],[167,10,257,6],[167,14,257,10,"codeFrame"],[167,23,257,19],[167,25,257,21],[168,12,258,8],[168,16,258,12],[168,17,258,13,"componentCodeFrame"],[168,35,258,31],[168,38,258,34,"codeFrame"],[168,47,258,43],[169,10,259,6],[170,10,260,6],[170,14,260,10],[170,15,260,11,"symbolicatedComponentStack"],[170,41,260,37],[170,44,260,40],[171,12,261,8,"error"],[171,17,261,13],[171,19,261,15],[171,23,261,19],[172,12,262,8,"componentStack"],[172,26,262,22],[173,12,263,8,"status"],[173,18,263,14],[173,20,263,16],[174,10,264,6],[174,11,264,7],[175,8,265,4],[175,9,265,5],[175,15,265,11],[176,10,266,6],[176,14,266,10],[176,15,266,11,"symbolicatedComponentStack"],[176,41,266,37],[176,44,266,40],[177,12,267,8,"error"],[177,17,267,13],[177,19,267,15],[177,23,267,19],[178,12,268,8,"componentStack"],[178,26,268,22],[178,28,268,24],[178,32,268,28],[179,12,269,8,"status"],[179,18,269,14],[179,20,269,16],[180,10,270,6],[180,11,270,7],[181,8,271,4],[182,8,273,4],[182,12,273,8,"callback"],[182,20,273,16],[182,24,273,20,"lastStatus"],[182,34,273,30],[182,39,273,35],[182,43,273,39],[182,44,273,40,"symbolicatedComponentStack"],[182,70,273,66],[182,71,273,67,"status"],[182,77,273,73],[182,79,273,75],[183,10,274,6,"callback"],[183,18,274,14],[183,19,274,15],[183,23,274,19],[183,24,274,20,"symbolicatedComponentStack"],[183,50,274,46],[183,51,274,47,"status"],[183,57,274,53],[183,58,274,54],[184,8,275,4],[185,6,276,2],[186,4,276,3],[187,2,276,3],[188,2,276,3],[188,6,276,3,"_default"],[188,14,276,3],[188,17,276,3,"exports"],[188,24,276,3],[188,25,276,3,"default"],[188,32,276,3],[188,35,279,15,"LogBoxLog"],[188,44,279,24],[189,0,279,24],[189,3]],"functionMap":{"names":["<global>","convertComponentStateToStack","componentStack.map$argument_0","convertStackToComponentStack","LogBoxLog","constructor","incrementCount","getAvailableStack","getAvailableComponentStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","updateComponentStackStatus"],"mappings":"AAA;AC2B;4BCC;IDM;CDC;AGE;CHkB;AIgB;ECqC;GDa;EEE;GFE;EGE;GHI;EIE;GJO;EKE;GLe;EME;GNI;EOE;QCO;SDE;QEC;SFE;QCc;SDO;QEC;SFE;GPG;EUE;GVkC;EWE;GXiC;CJC"}},"type":"js/module"}]}