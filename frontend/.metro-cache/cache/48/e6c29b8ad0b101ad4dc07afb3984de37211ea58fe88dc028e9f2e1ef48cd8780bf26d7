{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.createStringifySafeWithLimits = createStringifySafeWithLimits;\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  /**\n   * Tries to stringify with JSON.stringify and toString, but catches exceptions\n   * (e.g. from circular objects) and always returns a string and never throws.\n   */\n  function createStringifySafeWithLimits(limits) {\n    const {\n      maxDepth = Number.POSITIVE_INFINITY,\n      maxStringLimit = Number.POSITIVE_INFINITY,\n      maxArrayLimit = Number.POSITIVE_INFINITY,\n      maxObjectKeysLimit = Number.POSITIVE_INFINITY\n    } = limits;\n    const stack = [];\n    function replacer(_key, value) {\n      while (stack.length && this !== stack[0]) {\n        stack.shift();\n      }\n      if (typeof value === 'string') {\n        const truncatedString = '...(truncated)...';\n        if (value.length > maxStringLimit + truncatedString.length) {\n          return value.substring(0, maxStringLimit) + truncatedString;\n        }\n        return value;\n      }\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      let retval = value;\n      if (Array.isArray(value)) {\n        if (stack.length >= maxDepth) {\n          retval = `[ ... array with ${value.length} values ... ]`;\n        } else if (value.length > maxArrayLimit) {\n          retval = value.slice(0, maxArrayLimit).concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);\n        }\n      } else {\n        // Add refinement after Array.isArray call.\n        if (typeof value !== 'object') {\n          throw new Error('This was already found earlier');\n        }\n        const keys = Object.keys(value);\n        if (stack.length >= maxDepth) {\n          retval = `{ ... object with ${keys.length} keys ... }`;\n        } else if (keys.length > maxObjectKeysLimit) {\n          // Return a sample of the keys.\n          retval = {};\n          for (const k of keys.slice(0, maxObjectKeysLimit)) {\n            retval[k] = value[k];\n          }\n          const truncatedKey = '...(truncated keys)...';\n          retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n        }\n      }\n      stack.unshift(retval);\n      return retval;\n    }\n    return function stringifySafe(arg) {\n      if (arg === undefined) {\n        return 'undefined';\n      } else if (arg === null) {\n        return 'null';\n      } else if (typeof arg === 'function') {\n        try {\n          return arg.toString();\n        } catch {\n          return '[function unknown]';\n        }\n      } else if (arg instanceof Error) {\n        return arg.name + ': ' + arg.message;\n      } else {\n        // Perform a try catch, just in case the object has a circular\n        // reference or stringify throws for some other reason.\n        try {\n          const ret = JSON.stringify(arg, replacer);\n          if (ret === undefined) {\n            return '[\"' + typeof arg + '\" failed to stringify]';\n          }\n          return ret;\n        } catch {\n          if (typeof arg.toString === 'function') {\n            try {\n              // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.\n              return arg.toString();\n            } catch {}\n          }\n        }\n      }\n      return '[\"' + typeof arg + '\" failed to stringify]';\n    };\n  }\n  const stringifySafe = createStringifySafeWithLimits({\n    maxDepth: 10,\n    maxStringLimit: 100,\n    maxArrayLimit: 50,\n    maxObjectKeysLimit: 50\n  });\n  var _default = stringifySafe;\n});","lineCount":117,"map":[[7,2,115,0,"Object"],[7,8,115,0],[7,9,115,0,"defineProperty"],[7,23,115,0],[7,24,115,0,"exports"],[7,31,115,0],[8,4,115,0,"enumerable"],[8,14,115,0],[9,4,115,0,"get"],[9,7,115,0],[9,18,115,0,"get"],[9,19,115,0],[10,6,115,0],[10,13,115,0,"_default"],[10,21,115,0],[11,4,115,0],[12,2,115,0],[13,2,13,0,"exports"],[13,9,13,0],[13,10,13,0,"createStringifySafeWithLimits"],[13,39,13,0],[13,42,13,0,"createStringifySafeWithLimits"],[13,71,13,0],[14,2,1,0],[15,0,2,0],[16,0,3,0],[17,0,4,0],[18,0,5,0],[19,0,6,0],[20,0,7,0],[22,2,9,0],[23,0,10,0],[24,0,11,0],[25,0,12,0],[26,2,13,7],[26,11,13,16,"createStringifySafeWithLimits"],[26,40,13,45,"createStringifySafeWithLimits"],[26,41,13,46,"limits"],[26,47,18,1],[26,49,18,25],[27,4,19,2],[27,10,19,8],[28,6,20,4,"maxDepth"],[28,14,20,12],[28,17,20,15,"Number"],[28,23,20,21],[28,24,20,22,"POSITIVE_INFINITY"],[28,41,20,39],[29,6,21,4,"maxStringLimit"],[29,20,21,18],[29,23,21,21,"Number"],[29,29,21,27],[29,30,21,28,"POSITIVE_INFINITY"],[29,47,21,45],[30,6,22,4,"maxArrayLimit"],[30,19,22,17],[30,22,22,20,"Number"],[30,28,22,26],[30,29,22,27,"POSITIVE_INFINITY"],[30,46,22,44],[31,6,23,4,"maxObjectKeysLimit"],[31,24,23,22],[31,27,23,25,"Number"],[31,33,23,31],[31,34,23,32,"POSITIVE_INFINITY"],[32,4,24,2],[32,5,24,3],[32,8,24,6,"limits"],[32,14,24,12],[33,4,25,2],[33,10,25,8,"stack"],[33,15,25,20],[33,18,25,23],[33,20,25,25],[34,4,26,2],[34,13,26,11,"replacer"],[34,21,26,19,"replacer"],[34,22,26,35,"_key"],[34,26,26,47],[34,28,26,49,"value"],[34,33,26,59],[34,35,26,66],[35,6,27,4],[35,13,27,11,"stack"],[35,18,27,16],[35,19,27,17,"length"],[35,25,27,23],[35,29,27,27],[35,33,27,31],[35,38,27,36,"stack"],[35,43,27,41],[35,44,27,42],[35,45,27,43],[35,46,27,44],[35,48,27,46],[36,8,28,6,"stack"],[36,13,28,11],[36,14,28,12,"shift"],[36,19,28,17],[36,20,28,18],[36,21,28,19],[37,6,29,4],[38,6,31,4],[38,10,31,8],[38,17,31,15,"value"],[38,22,31,20],[38,27,31,25],[38,35,31,33],[38,37,31,35],[39,8,32,6],[39,14,32,12,"truncatedString"],[39,29,32,27],[39,32,32,30],[39,51,32,49],[40,8,33,6],[40,12,33,10,"value"],[40,17,33,15],[40,18,33,16,"length"],[40,24,33,22],[40,27,33,25,"maxStringLimit"],[40,41,33,39],[40,44,33,42,"truncatedString"],[40,59,33,57],[40,60,33,58,"length"],[40,66,33,64],[40,68,33,66],[41,10,34,8],[41,17,34,15,"value"],[41,22,34,20],[41,23,34,21,"substring"],[41,32,34,30],[41,33,34,31],[41,34,34,32],[41,36,34,34,"maxStringLimit"],[41,50,34,48],[41,51,34,49],[41,54,34,52,"truncatedString"],[41,69,34,67],[42,8,35,6],[43,8,36,6],[43,15,36,13,"value"],[43,20,36,18],[44,6,37,4],[45,6,38,4],[45,10,38,8],[45,17,38,15,"value"],[45,22,38,20],[45,27,38,25],[45,35,38,33],[45,39,38,37,"value"],[45,44,38,42],[45,49,38,47],[45,53,38,51],[45,55,38,53],[46,8,39,6],[46,15,39,13,"value"],[46,20,39,18],[47,6,40,4],[48,6,42,4],[48,10,42,8,"retval"],[48,16,42,14],[48,19,42,17,"value"],[48,24,42,22],[49,6,43,4],[49,10,43,8,"Array"],[49,15,43,13],[49,16,43,14,"isArray"],[49,23,43,21],[49,24,43,22,"value"],[49,29,43,27],[49,30,43,28],[49,32,43,30],[50,8,44,6],[50,12,44,10,"stack"],[50,17,44,15],[50,18,44,16,"length"],[50,24,44,22],[50,28,44,26,"maxDepth"],[50,36,44,34],[50,38,44,36],[51,10,45,8,"retval"],[51,16,45,14],[51,19,45,17],[51,39,45,37,"value"],[51,44,45,42],[51,45,45,43,"length"],[51,51,45,49],[51,66,45,64],[52,8,46,6],[52,9,46,7],[52,15,46,13],[52,19,46,17,"value"],[52,24,46,22],[52,25,46,23,"length"],[52,31,46,29],[52,34,46,32,"maxArrayLimit"],[52,47,46,45],[52,49,46,47],[53,10,47,8,"retval"],[53,16,47,14],[53,19,47,17,"value"],[53,24,47,22],[53,25,48,11,"slice"],[53,30,48,16],[53,31,48,17],[53,32,48,18],[53,34,48,20,"maxArrayLimit"],[53,47,48,33],[53,48,48,34],[53,49,49,11,"concat"],[53,55,49,17],[53,56,49,18],[53,57,49,19],[53,70,49,32,"value"],[53,75,49,37],[53,76,49,38,"length"],[53,82,49,44],[53,85,49,47,"maxArrayLimit"],[53,98,49,60],[53,121,49,83],[53,122,49,84],[53,123,49,85],[54,8,50,6],[55,6,51,4],[55,7,51,5],[55,13,51,11],[56,8,52,6],[57,8,53,6],[57,12,53,10],[57,19,53,17,"value"],[57,24,53,22],[57,29,53,27],[57,37,53,35],[57,39,53,37],[58,10,54,8],[58,16,54,14],[58,20,54,18,"Error"],[58,25,54,23],[58,26,54,24],[58,58,54,56],[58,59,54,57],[59,8,55,6],[60,8,56,6],[60,14,56,12,"keys"],[60,18,56,16],[60,21,56,19,"Object"],[60,27,56,25],[60,28,56,26,"keys"],[60,32,56,30],[60,33,56,31,"value"],[60,38,56,36],[60,39,56,37],[61,8,57,6],[61,12,57,10,"stack"],[61,17,57,15],[61,18,57,16,"length"],[61,24,57,22],[61,28,57,26,"maxDepth"],[61,36,57,34],[61,38,57,36],[62,10,58,8,"retval"],[62,16,58,14],[62,19,58,17],[62,40,58,38,"keys"],[62,44,58,42],[62,45,58,43,"length"],[62,51,58,49],[62,64,58,62],[63,8,59,6],[63,9,59,7],[63,15,59,13],[63,19,59,17,"keys"],[63,23,59,21],[63,24,59,22,"length"],[63,30,59,28],[63,33,59,31,"maxObjectKeysLimit"],[63,51,59,49],[63,53,59,51],[64,10,60,8],[65,10,61,8,"retval"],[65,16,61,14],[65,19,61,17],[65,20,61,18],[65,21,61,19],[66,10,62,8],[66,15,62,13],[66,21,62,19,"k"],[66,22,62,20],[66,26,62,24,"keys"],[66,30,62,28],[66,31,62,29,"slice"],[66,36,62,34],[66,37,62,35],[66,38,62,36],[66,40,62,38,"maxObjectKeysLimit"],[66,58,62,56],[66,59,62,57],[66,61,62,59],[67,12,63,10,"retval"],[67,18,63,16],[67,19,63,17,"k"],[67,20,63,18],[67,21,63,19],[67,24,63,22,"value"],[67,29,63,27],[67,30,63,28,"k"],[67,31,63,29],[67,32,63,30],[68,10,64,8],[69,10,65,8],[69,16,65,14,"truncatedKey"],[69,28,65,26],[69,31,65,29],[69,55,65,53],[70,10,66,8,"retval"],[70,16,66,14],[70,17,66,15,"truncatedKey"],[70,29,66,27],[70,30,66,28],[70,33,66,31,"keys"],[70,37,66,35],[70,38,66,36,"length"],[70,44,66,42],[70,47,66,45,"maxObjectKeysLimit"],[70,65,66,63],[71,8,67,6],[72,6,68,4],[73,6,69,4,"stack"],[73,11,69,9],[73,12,69,10,"unshift"],[73,19,69,17],[73,20,69,18,"retval"],[73,26,69,24],[73,27,69,25],[74,6,70,4],[74,13,70,11,"retval"],[74,19,70,17],[75,4,71,2],[76,4,73,2],[76,11,73,9],[76,20,73,18,"stringifySafe"],[76,33,73,31,"stringifySafe"],[76,34,73,32,"arg"],[76,37,73,40],[76,39,73,50],[77,6,74,4],[77,10,74,8,"arg"],[77,13,74,11],[77,18,74,16,"undefined"],[77,27,74,25],[77,29,74,27],[78,8,75,6],[78,15,75,13],[78,26,75,24],[79,6,76,4],[79,7,76,5],[79,13,76,11],[79,17,76,15,"arg"],[79,20,76,18],[79,25,76,23],[79,29,76,27],[79,31,76,29],[80,8,77,6],[80,15,77,13],[80,21,77,19],[81,6,78,4],[81,7,78,5],[81,13,78,11],[81,17,78,15],[81,24,78,22,"arg"],[81,27,78,25],[81,32,78,30],[81,42,78,40],[81,44,78,42],[82,8,79,6],[82,12,79,10],[83,10,80,8],[83,17,80,15,"arg"],[83,20,80,18],[83,21,80,19,"toString"],[83,29,80,27],[83,30,80,28],[83,31,80,29],[84,8,81,6],[84,9,81,7],[84,10,81,8],[84,16,81,14],[85,10,82,8],[85,17,82,15],[85,37,82,35],[86,8,83,6],[87,6,84,4],[87,7,84,5],[87,13,84,11],[87,17,84,15,"arg"],[87,20,84,18],[87,32,84,30,"Error"],[87,37,84,35],[87,39,84,37],[88,8,85,6],[88,15,85,13,"arg"],[88,18,85,16],[88,19,85,17,"name"],[88,23,85,21],[88,26,85,24],[88,30,85,28],[88,33,85,31,"arg"],[88,36,85,34],[88,37,85,35,"message"],[88,44,85,42],[89,6,86,4],[89,7,86,5],[89,13,86,11],[90,8,87,6],[91,8,88,6],[92,8,89,6],[92,12,89,10],[93,10,90,8],[93,16,90,14,"ret"],[93,19,90,17],[93,22,90,20,"JSON"],[93,26,90,24],[93,27,90,25,"stringify"],[93,36,90,34],[93,37,90,35,"arg"],[93,40,90,38],[93,42,90,40,"replacer"],[93,50,90,48],[93,51,90,49],[94,10,91,8],[94,14,91,12,"ret"],[94,17,91,15],[94,22,91,20,"undefined"],[94,31,91,29],[94,33,91,31],[95,12,92,10],[95,19,92,17],[95,23,92,21],[95,26,92,24],[95,33,92,31,"arg"],[95,36,92,34],[95,39,92,37],[95,63,92,61],[96,10,93,8],[97,10,94,8],[97,17,94,15,"ret"],[97,20,94,18],[98,8,95,6],[98,9,95,7],[98,10,95,8],[98,16,95,14],[99,10,96,8],[99,14,96,12],[99,21,96,19,"arg"],[99,24,96,22],[99,25,96,23,"toString"],[99,33,96,31],[99,38,96,36],[99,48,96,46],[99,50,96,48],[100,12,97,10],[100,16,97,14],[101,14,98,12],[102,14,99,12],[102,21,99,19,"arg"],[102,24,99,22],[102,25,99,23,"toString"],[102,33,99,31],[102,34,99,32],[102,35,99,33],[103,12,100,10],[103,13,100,11],[103,14,100,12],[103,20,100,18],[103,21,100,19],[104,10,101,8],[105,8,102,6],[106,6,103,4],[107,6,104,4],[107,13,104,11],[107,17,104,15],[107,20,104,18],[107,27,104,25,"arg"],[107,30,104,28],[107,33,104,31],[107,57,104,55],[108,4,105,2],[108,5,105,3],[109,2,106,0],[110,2,108,0],[110,8,108,6,"stringifySafe"],[110,21,108,19],[110,24,108,22,"createStringifySafeWithLimits"],[110,53,108,51],[110,54,108,52],[111,4,109,2,"maxDepth"],[111,12,109,10],[111,14,109,12],[111,16,109,14],[112,4,110,2,"maxStringLimit"],[112,18,110,16],[112,20,110,18],[112,23,110,21],[113,4,111,2,"maxArrayLimit"],[113,17,111,15],[113,19,111,17],[113,21,111,19],[114,4,112,2,"maxObjectKeysLimit"],[114,22,112,20],[114,24,112,22],[115,2,113,0],[115,3,113,1],[115,4,113,2],[116,2,115,0],[116,6,115,0,"_default"],[116,14,115,0],[116,17,115,15,"stringifySafe"],[116,30,115,28],[117,0,115,29],[117,3]],"functionMap":{"names":["<global>","createStringifySafeWithLimits","replacer","stringifySafe"],"mappings":"AAA;OCY;ECa;GD6C;SEE;GFgC;CDC"},"hasCjsExports":false},"type":"js/module"}]}