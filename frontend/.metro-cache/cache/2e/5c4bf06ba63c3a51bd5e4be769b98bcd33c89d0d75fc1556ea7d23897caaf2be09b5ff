{"dependencies":[{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":173},"end":{"line":7,"column":44,"index":217}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"],"imports":1}},{"name":"./fetchAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":218},"end":{"line":8,"column":42,"index":260}}],"key":"GJrX1EMy+DxI7FSLX0wJbybQg2o=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.fetchThenEvalAsync = fetchThenEvalAsync;\n  var _errors = require(_dependencyMap[0], \"./errors\");\n  var _fetchAsync = require(_dependencyMap[1], \"./fetchAsync\");\n  /**\n   * Copyright Â© 2022 650 Industries.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  /**\n   * Load a bundle for a URL using fetch + eval on native and script tag injection on web.\n   *\n   * @param url Given a statement like `import('./Bacon')` `bundlePath` would be `Bacon`.\n   */\n  function fetchThenEvalAsync(url) {\n    return (0, _fetchAsync.fetchAsync)(url).then(_ref => {\n      var body = _ref.body,\n        status = _ref.status,\n        headers = _ref.headers;\n      if (headers?.has?.('Content-Type') != null && headers.get('Content-Type').includes('application/json')) {\n        // Errors are returned as JSON.\n        throw new Error(JSON.parse(body).message || `Unknown error fetching '${url}'`);\n      }\n      if (status === 200) {\n        // eslint-disable-next-line no-eval\n        return eval(body);\n      } else {\n        // Format Metro errors if possible.\n        if (process.env.NODE_ENV === 'development') {\n          // body can be an error from Metro if a module is missing.\n          // {\"originModulePath\":\"/Users/evanbacon/Documents/GitHub/expo/.\",\"targetModuleName\":\"./http://localhost:8081/node_modules/react-native/index.js\",\"message\":\"...\"}\n          var error = jsonParseOptional(body);\n          if (error) {\n            // TODO: This is essentially like the Metro native red box errors. We should do a better job formatting them so\n            // the user experience doesn't feel bad. This can be tested by loading a split bundle that results in a missing module error from Metro.\n            throw new _errors.MetroServerError(error, url);\n          }\n        }\n        throw new Error(`Failed to load split bundle from URL: ${url}\\n${body}`);\n      }\n    });\n  }\n  function jsonParseOptional(json) {\n    try {\n      return JSON.parse(json);\n    } catch {\n      return null;\n    }\n  }\n});","lineCount":57,"map":[[7,2,14,0,"exports"],[7,9,14,0],[7,10,14,0,"fetchThenEvalAsync"],[7,28,14,0],[7,31,14,0,"fetchThenEvalAsync"],[7,49,14,0],[8,2,7,0],[8,6,7,0,"_errors"],[8,13,7,0],[8,16,7,0,"require"],[8,23,7,0],[8,24,7,0,"_dependencyMap"],[8,38,7,0],[9,2,8,0],[9,6,8,0,"_fetchAsync"],[9,17,8,0],[9,20,8,0,"require"],[9,27,8,0],[9,28,8,0,"_dependencyMap"],[9,42,8,0],[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[17,2,9,0],[18,0,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,2,14,7],[22,11,14,16,"fetchThenEvalAsync"],[22,29,14,34,"fetchThenEvalAsync"],[22,30,14,35,"url"],[22,33,14,46],[22,35,14,63],[23,4,15,2],[23,11,15,9],[23,15,15,9,"fetchAsync"],[23,26,15,19],[23,27,15,19,"fetchAsync"],[23,37,15,19],[23,39,15,20,"url"],[23,42,15,23],[23,43,15,24],[23,44,15,25,"then"],[23,48,15,29],[23,49,15,30,"_ref"],[23,53,15,30],[23,57,15,61],[24,6,15,61],[24,10,15,33,"body"],[24,14,15,37],[24,17,15,37,"_ref"],[24,21,15,37],[24,22,15,33,"body"],[24,26,15,37],[25,8,15,39,"status"],[25,14,15,45],[25,17,15,45,"_ref"],[25,21,15,45],[25,22,15,39,"status"],[25,28,15,45],[26,8,15,47,"headers"],[26,15,15,54],[26,18,15,54,"_ref"],[26,22,15,54],[26,23,15,47,"headers"],[26,30,15,54],[27,6,16,4],[27,10,17,6,"headers"],[27,17,17,13],[27,19,17,15,"has"],[27,22,17,18],[27,25,17,21],[27,39,17,35],[27,40,17,36],[27,44,17,40],[27,48,17,44],[27,52,18,6,"headers"],[27,59,18,13],[27,60,18,14,"get"],[27,63,18,17],[27,64,18,18],[27,78,18,32],[27,79,18,33],[27,80,18,35,"includes"],[27,88,18,43],[27,89,18,44],[27,107,18,62],[27,108,18,63],[27,110,19,6],[28,8,20,6],[29,8,21,6],[29,14,21,12],[29,18,21,16,"Error"],[29,23,21,21],[29,24,21,22,"JSON"],[29,28,21,26],[29,29,21,27,"parse"],[29,34,21,32],[29,35,21,33,"body"],[29,39,21,37],[29,40,21,38],[29,41,21,39,"message"],[29,48,21,46],[29,52,21,50],[29,79,21,77,"url"],[29,82,21,80],[29,85,21,83],[29,86,21,84],[30,6,22,4],[31,6,24,4],[31,10,24,8,"status"],[31,16,24,14],[31,21,24,19],[31,24,24,22],[31,26,24,24],[32,8,25,6],[33,8,26,6],[33,15,26,13,"eval"],[33,19,26,17],[33,20,26,18,"body"],[33,24,26,22],[33,25,26,23],[34,6,27,4],[34,7,27,5],[34,13,27,11],[35,8,28,6],[36,8,29,6],[36,12,29,10,"process"],[36,19,29,17],[36,20,29,18,"env"],[36,23,29,21],[36,24,29,22,"NODE_ENV"],[36,32,29,30],[36,37,29,35],[36,50,29,48],[36,52,29,50],[37,10,30,8],[38,10,31,8],[39,10,32,8],[39,14,32,14,"error"],[39,19,32,19],[39,22,32,22,"jsonParseOptional"],[39,39,32,39],[39,40,32,40,"body"],[39,44,32,44],[39,45,32,45],[40,10,33,8],[40,14,33,12,"error"],[40,19,33,17],[40,21,33,19],[41,12,34,10],[42,12,35,10],[43,12,36,10],[43,18,36,16],[43,22,36,20,"MetroServerError"],[43,29,36,36],[43,30,36,36,"MetroServerError"],[43,46,36,36],[43,47,36,37,"error"],[43,52,36,42],[43,54,36,44,"url"],[43,57,36,47],[43,58,36,48],[44,10,37,8],[45,8,38,6],[46,8,40,6],[46,14,40,12],[46,18,40,16,"Error"],[46,23,40,21],[46,24,40,22],[46,65,40,63,"url"],[46,68,40,66],[46,73,40,71,"body"],[46,77,40,75],[46,79,40,77],[46,80,40,78],[47,6,41,4],[48,4,42,2],[48,5,42,3],[48,6,42,4],[49,2,43,0],[50,2,45,0],[50,11,45,9,"jsonParseOptional"],[50,28,45,26,"jsonParseOptional"],[50,29,45,27,"json"],[50,33,45,39],[50,35,45,46],[51,4,46,2],[51,8,46,6],[52,6,47,4],[52,13,47,11,"JSON"],[52,17,47,15],[52,18,47,16,"parse"],[52,23,47,21],[52,24,47,22,"json"],[52,28,47,26],[52,29,47,27],[53,4,48,2],[53,5,48,3],[53,6,48,4],[53,12,48,10],[54,6,49,4],[54,13,49,11],[54,17,49,15],[55,4,50,2],[56,2,51,0],[57,0,51,1],[57,3]],"functionMap":{"names":["<global>","fetchThenEvalAsync","fetchAsync.then$argument_0","jsonParseOptional"],"mappings":"AAA;OCa;8BCC;GD2B;CDC;AGE;CHM"},"hasCjsExports":false},"type":"js/module"}]}