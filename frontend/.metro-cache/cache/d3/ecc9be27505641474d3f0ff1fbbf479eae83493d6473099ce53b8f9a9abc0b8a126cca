{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":190},"end":{"line":5,"column":52,"index":225}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":28,"index":255},"end":{"line":6,"column":56,"index":283}}],"key":"lFSV8MloDpR3EnWyvloF9Uq7qFY=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":305},"end":{"line":7,"column":42,"index":327}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./getReactNavigationConfig","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":35,"index":364},"end":{"line":8,"column":72,"index":401}}],"key":"vHLl09Fo1cot8Q7f7epxLLVamLs=","exportNames":["*"],"imports":1}},{"name":"./getRoutesRedirects","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":29,"index":432},"end":{"line":9,"column":60,"index":463}}],"key":"E6xJvmMQ8Tg9oU66GfkFALUrP4w=","exportNames":["*"],"imports":1}},{"name":"./link/linking","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":483},"end":{"line":10,"column":43,"index":508}}],"key":"I1McWHLUyOzTMAaygW/PL/mjMmY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getNavigationConfig = getNavigationConfig;\n  exports.getLinkingConfig = getLinkingConfig;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const expo_modules_core_1 = require(_dependencyMap[1], \"expo-modules-core\");\n  const constants_1 = require(_dependencyMap[2], \"./constants\");\n  const getReactNavigationConfig_1 = require(_dependencyMap[3], \"./getReactNavigationConfig\");\n  const getRoutesRedirects_1 = require(_dependencyMap[4], \"./getRoutesRedirects\");\n  const linking_1 = require(_dependencyMap[5], \"./link/linking\");\n  function getNavigationConfig(routes, metaOnly = true) {\n    return {\n      screens: {\n        [constants_1.INTERNAL_SLOT_NAME]: Object.assign({\n          path: ''\n        }, (0, getReactNavigationConfig_1.getReactNavigationConfig)(routes, metaOnly))\n      }\n    };\n  }\n  function getLinkingConfig(routes, context, getRouteInfo, {\n    metaOnly = true,\n    serverUrl,\n    redirects\n  } = {}) {\n    // Returning `undefined` / `null from `getInitialURL` are valid values, so we need to track if it's been called.\n    let hasCachedInitialUrl = false;\n    let initialUrl;\n    const nativeLinkingKey = context.keys().find(key => key.match(/^\\.\\/\\+native-intent\\.[tj]sx?$/));\n    const nativeLinking = nativeLinkingKey ? context(nativeLinkingKey) : undefined;\n    const config = getNavigationConfig(routes, metaOnly);\n    return {\n      prefixes: [],\n      config,\n      // A custom getInitialURL is used on native to ensure the app always starts at\n      // the root path if it's launched from something other than a deep link.\n      // This helps keep the native functionality working like the web functionality.\n      // For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n      // then `/index` would be used on web and `/settings` would be used on native.\n      getInitialURL() {\n        // Expo Router calls `getInitialURL` twice, which may confuse the user if they provide a custom `getInitialURL`.\n        // Therefor we memoize the result.\n        if (!hasCachedInitialUrl) {\n          if (expo_modules_core_1.Platform.OS === 'web') {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n          } else {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n            if (typeof initialUrl === 'string') {\n              initialUrl = (0, getRoutesRedirects_1.applyRedirects)(initialUrl, redirects);\n              if (initialUrl && typeof nativeLinking?.redirectSystemPath === 'function') {\n                initialUrl = nativeLinking.redirectSystemPath({\n                  path: initialUrl,\n                  initial: true\n                });\n              }\n            } else if (initialUrl) {\n              initialUrl = initialUrl.then(url => {\n                url = (0, getRoutesRedirects_1.applyRedirects)(url, redirects);\n                if (url && typeof nativeLinking?.redirectSystemPath === 'function') {\n                  return nativeLinking.redirectSystemPath({\n                    path: url,\n                    initial: true\n                  });\n                }\n                return url;\n              });\n            }\n          }\n          hasCachedInitialUrl = true;\n        }\n        return initialUrl;\n      },\n      subscribe: (0, linking_1.subscribe)(nativeLinking, redirects),\n      getStateFromPath: (path, options) => {\n        return (0, linking_1.getStateFromPath)(path, options, getRouteInfo().segments);\n      },\n      getPathFromState(state, options) {\n        return (0, linking_1.getPathFromState)(state, Object.assign({}, config, options, {\n          screens: config.screens ?? options?.screens ?? {}\n        })) ?? '/';\n      },\n      // Add all functions to ensure the types never need to fallback.\n      // This is a convenience for usage in the package.\n      getActionFromState: native_1.getActionFromState\n    };\n  }\n});","lineCount":90,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getNavigationConfig"],[7,29,3,27],[7,32,3,30,"getNavigationConfig"],[7,51,3,49],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"getLinkingConfig"],[8,26,4,24],[8,29,4,27,"getLinkingConfig"],[8,45,4,43],[9,2,5,0],[9,8,5,6,"native_1"],[9,16,5,14],[9,19,5,17,"require"],[9,26,5,24],[9,27,5,24,"_dependencyMap"],[9,41,5,24],[9,72,5,51],[9,73,5,52],[10,2,6,0],[10,8,6,6,"expo_modules_core_1"],[10,27,6,25],[10,30,6,28,"require"],[10,37,6,35],[10,38,6,35,"_dependencyMap"],[10,52,6,35],[10,76,6,55],[10,77,6,56],[11,2,7,0],[11,8,7,6,"constants_1"],[11,19,7,17],[11,22,7,20,"require"],[11,29,7,27],[11,30,7,27,"_dependencyMap"],[11,44,7,27],[11,62,7,41],[11,63,7,42],[12,2,8,0],[12,8,8,6,"getReactNavigationConfig_1"],[12,34,8,32],[12,37,8,35,"require"],[12,44,8,42],[12,45,8,42,"_dependencyMap"],[12,59,8,42],[12,92,8,71],[12,93,8,72],[13,2,9,0],[13,8,9,6,"getRoutesRedirects_1"],[13,28,9,26],[13,31,9,29,"require"],[13,38,9,36],[13,39,9,36,"_dependencyMap"],[13,53,9,36],[13,80,9,59],[13,81,9,60],[14,2,10,0],[14,8,10,6,"linking_1"],[14,17,10,15],[14,20,10,18,"require"],[14,27,10,25],[14,28,10,25,"_dependencyMap"],[14,42,10,25],[14,63,10,42],[14,64,10,43],[15,2,11,0],[15,11,11,9,"getNavigationConfig"],[15,30,11,28,"getNavigationConfig"],[15,31,11,29,"routes"],[15,37,11,35],[15,39,11,37,"metaOnly"],[15,47,11,45],[15,50,11,48],[15,54,11,52],[15,56,11,54],[16,4,12,4],[16,11,12,11],[17,6,13,8,"screens"],[17,13,13,15],[17,15,13,17],[18,8,14,12],[18,9,14,13,"constants_1"],[18,20,14,24],[18,21,14,25,"INTERNAL_SLOT_NAME"],[18,39,14,43],[18,42,14,43,"Object"],[18,48,14,43],[18,49,14,43,"assign"],[18,55,14,43],[19,10,15,16,"path"],[19,14,15,20],[19,16,15,22],[20,8,15,24],[20,11,16,19],[20,12,16,20],[20,13,16,21],[20,15,16,23,"getReactNavigationConfig_1"],[20,41,16,49],[20,42,16,50,"getReactNavigationConfig"],[20,66,16,74],[20,68,16,76,"routes"],[20,74,16,82],[20,76,16,84,"metaOnly"],[20,84,16,92],[20,85,16,93],[21,6,18,8],[22,4,19,4],[22,5,19,5],[23,2,20,0],[24,2,21,0],[24,11,21,9,"getLinkingConfig"],[24,27,21,25,"getLinkingConfig"],[24,28,21,26,"routes"],[24,34,21,32],[24,36,21,34,"context"],[24,43,21,41],[24,45,21,43,"getRouteInfo"],[24,57,21,55],[24,59,21,57],[25,4,21,59,"metaOnly"],[25,12,21,67],[25,15,21,70],[25,19,21,74],[26,4,21,76,"serverUrl"],[26,13,21,85],[27,4,21,87,"redirects"],[28,2,21,97],[28,3,21,98],[28,6,21,101],[28,7,21,102],[28,8,21,103],[28,10,21,105],[29,4,22,4],[30,4,23,4],[30,8,23,8,"hasCachedInitialUrl"],[30,27,23,27],[30,30,23,30],[30,35,23,35],[31,4,24,4],[31,8,24,8,"initialUrl"],[31,18,24,18],[32,4,25,4],[32,10,25,10,"nativeLinkingKey"],[32,26,25,26],[32,29,25,29,"context"],[32,36,25,36],[32,37,26,9,"keys"],[32,41,26,13],[32,42,26,14],[32,43,26,15],[32,44,27,9,"find"],[32,48,27,13],[32,49,27,15,"key"],[32,52,27,18],[32,56,27,23,"key"],[32,59,27,26],[32,60,27,27,"match"],[32,65,27,32],[32,66,27,33],[32,98,27,65],[32,99,27,66],[32,100,27,67],[33,4,28,4],[33,10,28,10,"nativeLinking"],[33,23,28,23],[33,26,28,26,"nativeLinkingKey"],[33,42,28,42],[33,45,29,10,"context"],[33,52,29,17],[33,53,29,18,"nativeLinkingKey"],[33,69,29,34],[33,70,29,35],[33,73,30,10,"undefined"],[33,82,30,19],[34,4,31,4],[34,10,31,10,"config"],[34,16,31,16],[34,19,31,19,"getNavigationConfig"],[34,38,31,38],[34,39,31,39,"routes"],[34,45,31,45],[34,47,31,47,"metaOnly"],[34,55,31,55],[34,56,31,56],[35,4,32,4],[35,11,32,11],[36,6,33,8,"prefixes"],[36,14,33,16],[36,16,33,18],[36,18,33,20],[37,6,34,8,"config"],[37,12,34,14],[38,6,35,8],[39,6,36,8],[40,6,37,8],[41,6,38,8],[42,6,39,8],[43,6,40,8,"getInitialURL"],[43,19,40,21,"getInitialURL"],[43,20,40,21],[43,22,40,24],[44,8,41,12],[45,8,42,12],[46,8,43,12],[46,12,43,16],[46,13,43,17,"hasCachedInitialUrl"],[46,32,43,36],[46,34,43,38],[47,10,44,16],[47,14,44,20,"expo_modules_core_1"],[47,33,44,39],[47,34,44,40,"Platform"],[47,42,44,48],[47,43,44,49,"OS"],[47,45,44,51],[47,50,44,56],[47,55,44,61],[47,57,44,63],[48,12,45,20,"initialUrl"],[48,22,45,30],[48,25,45,33,"serverUrl"],[48,34,45,42],[48,38,45,46],[48,39,45,47],[48,40,45,48],[48,42,45,50,"linking_1"],[48,51,45,59],[48,52,45,60,"getInitialURL"],[48,65,45,73],[48,67,45,75],[48,68,45,76],[49,10,46,16],[49,11,46,17],[49,17,47,21],[50,12,48,20,"initialUrl"],[50,22,48,30],[50,25,48,33,"serverUrl"],[50,34,48,42],[50,38,48,46],[50,39,48,47],[50,40,48,48],[50,42,48,50,"linking_1"],[50,51,48,59],[50,52,48,60,"getInitialURL"],[50,65,48,73],[50,67,48,75],[50,68,48,76],[51,12,49,20],[51,16,49,24],[51,23,49,31,"initialUrl"],[51,33,49,41],[51,38,49,46],[51,46,49,54],[51,48,49,56],[52,14,50,24,"initialUrl"],[52,24,50,34],[52,27,50,37],[52,28,50,38],[52,29,50,39],[52,31,50,41,"getRoutesRedirects_1"],[52,51,50,61],[52,52,50,62,"applyRedirects"],[52,66,50,76],[52,68,50,78,"initialUrl"],[52,78,50,88],[52,80,50,90,"redirects"],[52,89,50,99],[52,90,50,100],[53,14,51,24],[53,18,51,28,"initialUrl"],[53,28,51,38],[53,32,51,42],[53,39,51,49,"nativeLinking"],[53,52,51,62],[53,54,51,64,"redirectSystemPath"],[53,72,51,82],[53,77,51,87],[53,87,51,97],[53,89,51,99],[54,16,52,28,"initialUrl"],[54,26,52,38],[54,29,52,41,"nativeLinking"],[54,42,52,54],[54,43,52,55,"redirectSystemPath"],[54,61,52,73],[54,62,52,74],[55,18,52,76,"path"],[55,22,52,80],[55,24,52,82,"initialUrl"],[55,34,52,92],[56,18,52,94,"initial"],[56,25,52,101],[56,27,52,103],[57,16,52,108],[57,17,52,109],[57,18,52,110],[58,14,53,24],[59,12,54,20],[59,13,54,21],[59,19,55,25],[59,23,55,29,"initialUrl"],[59,33,55,39],[59,35,55,41],[60,14,56,24,"initialUrl"],[60,24,56,34],[60,27,56,37,"initialUrl"],[60,37,56,47],[60,38,56,48,"then"],[60,42,56,52],[60,43,56,54,"url"],[60,46,56,57],[60,50,56,62],[61,16,57,28,"url"],[61,19,57,31],[61,22,57,34],[61,23,57,35],[61,24,57,36],[61,26,57,38,"getRoutesRedirects_1"],[61,46,57,58],[61,47,57,59,"applyRedirects"],[61,61,57,73],[61,63,57,75,"url"],[61,66,57,78],[61,68,57,80,"redirects"],[61,77,57,89],[61,78,57,90],[62,16,58,28],[62,20,58,32,"url"],[62,23,58,35],[62,27,58,39],[62,34,58,46,"nativeLinking"],[62,47,58,59],[62,49,58,61,"redirectSystemPath"],[62,67,58,79],[62,72,58,84],[62,82,58,94],[62,84,58,96],[63,18,59,32],[63,25,59,39,"nativeLinking"],[63,38,59,52],[63,39,59,53,"redirectSystemPath"],[63,57,59,71],[63,58,59,72],[64,20,59,74,"path"],[64,24,59,78],[64,26,59,80,"url"],[64,29,59,83],[65,20,59,85,"initial"],[65,27,59,92],[65,29,59,94],[66,18,59,99],[66,19,59,100],[66,20,59,101],[67,16,60,28],[68,16,61,28],[68,23,61,35,"url"],[68,26,61,38],[69,14,62,24],[69,15,62,25],[69,16,62,26],[70,12,63,20],[71,10,64,16],[72,10,65,16,"hasCachedInitialUrl"],[72,29,65,35],[72,32,65,38],[72,36,65,42],[73,8,66,12],[74,8,67,12],[74,15,67,19,"initialUrl"],[74,25,67,29],[75,6,68,8],[75,7,68,9],[76,6,69,8,"subscribe"],[76,15,69,17],[76,17,69,19],[76,18,69,20],[76,19,69,21],[76,21,69,23,"linking_1"],[76,30,69,32],[76,31,69,33,"subscribe"],[76,40,69,42],[76,42,69,44,"nativeLinking"],[76,55,69,57],[76,57,69,59,"redirects"],[76,66,69,68],[76,67,69,69],[77,6,70,8,"getStateFromPath"],[77,22,70,24],[77,24,70,26,"getStateFromPath"],[77,25,70,27,"path"],[77,29,70,31],[77,31,70,33,"options"],[77,38,70,40],[77,43,70,45],[78,8,71,12],[78,15,71,19],[78,16,71,20],[78,17,71,21],[78,19,71,23,"linking_1"],[78,28,71,32],[78,29,71,33,"getStateFromPath"],[78,45,71,49],[78,47,71,51,"path"],[78,51,71,55],[78,53,71,57,"options"],[78,60,71,64],[78,62,71,66,"getRouteInfo"],[78,74,71,78],[78,75,71,79],[78,76,71,80],[78,77,71,81,"segments"],[78,85,71,89],[78,86,71,90],[79,6,72,8],[79,7,72,9],[80,6,73,8,"getPathFromState"],[80,22,73,24,"getPathFromState"],[80,23,73,25,"state"],[80,28,73,30],[80,30,73,32,"options"],[80,37,73,39],[80,39,73,41],[81,8,74,12],[81,15,74,20],[81,16,74,21],[81,17,74,22],[81,19,74,24,"linking_1"],[81,28,74,33],[81,29,74,34,"getPathFromState"],[81,45,74,50],[81,47,74,52,"state"],[81,52,74,57],[81,54,74,57,"Object"],[81,60,74,57],[81,61,74,57,"assign"],[81,67,74,57],[81,72,75,19,"config"],[81,78,75,25],[81,80,76,19,"options"],[81,87,76,26],[82,10,77,16,"screens"],[82,17,77,23],[82,19,77,25,"config"],[82,25,77,31],[82,26,77,32,"screens"],[82,33,77,39],[82,37,77,43,"options"],[82,44,77,50],[82,46,77,52,"screens"],[82,53,77,59],[82,57,77,63],[82,58,77,64],[83,8,77,65],[83,10,78,13],[83,11,78,14],[83,15,78,18],[83,18,78,21],[84,6,79,8],[84,7,79,9],[85,6,80,8],[86,6,81,8],[87,6,82,8,"getActionFromState"],[87,24,82,26],[87,26,82,28,"native_1"],[87,34,82,36],[87,35,82,37,"getActionFromState"],[88,4,83,4],[88,5,83,5],[89,2,84,0],[90,0,84,1],[90,3]],"functionMap":{"names":["<global>","getNavigationConfig","getLinkingConfig","context.keys.find$argument_0","getInitialURL","initialUrl.then$argument_0","getStateFromPath","getPathFromState"],"mappings":"AAA;ACU;CDS;AEC;cCM,oDD;QEa;qDCgB;yBDM;SFM;0BIE;SJE;QKC;SLM;CFK"},"hasCjsExports":true},"type":"js/module"}]}