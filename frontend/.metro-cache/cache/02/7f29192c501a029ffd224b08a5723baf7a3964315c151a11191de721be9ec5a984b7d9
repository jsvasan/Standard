{"dependencies":[],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,e,d){\"use strict\";async function t(t,n,o){if(!t.dynamic&&o)throw new Error('Cannot use generateStaticParams in a route without dynamic segments: '+t.contextKey);if(o){const c=await o({params:n.parentParams||{}});return i(c),c.forEach(n=>s(t,n)),c}return null}async function n(i,c){if(!i?.dynamic&&!i?.children?.length)return[i];const s=await i.loadRoute(),u=await t(i,c,s.generateStaticParams)??[],l=async t=>{const s=[];for(const o of i.children){const i=await n(o,{...c,parentParams:t});s.push(...i)}return o(s,t=>t.route)};if(!u.length){const t={...c.parentParams};return i.children=await l(t),[i]}const y=(t,n)=>{let o=t;return i.dynamic?.map(t=>{const i=n[t.name],c=Array.isArray(i)?i.join('/'):i;o=t.deep?o.replace(`[...${t.name}]`,c):o.replace(`[${t.name}]`,i)}),o},f=await Promise.all(u.map(async t=>{const n={...c.parentParams,...t},o=await l(n),s=y(i.route,t),u=y(i.contextKey,t);return{...i,contextKey:u,dynamic:null,route:s,children:o}}));return[i,...f]}function o(t,n){const o={};return t.filter(t=>{const i=n(t);return!o[i]&&(o[i]=!0,!0)})}function i(t){if(!Array.isArray(t))throw new Error(`generateStaticParams() must return an array of params, received ${t}`)}function c(t,n){const o={...n};for(const n of t)null==o[n]?o[n]=String(o[n]):o[n]=`\"${o[n]}\"`;return['{',Object.entries(o).map(([t,n])=>`  \"${t}\": ${n}`).join(',\\n'),'}'].join('\\n')}function s(t,n){if(!t.dynamic)throw new Error('assertStaticParams() must be called on a dynamic route.');if(!t.dynamic.every(t=>{const o=n[t.name];return null!=o})){const o=t.dynamic.length>1?'s':'',i=t.dynamic.map(t=>t.name);throw new Error(`[${t.contextKey}]: generateStaticParams() must return an array of params that match the dynamic route${o}. Expected non-nullish values for key${o}: ${i.map(t=>`\"${t}\"`).join(', ')}.\\nReceived:\\n${c(i,n)}`)}const o=(n,o,i)=>{if('string'!=typeof o)throw new Error(`generateStaticParams() for route \"${t.contextKey}\" expected param \"${n.name}\" to be of type string, instead found \"${typeof o}\" while parsing \"${o}\".`);const c=o.split('/').filter(Boolean);if(c.length>1&&!i)throw new Error(`generateStaticParams() for route \"${t.contextKey}\" expected param \"${n.name}\" to not contain \"/\" (multiple segments) while parsing \"${o}\".`);if(0===c.length)throw new Error(`generateStaticParams() for route \"${t.contextKey}\" expected param \"${n.name}\" not to be empty while parsing \"${o}\".`)};for(const i of t.dynamic){let t=n[i.name];i.deep?(Array.isArray(t)&&(t=t.filter(Boolean).join('/')),o(i,t,!0)):o(i,t)}}Object.defineProperty(e,\"__esModule\",{value:!0}),e.loadStaticParamsAsync=async function(t){const o=await Promise.all(t.children.map(t=>n(t,{parentParams:{}})));return t.children=o.flat(),t},e.evalStaticParamsAsync=t,e.assertStaticParams=s});","lineCount":1,"map":[[1,29,1,0],[1,42,11,0,"async"],[1,57,11,15,"evalStaticParamsAsync"],[1,59,11,37,"route"],[1,61,11,44,"props"],[1,63,11,51,"generateStaticParams"],[1,66,12,4],[1,70,12,9,"route"],[1,72,12,15,"dynamic"],[1,81,12,26,"generateStaticParams"],[1,83,13,8],[1,89,13,14],[1,93,13,18,"Error"],[1,99,13,24],[1,171,13,98,"route"],[1,173,13,104,"contextKey"],[1,185,15,4],[1,188,15,8,"generateStaticParams"],[1,190,15,30],[1,191,16,8],[1,197,16,14,"staticParams"],[1,205,16,35,"generateStaticParams"],[1,207,16,56],[1,208,17,12,"params"],[1,215,17,20,"props"],[1,217,17,26,"parentParams"],[1,231,17,42],[1,232,17,43],[1,236,22,8],[1,243,19,8,"assertStaticParamsType"],[1,245,19,31,"staticParams"],[1,248,21,8,"staticParams"],[1,250,21,21,"forEach"],[1,258,21,30,"params"],[1,261,21,41,"assertStaticParams"],[1,263,21,60,"route"],[1,265,21,67,"params"],[1,269,22,15,"staticParams"],[1,270,23,4],[1,271,24,4],[1,278,24,11],[1,282,25,0],[1,283,26,0,"async"],[1,298,26,15,"loadStaticParamsRecursive"],[1,300,26,41,"route"],[1,302,26,48,"props"],[1,305,27,4],[1,309,27,9,"route"],[1,312,27,16,"dynamic"],[1,322,27,28,"route"],[1,325,27,35,"children"],[1,335,27,45,"length"],[1,342,28,8],[1,348,28,15],[1,349,28,16,"route"],[1,352,30,4],[1,358,30,10,"loaded"],[1,366,30,25,"route"],[1,368,30,31,"loadRoute"],[1,380,31,10,"staticParams"],[1,388,31,32,"evalStaticParamsAsync"],[1,390,31,54,"route"],[1,392,31,61,"props"],[1,394,31,68,"loaded"],[1,396,31,75,"generateStaticParams"],[1,419,31,101],[1,422,32,10,"traverseForNode"],[1,424,32,28,"async"],[1,434,33,8],[1,440,33,14,"nextChildren"],[1,442,33,29],[1,445,34,8],[1,449,34,13],[1,455,34,19,"child"],[1,460,34,28,"route"],[1,462,34,34,"children"],[1,471,34,44],[1,472,35,12],[1,478,35,18,"children"],[1,486,35,35,"loadStaticParamsRecursive"],[1,488,35,61,"child"],[1,490,35,68],[1,494,36,19,"props"],[1,496,37,16,"parentParams"],[1,509,37,30,"nextParams"],[1,513,39,12,"nextChildren"],[1,515,39,25,"push"],[1,523,39,33,"children"],[1,525,40,8],[1,526,41,8],[1,533,41,15,"uniqBy"],[1,535,41,22,"nextChildren"],[1,537,41,37,"i"],[1,540,41,43,"i"],[1,542,41,45,"route"],[1,550,43,4],[1,554,43,9,"staticParams"],[1,556,43,22,"length"],[1,563,43,30],[1,564,44,8],[1,570,44,14,"nextParams"],[1,572,44,27],[1,576,45,15,"props"],[1,578,45,21,"parentParams"],[1,592,48,8],[1,599,47,8,"route"],[1,601,47,14,"children"],[1,616,47,31,"traverseForNode"],[1,618,47,47,"nextParams"],[1,621,48,15],[1,622,48,16,"route"],[1,624,49,4],[1,625,50,4],[1,631,50,10,"createParsedRouteName"],[1,633,50,34,"createParsedRouteName"],[1,634,50,35,"input"],[1,636,50,42,"params"],[1,641,51,8],[1,645,51,12,"parsedRouteName"],[1,647,51,30,"input"],[1,649,62,8],[1,656,52,8,"route"],[1,658,52,14,"dynamic"],[1,667,52,23,"map"],[1,671,52,28,"query"],[1,675,53,12],[1,681,53,18,"param"],[1,683,53,26,"params"],[1,685,53,33,"query"],[1,687,53,39,"name"],[1,693,54,18,"formattedParameter"],[1,695,54,39,"Array"],[1,701,54,45,"isArray"],[1,709,54,53,"param"],[1,712,54,62,"param"],[1,714,54,68,"join"],[1,719,54,73],[1,724,54,80,"param"],[1,726,56,16,"parsedRouteName"],[1,728,55,16,"query"],[1,730,55,22,"deep"],[1,735,56,34,"parsedRouteName"],[1,737,56,50,"replace"],[1,745,56,58],[1,752,56,65,"query"],[1,754,56,71,"name"],[1,762,56,80,"formattedParameter"],[1,765,59,34,"parsedRouteName"],[1,767,59,50,"replace"],[1,775,59,58],[1,779,59,62,"query"],[1,781,59,68,"name"],[1,789,59,77,"param"],[1,794,62,15,"parsedRouteName"],[1,797,64,10,"generatedRoutes"],[1,805,64,34,"Promise"],[1,813,64,42,"all"],[1,817,64,46,"staticParams"],[1,819,64,59,"map"],[1,823,64,63,"async"],[1,833,65,8],[1,839,65,14,"nextParams"],[1,841,65,27],[1,845,66,15,"props"],[1,847,66,21,"parentParams"],[1,863,67,15,"params"],[1,866,69,14,"dynamicChildren"],[1,874,69,38,"traverseForNode"],[1,876,69,54,"nextParams"],[1,879,70,14,"parsedRoute"],[1,881,70,28,"createParsedRouteName"],[1,883,70,50,"route"],[1,885,70,56,"route"],[1,891,70,63,"params"],[1,894,71,14,"generatedContextKey"],[1,896,71,36,"createParsedRouteName"],[1,898,71,58,"route"],[1,900,71,64,"contextKey"],[1,911,71,76,"params"],[1,914,72,8],[1,920,72,15],[1,924,73,15,"route"],[1,926,75,12,"contextKey"],[1,937,75,24,"generatedContextKey"],[1,939,77,12,"dynamic"],[1,947,77,21],[1,952,78,12,"route"],[1,958,78,19,"parsedRoute"],[1,960,79,12,"children"],[1,969,79,22,"dynamicChildren"],[1,975,82,4],[1,981,82,11],[1,982,82,12,"route"],[1,987,82,22,"generatedRoutes"],[1,989,83,0],[1,990,85,0],[1,999,85,9,"uniqBy"],[1,1001,85,16,"array"],[1,1003,85,23,"key"],[1,1006,86,4],[1,1012,86,10,"seen"],[1,1014,86,17],[1,1015,86,18],[1,1017,87,4],[1,1024,87,11,"array"],[1,1026,87,17,"filter"],[1,1033,87,25,"item"],[1,1037,88,8],[1,1043,88,14,"k"],[1,1045,88,18,"key"],[1,1047,88,22,"item"],[1,1050,89,8],[1,1057,89,12,"seen"],[1,1059,89,17,"k"],[1,1064,92,8,"seen"],[1,1066,92,13,"k"],[1,1070,92,18],[1,1073,93,15],[1,1077,95,0],[1,1078,96,0],[1,1087,96,9,"assertStaticParamsType"],[1,1089,96,32,"params"],[1,1092,97,4],[1,1096,97,9,"Array"],[1,1102,97,15,"isArray"],[1,1110,97,23,"params"],[1,1113,98,8],[1,1119,98,14],[1,1123,98,18,"Error"],[1,1129,98,24],[1,1196,98,91,"params"],[1,1200,100,0],[1,1201,101,0],[1,1210,101,9,"formatExpected"],[1,1212,101,24,"expected"],[1,1214,101,34,"received"],[1,1217,102,4],[1,1223,102,10,"total"],[1,1225,102,18],[1,1229,103,11,"received"],[1,1232,105,4],[1,1236,105,9],[1,1242,105,15,"item"],[1,1247,105,23,"expected"],[1,1249,106,27],[1,1255,106,12,"total"],[1,1257,106,18,"item"],[1,1260,107,12,"total"],[1,1262,107,18,"item"],[1,1265,107,26,"String"],[1,1272,107,33,"total"],[1,1274,107,39,"item"],[1,1278,110,12,"total"],[1,1280,110,18,"item"],[1,1283,110,26],[1,1287,110,30,"total"],[1,1289,110,36,"item"],[1,1295,113,4],[1,1301,113,11],[1,1302,114,8],[1,1306,115,8,"Object"],[1,1313,115,15,"entries"],[1,1321,115,23,"total"],[1,1324,116,13,"map"],[1,1328,116,17],[1,1330,116,19,"key"],[1,1332,116,24,"value"],[1,1337,116,35],[1,1343,116,41,"key"],[1,1350,116,50,"value"],[1,1355,117,13,"join"],[1,1360,117,18],[1,1367,118,8],[1,1372,119,6,"join"],[1,1377,119,11],[1,1382,120,0],[1,1383,121,0],[1,1392,121,9,"assertStaticParams"],[1,1394,121,28,"route"],[1,1396,121,35,"params"],[1,1399,123,4],[1,1403,123,9,"route"],[1,1405,123,15,"dynamic"],[1,1413,124,8],[1,1419,124,14],[1,1423,124,18,"Error"],[1,1429,124,24],[1,1488,130,4],[1,1492,126,20,"route"],[1,1494,126,26,"dynamic"],[1,1502,126,34,"every"],[1,1508,126,41,"dynamic"],[1,1512,127,8],[1,1518,127,14,"value"],[1,1520,127,22,"params"],[1,1522,127,29,"dynamic"],[1,1524,127,37,"name"],[1,1530,128,8],[1,1537,128,15,"value"],[1,1547,130,18],[1,1548,131,8],[1,1554,131,14,"plural"],[1,1556,131,23,"route"],[1,1558,131,29,"dynamic"],[1,1566,131,37,"length"],[1,1573,131,46],[1,1575,131,50],[1,1579,131,56],[1,1582,132,14,"expected"],[1,1584,132,25,"route"],[1,1586,132,31,"dynamic"],[1,1594,132,39,"map"],[1,1598,132,44,"dynamic"],[1,1601,132,56,"dynamic"],[1,1603,132,64,"name"],[1,1609,133,8],[1,1615,133,14],[1,1619,133,18,"Error"],[1,1625,133,24],[1,1629,133,28,"route"],[1,1631,133,34,"contextKey"],[1,1729,133,132,"plural"],[1,1770,133,178,"plural"],[1,1776,133,189,"expected"],[1,1778,134,13,"map"],[1,1782,134,18,"v"],[1,1785,134,24],[1,1789,134,28,"v"],[1,1795,135,13,"join"],[1,1800,135,18],[1,1822,135,40,"formatExpected"],[1,1824,135,55,"expected"],[1,1826,135,65,"params"],[1,1831,136,4],[1,1832,137,4],[1,1838,137,10,"validateSingleParam"],[1,1840,137,32,"validateSingleParam"],[1,1841,137,33,"dynamic"],[1,1843,137,42,"value"],[1,1845,137,49,"allowMultipleSegments"],[1,1850,138,8],[1,1853,138,29],[1,1870,138,19,"value"],[1,1872,139,12],[1,1878,139,18],[1,1882,139,22,"Error"],[1,1888,139,28],[1,1925,139,65,"route"],[1,1927,139,71,"contextKey"],[1,1958,139,102,"dynamic"],[1,1960,139,110,"name"],[1,2013,139,163,"value"],[1,2034,139,188,"value"],[1,2041,141,8],[1,2047,141,14,"parts"],[1,2049,141,22,"value"],[1,2051,141,28,"split"],[1,2057,141,34],[1,2062,141,39,"filter"],[1,2069,141,46,"Boolean"],[1,2078,142,8],[1,2081,142,12,"parts"],[1,2083,142,18,"length"],[1,2090,142,27],[1,2094,142,33,"allowMultipleSegments"],[1,2096,143,12],[1,2102,143,18],[1,2106,143,22,"Error"],[1,2112,143,28],[1,2149,143,65,"route"],[1,2151,143,71,"contextKey"],[1,2182,143,102,"dynamic"],[1,2184,143,110,"name"],[1,2247,143,173,"value"],[1,2254,145,8],[1,2257,145,29],[1,2261,145,12,"parts"],[1,2263,145,18,"length"],[1,2270,146,12],[1,2276,146,18],[1,2280,146,22,"Error"],[1,2286,146,28],[1,2323,146,65,"route"],[1,2325,146,71,"contextKey"],[1,2356,146,102,"dynamic"],[1,2358,146,110,"name"],[1,2398,146,150,"value"],[1,2406,150,4],[1,2410,150,9],[1,2416,150,15,"dynamic"],[1,2421,150,26,"route"],[1,2423,150,32,"dynamic"],[1,2431,150,41],[1,2432,151,8],[1,2436,151,12,"parameter"],[1,2438,151,24,"params"],[1,2440,151,31,"dynamic"],[1,2442,151,39,"name"],[1,2448,152,12,"dynamic"],[1,2450,152,20,"deep"],[1,2456,153,16,"Array"],[1,2462,153,22,"isArray"],[1,2470,153,30,"parameter"],[1,2475,154,16,"parameter"],[1,2477,154,28,"parameter"],[1,2479,154,38,"filter"],[1,2486,154,45,"Boolean"],[1,2495,154,54,"join"],[1,2500,154,59],[1,2506,156,12,"validateSingleParam"],[1,2508,156,32,"dynamic"],[1,2510,156,41,"parameter"],[1,2513,156,52],[1,2517,159,12,"validateSingleParam"],[1,2519,159,32,"dynamic"],[1,2521,159,41,"parameter"],[1,2523,161,4],[1,2524,162,0],[1,2525,2,0,"Object"],[1,2532,2,7,"defineProperty"],[1,2547,2,22,"exports"],[1,2549,2,31],[1,2562,2,45],[1,2563,2,47,"value"],[1,2570,2,54],[1,2574,3,0,"exports"],[1,2576,3,8,"loadStaticParamsAsync"],[1,2598,6,0,"async"],[1,2613,6,37,"route"],[1,2616,7,4],[1,2622,7,10,"expandedChildren"],[1,2630,7,35,"Promise"],[1,2638,7,43,"all"],[1,2642,7,47,"route"],[1,2644,7,53,"children"],[1,2653,7,62,"map"],[1,2657,7,67,"route"],[1,2660,7,77,"loadStaticParamsRecursive"],[1,2662,7,103,"route"],[1,2664,7,110],[1,2665,7,112,"parentParams"],[1,2678,7,126],[1,2679,7,127],[1,2685,9,4],[1,2692,8,4,"route"],[1,2694,8,10,"children"],[1,2703,8,21,"expandedChildren"],[1,2705,8,38,"flat"],[1,2712,9,11,"route"],[1,2713,10,0],[1,2715,4,0,"exports"],[1,2717,4,8,"evalStaticParamsAsync"],[1,2739,4,32,"evalStaticParamsAsync"],[1,2741,5,0,"exports"],[1,2743,5,8,"assertStaticParams"],[1,2762,5,29,"assertStaticParams"],[1,2763,162,1],[1,2766]],"functionMap":{"names":["<global>","loadStaticParamsAsync","route.children.map$argument_0","evalStaticParamsAsync","staticParams.forEach$argument_0","loadStaticParamsRecursive","traverseForNode","uniqBy$argument_1","createParsedRouteName","route.dynamic.map$argument_0","staticParams.map$argument_0","uniqBy","array.filter$argument_0","assertStaticParamsType","formatExpected","Object.entries.map$argument_0","assertStaticParams","route.dynamic.every$argument_0","expected.map$argument_0","validateSingleParam"],"mappings":"AAA;ACK;kECC,iED;CDG;AGC;6BCU,6CD;CHI;AKC;4BCM;oCCS,cD;KDC;kCGQ;2BCE;SDS;KHE;+DKC;KLiB;CLE;AWE;wBCE;KDO;CXC;AaC;CbI;AcC;iBCe,wCD;CdI;AgBC;wCCK;KDG;2CPG,yBO;iBEE,eF;gCGG;KHW;ChBc"}},"type":"js/module"}]}