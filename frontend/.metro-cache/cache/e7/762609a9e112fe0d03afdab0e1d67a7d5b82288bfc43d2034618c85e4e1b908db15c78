{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":46,"index":93}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":94},"end":{"line":5,"column":41,"index":135}}],"key":"099N+Zv4K9pUFNBPk2MtNNMStD8=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":808},"end":{"line":30,"column":48,"index":856}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _reactIs = require(_dependencyMap[1], \"react-is\");\n  var _useRoute = require(_dependencyMap[2], \"./useRoute.js\");\n  var _jsxRuntime = require(_dependencyMap[3], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n\n  /**\n   * Infer the param list from the static navigation config.\n   */\n\n  const MemoizedScreen = /*#__PURE__*/React.memo(({\n    component\n  }) => {\n    const route = (0, _useRoute.useRoute)();\n    const children = /*#__PURE__*/React.createElement(component, {\n      route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  const getItemsFromScreens = (Screen, screens) => {\n    return Object.entries(screens).map(([name, item]) => {\n      let component;\n      let props = {};\n      let useIf;\n      let isNavigator = false;\n      if ('screen' in item) {\n        const {\n          screen,\n          if: _if,\n          ...rest\n        } = item;\n        useIf = _if;\n        props = rest;\n        if ((0, _reactIs.isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _reactIs.isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      const element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _jsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return () => {\n        const shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Screen, {\n          name: name,\n          ...props,\n          children: () => element\n        }, name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    const {\n      Navigator,\n      Group,\n      Screen,\n      config\n    } = tree;\n    const {\n      screens,\n      groups,\n      ...rest\n    } = config;\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    const items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (const key in config) {\n      if (key === 'screens' && screens) {\n        items.push(...getItemsFromScreens(Screen, screens));\n      }\n      if (key === 'groups' && groups) {\n        items.push(...Object.entries(groups).map(([key, {\n          if: useIf,\n          ...group\n        }]) => {\n          const groupItems = getItemsFromScreens(Screen, group.screens);\n          return () => {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            const children = groupItems.map(item => item());\n            const shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _jsxRuntime.jsx)(Group, {\n              navigationKey: key,\n              ...group,\n              children: children\n            }, key);\n          };\n        }));\n      }\n    }\n    const NavigatorComponent = () => {\n      const children = items.map(item => item());\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Navigator, {\n        ...rest,\n        children: children\n      });\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    let initialScreenConfig;\n    const createPathConfigForTree = (t, o, skipInitialDetection) => {\n      const createPathConfigForScreens = (screens, initialRouteName) => {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(([a], [b]) => {\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(([key, item]) => {\n          const screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          let screens;\n          const skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection && screenConfig.path === '') {\n                // We encounter a leaf screen with empty path,\n                // Clear the initial screen config as it's not needed anymore\n                initialScreenConfig = undefined;\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(([, screen]) => Object.keys(screen).length > 0));\n      };\n      const screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (const key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, o?.initialRouteName ?? t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(([, group]) => {\n            Object.assign(screens, createPathConfigForScreens(group.screens, o?.initialRouteName ?? t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    const screens = createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":257,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"createComponentForStaticNavigation"],[7,44,1,13],[7,47,1,13,"createComponentForStaticNavigation"],[7,81,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"createPathConfigForStaticNavigation"],[8,45,1,13],[8,48,1,13,"createPathConfigForStaticNavigation"],[8,83,1,13],[9,2,3,0],[9,6,3,0,"React"],[9,11,3,0],[9,14,3,0,"_interopRequireWildcard"],[9,37,3,0],[9,38,3,0,"require"],[9,45,3,0],[9,46,3,0,"_dependencyMap"],[9,60,3,0],[10,2,4,0],[10,6,4,0,"_reactIs"],[10,14,4,0],[10,17,4,0,"require"],[10,24,4,0],[10,25,4,0,"_dependencyMap"],[10,39,4,0],[11,2,5,0],[11,6,5,0,"_useRoute"],[11,15,5,0],[11,18,5,0,"require"],[11,25,5,0],[11,26,5,0,"_dependencyMap"],[11,40,5,0],[12,2,30,0],[12,6,30,0,"_jsxRuntime"],[12,17,30,0],[12,20,30,0,"require"],[12,27,30,0],[12,28,30,0,"_dependencyMap"],[12,42,30,0],[13,2,30,48],[13,11,30,48,"_interopRequireWildcard"],[13,35,30,48,"e"],[13,36,30,48],[13,38,30,48,"t"],[13,39,30,48],[13,68,30,48,"WeakMap"],[13,75,30,48],[13,81,30,48,"r"],[13,82,30,48],[13,89,30,48,"WeakMap"],[13,96,30,48],[13,100,30,48,"n"],[13,101,30,48],[13,108,30,48,"WeakMap"],[13,115,30,48],[13,127,30,48,"_interopRequireWildcard"],[13,150,30,48],[13,162,30,48,"_interopRequireWildcard"],[13,163,30,48,"e"],[13,164,30,48],[13,166,30,48,"t"],[13,167,30,48],[13,176,30,48,"t"],[13,177,30,48],[13,181,30,48,"e"],[13,182,30,48],[13,186,30,48,"e"],[13,187,30,48],[13,188,30,48,"__esModule"],[13,198,30,48],[13,207,30,48,"e"],[13,208,30,48],[13,214,30,48,"o"],[13,215,30,48],[13,217,30,48,"i"],[13,218,30,48],[13,220,30,48,"f"],[13,221,30,48],[13,226,30,48,"__proto__"],[13,235,30,48],[13,243,30,48,"default"],[13,250,30,48],[13,252,30,48,"e"],[13,253,30,48],[13,270,30,48,"e"],[13,271,30,48],[13,294,30,48,"e"],[13,295,30,48],[13,320,30,48,"e"],[13,321,30,48],[13,330,30,48,"f"],[13,331,30,48],[13,337,30,48,"o"],[13,338,30,48],[13,341,30,48,"t"],[13,342,30,48],[13,345,30,48,"n"],[13,346,30,48],[13,349,30,48,"r"],[13,350,30,48],[13,358,30,48,"o"],[13,359,30,48],[13,360,30,48,"has"],[13,363,30,48],[13,364,30,48,"e"],[13,365,30,48],[13,375,30,48,"o"],[13,376,30,48],[13,377,30,48,"get"],[13,380,30,48],[13,381,30,48,"e"],[13,382,30,48],[13,385,30,48,"o"],[13,386,30,48],[13,387,30,48,"set"],[13,390,30,48],[13,391,30,48,"e"],[13,392,30,48],[13,394,30,48,"f"],[13,395,30,48],[13,411,30,48,"t"],[13,412,30,48],[13,416,30,48,"e"],[13,417,30,48],[13,433,30,48,"t"],[13,434,30,48],[13,441,30,48,"hasOwnProperty"],[13,455,30,48],[13,456,30,48,"call"],[13,460,30,48],[13,461,30,48,"e"],[13,462,30,48],[13,464,30,48,"t"],[13,465,30,48],[13,472,30,48,"i"],[13,473,30,48],[13,477,30,48,"o"],[13,478,30,48],[13,481,30,48,"Object"],[13,487,30,48],[13,488,30,48,"defineProperty"],[13,502,30,48],[13,507,30,48,"Object"],[13,513,30,48],[13,514,30,48,"getOwnPropertyDescriptor"],[13,538,30,48],[13,539,30,48,"e"],[13,540,30,48],[13,542,30,48,"t"],[13,543,30,48],[13,550,30,48,"i"],[13,551,30,48],[13,552,30,48,"get"],[13,555,30,48],[13,559,30,48,"i"],[13,560,30,48],[13,561,30,48,"set"],[13,564,30,48],[13,568,30,48,"o"],[13,569,30,48],[13,570,30,48,"f"],[13,571,30,48],[13,573,30,48,"t"],[13,574,30,48],[13,576,30,48,"i"],[13,577,30,48],[13,581,30,48,"f"],[13,582,30,48],[13,583,30,48,"t"],[13,584,30,48],[13,588,30,48,"e"],[13,589,30,48],[13,590,30,48,"t"],[13,591,30,48],[13,602,30,48,"f"],[13,603,30,48],[13,608,30,48,"e"],[13,609,30,48],[13,611,30,48,"t"],[13,612,30,48],[14,2,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[19,2,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[24,2,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[29,2,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[34,2,27,0],[35,0,28,0],[36,0,29,0],[38,2,31,0],[38,8,31,6,"MemoizedScreen"],[38,22,31,20],[38,25,31,23],[38,38,31,36,"React"],[38,43,31,41],[38,44,31,42,"memo"],[38,48,31,46],[38,49,31,47],[38,50,31,48],[39,4,32,2,"component"],[40,2,33,0],[40,3,33,1],[40,8,33,6],[41,4,34,2],[41,10,34,8,"route"],[41,15,34,13],[41,18,34,16],[41,22,34,16,"useRoute"],[41,40,34,24],[41,42,34,25],[41,43,34,26],[42,4,35,2],[42,10,35,8,"children"],[42,18,35,16],[42,21,35,19],[42,34,35,32,"React"],[42,39,35,37],[42,40,35,38,"createElement"],[42,53,35,51],[42,54,35,52,"component"],[42,63,35,61],[42,65,35,63],[43,6,36,4,"route"],[44,4,37,2],[44,5,37,3],[44,6,37,4],[45,4,38,2],[45,11,38,9,"children"],[45,19,38,17],[46,2,39,0],[46,3,39,1],[46,4,39,2],[47,2,40,0,"MemoizedScreen"],[47,16,40,14],[47,17,40,15,"displayName"],[47,28,40,26],[47,31,40,29],[47,45,40,43],[48,2,41,0],[48,8,41,6,"getItemsFromScreens"],[48,27,41,25],[48,30,41,28,"getItemsFromScreens"],[48,31,41,29,"Screen"],[48,37,41,35],[48,39,41,37,"screens"],[48,46,41,44],[48,51,41,49],[49,4,42,2],[49,11,42,9,"Object"],[49,17,42,15],[49,18,42,16,"entries"],[49,25,42,23],[49,26,42,24,"screens"],[49,33,42,31],[49,34,42,32],[49,35,42,33,"map"],[49,38,42,36],[49,39,42,37],[49,40,42,38],[49,41,42,39,"name"],[49,45,42,43],[49,47,42,45,"item"],[49,51,42,49],[49,52,42,50],[49,57,42,55],[50,6,43,4],[50,10,43,8,"component"],[50,19,43,17],[51,6,44,4],[51,10,44,8,"props"],[51,15,44,13],[51,18,44,16],[51,19,44,17],[51,20,44,18],[52,6,45,4],[52,10,45,8,"useIf"],[52,15,45,13],[53,6,46,4],[53,10,46,8,"isNavigator"],[53,21,46,19],[53,24,46,22],[53,29,46,27],[54,6,47,4],[54,10,47,8],[54,18,47,16],[54,22,47,20,"item"],[54,26,47,24],[54,28,47,26],[55,8,48,6],[55,14,48,12],[56,10,49,8,"screen"],[56,16,49,14],[57,10,50,8,"if"],[57,12,50,10],[57,14,50,12,"_if"],[57,17,50,15],[58,10,51,8],[58,13,51,11,"rest"],[59,8,52,6],[59,9,52,7],[59,12,52,10,"item"],[59,16,52,14],[60,8,53,6,"useIf"],[60,13,53,11],[60,16,53,14,"_if"],[60,19,53,17],[61,8,54,6,"props"],[61,13,54,11],[61,16,54,14,"rest"],[61,20,54,18],[62,8,55,6],[62,12,55,10],[62,16,55,10,"isValidElementType"],[62,43,55,28],[62,45,55,29,"screen"],[62,51,55,35],[62,52,55,36],[62,54,55,38],[63,10,56,8,"component"],[63,19,56,17],[63,22,56,20,"screen"],[63,28,56,26],[64,8,57,6],[64,9,57,7],[64,15,57,13],[64,19,57,17],[64,27,57,25],[64,31,57,29,"screen"],[64,37,57,35],[64,39,57,37],[65,10,58,8,"isNavigator"],[65,21,58,19],[65,24,58,22],[65,28,58,26],[66,10,59,8,"component"],[66,19,59,17],[66,22,59,20,"createComponentForStaticNavigation"],[66,56,59,54],[66,57,59,55,"screen"],[66,63,59,61],[66,65,59,63],[66,68,59,66,"name"],[66,72,59,70],[66,83,59,81],[66,84,59,82],[67,8,60,6],[68,6,61,4],[68,7,61,5],[68,13,61,11],[68,17,61,15],[68,21,61,15,"isValidElementType"],[68,48,61,33],[68,50,61,34,"item"],[68,54,61,38],[68,55,61,39],[68,57,61,41],[69,8,62,6,"component"],[69,17,62,15],[69,20,62,18,"item"],[69,24,62,22],[70,6,63,4],[70,7,63,5],[70,13,63,11],[70,17,63,15],[70,25,63,23],[70,29,63,27,"item"],[70,33,63,31],[70,35,63,33],[71,8,64,6,"isNavigator"],[71,19,64,17],[71,22,64,20],[71,26,64,24],[72,8,65,6,"component"],[72,17,65,15],[72,20,65,18,"createComponentForStaticNavigation"],[72,54,65,52],[72,55,65,53,"item"],[72,59,65,57],[72,61,65,59],[72,64,65,62,"name"],[72,68,65,66],[72,79,65,77],[72,80,65,78],[73,6,66,4],[74,6,67,4],[74,10,67,8,"component"],[74,19,67,17],[74,23,67,21],[74,27,67,25],[74,29,67,27],[75,8,68,6],[75,14,68,12],[75,18,68,16,"Error"],[75,23,68,21],[75,24,68,22],[75,77,68,75,"name"],[75,81,68,79],[75,262,68,260],[75,263,68,261],[76,6,69,4],[77,6,70,4],[77,12,70,10,"element"],[77,19,70,17],[77,22,70,20,"isNavigator"],[77,33,70,31],[77,37,70,35],[77,50,70,48,"React"],[77,55,70,53],[77,56,70,54,"createElement"],[77,69,70,67],[77,70,70,68,"component"],[77,79,70,77],[77,81,70,79],[77,82,70,80],[77,83,70,81],[77,84,70,82],[77,88,70,86],[77,101,70,99],[77,105,70,99,"_jsx"],[77,120,70,103],[77,122,70,104,"MemoizedScreen"],[77,136,70,118],[77,138,70,120],[78,8,71,6,"component"],[78,17,71,15],[78,19,71,17,"component"],[79,6,72,4],[79,7,72,5],[79,8,72,6],[80,6,73,4],[80,13,73,11],[80,19,73,17],[81,8,74,6],[81,14,74,12,"shouldRender"],[81,26,74,24],[81,29,74,27,"useIf"],[81,34,74,32],[81,38,74,36],[81,42,74,40],[81,46,74,44,"useIf"],[81,51,74,49],[81,52,74,50],[81,53,74,51],[82,8,75,6],[82,12,75,10],[82,13,75,11,"shouldRender"],[82,25,75,23],[82,27,75,25],[83,10,76,8],[83,17,76,15],[83,21,76,19],[84,8,77,6],[85,8,78,6],[85,15,78,13],[85,28,78,26],[85,32,78,26,"_jsx"],[85,47,78,30],[85,49,78,31,"Screen"],[85,55,78,37],[85,57,78,39],[86,10,79,8,"name"],[86,14,79,12],[86,16,79,14,"name"],[86,20,79,18],[87,10,80,8],[87,13,80,11,"props"],[87,18,80,16],[88,10,81,8,"children"],[88,18,81,16],[88,20,81,18,"children"],[88,21,81,18],[88,26,81,24,"element"],[89,8,82,6],[89,9,82,7],[89,11,82,9,"name"],[89,15,82,13],[89,16,82,14],[90,6,83,4],[90,7,83,5],[91,4,84,2],[91,5,84,3],[91,6,84,4],[92,2,85,0],[92,3,85,1],[94,2,87,0],[95,0,88,0],[96,0,89,0],[97,0,90,0],[98,0,91,0],[99,0,92,0],[100,0,93,0],[101,2,94,7],[101,11,94,16,"createComponentForStaticNavigation"],[101,45,94,50,"createComponentForStaticNavigation"],[101,46,94,51,"tree"],[101,50,94,55],[101,52,94,57,"displayName"],[101,63,94,68],[101,65,94,70],[102,4,95,2],[102,10,95,8],[103,6,96,4,"Navigator"],[103,15,96,13],[104,6,97,4,"Group"],[104,11,97,9],[105,6,98,4,"Screen"],[105,12,98,10],[106,6,99,4,"config"],[107,4,100,2],[107,5,100,3],[107,8,100,6,"tree"],[107,12,100,10],[108,4,101,2],[108,10,101,8],[109,6,102,4,"screens"],[109,13,102,11],[110,6,103,4,"groups"],[110,12,103,10],[111,6,104,4],[111,9,104,7,"rest"],[112,4,105,2],[112,5,105,3],[112,8,105,6,"config"],[112,14,105,12],[113,4,106,2],[113,8,106,6,"screens"],[113,15,106,13],[113,19,106,17],[113,23,106,21],[113,27,106,25,"groups"],[113,33,106,31],[113,37,106,35],[113,41,106,39],[113,43,106,41],[114,6,107,4],[114,12,107,10],[114,16,107,14,"Error"],[114,21,107,19],[114,22,107,20],[114,153,107,151],[114,154,107,152],[115,4,108,2],[116,4,109,2],[116,10,109,8,"items"],[116,15,109,13],[116,18,109,16],[116,20,109,18],[118,4,111,2],[119,4,112,2],[120,4,113,2],[120,9,113,7],[120,15,113,13,"key"],[120,18,113,16],[120,22,113,20,"config"],[120,28,113,26],[120,30,113,28],[121,6,114,4],[121,10,114,8,"key"],[121,13,114,11],[121,18,114,16],[121,27,114,25],[121,31,114,29,"screens"],[121,38,114,36],[121,40,114,38],[122,8,115,6,"items"],[122,13,115,11],[122,14,115,12,"push"],[122,18,115,16],[122,19,115,17],[122,22,115,20,"getItemsFromScreens"],[122,41,115,39],[122,42,115,40,"Screen"],[122,48,115,46],[122,50,115,48,"screens"],[122,57,115,55],[122,58,115,56],[122,59,115,57],[123,6,116,4],[124,6,117,4],[124,10,117,8,"key"],[124,13,117,11],[124,18,117,16],[124,26,117,24],[124,30,117,28,"groups"],[124,36,117,34],[124,38,117,36],[125,8,118,6,"items"],[125,13,118,11],[125,14,118,12,"push"],[125,18,118,16],[125,19,118,17],[125,22,118,20,"Object"],[125,28,118,26],[125,29,118,27,"entries"],[125,36,118,34],[125,37,118,35,"groups"],[125,43,118,41],[125,44,118,42],[125,45,118,43,"map"],[125,48,118,46],[125,49,118,47],[125,50,118,48],[125,51,118,49,"key"],[125,54,118,52],[125,56,118,54],[126,10,119,8,"if"],[126,12,119,10],[126,14,119,12,"useIf"],[126,19,119,17],[127,10,120,8],[127,13,120,11,"group"],[128,8,121,6],[128,9,121,7],[128,10,121,8],[128,15,121,13],[129,10,122,8],[129,16,122,14,"groupItems"],[129,26,122,24],[129,29,122,27,"getItemsFromScreens"],[129,48,122,46],[129,49,122,47,"Screen"],[129,55,122,53],[129,57,122,55,"group"],[129,62,122,60],[129,63,122,61,"screens"],[129,70,122,68],[129,71,122,69],[130,10,123,8],[130,17,123,15],[130,23,123,21],[131,12,124,10],[132,12,125,10],[132,18,125,16,"children"],[132,26,125,24],[132,29,125,27,"groupItems"],[132,39,125,37],[132,40,125,38,"map"],[132,43,125,41],[132,44,125,42,"item"],[132,48,125,46],[132,52,125,50,"item"],[132,56,125,54],[132,57,125,55],[132,58,125,56],[132,59,125,57],[133,12,126,10],[133,18,126,16,"shouldRender"],[133,30,126,28],[133,33,126,31,"useIf"],[133,38,126,36],[133,42,126,40],[133,46,126,44],[133,50,126,48,"useIf"],[133,55,126,53],[133,56,126,54],[133,57,126,55],[134,12,127,10],[134,16,127,14],[134,17,127,15,"shouldRender"],[134,29,127,27],[134,31,127,29],[135,14,128,12],[135,21,128,19],[135,25,128,23],[136,12,129,10],[137,12,130,10],[137,19,130,17],[137,32,130,30],[137,36,130,30,"_jsx"],[137,51,130,34],[137,53,130,35,"Group"],[137,58,130,40],[137,60,130,42],[138,14,131,12,"navigationKey"],[138,27,131,25],[138,29,131,27,"key"],[138,32,131,30],[139,14,132,12],[139,17,132,15,"group"],[139,22,132,20],[140,14,133,12,"children"],[140,22,133,20],[140,24,133,22,"children"],[141,12,134,10],[141,13,134,11],[141,15,134,13,"key"],[141,18,134,16],[141,19,134,17],[142,10,135,8],[142,11,135,9],[143,8,136,6],[143,9,136,7],[143,10,136,8],[143,11,136,9],[144,6,137,4],[145,4,138,2],[146,4,139,2],[146,10,139,8,"NavigatorComponent"],[146,28,139,26],[146,31,139,29,"NavigatorComponent"],[146,32,139,29],[146,37,139,35],[147,6,140,4],[147,12,140,10,"children"],[147,20,140,18],[147,23,140,21,"items"],[147,28,140,26],[147,29,140,27,"map"],[147,32,140,30],[147,33,140,31,"item"],[147,37,140,35],[147,41,140,39,"item"],[147,45,140,43],[147,46,140,44],[147,47,140,45],[147,48,140,46],[148,6,141,4],[148,13,141,11],[148,26,141,24],[148,30,141,24,"_jsx"],[148,45,141,28],[148,47,141,29,"Navigator"],[148,56,141,38],[148,58,141,40],[149,8,142,6],[149,11,142,9,"rest"],[149,15,142,13],[150,8,143,6,"children"],[150,16,143,14],[150,18,143,16,"children"],[151,6,144,4],[151,7,144,5],[151,8,144,6],[152,4,145,2],[152,5,145,3],[153,4,146,2,"NavigatorComponent"],[153,22,146,20],[153,23,146,21,"displayName"],[153,34,146,32],[153,37,146,35,"displayName"],[153,48,146,46],[154,4,147,2],[154,11,147,9,"NavigatorComponent"],[154,29,147,27],[155,2,148,0],[156,2,149,0],[157,0,150,0],[158,0,151,0],[159,0,152,0],[160,0,153,0],[161,0,154,0],[162,0,155,0],[163,0,156,0],[164,0,157,0],[165,0,158,0],[166,0,159,0],[167,0,160,0],[168,0,161,0],[169,0,162,0],[170,0,163,0],[171,0,164,0],[172,0,165,0],[173,0,166,0],[174,0,167,0],[175,2,168,7],[175,11,168,16,"createPathConfigForStaticNavigation"],[175,46,168,51,"createPathConfigForStaticNavigation"],[175,47,168,52,"tree"],[175,51,168,56],[175,53,168,58,"options"],[175,60,168,65],[175,62,168,67,"auto"],[175,66,168,71],[175,68,168,73],[176,4,169,2],[176,8,169,6,"initialScreenConfig"],[176,27,169,25],[177,4,170,2],[177,10,170,8,"createPathConfigForTree"],[177,33,170,31],[177,36,170,34,"createPathConfigForTree"],[177,37,170,35,"t"],[177,38,170,36],[177,40,170,38,"o"],[177,41,170,39],[177,43,170,41,"skipInitialDetection"],[177,63,170,61],[177,68,170,66],[178,6,171,4],[178,12,171,10,"createPathConfigForScreens"],[178,38,171,36],[178,41,171,39,"createPathConfigForScreens"],[178,42,171,40,"screens"],[178,49,171,47],[178,51,171,49,"initialRouteName"],[178,67,171,65],[178,72,171,70],[179,8,172,6],[179,15,172,13,"Object"],[179,21,172,19],[179,22,172,20,"fromEntries"],[179,33,172,31],[179,34,172,32,"Object"],[179,40,172,38],[179,41,172,39,"entries"],[179,48,172,46],[179,49,172,47,"screens"],[179,56,172,54],[180,8,173,6],[181,8,174,6],[182,8,174,6],[182,9,175,7,"sort"],[182,13,175,11],[182,14,175,12],[182,15,175,13],[182,16,175,14,"a"],[182,17,175,15],[182,18,175,16],[182,20,175,18],[182,21,175,19,"b"],[182,22,175,20],[182,23,175,21],[182,28,175,26],[183,10,176,8],[183,14,176,12,"a"],[183,15,176,13],[183,20,176,18,"initialRouteName"],[183,36,176,34],[183,38,176,36],[184,12,177,10],[184,19,177,17],[184,20,177,18],[184,21,177,19],[185,10,178,8],[186,10,179,8],[186,14,179,12,"b"],[186,15,179,13],[186,20,179,18,"initialRouteName"],[186,36,179,34],[186,38,179,36],[187,12,180,10],[187,19,180,17],[187,20,180,18],[188,10,181,8],[189,10,182,8],[189,17,182,15],[189,18,182,16],[190,8,183,6],[190,9,183,7],[190,10,183,8],[190,11,183,9,"map"],[190,14,183,12],[190,15,183,13],[190,16,183,14],[190,17,183,15,"key"],[190,20,183,18],[190,22,183,20,"item"],[190,26,183,24],[190,27,183,25],[190,32,183,30],[191,10,184,8],[191,16,184,14,"screenConfig"],[191,28,184,26],[191,31,184,29],[191,32,184,30],[191,33,184,31],[192,10,185,8],[192,14,185,12],[192,23,185,21],[192,27,185,25,"item"],[192,31,185,29],[192,33,185,31],[193,12,186,10],[193,16,186,14],[193,23,186,21,"item"],[193,27,186,25],[193,28,186,26,"linking"],[193,35,186,33],[193,40,186,38],[193,48,186,46],[193,50,186,48],[194,14,187,12,"screenConfig"],[194,26,187,24],[194,27,187,25,"path"],[194,31,187,29],[194,34,187,32,"item"],[194,38,187,36],[194,39,187,37,"linking"],[194,46,187,44],[195,12,188,10],[195,13,188,11],[195,19,188,17],[196,14,189,12,"Object"],[196,20,189,18],[196,21,189,19,"assign"],[196,27,189,25],[196,28,189,26,"screenConfig"],[196,40,189,38],[196,42,189,40,"item"],[196,46,189,44],[196,47,189,45,"linking"],[196,54,189,52],[196,55,189,53],[197,12,190,10],[198,12,191,10],[198,16,191,14],[198,23,191,21,"screenConfig"],[198,35,191,33],[198,36,191,34,"path"],[198,40,191,38],[198,45,191,43],[198,53,191,51],[198,55,191,53],[199,14,192,12,"screenConfig"],[199,26,192,24],[199,27,192,25,"path"],[199,31,192,29],[199,34,192,32,"screenConfig"],[199,46,192,44],[199,47,192,45,"path"],[199,51,192,49],[199,52,192,50,"replace"],[199,59,192,57],[199,60,192,58],[199,65,192,63],[199,67,192,65],[199,69,192,67],[199,70,192,68],[199,71,192,69],[200,14,192,69],[200,15,193,13,"replace"],[200,22,193,20],[200,23,193,21],[200,28,193,26],[200,30,193,28],[200,32,193,30],[200,33,193,31],[200,34,193,32],[200,35,193,33],[201,12,194,10],[202,10,195,8],[203,10,196,8],[203,14,196,12,"screens"],[203,21,196,19],[204,10,197,8],[204,16,197,14,"skipInitialDetectionInChild"],[204,43,197,41],[204,46,197,44,"skipInitialDetection"],[204,66,197,64],[204,70,197,68,"screenConfig"],[204,82,197,80],[204,83,197,81,"path"],[204,87,197,85],[204,91,197,89],[204,95,197,93],[204,99,197,97,"screenConfig"],[204,111,197,109],[204,112,197,110,"path"],[204,116,197,114],[204,121,197,119],[204,123,197,121],[205,10,198,8],[205,14,198,12],[205,22,198,20],[205,26,198,24,"item"],[205,30,198,28],[205,32,198,30],[206,12,199,10,"screens"],[206,19,199,17],[206,22,199,20,"createPathConfigForTree"],[206,45,199,43],[206,46,199,44,"item"],[206,50,199,48],[206,52,199,50,"undefined"],[206,61,199,59],[206,63,199,61,"skipInitialDetectionInChild"],[206,90,199,88],[206,91,199,89],[207,10,200,8],[207,11,200,9],[207,17,200,15],[207,21,200,19],[207,29,200,27],[207,33,200,31,"item"],[207,37,200,35],[207,41,200,39],[207,49,200,47],[207,53,200,51,"item"],[207,57,200,55],[207,58,200,56,"screen"],[207,64,200,62],[207,69,200,67,"item"],[207,73,200,71],[207,74,200,72,"screen"],[207,80,200,78],[207,81,200,79,"config"],[207,87,200,85],[207,88,200,86,"screens"],[207,95,200,93],[207,99,200,97,"item"],[207,103,200,101],[207,104,200,102,"screen"],[207,110,200,108],[207,111,200,109,"config"],[207,117,200,115],[207,118,200,116,"groups"],[207,124,200,122],[207,125,200,123],[207,127,200,125],[208,12,201,10,"screens"],[208,19,201,17],[208,22,201,20,"createPathConfigForTree"],[208,45,201,43],[208,46,201,44,"item"],[208,50,201,48],[208,51,201,49,"screen"],[208,57,201,55],[208,59,201,57,"undefined"],[208,68,201,66],[208,70,201,68,"skipInitialDetectionInChild"],[208,97,201,95],[208,98,201,96],[209,10,202,8],[210,10,203,8],[210,14,203,12,"screens"],[210,21,203,19],[210,23,203,21],[211,12,204,10,"screenConfig"],[211,24,204,22],[211,25,204,23,"screens"],[211,32,204,30],[211,35,204,33,"screens"],[211,42,204,40],[212,10,205,8],[213,10,206,8],[213,14,206,12,"auto"],[213,18,206,16],[213,22,206,20],[213,23,206,21,"screenConfig"],[213,35,206,33],[213,36,206,34,"screens"],[213,43,206,41],[214,10,207,8],[215,10,208,8],[215,12,208,10],[215,21,208,19],[215,25,208,23,"item"],[215,29,208,27],[215,33,208,31,"item"],[215,37,208,35],[215,38,208,36,"linking"],[215,45,208,43],[215,49,208,47],[215,53,208,51],[215,54,208,52],[215,56,208,54],[216,12,209,10],[216,16,209,14,"screenConfig"],[216,28,209,26],[216,29,209,27,"path"],[216,33,209,31],[216,37,209,35],[216,41,209,39],[216,43,209,41],[217,14,210,12],[217,18,210,16],[217,19,210,17,"skipInitialDetection"],[217,39,210,37],[217,43,210,41,"screenConfig"],[217,55,210,53],[217,56,210,54,"path"],[217,60,210,58],[217,65,210,63],[217,67,210,65],[217,69,210,67],[218,16,211,14],[219,16,212,14],[220,16,213,14,"initialScreenConfig"],[220,35,213,33],[220,38,213,36,"undefined"],[220,47,213,45],[221,14,214,12],[222,12,215,10],[222,13,215,11],[222,19,215,17],[223,14,216,12],[223,18,216,16],[223,19,216,17,"skipInitialDetection"],[223,39,216,37],[223,43,216,41,"initialScreenConfig"],[223,62,216,60],[223,66,216,64],[223,70,216,68],[223,72,216,70],[224,16,217,14,"initialScreenConfig"],[224,35,217,33],[224,38,217,36,"screenConfig"],[224,50,217,48],[225,14,218,12],[226,14,219,12,"screenConfig"],[226,26,219,24],[226,27,219,25,"path"],[226,31,219,29],[226,34,219,32,"key"],[226,37,219,35],[226,38,219,36,"replace"],[226,45,219,43],[226,46,219,44],[226,57,219,55],[226,59,219,57],[226,64,219,62],[226,65,219,63],[226,66,219,64,"replace"],[226,73,219,71],[226,74,219,72],[226,78,219,76],[226,80,219,78],[226,82,219,80],[226,83,219,81],[226,84,219,82,"toLowerCase"],[226,95,219,93],[226,96,219,94],[226,97,219,95],[227,12,220,10],[228,10,221,8],[229,10,222,8],[229,17,222,15],[229,18,222,16,"key"],[229,21,222,19],[229,23,222,21,"screenConfig"],[229,35,222,33],[229,36,222,34],[230,8,223,6],[230,9,223,7],[230,10,223,8],[230,11,223,9,"filter"],[230,17,223,15],[230,18,223,16],[230,19,223,17],[230,22,223,20,"screen"],[230,28,223,26],[230,29,223,27],[230,34,223,32,"Object"],[230,40,223,38],[230,41,223,39,"keys"],[230,45,223,43],[230,46,223,44,"screen"],[230,52,223,50],[230,53,223,51],[230,54,223,52,"length"],[230,60,223,58],[230,63,223,61],[230,64,223,62],[230,65,223,63],[230,66,223,64],[231,6,224,4],[231,7,224,5],[232,6,225,4],[232,12,225,10,"screens"],[232,19,225,17],[232,22,225,20],[232,23,225,21],[232,24,225,22],[234,6,227,4],[235,6,228,4],[236,6,229,4],[236,11,229,9],[236,17,229,15,"key"],[236,20,229,18],[236,24,229,22,"t"],[236,25,229,23],[236,26,229,24,"config"],[236,32,229,30],[236,34,229,32],[237,8,230,6],[237,12,230,10,"key"],[237,15,230,13],[237,20,230,18],[237,29,230,27],[237,33,230,31,"t"],[237,34,230,32],[237,35,230,33,"config"],[237,41,230,39],[237,42,230,40,"screens"],[237,49,230,47],[237,51,230,49],[238,10,231,8,"Object"],[238,16,231,14],[238,17,231,15,"assign"],[238,23,231,21],[238,24,231,22,"screens"],[238,31,231,29],[238,33,231,31,"createPathConfigForScreens"],[238,59,231,57],[238,60,231,58,"t"],[238,61,231,59],[238,62,231,60,"config"],[238,68,231,66],[238,69,231,67,"screens"],[238,76,231,74],[238,78,231,76,"o"],[238,79,231,77],[238,81,231,79,"initialRouteName"],[238,97,231,95],[238,101,231,99,"t"],[238,102,231,100],[238,103,231,101,"config"],[238,109,231,107],[238,110,231,108,"initialRouteName"],[238,126,231,124],[238,127,231,125],[238,128,231,126],[239,8,232,6],[240,8,233,6],[240,12,233,10,"key"],[240,15,233,13],[240,20,233,18],[240,28,233,26],[240,32,233,30,"t"],[240,33,233,31],[240,34,233,32,"config"],[240,40,233,38],[240,41,233,39,"groups"],[240,47,233,45],[240,49,233,47],[241,10,234,8,"Object"],[241,16,234,14],[241,17,234,15,"entries"],[241,24,234,22],[241,25,234,23,"t"],[241,26,234,24],[241,27,234,25,"config"],[241,33,234,31],[241,34,234,32,"groups"],[241,40,234,38],[241,41,234,39],[241,42,234,40,"forEach"],[241,49,234,47],[241,50,234,48],[241,51,234,49],[241,54,234,52,"group"],[241,59,234,57],[241,60,234,58],[241,65,234,63],[242,12,235,10,"Object"],[242,18,235,16],[242,19,235,17,"assign"],[242,25,235,23],[242,26,235,24,"screens"],[242,33,235,31],[242,35,235,33,"createPathConfigForScreens"],[242,61,235,59],[242,62,235,60,"group"],[242,67,235,65],[242,68,235,66,"screens"],[242,75,235,73],[242,77,235,75,"o"],[242,78,235,76],[242,80,235,78,"initialRouteName"],[242,96,235,94],[242,100,235,98,"t"],[242,101,235,99],[242,102,235,100,"config"],[242,108,235,106],[242,109,235,107,"initialRouteName"],[242,125,235,123],[242,126,235,124],[242,127,235,125],[243,10,236,8],[243,11,236,9],[243,12,236,10],[244,8,237,6],[245,6,238,4],[246,6,239,4],[246,10,239,8,"Object"],[246,16,239,14],[246,17,239,15,"keys"],[246,21,239,19],[246,22,239,20,"screens"],[246,29,239,27],[246,30,239,28],[246,31,239,29,"length"],[246,37,239,35],[246,42,239,40],[246,43,239,41],[246,45,239,43],[247,8,240,6],[247,15,240,13,"undefined"],[247,24,240,22],[248,6,241,4],[249,6,242,4],[249,13,242,11,"screens"],[249,20,242,18],[250,4,243,2],[250,5,243,3],[251,4,244,2],[251,10,244,8,"screens"],[251,17,244,15],[251,20,244,18,"createPathConfigForTree"],[251,43,244,41],[251,44,244,42,"tree"],[251,48,244,46],[251,50,244,48,"options"],[251,57,244,55],[251,59,244,57],[251,64,244,62],[251,65,244,63],[252,4,245,2],[252,8,245,6,"auto"],[252,12,245,10],[252,16,245,14,"initialScreenConfig"],[252,35,245,33],[252,37,245,35],[253,6,246,4,"initialScreenConfig"],[253,25,246,23],[253,26,246,24,"path"],[253,30,246,28],[253,33,246,31],[253,35,246,33],[254,4,247,2],[255,4,248,2],[255,11,248,9,"screens"],[255,18,248,16],[256,2,249,0],[257,0,249,1],[257,3]],"functionMap":{"names":["<global>","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","_jsx$argument_1.children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;+CC8B;CDQ;4BEE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CFC;OMS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CNG;OUoB;kCCE;uCCC;YCI;ODQ,ME;OFwC,SG,8CH;KDC;gDKU;SLE;GDO;CVM"}},"type":"js/module"}]}