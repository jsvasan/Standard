{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // This alphabet uses `A-Za-z0-9_-` symbols.\n  // The order of characters is optimized for better gzip and brotli compression.\n  // References to the same file (works both for gzip and brotli):\n  // `'use`, `andom`, and `rict'`\n  // References to the brotli default dictionary:\n  // `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\n  var urlAlphabet = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\n  var customAlphabet = function (alphabet) {\n    var defaultSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 21;\n    return function () {\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSize;\n      var id = '';\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      var i = size | 0;\n      while (i--) {\n        // `| 0` is more compact and faster than `Math.floor()`.\n        id += alphabet[Math.random() * alphabet.length | 0];\n      }\n      return id;\n    };\n  };\n  var nanoid = function () {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;\n    var id = '';\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    var i = size | 0;\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += urlAlphabet[Math.random() * 64 | 0];\n    }\n    return id;\n  };\n  module.exports = {\n    nanoid,\n    customAlphabet\n  };\n});","lineCount":38,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[5,2,4,0],[6,2,5,0],[7,2,6,0],[8,2,7,0],[8,6,7,4,"urlAlphabet"],[8,17,7,15],[8,20,8,2],[8,86,8,68],[9,2,10,0],[9,6,10,4,"customAlphabet"],[9,20,10,18],[9,23,10,21],[9,32,10,21,"customAlphabet"],[9,33,10,22,"alphabet"],[9,41,10,30],[9,43,10,53],[10,4,10,53],[10,8,10,32,"defaultSize"],[10,19,10,43],[10,22,10,43,"arguments"],[10,31,10,43],[10,32,10,43,"length"],[10,38,10,43],[10,46,10,43,"arguments"],[10,55,10,43],[10,63,10,43,"undefined"],[10,72,10,43],[10,75,10,43,"arguments"],[10,84,10,43],[10,90,10,46],[10,92,10,48],[11,4,11,2],[11,11,11,9],[11,23,11,33],[12,6,11,33],[12,10,11,10,"size"],[12,14,11,14],[12,17,11,14,"arguments"],[12,26,11,14],[12,27,11,14,"length"],[12,33,11,14],[12,41,11,14,"arguments"],[12,50,11,14],[12,58,11,14,"undefined"],[12,67,11,14],[12,70,11,14,"arguments"],[12,79,11,14],[12,85,11,17,"defaultSize"],[12,96,11,28],[13,6,12,4],[13,10,12,8,"id"],[13,12,12,10],[13,15,12,13],[13,17,12,15],[14,6,13,4],[15,6,14,4],[15,10,14,8,"i"],[15,11,14,9],[15,14,14,12,"size"],[15,18,14,16],[15,21,14,19],[15,22,14,20],[16,6,15,4],[16,13,15,11,"i"],[16,14,15,12],[16,16,15,14],[16,18,15,16],[17,8,16,6],[18,8,17,6,"id"],[18,10,17,8],[18,14,17,12,"alphabet"],[18,22,17,20],[18,23,17,22,"Math"],[18,27,17,26],[18,28,17,27,"random"],[18,34,17,33],[18,35,17,34],[18,36,17,35],[18,39,17,38,"alphabet"],[18,47,17,46],[18,48,17,47,"length"],[18,54,17,53],[18,57,17,57],[18,58,17,58],[18,59,17,59],[19,6,18,4],[20,6,19,4],[20,13,19,11,"id"],[20,15,19,13],[21,4,20,2],[21,5,20,3],[22,2,21,0],[22,3,21,1],[23,2,23,0],[23,6,23,4,"nanoid"],[23,12,23,10],[23,15,23,13],[23,24,23,13,"nanoid"],[23,25,23,13],[23,27,23,28],[24,4,23,28],[24,8,23,14,"size"],[24,12,23,18],[24,15,23,18,"arguments"],[24,24,23,18],[24,25,23,18,"length"],[24,31,23,18],[24,39,23,18,"arguments"],[24,48,23,18],[24,56,23,18,"undefined"],[24,65,23,18],[24,68,23,18,"arguments"],[24,77,23,18],[24,83,23,21],[24,85,23,23],[25,4,24,2],[25,8,24,6,"id"],[25,10,24,8],[25,13,24,11],[25,15,24,13],[26,4,25,2],[27,4,26,2],[27,8,26,6,"i"],[27,9,26,7],[27,12,26,10,"size"],[27,16,26,14],[27,19,26,17],[27,20,26,18],[28,4,27,2],[28,11,27,9,"i"],[28,12,27,10],[28,14,27,12],[28,16,27,14],[29,6,28,4],[30,6,29,4,"id"],[30,8,29,6],[30,12,29,10,"urlAlphabet"],[30,23,29,21],[30,24,29,23,"Math"],[30,28,29,27],[30,29,29,28,"random"],[30,35,29,34],[30,36,29,35],[30,37,29,36],[30,40,29,39],[30,42,29,41],[30,45,29,45],[30,46,29,46],[30,47,29,47],[31,4,30,2],[32,4,31,2],[32,11,31,9,"id"],[32,13,31,11],[33,2,32,0],[33,3,32,1],[34,2,34,0,"module"],[34,8,34,6],[34,9,34,7,"exports"],[34,16,34,14],[34,19,34,17],[35,4,34,19,"nanoid"],[35,10,34,25],[36,4,34,27,"customAlphabet"],[37,2,34,42],[37,3,34,43],[38,0,34,43],[38,3]],"functionMap":{"names":["<global>","customAlphabet","<anonymous>","nanoid"],"mappings":"AAA;qBCS;SCC;GDS;CDC;aGE;CHS"},"hasCjsExports":true},"type":"js/module"}]}