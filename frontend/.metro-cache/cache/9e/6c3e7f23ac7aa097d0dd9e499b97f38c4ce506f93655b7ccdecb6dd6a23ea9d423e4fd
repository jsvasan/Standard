{"dependencies":[{"name":"../../modules/isSelectionValid","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":180},"end":{"line":10,"column":62,"index":242}}],"key":"VAiFMEGg3WHjfBLEf5LbUXh70xg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.setResponderId = setResponderId;\n  exports.getResponderPaths = getResponderPaths;\n  exports.getLowestCommonAncestor = getLowestCommonAncestor;\n  exports.hasTargetTouches = hasTargetTouches;\n  exports.hasValidSelection = hasValidSelection;\n  exports.isPrimaryPointerDown = isPrimaryPointerDown;\n  var _modulesIsSelectionValid = require(_dependencyMap[0], \"../../modules/isSelectionValid\");\n  var isSelectionValid = _interopDefault(_modulesIsSelectionValid);\n  /**\n   * Copyright (c) Nicolas Gallagher\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  var keyName = '__reactResponderId';\n  function getEventPath(domEvent) {\n    // The 'selectionchange' event always has the 'document' as the target.\n    // Use the anchor node as the initial target to reconstruct a path.\n    // (We actually only need the first \"responder\" node in practice.)\n    if (domEvent.type === 'selectionchange') {\n      var target = window.getSelection().anchorNode;\n      return composedPathFallback(target);\n    } else {\n      var path = domEvent.composedPath != null ? domEvent.composedPath() : composedPathFallback(domEvent.target);\n      return path;\n    }\n  }\n  function composedPathFallback(target) {\n    var path = [];\n    while (target != null && target !== document.body) {\n      path.push(target);\n      target = target.parentNode;\n    }\n    return path;\n  }\n\n  /**\n   * Retrieve the responderId from a host node\n   */\n  function getResponderId(node) {\n    if (node != null) {\n      return node[keyName];\n    }\n    return null;\n  }\n\n  /**\n   * Store the responderId on a host node\n   */\n  function setResponderId(node, id) {\n    if (node != null) {\n      node[keyName] = id;\n    }\n  }\n\n  /**\n   * Filter the event path to contain only the nodes attached to the responder system\n   */\n  function getResponderPaths(domEvent) {\n    var idPath = [];\n    var nodePath = [];\n    var eventPath = getEventPath(domEvent);\n    for (var i = 0; i < eventPath.length; i++) {\n      var node = eventPath[i];\n      var id = getResponderId(node);\n      if (id != null) {\n        idPath.push(id);\n        nodePath.push(node);\n      }\n    }\n    return {\n      idPath,\n      nodePath\n    };\n  }\n\n  /**\n   * Walk the paths and find the first common ancestor\n   */\n  function getLowestCommonAncestor(pathA, pathB) {\n    var pathALength = pathA.length;\n    var pathBLength = pathB.length;\n    if (\n    // If either path is empty\n    pathALength === 0 || pathBLength === 0 ||\n    // If the last elements aren't the same there can't be a common ancestor\n    // that is connected to the responder system\n    pathA[pathALength - 1] !== pathB[pathBLength - 1]) {\n      return null;\n    }\n    var itemA = pathA[0];\n    var indexA = 0;\n    var itemB = pathB[0];\n    var indexB = 0;\n\n    // If A is deeper, skip indices that can't match.\n    if (pathALength - pathBLength > 0) {\n      indexA = pathALength - pathBLength;\n      itemA = pathA[indexA];\n      pathALength = pathBLength;\n    }\n\n    // If B is deeper, skip indices that can't match\n    if (pathBLength - pathALength > 0) {\n      indexB = pathBLength - pathALength;\n      itemB = pathB[indexB];\n      pathBLength = pathALength;\n    }\n\n    // Walk in lockstep until a match is found\n    var depth = pathALength;\n    while (depth--) {\n      if (itemA === itemB) {\n        return itemA;\n      }\n      itemA = pathA[indexA++];\n      itemB = pathB[indexB++];\n    }\n    return null;\n  }\n\n  /**\n   * Determine whether any of the active touches are within the current responder.\n   * This cannot rely on W3C `targetTouches`, as neither IE11 nor Safari implement it.\n   */\n  function hasTargetTouches(target, touches) {\n    if (!touches || touches.length === 0) {\n      return false;\n    }\n    for (var i = 0; i < touches.length; i++) {\n      var node = touches[i].target;\n      if (node != null) {\n        if (target.contains(node)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Ignore 'selectionchange' events that don't correspond with a person's intent to\n   * select text.\n   */\n  function hasValidSelection(domEvent) {\n    if (domEvent.type === 'selectionchange') {\n      return (0, isSelectionValid.default)();\n    }\n    return domEvent.type === 'select';\n  }\n\n  /**\n   * Events are only valid if the primary button was used without specific modifier keys.\n   */\n  function isPrimaryPointerDown(domEvent) {\n    var altKey = domEvent.altKey,\n      button = domEvent.button,\n      buttons = domEvent.buttons,\n      ctrlKey = domEvent.ctrlKey,\n      type = domEvent.type;\n    var isTouch = type === 'touchstart' || type === 'touchmove';\n    var isPrimaryMouseDown = type === 'mousedown' && (button === 0 || buttons === 1);\n    var isPrimaryMouseMove = type === 'mousemove' && buttons === 1;\n    var noModifiers = altKey === false && ctrlKey === false;\n    if (isTouch || isPrimaryMouseDown && noModifiers || isPrimaryMouseMove && noModifiers) {\n      return true;\n    }\n    return false;\n  }\n});","lineCount":184,"map":[[12,2,46,0,"exports"],[12,9,46,0],[12,10,46,0,"setResponderId"],[12,24,46,0],[12,27,46,0,"setResponderId"],[12,41,46,0],[13,2,55,0,"exports"],[13,9,55,0],[13,10,55,0,"getResponderPaths"],[13,27,55,0],[13,30,55,0,"getResponderPaths"],[13,47,55,0],[14,2,76,0,"exports"],[14,9,76,0],[14,10,76,0,"getLowestCommonAncestor"],[14,33,76,0],[14,36,76,0,"getLowestCommonAncestor"],[14,59,76,0],[15,2,122,0,"exports"],[15,9,122,0],[15,10,122,0,"hasTargetTouches"],[15,26,122,0],[15,29,122,0,"hasTargetTouches"],[15,45,122,0],[16,2,141,0,"exports"],[16,9,141,0],[16,10,141,0,"hasValidSelection"],[16,27,141,0],[16,30,141,0,"hasValidSelection"],[16,47,141,0],[17,2,151,0,"exports"],[17,9,151,0],[17,10,151,0,"isPrimaryPointerDown"],[17,30,151,0],[17,33,151,0,"isPrimaryPointerDown"],[17,53,151,0],[18,2,10,0],[18,6,10,0,"_modulesIsSelectionValid"],[18,30,10,0],[18,33,10,0,"require"],[18,40,10,0],[18,41,10,0,"_dependencyMap"],[18,55,10,0],[19,2,10,0],[19,6,10,0,"isSelectionValid"],[19,22,10,0],[19,25,10,0,"_interopDefault"],[19,40,10,0],[19,41,10,0,"_modulesIsSelectionValid"],[19,65,10,0],[20,2,1,0],[21,0,2,0],[22,0,3,0],[23,0,4,0],[24,0,5,0],[25,0,6,0],[26,0,7,0],[27,0,8,0],[29,2,11,0],[29,6,11,4,"keyName"],[29,13,11,11],[29,16,11,14],[29,36,11,34],[30,2,12,0],[30,11,12,9,"getEventPath"],[30,23,12,21,"getEventPath"],[30,24,12,22,"domEvent"],[30,32,12,30],[30,34,12,32],[31,4,13,2],[32,4,14,2],[33,4,15,2],[34,4,16,2],[34,8,16,6,"domEvent"],[34,16,16,14],[34,17,16,15,"type"],[34,21,16,19],[34,26,16,24],[34,43,16,41],[34,45,16,43],[35,6,17,4],[35,10,17,8,"target"],[35,16,17,14],[35,19,17,17,"window"],[35,25,17,23],[35,26,17,24,"getSelection"],[35,38,17,36],[35,39,17,37],[35,40,17,38],[35,41,17,39,"anchorNode"],[35,51,17,49],[36,6,18,4],[36,13,18,11,"composedPathFallback"],[36,33,18,31],[36,34,18,32,"target"],[36,40,18,38],[36,41,18,39],[37,4,19,2],[37,5,19,3],[37,11,19,9],[38,6,20,4],[38,10,20,8,"path"],[38,14,20,12],[38,17,20,15,"domEvent"],[38,25,20,23],[38,26,20,24,"composedPath"],[38,38,20,36],[38,42,20,40],[38,46,20,44],[38,49,20,47,"domEvent"],[38,57,20,55],[38,58,20,56,"composedPath"],[38,70,20,68],[38,71,20,69],[38,72,20,70],[38,75,20,73,"composedPathFallback"],[38,95,20,93],[38,96,20,94,"domEvent"],[38,104,20,102],[38,105,20,103,"target"],[38,111,20,109],[38,112,20,110],[39,6,21,4],[39,13,21,11,"path"],[39,17,21,15],[40,4,22,2],[41,2,23,0],[42,2,24,0],[42,11,24,9,"composedPathFallback"],[42,31,24,29,"composedPathFallback"],[42,32,24,30,"target"],[42,38,24,36],[42,40,24,38],[43,4,25,2],[43,8,25,6,"path"],[43,12,25,10],[43,15,25,13],[43,17,25,15],[44,4,26,2],[44,11,26,9,"target"],[44,17,26,15],[44,21,26,19],[44,25,26,23],[44,29,26,27,"target"],[44,35,26,33],[44,40,26,38,"document"],[44,48,26,46],[44,49,26,47,"body"],[44,53,26,51],[44,55,26,53],[45,6,27,4,"path"],[45,10,27,8],[45,11,27,9,"push"],[45,15,27,13],[45,16,27,14,"target"],[45,22,27,20],[45,23,27,21],[46,6,28,4,"target"],[46,12,28,10],[46,15,28,13,"target"],[46,21,28,19],[46,22,28,20,"parentNode"],[46,32,28,30],[47,4,29,2],[48,4,30,2],[48,11,30,9,"path"],[48,15,30,13],[49,2,31,0],[51,2,33,0],[52,0,34,0],[53,0,35,0],[54,2,36,0],[54,11,36,9,"getResponderId"],[54,25,36,23,"getResponderId"],[54,26,36,24,"node"],[54,30,36,28],[54,32,36,30],[55,4,37,2],[55,8,37,6,"node"],[55,12,37,10],[55,16,37,14],[55,20,37,18],[55,22,37,20],[56,6,38,4],[56,13,38,11,"node"],[56,17,38,15],[56,18,38,16,"keyName"],[56,25,38,23],[56,26,38,24],[57,4,39,2],[58,4,40,2],[58,11,40,9],[58,15,40,13],[59,2,41,0],[61,2,43,0],[62,0,44,0],[63,0,45,0],[64,2,46,7],[64,11,46,16,"setResponderId"],[64,25,46,30,"setResponderId"],[64,26,46,31,"node"],[64,30,46,35],[64,32,46,37,"id"],[64,34,46,39],[64,36,46,41],[65,4,47,2],[65,8,47,6,"node"],[65,12,47,10],[65,16,47,14],[65,20,47,18],[65,22,47,20],[66,6,48,4,"node"],[66,10,48,8],[66,11,48,9,"keyName"],[66,18,48,16],[66,19,48,17],[66,22,48,20,"id"],[66,24,48,22],[67,4,49,2],[68,2,50,0],[70,2,52,0],[71,0,53,0],[72,0,54,0],[73,2,55,7],[73,11,55,16,"getResponderPaths"],[73,28,55,33,"getResponderPaths"],[73,29,55,34,"domEvent"],[73,37,55,42],[73,39,55,44],[74,4,56,2],[74,8,56,6,"idPath"],[74,14,56,12],[74,17,56,15],[74,19,56,17],[75,4,57,2],[75,8,57,6,"nodePath"],[75,16,57,14],[75,19,57,17],[75,21,57,19],[76,4,58,2],[76,8,58,6,"eventPath"],[76,17,58,15],[76,20,58,18,"getEventPath"],[76,32,58,30],[76,33,58,31,"domEvent"],[76,41,58,39],[76,42,58,40],[77,4,59,2],[77,9,59,7],[77,13,59,11,"i"],[77,14,59,12],[77,17,59,15],[77,18,59,16],[77,20,59,18,"i"],[77,21,59,19],[77,24,59,22,"eventPath"],[77,33,59,31],[77,34,59,32,"length"],[77,40,59,38],[77,42,59,40,"i"],[77,43,59,41],[77,45,59,43],[77,47,59,45],[78,6,60,4],[78,10,60,8,"node"],[78,14,60,12],[78,17,60,15,"eventPath"],[78,26,60,24],[78,27,60,25,"i"],[78,28,60,26],[78,29,60,27],[79,6,61,4],[79,10,61,8,"id"],[79,12,61,10],[79,15,61,13,"getResponderId"],[79,29,61,27],[79,30,61,28,"node"],[79,34,61,32],[79,35,61,33],[80,6,62,4],[80,10,62,8,"id"],[80,12,62,10],[80,16,62,14],[80,20,62,18],[80,22,62,20],[81,8,63,6,"idPath"],[81,14,63,12],[81,15,63,13,"push"],[81,19,63,17],[81,20,63,18,"id"],[81,22,63,20],[81,23,63,21],[82,8,64,6,"nodePath"],[82,16,64,14],[82,17,64,15,"push"],[82,21,64,19],[82,22,64,20,"node"],[82,26,64,24],[82,27,64,25],[83,6,65,4],[84,4,66,2],[85,4,67,2],[85,11,67,9],[86,6,68,4,"idPath"],[86,12,68,10],[87,6,69,4,"nodePath"],[88,4,70,2],[88,5,70,3],[89,2,71,0],[91,2,73,0],[92,0,74,0],[93,0,75,0],[94,2,76,7],[94,11,76,16,"getLowestCommonAncestor"],[94,34,76,39,"getLowestCommonAncestor"],[94,35,76,40,"pathA"],[94,40,76,45],[94,42,76,47,"pathB"],[94,47,76,52],[94,49,76,54],[95,4,77,2],[95,8,77,6,"pathALength"],[95,19,77,17],[95,22,77,20,"pathA"],[95,27,77,25],[95,28,77,26,"length"],[95,34,77,32],[96,4,78,2],[96,8,78,6,"pathBLength"],[96,19,78,17],[96,22,78,20,"pathB"],[96,27,78,25],[96,28,78,26,"length"],[96,34,78,32],[97,4,79,2],[98,4,80,2],[99,4,81,2,"pathALength"],[99,15,81,13],[99,20,81,18],[99,21,81,19],[99,25,81,23,"pathBLength"],[99,36,81,34],[99,41,81,39],[99,42,81,40],[100,4,82,2],[101,4,83,2],[102,4,84,2,"pathA"],[102,9,84,7],[102,10,84,8,"pathALength"],[102,21,84,19],[102,24,84,22],[102,25,84,23],[102,26,84,24],[102,31,84,29,"pathB"],[102,36,84,34],[102,37,84,35,"pathBLength"],[102,48,84,46],[102,51,84,49],[102,52,84,50],[102,53,84,51],[102,55,84,53],[103,6,85,4],[103,13,85,11],[103,17,85,15],[104,4,86,2],[105,4,87,2],[105,8,87,6,"itemA"],[105,13,87,11],[105,16,87,14,"pathA"],[105,21,87,19],[105,22,87,20],[105,23,87,21],[105,24,87,22],[106,4,88,2],[106,8,88,6,"indexA"],[106,14,88,12],[106,17,88,15],[106,18,88,16],[107,4,89,2],[107,8,89,6,"itemB"],[107,13,89,11],[107,16,89,14,"pathB"],[107,21,89,19],[107,22,89,20],[107,23,89,21],[107,24,89,22],[108,4,90,2],[108,8,90,6,"indexB"],[108,14,90,12],[108,17,90,15],[108,18,90,16],[110,4,92,2],[111,4,93,2],[111,8,93,6,"pathALength"],[111,19,93,17],[111,22,93,20,"pathBLength"],[111,33,93,31],[111,36,93,34],[111,37,93,35],[111,39,93,37],[112,6,94,4,"indexA"],[112,12,94,10],[112,15,94,13,"pathALength"],[112,26,94,24],[112,29,94,27,"pathBLength"],[112,40,94,38],[113,6,95,4,"itemA"],[113,11,95,9],[113,14,95,12,"pathA"],[113,19,95,17],[113,20,95,18,"indexA"],[113,26,95,24],[113,27,95,25],[114,6,96,4,"pathALength"],[114,17,96,15],[114,20,96,18,"pathBLength"],[114,31,96,29],[115,4,97,2],[117,4,99,2],[118,4,100,2],[118,8,100,6,"pathBLength"],[118,19,100,17],[118,22,100,20,"pathALength"],[118,33,100,31],[118,36,100,34],[118,37,100,35],[118,39,100,37],[119,6,101,4,"indexB"],[119,12,101,10],[119,15,101,13,"pathBLength"],[119,26,101,24],[119,29,101,27,"pathALength"],[119,40,101,38],[120,6,102,4,"itemB"],[120,11,102,9],[120,14,102,12,"pathB"],[120,19,102,17],[120,20,102,18,"indexB"],[120,26,102,24],[120,27,102,25],[121,6,103,4,"pathBLength"],[121,17,103,15],[121,20,103,18,"pathALength"],[121,31,103,29],[122,4,104,2],[124,4,106,2],[125,4,107,2],[125,8,107,6,"depth"],[125,13,107,11],[125,16,107,14,"pathALength"],[125,27,107,25],[126,4,108,2],[126,11,108,9,"depth"],[126,16,108,14],[126,18,108,16],[126,20,108,18],[127,6,109,4],[127,10,109,8,"itemA"],[127,15,109,13],[127,20,109,18,"itemB"],[127,25,109,23],[127,27,109,25],[128,8,110,6],[128,15,110,13,"itemA"],[128,20,110,18],[129,6,111,4],[130,6,112,4,"itemA"],[130,11,112,9],[130,14,112,12,"pathA"],[130,19,112,17],[130,20,112,18,"indexA"],[130,26,112,24],[130,28,112,26],[130,29,112,27],[131,6,113,4,"itemB"],[131,11,113,9],[131,14,113,12,"pathB"],[131,19,113,17],[131,20,113,18,"indexB"],[131,26,113,24],[131,28,113,26],[131,29,113,27],[132,4,114,2],[133,4,115,2],[133,11,115,9],[133,15,115,13],[134,2,116,0],[136,2,118,0],[137,0,119,0],[138,0,120,0],[139,0,121,0],[140,2,122,7],[140,11,122,16,"hasTargetTouches"],[140,27,122,32,"hasTargetTouches"],[140,28,122,33,"target"],[140,34,122,39],[140,36,122,41,"touches"],[140,43,122,48],[140,45,122,50],[141,4,123,2],[141,8,123,6],[141,9,123,7,"touches"],[141,16,123,14],[141,20,123,18,"touches"],[141,27,123,25],[141,28,123,26,"length"],[141,34,123,32],[141,39,123,37],[141,40,123,38],[141,42,123,40],[142,6,124,4],[142,13,124,11],[142,18,124,16],[143,4,125,2],[144,4,126,2],[144,9,126,7],[144,13,126,11,"i"],[144,14,126,12],[144,17,126,15],[144,18,126,16],[144,20,126,18,"i"],[144,21,126,19],[144,24,126,22,"touches"],[144,31,126,29],[144,32,126,30,"length"],[144,38,126,36],[144,40,126,38,"i"],[144,41,126,39],[144,43,126,41],[144,45,126,43],[145,6,127,4],[145,10,127,8,"node"],[145,14,127,12],[145,17,127,15,"touches"],[145,24,127,22],[145,25,127,23,"i"],[145,26,127,24],[145,27,127,25],[145,28,127,26,"target"],[145,34,127,32],[146,6,128,4],[146,10,128,8,"node"],[146,14,128,12],[146,18,128,16],[146,22,128,20],[146,24,128,22],[147,8,129,6],[147,12,129,10,"target"],[147,18,129,16],[147,19,129,17,"contains"],[147,27,129,25],[147,28,129,26,"node"],[147,32,129,30],[147,33,129,31],[147,35,129,33],[148,10,130,8],[148,17,130,15],[148,21,130,19],[149,8,131,6],[150,6,132,4],[151,4,133,2],[152,4,134,2],[152,11,134,9],[152,16,134,14],[153,2,135,0],[155,2,137,0],[156,0,138,0],[157,0,139,0],[158,0,140,0],[159,2,141,7],[159,11,141,16,"hasValidSelection"],[159,28,141,33,"hasValidSelection"],[159,29,141,34,"domEvent"],[159,37,141,42],[159,39,141,44],[160,4,142,2],[160,8,142,6,"domEvent"],[160,16,142,14],[160,17,142,15,"type"],[160,21,142,19],[160,26,142,24],[160,43,142,41],[160,45,142,43],[161,6,143,4],[161,13,143,11],[161,17,143,11,"isSelectionValid"],[161,33,143,27],[161,34,143,27,"default"],[161,41,143,27],[161,43,143,28],[161,44,143,29],[162,4,144,2],[163,4,145,2],[163,11,145,9,"domEvent"],[163,19,145,17],[163,20,145,18,"type"],[163,24,145,22],[163,29,145,27],[163,37,145,35],[164,2,146,0],[166,2,148,0],[167,0,149,0],[168,0,150,0],[169,2,151,7],[169,11,151,16,"isPrimaryPointerDown"],[169,31,151,36,"isPrimaryPointerDown"],[169,32,151,37,"domEvent"],[169,40,151,45],[169,42,151,47],[170,4,152,2],[170,8,152,6,"altKey"],[170,14,152,12],[170,17,152,15,"domEvent"],[170,25,152,23],[170,26,152,24,"altKey"],[170,32,152,30],[171,6,153,4,"button"],[171,12,153,10],[171,15,153,13,"domEvent"],[171,23,153,21],[171,24,153,22,"button"],[171,30,153,28],[172,6,154,4,"buttons"],[172,13,154,11],[172,16,154,14,"domEvent"],[172,24,154,22],[172,25,154,23,"buttons"],[172,32,154,30],[173,6,155,4,"ctrlKey"],[173,13,155,11],[173,16,155,14,"domEvent"],[173,24,155,22],[173,25,155,23,"ctrlKey"],[173,32,155,30],[174,6,156,4,"type"],[174,10,156,8],[174,13,156,11,"domEvent"],[174,21,156,19],[174,22,156,20,"type"],[174,26,156,24],[175,4,157,2],[175,8,157,6,"isTouch"],[175,15,157,13],[175,18,157,16,"type"],[175,22,157,20],[175,27,157,25],[175,39,157,37],[175,43,157,41,"type"],[175,47,157,45],[175,52,157,50],[175,63,157,61],[176,4,158,2],[176,8,158,6,"isPrimaryMouseDown"],[176,26,158,24],[176,29,158,27,"type"],[176,33,158,31],[176,38,158,36],[176,49,158,47],[176,54,158,52,"button"],[176,60,158,58],[176,65,158,63],[176,66,158,64],[176,70,158,68,"buttons"],[176,77,158,75],[176,82,158,80],[176,83,158,81],[176,84,158,82],[177,4,159,2],[177,8,159,6,"isPrimaryMouseMove"],[177,26,159,24],[177,29,159,27,"type"],[177,33,159,31],[177,38,159,36],[177,49,159,47],[177,53,159,51,"buttons"],[177,60,159,58],[177,65,159,63],[177,66,159,64],[178,4,160,2],[178,8,160,6,"noModifiers"],[178,19,160,17],[178,22,160,20,"altKey"],[178,28,160,26],[178,33,160,31],[178,38,160,36],[178,42,160,40,"ctrlKey"],[178,49,160,47],[178,54,160,52],[178,59,160,57],[179,4,161,2],[179,8,161,6,"isTouch"],[179,15,161,13],[179,19,161,17,"isPrimaryMouseDown"],[179,37,161,35],[179,41,161,39,"noModifiers"],[179,52,161,50],[179,56,161,54,"isPrimaryMouseMove"],[179,74,161,72],[179,78,161,76,"noModifiers"],[179,89,161,87],[179,91,161,89],[180,6,162,4],[180,13,162,11],[180,17,162,15],[181,4,163,2],[182,4,164,2],[182,11,164,9],[182,16,164,14],[183,2,165,0],[184,0,165,1],[184,3]],"functionMap":{"names":["<global>","getEventPath","composedPathFallback","getResponderId","setResponderId","getResponderPaths","getLowestCommonAncestor","hasTargetTouches","hasValidSelection","isPrimaryPointerDown"],"mappings":"AAA;ACW;CDW;AEC;CFO;AGK;CHK;OIK;CJI;OKK;CLgB;OMK;CNwC;OOM;CPa;OQM;CRK;OSK"},"hasCjsExports":false},"type":"js/module"}]}