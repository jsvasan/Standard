{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":61,"index":286}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"LogBoxLog\", {\n    enumerable: true,\n    get: function () {\n      return LogBoxLog;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _LogBoxSymbolication = require(_dependencyMap[2], \"./LogBoxSymbolication\");\n  var LogBoxSymbolication = _interopNamespace(_LogBoxSymbolication);\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  function componentStackToStack(componentStack) {\n    return componentStack.map(stack => ({\n      file: stack.fileName,\n      methodName: stack.content,\n      lineNumber: stack.location?.row ?? 0,\n      column: stack.location?.column ?? 0,\n      arguments: []\n    }));\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck.default)(this, LogBoxLog);\n      this.symbolicated = {\n        stack: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        },\n        component: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        }\n      };\n      this.callbacks = new Map();\n      this.componentStackCache = null;\n      this.level = data.level;\n      this.type = data.type ?? 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = data.symbolicated ?? this.symbolicated;\n    }\n    return (0, _createClass.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack(type) {\n        if (this.symbolicated[type].status === 'COMPLETE') {\n          return this.symbolicated[type].stack;\n        }\n        return this.getStack(type);\n      }\n    }, {\n      key: \"flushCallbacks\",\n      value: function flushCallbacks(type) {\n        var callbacks = this.callbacks.get(type);\n        var status = this.symbolicated[type].status;\n        if (callbacks) {\n          for (var callback of callbacks) {\n            callback(status);\n          }\n          callbacks.clear();\n        }\n      }\n    }, {\n      key: \"pushCallback\",\n      value: function pushCallback(type, callback) {\n        var callbacks = this.callbacks.get(type);\n        if (!callbacks) {\n          callbacks = new Set();\n          this.callbacks.set(type, callbacks);\n        }\n        callbacks.add(callback);\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(type, callback) {\n        this._symbolicate(type, true, callback);\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(type, callback) {\n        this._symbolicate(type, false, callback);\n      }\n    }, {\n      key: \"_symbolicate\",\n      value: function _symbolicate(type, retry, callback) {\n        if (callback) {\n          this.pushCallback(type, callback);\n        }\n        var status = this.symbolicated[type].status;\n        if (status === 'COMPLETE') {\n          return this.flushCallbacks(type);\n        }\n        if (retry) {\n          LogBoxSymbolication.deleteStack(this.getStack(type));\n          this.handleSymbolicate(type);\n        } else {\n          if (status === 'NONE') {\n            this.handleSymbolicate(type);\n          }\n        }\n      }\n    }, {\n      key: \"getStack\",\n      value: function getStack(type) {\n        if (type === 'component') {\n          if (this.componentStackCache == null) {\n            this.componentStackCache = componentStackToStack(this.componentStack);\n          }\n          return this.componentStackCache;\n        }\n        return this.stack;\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(type) {\n        if (type === 'component' && !this.componentStack?.length) {\n          return;\n        }\n        if (this.symbolicated[type].status !== 'PENDING') {\n          this.updateStatus(type, null, null, null);\n          LogBoxSymbolication.symbolicate(ensureStackFilesHaveParams(this.getStack(type))).then(data => {\n            this.updateStatus(type, null, data?.stack, data?.codeFrame);\n          }, error => {\n            this.updateStatus(type, error, null, null);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(type, error, stack, codeFrame) {\n        var lastStatus = this.symbolicated[type].status;\n        if (error != null) {\n          this.symbolicated[type] = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated[type] = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated[type] = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        var status = this.symbolicated[type].status;\n        if (lastStatus !== status) {\n          if (['COMPLETE', 'FAILED'].includes(status)) {\n            this.flushCallbacks(type);\n          }\n        }\n      }\n    }]);\n  }(); // Sometime the web stacks don't have correct query params, this can lead to Metro errors when it attempts to resolve without a platform.\n  // This will attempt to reconcile the issue by adding the current query params to the stack frames if they exist, or fallback to some common defaults.\n  function ensureStackFilesHaveParams(stack) {\n    var currentSrc = typeof document !== 'undefined' && document.currentScript ? 'src' in document.currentScript && document.currentScript.src || null : null;\n    var currentParams = currentSrc ? new URLSearchParams(currentSrc) : new URLSearchParams({\n      platform: 'web',\n      dev: String(__DEV__)\n    });\n    return stack.map(frame => {\n      if (!frame.file?.startsWith('http') ||\n      // Account for Metro malformed URLs\n      frame.file.includes('&platform=')) return frame;\n      var url = new URL(frame.file);\n      if (url.searchParams.has('platform')) {\n        return frame;\n      }\n      currentParams.forEach((value, key) => {\n        if (url.searchParams.has(key)) return;\n        url.searchParams.set(key, value);\n      });\n      return {\n        ...frame,\n        file: url.toString()\n      };\n    });\n  }\n});","lineCount":234,"map":[[27,2,48,0,"Object"],[27,8,48,0],[27,9,48,0,"defineProperty"],[27,23,48,0],[27,24,48,0,"exports"],[27,31,48,0],[28,4,48,0,"enumerable"],[28,14,48,0],[29,4,48,0,"get"],[29,7,48,0],[29,18,48,0,"get"],[29,19,48,0],[30,6,48,0],[30,13,48,0,"LogBoxLog"],[30,22,48,0],[31,4,48,0],[32,2,48,0],[33,2,221,1],[33,6,221,1,"_babelRuntimeHelpersClassCallCheck"],[33,40,221,1],[33,43,221,1,"require"],[33,50,221,1],[33,51,221,1,"_dependencyMap"],[33,65,221,1],[34,2,221,1],[34,6,221,1,"_classCallCheck"],[34,21,221,1],[34,24,221,1,"_interopDefault"],[34,39,221,1],[34,40,221,1,"_babelRuntimeHelpersClassCallCheck"],[34,74,221,1],[35,2,221,1],[35,6,221,1,"_babelRuntimeHelpersCreateClass"],[35,37,221,1],[35,40,221,1,"require"],[35,47,221,1],[35,48,221,1,"_dependencyMap"],[35,62,221,1],[36,2,221,1],[36,6,221,1,"_createClass"],[36,18,221,1],[36,21,221,1,"_interopDefault"],[36,36,221,1],[36,37,221,1,"_babelRuntimeHelpersCreateClass"],[36,68,221,1],[37,2,9,0],[37,6,9,0,"_LogBoxSymbolication"],[37,26,9,0],[37,29,9,0,"require"],[37,36,9,0],[37,37,9,0,"_dependencyMap"],[37,51,9,0],[38,2,9,0],[38,6,9,0,"LogBoxSymbolication"],[38,25,9,0],[38,28,9,0,"_interopNamespace"],[38,45,9,0],[38,46,9,0,"_LogBoxSymbolication"],[38,66,9,0],[39,2,1,0],[40,0,2,0],[41,0,3,0],[42,0,4,0],[43,0,5,0],[44,0,6,0],[45,0,7,0],[47,2,30,0],[47,11,30,9,"componentStackToStack"],[47,32,30,30,"componentStackToStack"],[47,33,30,31,"componentStack"],[47,47,30,61],[47,49,30,70],[48,4,31,2],[48,11,31,9,"componentStack"],[48,25,31,23],[48,26,31,24,"map"],[48,29,31,27],[48,30,31,29,"stack"],[48,35,31,34],[48,40,31,40],[49,6,32,4,"file"],[49,10,32,8],[49,12,32,10,"stack"],[49,17,32,15],[49,18,32,16,"fileName"],[49,26,32,24],[50,6,33,4,"methodName"],[50,16,33,14],[50,18,33,16,"stack"],[50,23,33,21],[50,24,33,22,"content"],[50,31,33,29],[51,6,34,4,"lineNumber"],[51,16,34,14],[51,18,34,16,"stack"],[51,23,34,21],[51,24,34,22,"location"],[51,32,34,30],[51,34,34,32,"row"],[51,37,34,35],[51,41,34,39],[51,42,34,40],[52,6,35,4,"column"],[52,12,35,10],[52,14,35,12,"stack"],[52,19,35,17],[52,20,35,18,"location"],[52,28,35,26],[52,30,35,28,"column"],[52,36,35,34],[52,40,35,38],[52,41,35,39],[53,6,36,4,"arguments"],[53,15,36,13],[53,17,36,15],[54,4,37,2],[54,5,37,3],[54,6,37,4],[54,7,37,5],[55,2,38,0],[56,2,38,1],[56,6,48,13,"LogBoxLog"],[56,15,48,22],[57,4,73,2],[57,13,73,2,"LogBoxLog"],[57,23,74,4,"data"],[57,27,76,5],[57,29,77,4],[58,6,77,4],[58,10,77,4,"_classCallCheck"],[58,25,77,4],[58,26,77,4,"default"],[58,33,77,4],[58,41,77,4,"LogBoxLog"],[58,50,77,4],[59,6,77,4],[59,11,58,2,"symbolicated"],[59,23,58,14],[59,26,58,57],[60,8,59,4,"stack"],[60,13,59,9],[60,15,59,11],[61,10,60,6,"error"],[61,15,60,11],[61,17,60,13],[61,21,60,17],[62,10,61,6,"stack"],[62,15,61,11],[62,17,61,13],[62,21,61,17],[63,10,62,6,"status"],[63,16,62,12],[63,18,62,14],[64,8,63,4],[64,9,63,5],[65,8,64,4,"component"],[65,17,64,13],[65,19,64,15],[66,10,65,6,"error"],[66,15,65,11],[66,17,65,13],[66,21,65,17],[67,10,66,6,"stack"],[67,15,66,11],[67,17,66,13],[67,21,66,17],[68,10,67,6,"status"],[68,16,67,12],[68,18,67,14],[69,8,68,4],[70,6,69,2],[70,7,69,3],[71,6,69,3],[71,11,71,10,"callbacks"],[71,20,71,19],[71,23,71,66],[71,27,71,70,"Map"],[71,30,71,73],[71,31,71,74],[71,32,71,75],[72,6,71,75],[72,11,153,10,"componentStackCache"],[72,30,153,29],[72,33,153,46],[72,37,153,50],[73,6,78,4],[73,10,78,8],[73,11,78,9,"level"],[73,16,78,14],[73,19,78,17,"data"],[73,23,78,21],[73,24,78,22,"level"],[73,29,78,27],[74,6,79,4],[74,10,79,8],[74,11,79,9,"type"],[74,15,79,13],[74,18,79,16,"data"],[74,22,79,20],[74,23,79,21,"type"],[74,27,79,25],[74,31,79,29],[74,38,79,36],[75,6,80,4],[75,10,80,8],[75,11,80,9,"message"],[75,18,80,16],[75,21,80,19,"data"],[75,25,80,23],[75,26,80,24,"message"],[75,33,80,31],[76,6,81,4],[76,10,81,8],[76,11,81,9,"stack"],[76,16,81,14],[76,19,81,17,"data"],[76,23,81,21],[76,24,81,22,"stack"],[76,29,81,27],[77,6,82,4],[77,10,82,8],[77,11,82,9,"category"],[77,19,82,17],[77,22,82,20,"data"],[77,26,82,24],[77,27,82,25,"category"],[77,35,82,33],[78,6,83,4],[78,10,83,8],[78,11,83,9,"componentStack"],[78,25,83,23],[78,28,83,26,"data"],[78,32,83,30],[78,33,83,31,"componentStack"],[78,47,83,45],[79,6,84,4],[79,10,84,8],[79,11,84,9,"codeFrame"],[79,20,84,18],[79,23,84,21,"data"],[79,27,84,25],[79,28,84,26,"codeFrame"],[79,37,84,35],[80,6,85,4],[80,10,85,8],[80,11,85,9,"isComponentError"],[80,27,85,25],[80,30,85,28,"data"],[80,34,85,32],[80,35,85,33,"isComponentError"],[80,51,85,49],[81,6,86,4],[81,10,86,8],[81,11,86,9,"count"],[81,16,86,14],[81,19,86,17],[81,20,86,18],[82,6,87,4],[82,10,87,8],[82,11,87,9,"symbolicated"],[82,23,87,21],[82,26,87,24,"data"],[82,30,87,28],[82,31,87,29,"symbolicated"],[82,43,87,41],[82,47,87,45],[82,51,87,49],[82,52,87,50,"symbolicated"],[82,64,87,62],[83,4,88,2],[84,4,88,3],[84,15,88,3,"_createClass"],[84,27,88,3],[84,28,88,3,"default"],[84,35,88,3],[84,37,88,3,"LogBoxLog"],[84,46,88,3],[85,6,88,3,"key"],[85,9,88,3],[86,6,88,3,"value"],[86,11,88,3],[86,13,90,2],[86,22,90,2,"incrementCount"],[86,36,90,16,"incrementCount"],[86,37,90,16],[86,39,90,25],[87,8,91,4],[87,12,91,8],[87,13,91,9,"count"],[87,18,91,14],[87,22,91,18],[87,23,91,19],[88,6,92,2],[89,4,92,3],[90,6,92,3,"key"],[90,9,92,3],[91,6,92,3,"value"],[91,11,92,3],[91,13,94,2],[91,22,94,2,"getAvailableStack"],[91,39,94,19,"getAvailableStack"],[91,40,94,20,"type"],[91,44,94,35],[91,46,94,51],[92,8,95,4],[92,12,95,8],[92,16,95,12],[92,17,95,13,"symbolicated"],[92,29,95,25],[92,30,95,26,"type"],[92,34,95,30],[92,35,95,31],[92,36,95,32,"status"],[92,42,95,38],[92,47,95,43],[92,57,95,53],[92,59,95,55],[93,10,96,6],[93,17,96,13],[93,21,96,17],[93,22,96,18,"symbolicated"],[93,34,96,30],[93,35,96,31,"type"],[93,39,96,35],[93,40,96,36],[93,41,96,37,"stack"],[93,46,96,42],[94,8,97,4],[95,8,98,4],[95,15,98,11],[95,19,98,15],[95,20,98,16,"getStack"],[95,28,98,24],[95,29,98,25,"type"],[95,33,98,29],[95,34,98,30],[96,6,99,2],[97,4,99,3],[98,6,99,3,"key"],[98,9,99,3],[99,6,99,3,"value"],[99,11,99,3],[99,13,101,2],[99,22,101,10,"flushCallbacks"],[99,36,101,24,"flushCallbacks"],[99,37,101,25,"type"],[99,41,101,40],[99,43,101,48],[100,8,102,4],[100,12,102,10,"callbacks"],[100,21,102,19],[100,24,102,22],[100,28,102,26],[100,29,102,27,"callbacks"],[100,38,102,36],[100,39,102,37,"get"],[100,42,102,40],[100,43,102,41,"type"],[100,47,102,45],[100,48,102,46],[101,8,103,4],[101,12,103,10,"status"],[101,18,103,16],[101,21,103,19],[101,25,103,23],[101,26,103,24,"symbolicated"],[101,38,103,36],[101,39,103,37,"type"],[101,43,103,41],[101,44,103,42],[101,45,103,43,"status"],[101,51,103,49],[102,8,104,4],[102,12,104,8,"callbacks"],[102,21,104,17],[102,23,104,19],[103,10,105,6],[103,15,105,11],[103,19,105,17,"callback"],[103,27,105,25],[103,31,105,29,"callbacks"],[103,40,105,38],[103,42,105,40],[104,12,106,8,"callback"],[104,20,106,16],[104,21,106,17,"status"],[104,27,106,23],[104,28,106,24],[105,10,107,6],[106,10,108,6,"callbacks"],[106,19,108,15],[106,20,108,16,"clear"],[106,25,108,21],[106,26,108,22],[106,27,108,23],[107,8,109,4],[108,6,110,2],[109,4,110,3],[110,6,110,3,"key"],[110,9,110,3],[111,6,110,3,"value"],[111,11,110,3],[111,13,112,2],[111,22,112,10,"pushCallback"],[111,34,112,22,"pushCallback"],[111,35,112,23,"type"],[111,39,112,38],[111,41,112,40,"callback"],[111,49,112,71],[111,51,112,79],[112,8,113,4],[112,12,113,8,"callbacks"],[112,21,113,17],[112,24,113,20],[112,28,113,24],[112,29,113,25,"callbacks"],[112,38,113,34],[112,39,113,35,"get"],[112,42,113,38],[112,43,113,39,"type"],[112,47,113,43],[112,48,113,44],[113,8,114,4],[113,12,114,8],[113,13,114,9,"callbacks"],[113,22,114,18],[113,24,114,20],[114,10,115,6,"callbacks"],[114,19,115,15],[114,22,115,18],[114,26,115,22,"Set"],[114,29,115,25],[114,30,115,26],[114,31,115,27],[115,10,116,6],[115,14,116,10],[115,15,116,11,"callbacks"],[115,24,116,20],[115,25,116,21,"set"],[115,28,116,24],[115,29,116,25,"type"],[115,33,116,29],[115,35,116,31,"callbacks"],[115,44,116,40],[115,45,116,41],[116,8,117,4],[117,8,118,4,"callbacks"],[117,17,118,13],[117,18,118,14,"add"],[117,21,118,17],[117,22,118,18,"callback"],[117,30,118,26],[117,31,118,27],[118,6,119,2],[119,4,119,3],[120,6,119,3,"key"],[120,9,119,3],[121,6,119,3,"value"],[121,11,119,3],[121,13,121,2],[121,22,121,2,"retrySymbolicate"],[121,38,121,18,"retrySymbolicate"],[121,39,121,19,"type"],[121,43,121,34],[121,45,121,36,"callback"],[121,53,121,84],[121,55,121,92],[122,8,122,4],[122,12,122,8],[122,13,122,9,"_symbolicate"],[122,25,122,21],[122,26,122,22,"type"],[122,30,122,26],[122,32,122,28],[122,36,122,32],[122,38,122,34,"callback"],[122,46,122,42],[122,47,122,43],[123,6,123,2],[124,4,123,3],[125,6,123,3,"key"],[125,9,123,3],[126,6,123,3,"value"],[126,11,123,3],[126,13,125,2],[126,22,125,2,"symbolicate"],[126,33,125,13,"symbolicate"],[126,34,125,14,"type"],[126,38,125,29],[126,40,125,31,"callback"],[126,48,125,79],[126,50,125,87],[127,8,126,4],[127,12,126,8],[127,13,126,9,"_symbolicate"],[127,25,126,21],[127,26,126,22,"type"],[127,30,126,26],[127,32,126,28],[127,37,126,33],[127,39,126,35,"callback"],[127,47,126,43],[127,48,126,44],[128,6,127,2],[129,4,127,3],[130,6,127,3,"key"],[130,9,127,3],[131,6,127,3,"value"],[131,11,127,3],[131,13,129,2],[131,22,129,10,"_symbolicate"],[131,34,129,22,"_symbolicate"],[131,35,130,4,"type"],[131,39,130,19],[131,41,131,4,"retry"],[131,46,131,18],[131,48,132,4,"callback"],[131,56,132,52],[131,58,133,10],[132,8,134,4],[132,12,134,8,"callback"],[132,20,134,16],[132,22,134,18],[133,10,135,6],[133,14,135,10],[133,15,135,11,"pushCallback"],[133,27,135,23],[133,28,135,24,"type"],[133,32,135,28],[133,34,135,30,"callback"],[133,42,135,38],[133,43,135,39],[134,8,136,4],[135,8,137,4],[135,12,137,10,"status"],[135,18,137,16],[135,21,137,19],[135,25,137,23],[135,26,137,24,"symbolicated"],[135,38,137,36],[135,39,137,37,"type"],[135,43,137,41],[135,44,137,42],[135,45,137,43,"status"],[135,51,137,49],[136,8,139,4],[136,12,139,8,"status"],[136,18,139,14],[136,23,139,19],[136,33,139,29],[136,35,139,31],[137,10,140,6],[137,17,140,13],[137,21,140,17],[137,22,140,18,"flushCallbacks"],[137,36,140,32],[137,37,140,33,"type"],[137,41,140,37],[137,42,140,38],[138,8,141,4],[139,8,143,4],[139,12,143,8,"retry"],[139,17,143,13],[139,19,143,15],[140,10,144,6,"LogBoxSymbolication"],[140,29,144,25],[140,30,144,26,"deleteStack"],[140,41,144,37],[140,42,144,38],[140,46,144,42],[140,47,144,43,"getStack"],[140,55,144,51],[140,56,144,52,"type"],[140,60,144,56],[140,61,144,57],[140,62,144,58],[141,10,145,6],[141,14,145,10],[141,15,145,11,"handleSymbolicate"],[141,32,145,28],[141,33,145,29,"type"],[141,37,145,33],[141,38,145,34],[142,8,146,4],[142,9,146,5],[142,15,146,11],[143,10,147,6],[143,14,147,10,"status"],[143,20,147,16],[143,25,147,21],[143,31,147,27],[143,33,147,29],[144,12,148,8],[144,16,148,12],[144,17,148,13,"handleSymbolicate"],[144,34,148,30],[144,35,148,31,"type"],[144,39,148,35],[144,40,148,36],[145,10,149,6],[146,8,150,4],[147,6,151,2],[148,4,151,3],[149,6,151,3,"key"],[149,9,151,3],[150,6,151,3,"value"],[150,11,151,3],[150,13,155,2],[150,22,155,10,"getStack"],[150,30,155,18,"getStack"],[150,31,155,19,"type"],[150,35,155,34],[150,37,155,43],[151,8,156,4],[151,12,156,8,"type"],[151,16,156,12],[151,21,156,17],[151,32,156,28],[151,34,156,30],[152,10,157,6],[152,14,157,10],[152,18,157,14],[152,19,157,15,"componentStackCache"],[152,38,157,34],[152,42,157,38],[152,46,157,42],[152,48,157,44],[153,12,158,8],[153,16,158,12],[153,17,158,13,"componentStackCache"],[153,36,158,32],[153,39,158,35,"componentStackToStack"],[153,60,158,56],[153,61,158,57],[153,65,158,61],[153,66,158,62,"componentStack"],[153,80,158,76],[153,81,158,77],[154,10,159,6],[155,10,160,6],[155,17,160,13],[155,21,160,17],[155,22,160,18,"componentStackCache"],[155,41,160,37],[156,8,161,4],[157,8,162,4],[157,15,162,11],[157,19,162,15],[157,20,162,16,"stack"],[157,25,162,21],[158,6,163,2],[159,4,163,3],[160,6,163,3,"key"],[160,9,163,3],[161,6,163,3,"value"],[161,11,163,3],[161,13,165,2],[161,22,165,10,"handleSymbolicate"],[161,39,165,27,"handleSymbolicate"],[161,40,165,28,"type"],[161,44,165,43],[161,46,165,51],[162,8,166,4],[162,12,166,8,"type"],[162,16,166,12],[162,21,166,17],[162,32,166,28],[162,36,166,32],[162,37,166,33],[162,41,166,37],[162,42,166,38,"componentStack"],[162,56,166,52],[162,58,166,54,"length"],[162,64,166,60],[162,66,166,62],[163,10,167,6],[164,8,168,4],[165,8,170,4],[165,12,170,8],[165,16,170,12],[165,17,170,13,"symbolicated"],[165,29,170,25],[165,30,170,26,"type"],[165,34,170,30],[165,35,170,31],[165,36,170,32,"status"],[165,42,170,38],[165,47,170,43],[165,56,170,52],[165,58,170,54],[166,10,171,6],[166,14,171,10],[166,15,171,11,"updateStatus"],[166,27,171,23],[166,28,171,24,"type"],[166,32,171,28],[166,34,171,30],[166,38,171,34],[166,40,171,36],[166,44,171,40],[166,46,171,42],[166,50,171,46],[166,51,171,47],[167,10,172,6,"LogBoxSymbolication"],[167,29,172,25],[167,30,172,26,"symbolicate"],[167,41,172,37],[167,42,172,38,"ensureStackFilesHaveParams"],[167,68,172,64],[167,69,172,65],[167,73,172,69],[167,74,172,70,"getStack"],[167,82,172,78],[167,83,172,79,"type"],[167,87,172,83],[167,88,172,84],[167,89,172,85],[167,90,172,86],[167,91,172,87,"then"],[167,95,172,91],[167,96,173,9,"data"],[167,100,173,13],[167,104,173,18],[168,12,174,10],[168,16,174,14],[168,17,174,15,"updateStatus"],[168,29,174,27],[168,30,174,28,"type"],[168,34,174,32],[168,36,174,34],[168,40,174,38],[168,42,174,40,"data"],[168,46,174,44],[168,48,174,46,"stack"],[168,53,174,51],[168,55,174,53,"data"],[168,59,174,57],[168,61,174,59,"codeFrame"],[168,70,174,68],[168,71,174,69],[169,10,175,8],[169,11,175,9],[169,13,176,9,"error"],[169,18,176,14],[169,22,176,19],[170,12,177,10],[170,16,177,14],[170,17,177,15,"updateStatus"],[170,29,177,27],[170,30,177,28,"type"],[170,34,177,32],[170,36,177,34,"error"],[170,41,177,39],[170,43,177,41],[170,47,177,45],[170,49,177,47],[170,53,177,51],[170,54,177,52],[171,10,178,8],[171,11,179,6],[171,12,179,7],[172,8,180,4],[173,6,181,2],[174,4,181,3],[175,6,181,3,"key"],[175,9,181,3],[176,6,181,3,"value"],[176,11,181,3],[176,13,183,2],[176,22,183,10,"updateStatus"],[176,34,183,22,"updateStatus"],[176,35,184,4,"type"],[176,39,184,19],[176,41,185,4,"error"],[176,46,185,24],[176,48,186,4,"stack"],[176,53,186,24],[176,55,187,4,"codeFrame"],[176,64,187,32],[176,66,188,10],[177,8,189,4],[177,12,189,10,"lastStatus"],[177,22,189,20],[177,25,189,23],[177,29,189,27],[177,30,189,28,"symbolicated"],[177,42,189,40],[177,43,189,41,"type"],[177,47,189,45],[177,48,189,46],[177,49,189,47,"status"],[177,55,189,53],[178,8,190,4],[178,12,190,8,"error"],[178,17,190,13],[178,21,190,17],[178,25,190,21],[178,27,190,23],[179,10,191,6],[179,14,191,10],[179,15,191,11,"symbolicated"],[179,27,191,23],[179,28,191,24,"type"],[179,32,191,28],[179,33,191,29],[179,36,191,32],[180,12,192,8,"error"],[180,17,192,13],[181,12,193,8,"stack"],[181,17,193,13],[181,19,193,15],[181,23,193,19],[182,12,194,8,"status"],[182,18,194,14],[182,20,194,16],[183,10,195,6],[183,11,195,7],[184,8,196,4],[184,9,196,5],[184,15,196,11],[184,19,196,15,"stack"],[184,24,196,20],[184,28,196,24],[184,32,196,28],[184,34,196,30],[185,10,197,6],[185,14,197,10,"codeFrame"],[185,23,197,19],[185,25,197,21],[186,12,198,8],[186,16,198,12],[186,17,198,13,"codeFrame"],[186,26,198,22],[186,29,198,25,"codeFrame"],[186,38,198,34],[187,10,199,6],[188,10,201,6],[188,14,201,10],[188,15,201,11,"symbolicated"],[188,27,201,23],[188,28,201,24,"type"],[188,32,201,28],[188,33,201,29],[188,36,201,32],[189,12,202,8,"error"],[189,17,202,13],[189,19,202,15],[189,23,202,19],[190,12,203,8,"stack"],[190,17,203,13],[191,12,204,8,"status"],[191,18,204,14],[191,20,204,16],[192,10,205,6],[192,11,205,7],[193,8,206,4],[193,9,206,5],[193,15,206,11],[194,10,207,6],[194,14,207,10],[194,15,207,11,"symbolicated"],[194,27,207,23],[194,28,207,24,"type"],[194,32,207,28],[194,33,207,29],[194,36,207,32],[195,12,208,8,"error"],[195,17,208,13],[195,19,208,15],[195,23,208,19],[196,12,209,8,"stack"],[196,17,209,13],[196,19,209,15],[196,23,209,19],[197,12,210,8,"status"],[197,18,210,14],[197,20,210,16],[198,10,211,6],[198,11,211,7],[199,8,212,4],[200,8,214,4],[200,12,214,10,"status"],[200,18,214,16],[200,21,214,19],[200,25,214,23],[200,26,214,24,"symbolicated"],[200,38,214,36],[200,39,214,37,"type"],[200,43,214,41],[200,44,214,42],[200,45,214,43,"status"],[200,51,214,49],[201,8,215,4],[201,12,215,8,"lastStatus"],[201,22,215,18],[201,27,215,23,"status"],[201,33,215,29],[201,35,215,31],[202,10,216,6],[202,14,216,10],[202,15,216,11],[202,25,216,21],[202,27,216,23],[202,35,216,31],[202,36,216,32],[202,37,216,33,"includes"],[202,45,216,41],[202,46,216,42,"status"],[202,52,216,48],[202,53,216,49],[202,55,216,51],[203,12,217,8],[203,16,217,12],[203,17,217,13,"flushCallbacks"],[203,31,217,27],[203,32,217,28,"type"],[203,36,217,32],[203,37,217,33],[204,10,218,6],[205,8,219,4],[206,6,220,2],[207,4,220,3],[208,2,220,3],[208,7,223,0],[209,2,224,0],[210,2,225,0],[210,11,225,9,"ensureStackFilesHaveParams"],[210,37,225,35,"ensureStackFilesHaveParams"],[210,38,225,36,"stack"],[210,43,225,48],[210,45,225,57],[211,4,226,2],[211,8,226,8,"currentSrc"],[211,18,226,18],[211,21,227,4],[211,28,227,11,"document"],[211,36,227,19],[211,41,227,24],[211,52,227,35],[211,56,227,39,"document"],[211,64,227,47],[211,65,227,48,"currentScript"],[211,78,227,61],[211,81,228,9],[211,86,228,14],[211,90,228,18,"document"],[211,98,228,26],[211,99,228,27,"currentScript"],[211,112,228,40],[211,116,228,44,"document"],[211,124,228,52],[211,125,228,53,"currentScript"],[211,138,228,66],[211,139,228,67,"src"],[211,142,228,70],[211,146,228,75],[211,150,228,79],[211,153,229,8],[211,157,229,12],[212,4,231,2],[212,8,231,8,"currentParams"],[212,21,231,21],[212,24,231,24,"currentSrc"],[212,34,231,34],[212,37,232,6],[212,41,232,10,"URLSearchParams"],[212,56,232,25],[212,57,232,26,"currentSrc"],[212,67,232,36],[212,68,232,37],[212,71,233,6],[212,75,233,10,"URLSearchParams"],[212,90,233,25],[212,91,233,26],[213,6,234,8,"platform"],[213,14,234,16],[213,16,234,18],[213,21,234,23],[214,6,235,8,"dev"],[214,9,235,11],[214,11,235,13,"String"],[214,17,235,19],[214,18,235,20,"__DEV__"],[214,25,235,27],[215,4,236,6],[215,5,236,7],[215,6,236,8],[216,4,238,2],[216,11,238,9,"stack"],[216,16,238,14],[216,17,238,15,"map"],[216,20,238,18],[216,21,238,20,"frame"],[216,26,238,25],[216,30,238,30],[217,6,239,4],[217,10,240,6],[217,11,240,7,"frame"],[217,16,240,12],[217,17,240,13,"file"],[217,21,240,17],[217,23,240,19,"startsWith"],[217,33,240,29],[217,34,240,30],[217,40,240,36],[217,41,240,37],[218,6,241,6],[219,6,242,6,"frame"],[219,11,242,11],[219,12,242,12,"file"],[219,16,242,16],[219,17,242,17,"includes"],[219,25,242,25],[219,26,242,26],[219,38,242,38],[219,39,242,39],[219,41,244,6],[219,48,244,13,"frame"],[219,53,244,18],[220,6,246,4],[220,10,246,10,"url"],[220,13,246,13],[220,16,246,16],[220,20,246,20,"URL"],[220,23,246,23],[220,24,246,24,"frame"],[220,29,246,29],[220,30,246,30,"file"],[220,34,246,34],[220,35,246,35],[221,6,247,4],[221,10,247,8,"url"],[221,13,247,11],[221,14,247,12,"searchParams"],[221,26,247,24],[221,27,247,25,"has"],[221,30,247,28],[221,31,247,29],[221,41,247,39],[221,42,247,40],[221,44,247,42],[222,8,248,6],[222,15,248,13,"frame"],[222,20,248,18],[223,6,249,4],[224,6,251,4,"currentParams"],[224,19,251,17],[224,20,251,18,"forEach"],[224,27,251,25],[224,28,251,26],[224,29,251,27,"value"],[224,34,251,32],[224,36,251,34,"key"],[224,39,251,37],[224,44,251,42],[225,8,252,6],[225,12,252,10,"url"],[225,15,252,13],[225,16,252,14,"searchParams"],[225,28,252,26],[225,29,252,27,"has"],[225,32,252,30],[225,33,252,31,"key"],[225,36,252,34],[225,37,252,35],[225,39,252,37],[226,8,253,6,"url"],[226,11,253,9],[226,12,253,10,"searchParams"],[226,24,253,22],[226,25,253,23,"set"],[226,28,253,26],[226,29,253,27,"key"],[226,32,253,30],[226,34,253,32,"value"],[226,39,253,37],[226,40,253,38],[227,6,254,4],[227,7,254,5],[227,8,254,6],[228,6,256,4],[228,13,256,11],[229,8,256,13],[229,11,256,16,"frame"],[229,16,256,21],[230,8,256,23,"file"],[230,12,256,27],[230,14,256,29,"url"],[230,17,256,32],[230,18,256,33,"toString"],[230,26,256,41],[230,27,256,42],[231,6,256,44],[231,7,256,45],[232,4,257,2],[232,5,257,3],[232,6,257,4],[233,2,258,0],[234,0,258,1],[234,3]],"functionMap":{"names":["<global>","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","ensureStackFilesHaveParams","stack.map$argument_0","currentParams.forEach$argument_0"],"mappings":"AAA;AC6B;4BCC;IDM;CDC;OGU;ECyB;GDe;EEE;GFE;EGE;GHK;EIE;GJS;EKE;GLO;EME;GNE;EOE;GPE;EQE;GRsB;ESI;GTQ;EUE;QCQ;SDE;QEC;SFE;GVG;EaE;GbqC;CHC;AiBI;mBCa;0BCa;KDG;GDG;CjBC"},"hasCjsExports":false},"type":"js/module"}]}