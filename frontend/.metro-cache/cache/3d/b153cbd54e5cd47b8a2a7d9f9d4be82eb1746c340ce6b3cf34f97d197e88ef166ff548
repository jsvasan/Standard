{"dependencies":[{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":65,"index":65}}],"key":"SfRhzMj3Ex6qA89WTFEUm9Lj49A=","exportNames":["*"],"imports":1}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":301},"end":{"line":12,"column":43,"index":344}}],"key":"bGUa+dDG2WEhPiIlobT3urS95UE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectSpread = require(_dependencyMap[0], \"@babel/runtime/helpers/objectSpread2\");\n  var _objectSpread = _interopDefault(_babelRuntimeHelpersObjectSpread);\n  var _fbjsLibInvariant = require(_dependencyMap[1], \"fbjs/lib/invariant\");\n  var invariant = _interopDefault(_fbjsLibInvariant);\n  /**\n   * Copyright (c) Nicolas Gallagher.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  class TaskQueue {\n    constructor(_ref) {\n      var onMoreTasks = _ref.onMoreTasks;\n      this._onMoreTasks = onMoreTasks;\n      this._queueStack = [{\n        tasks: [],\n        popable: true\n      }];\n    }\n    enqueue(task) {\n      this._getCurrentQueue().push(task);\n    }\n    enqueueTasks(tasks) {\n      tasks.forEach(task => this.enqueue(task));\n    }\n    cancelTasks(tasksToCancel) {\n      this._queueStack = this._queueStack.map(queue => (0, _objectSpread.default)((0, _objectSpread.default)({}, queue), {}, {\n        tasks: queue.tasks.filter(task => tasksToCancel.indexOf(task) === -1)\n      })).filter((queue, idx) => queue.tasks.length > 0 || idx === 0);\n    }\n    hasTasksToProcess() {\n      return this._getCurrentQueue().length > 0;\n    }\n\n    /**\n     * Executes the next task in the queue.\n     */\n    processNext() {\n      var queue = this._getCurrentQueue();\n      if (queue.length) {\n        var task = queue.shift();\n        try {\n          if (typeof task === 'object' && task.gen) {\n            this._genPromise(task);\n          } else if (typeof task === 'object' && task.run) {\n            task.run();\n          } else {\n            (0, invariant.default)(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n            task();\n          }\n        } catch (e) {\n          e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n          throw e;\n        }\n      }\n    }\n    _getCurrentQueue() {\n      var stackIdx = this._queueStack.length - 1;\n      var queue = this._queueStack[stackIdx];\n      if (queue.popable && queue.tasks.length === 0 && stackIdx > 0) {\n        this._queueStack.pop();\n        return this._getCurrentQueue();\n      } else {\n        return queue.tasks;\n      }\n    }\n    _genPromise(task) {\n      var length = this._queueStack.push({\n        tasks: [],\n        popable: false\n      });\n      var stackIdx = length - 1;\n      var stackItem = this._queueStack[stackIdx];\n      task.gen().then(() => {\n        stackItem.popable = true;\n        this.hasTasksToProcess() && this._onMoreTasks();\n      }).catch(ex => {\n        setTimeout(() => {\n          ex.message = \"TaskQueue: Error resolving Promise in task \" + task.name + \": \" + ex.message;\n          throw ex;\n        }, 0);\n      });\n    }\n  }\n  var _default = TaskQueue;\n});","lineCount":107,"map":[[12,2,87,0,"Object"],[12,8,87,0],[12,9,87,0,"defineProperty"],[12,23,87,0],[12,24,87,0,"exports"],[12,31,87,0],[13,4,87,0,"enumerable"],[13,14,87,0],[14,4,87,0,"get"],[14,7,87,0],[14,18,87,0,"get"],[14,19,87,0],[15,6,87,0],[15,13,87,0,"_default"],[15,21,87,0],[16,4,87,0],[17,2,87,0],[18,2,1,0],[18,6,1,0,"_babelRuntimeHelpersObjectSpread"],[18,38,1,0],[18,41,1,0,"require"],[18,48,1,0],[18,49,1,0,"_dependencyMap"],[18,63,1,0],[19,2,1,0],[19,6,1,0,"_objectSpread"],[19,19,1,0],[19,22,1,0,"_interopDefault"],[19,37,1,0],[19,38,1,0,"_babelRuntimeHelpersObjectSpread"],[19,70,1,0],[20,2,12,0],[20,6,12,0,"_fbjsLibInvariant"],[20,23,12,0],[20,26,12,0,"require"],[20,33,12,0],[20,34,12,0,"_dependencyMap"],[20,48,12,0],[21,2,12,0],[21,6,12,0,"invariant"],[21,15,12,0],[21,18,12,0,"_interopDefault"],[21,33,12,0],[21,34,12,0,"_fbjsLibInvariant"],[21,51,12,0],[22,2,2,0],[23,0,3,0],[24,0,4,0],[25,0,5,0],[26,0,6,0],[27,0,7,0],[28,0,8,0],[29,0,9,0],[30,0,10,0],[32,2,13,0],[32,8,13,6,"TaskQueue"],[32,17,13,15],[32,18,13,16],[33,4,14,2,"constructor"],[33,15,14,13,"constructor"],[33,16,14,14,"_ref"],[33,20,14,18],[33,22,14,20],[34,6,15,4],[34,10,15,8,"onMoreTasks"],[34,21,15,19],[34,24,15,22,"_ref"],[34,28,15,26],[34,29,15,27,"onMoreTasks"],[34,40,15,38],[35,6,16,4],[35,10,16,8],[35,11,16,9,"_onMoreTasks"],[35,23,16,21],[35,26,16,24,"onMoreTasks"],[35,37,16,35],[36,6,17,4],[36,10,17,8],[36,11,17,9,"_queueStack"],[36,22,17,20],[36,25,17,23],[36,26,17,24],[37,8,18,6,"tasks"],[37,13,18,11],[37,15,18,13],[37,17,18,15],[38,8,19,6,"popable"],[38,15,19,13],[38,17,19,15],[39,6,20,4],[39,7,20,5],[39,8,20,6],[40,4,21,2],[41,4,22,2,"enqueue"],[41,11,22,9,"enqueue"],[41,12,22,10,"task"],[41,16,22,14],[41,18,22,16],[42,6,23,4],[42,10,23,8],[42,11,23,9,"_getCurrentQueue"],[42,27,23,25],[42,28,23,26],[42,29,23,27],[42,30,23,28,"push"],[42,34,23,32],[42,35,23,33,"task"],[42,39,23,37],[42,40,23,38],[43,4,24,2],[44,4,25,2,"enqueueTasks"],[44,16,25,14,"enqueueTasks"],[44,17,25,15,"tasks"],[44,22,25,20],[44,24,25,22],[45,6,26,4,"tasks"],[45,11,26,9],[45,12,26,10,"forEach"],[45,19,26,17],[45,20,26,18,"task"],[45,24,26,22],[45,28,26,26],[45,32,26,30],[45,33,26,31,"enqueue"],[45,40,26,38],[45,41,26,39,"task"],[45,45,26,43],[45,46,26,44],[45,47,26,45],[46,4,27,2],[47,4,28,2,"cancelTasks"],[47,15,28,13,"cancelTasks"],[47,16,28,14,"tasksToCancel"],[47,29,28,27],[47,31,28,29],[48,6,29,4],[48,10,29,8],[48,11,29,9,"_queueStack"],[48,22,29,20],[48,25,29,23],[48,29,29,27],[48,30,29,28,"_queueStack"],[48,41,29,39],[48,42,29,40,"map"],[48,45,29,43],[48,46,29,44,"queue"],[48,51,29,49],[48,55,29,53],[48,59,29,53,"_objectSpread"],[48,72,29,66],[48,73,29,66,"default"],[48,80,29,66],[48,82,29,67],[48,86,29,67,"_objectSpread"],[48,99,29,80],[48,100,29,80,"default"],[48,107,29,80],[48,109,29,81],[48,110,29,82],[48,111,29,83],[48,113,29,85,"queue"],[48,118,29,90],[48,119,29,91],[48,121,29,93],[48,122,29,94],[48,123,29,95],[48,125,29,97],[49,8,30,6,"tasks"],[49,13,30,11],[49,15,30,13,"queue"],[49,20,30,18],[49,21,30,19,"tasks"],[49,26,30,24],[49,27,30,25,"filter"],[49,33,30,31],[49,34,30,32,"task"],[49,38,30,36],[49,42,30,40,"tasksToCancel"],[49,55,30,53],[49,56,30,54,"indexOf"],[49,63,30,61],[49,64,30,62,"task"],[49,68,30,66],[49,69,30,67],[49,74,30,72],[49,75,30,73],[49,76,30,74],[50,6,31,4],[50,7,31,5],[50,8,31,6],[50,9,31,7],[50,10,31,8,"filter"],[50,16,31,14],[50,17,31,15],[50,18,31,16,"queue"],[50,23,31,21],[50,25,31,23,"idx"],[50,28,31,26],[50,33,31,31,"queue"],[50,38,31,36],[50,39,31,37,"tasks"],[50,44,31,42],[50,45,31,43,"length"],[50,51,31,49],[50,54,31,52],[50,55,31,53],[50,59,31,57,"idx"],[50,62,31,60],[50,67,31,65],[50,68,31,66],[50,69,31,67],[51,4,32,2],[52,4,33,2,"hasTasksToProcess"],[52,21,33,19,"hasTasksToProcess"],[52,22,33,19],[52,24,33,22],[53,6,34,4],[53,13,34,11],[53,17,34,15],[53,18,34,16,"_getCurrentQueue"],[53,34,34,32],[53,35,34,33],[53,36,34,34],[53,37,34,35,"length"],[53,43,34,41],[53,46,34,44],[53,47,34,45],[54,4,35,2],[56,4,37,2],[57,0,38,0],[58,0,39,0],[59,4,40,2,"processNext"],[59,15,40,13,"processNext"],[59,16,40,13],[59,18,40,16],[60,6,41,4],[60,10,41,8,"queue"],[60,15,41,13],[60,18,41,16],[60,22,41,20],[60,23,41,21,"_getCurrentQueue"],[60,39,41,37],[60,40,41,38],[60,41,41,39],[61,6,42,4],[61,10,42,8,"queue"],[61,15,42,13],[61,16,42,14,"length"],[61,22,42,20],[61,24,42,22],[62,8,43,6],[62,12,43,10,"task"],[62,16,43,14],[62,19,43,17,"queue"],[62,24,43,22],[62,25,43,23,"shift"],[62,30,43,28],[62,31,43,29],[62,32,43,30],[63,8,44,6],[63,12,44,10],[64,10,45,8],[64,14,45,12],[64,21,45,19,"task"],[64,25,45,23],[64,30,45,28],[64,38,45,36],[64,42,45,40,"task"],[64,46,45,44],[64,47,45,45,"gen"],[64,50,45,48],[64,52,45,50],[65,12,46,10],[65,16,46,14],[65,17,46,15,"_genPromise"],[65,28,46,26],[65,29,46,27,"task"],[65,33,46,31],[65,34,46,32],[66,10,47,8],[66,11,47,9],[66,17,47,15],[66,21,47,19],[66,28,47,26,"task"],[66,32,47,30],[66,37,47,35],[66,45,47,43],[66,49,47,47,"task"],[66,53,47,51],[66,54,47,52,"run"],[66,57,47,55],[66,59,47,57],[67,12,48,10,"task"],[67,16,48,14],[67,17,48,15,"run"],[67,20,48,18],[67,21,48,19],[67,22,48,20],[68,10,49,8],[68,11,49,9],[68,17,49,15],[69,12,50,10],[69,16,50,10,"invariant"],[69,25,50,19],[69,26,50,19,"default"],[69,33,50,19],[69,35,50,20],[69,42,50,27,"task"],[69,46,50,31],[69,51,50,36],[69,61,50,46],[69,63,50,48],[69,122,50,107],[69,125,50,110,"JSON"],[69,129,50,114],[69,130,50,115,"stringify"],[69,139,50,124],[69,140,50,125,"task"],[69,144,50,129],[69,146,50,131],[69,150,50,135],[69,152,50,137],[69,153,50,138],[69,154,50,139],[69,155,50,140],[70,12,51,10,"task"],[70,16,51,14],[70,17,51,15],[70,18,51,16],[71,10,52,8],[72,8,53,6],[72,9,53,7],[72,10,53,8],[72,17,53,15,"e"],[72,18,53,16],[72,20,53,18],[73,10,54,8,"e"],[73,11,54,9],[73,12,54,10,"message"],[73,19,54,17],[73,22,54,20],[73,51,54,49],[73,55,54,53,"task"],[73,59,54,57],[73,60,54,58,"name"],[73,64,54,62],[73,68,54,66],[73,70,54,68],[73,71,54,69],[73,74,54,72],[73,78,54,76],[73,81,54,79,"e"],[73,82,54,80],[73,83,54,81,"message"],[73,90,54,88],[74,10,55,8],[74,16,55,14,"e"],[74,17,55,15],[75,8,56,6],[76,6,57,4],[77,4,58,2],[78,4,59,2,"_getCurrentQueue"],[78,20,59,18,"_getCurrentQueue"],[78,21,59,18],[78,23,59,21],[79,6,60,4],[79,10,60,8,"stackIdx"],[79,18,60,16],[79,21,60,19],[79,25,60,23],[79,26,60,24,"_queueStack"],[79,37,60,35],[79,38,60,36,"length"],[79,44,60,42],[79,47,60,45],[79,48,60,46],[80,6,61,4],[80,10,61,8,"queue"],[80,15,61,13],[80,18,61,16],[80,22,61,20],[80,23,61,21,"_queueStack"],[80,34,61,32],[80,35,61,33,"stackIdx"],[80,43,61,41],[80,44,61,42],[81,6,62,4],[81,10,62,8,"queue"],[81,15,62,13],[81,16,62,14,"popable"],[81,23,62,21],[81,27,62,25,"queue"],[81,32,62,30],[81,33,62,31,"tasks"],[81,38,62,36],[81,39,62,37,"length"],[81,45,62,43],[81,50,62,48],[81,51,62,49],[81,55,62,53,"stackIdx"],[81,63,62,61],[81,66,62,64],[81,67,62,65],[81,69,62,67],[82,8,63,6],[82,12,63,10],[82,13,63,11,"_queueStack"],[82,24,63,22],[82,25,63,23,"pop"],[82,28,63,26],[82,29,63,27],[82,30,63,28],[83,8,64,6],[83,15,64,13],[83,19,64,17],[83,20,64,18,"_getCurrentQueue"],[83,36,64,34],[83,37,64,35],[83,38,64,36],[84,6,65,4],[84,7,65,5],[84,13,65,11],[85,8,66,6],[85,15,66,13,"queue"],[85,20,66,18],[85,21,66,19,"tasks"],[85,26,66,24],[86,6,67,4],[87,4,68,2],[88,4,69,2,"_genPromise"],[88,15,69,13,"_genPromise"],[88,16,69,14,"task"],[88,20,69,18],[88,22,69,20],[89,6,70,4],[89,10,70,8,"length"],[89,16,70,14],[89,19,70,17],[89,23,70,21],[89,24,70,22,"_queueStack"],[89,35,70,33],[89,36,70,34,"push"],[89,40,70,38],[89,41,70,39],[90,8,71,6,"tasks"],[90,13,71,11],[90,15,71,13],[90,17,71,15],[91,8,72,6,"popable"],[91,15,72,13],[91,17,72,15],[92,6,73,4],[92,7,73,5],[92,8,73,6],[93,6,74,4],[93,10,74,8,"stackIdx"],[93,18,74,16],[93,21,74,19,"length"],[93,27,74,25],[93,30,74,28],[93,31,74,29],[94,6,75,4],[94,10,75,8,"stackItem"],[94,19,75,17],[94,22,75,20],[94,26,75,24],[94,27,75,25,"_queueStack"],[94,38,75,36],[94,39,75,37,"stackIdx"],[94,47,75,45],[94,48,75,46],[95,6,76,4,"task"],[95,10,76,8],[95,11,76,9,"gen"],[95,14,76,12],[95,15,76,13],[95,16,76,14],[95,17,76,15,"then"],[95,21,76,19],[95,22,76,20],[95,28,76,26],[96,8,77,6,"stackItem"],[96,17,77,15],[96,18,77,16,"popable"],[96,25,77,23],[96,28,77,26],[96,32,77,30],[97,8,78,6],[97,12,78,10],[97,13,78,11,"hasTasksToProcess"],[97,30,78,28],[97,31,78,29],[97,32,78,30],[97,36,78,34],[97,40,78,38],[97,41,78,39,"_onMoreTasks"],[97,53,78,51],[97,54,78,52],[97,55,78,53],[98,6,79,4],[98,7,79,5],[98,8,79,6],[98,9,79,7,"catch"],[98,14,79,12],[98,15,79,13,"ex"],[98,17,79,15],[98,21,79,19],[99,8,80,6,"setTimeout"],[99,18,80,16],[99,19,80,17],[99,25,80,23],[100,10,81,8,"ex"],[100,12,81,10],[100,13,81,11,"message"],[100,20,81,18],[100,23,81,21],[100,68,81,66],[100,71,81,69,"task"],[100,75,81,73],[100,76,81,74,"name"],[100,80,81,78],[100,83,81,81],[100,87,81,85],[100,90,81,88,"ex"],[100,92,81,90],[100,93,81,91,"message"],[100,100,81,98],[101,10,82,8],[101,16,82,14,"ex"],[101,18,82,16],[102,8,83,6],[102,9,83,7],[102,11,83,9],[102,12,83,10],[102,13,83,11],[103,6,84,4],[103,7,84,5],[103,8,84,6],[104,4,85,2],[105,2,86,0],[106,2,87,0],[106,6,87,0,"_default"],[106,14,87,0],[106,17,87,15,"TaskQueue"],[106,26,87,24],[107,0,87,25],[107,3]],"functionMap":{"names":["<global>","TaskQueue","constructor","enqueue","enqueueTasks","tasks.forEach$argument_0","cancelTasks","_queueStack.map$argument_0","queue.tasks.filter$argument_0","_queueStack.map.filter$argument_0","hasTasksToProcess","processNext","_getCurrentQueue","_genPromise","task.gen.then$argument_0","task.gen.then._catch$argument_0","setTimeout$argument_0"],"mappings":"AAA;ACY;ECC;GDO;EEC;GFE;EGC;kBCC,0BD;GHC;EKC;4CCC;gCCC,0CD;MDC,SG,mDH;GLC;ESC;GTE;EUK;GVkB;EWC;GXS;EYC;oBCO;KDG,QE;iBCC;ODG;KFC;GZC;CDC"},"hasCjsExports":false},"type":"js/module"}]}