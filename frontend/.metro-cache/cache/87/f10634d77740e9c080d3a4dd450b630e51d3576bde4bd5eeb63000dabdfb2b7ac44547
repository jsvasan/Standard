{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"SHEET_FIT_TO_CONTENTS\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_FIT_TO_CONTENTS;\n    }\n  });\n  Object.defineProperty(exports, \"SHEET_COMPAT_LARGE\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_COMPAT_LARGE;\n    }\n  });\n  Object.defineProperty(exports, \"SHEET_COMPAT_MEDIUM\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_COMPAT_MEDIUM;\n    }\n  });\n  Object.defineProperty(exports, \"SHEET_COMPAT_ALL\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_COMPAT_ALL;\n    }\n  });\n  Object.defineProperty(exports, \"SHEET_DIMMED_ALWAYS\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_DIMMED_ALWAYS;\n    }\n  });\n  exports.assertDetentsArrayIsSorted = assertDetentsArrayIsSorted;\n  exports.resolveSheetAllowedDetents = resolveSheetAllowedDetents;\n  exports.resolveSheetLargestUndimmedDetent = resolveSheetLargestUndimmedDetent;\n  exports.resolveSheetInitialDetentIndex = resolveSheetInitialDetentIndex;\n  var _reactNative = require(_dependencyMap[0], \"react-native\");\n  // This value must be kept in sync with native side.\n  var SHEET_FIT_TO_CONTENTS = [-1];\n  var SHEET_COMPAT_LARGE = [1.0];\n  var SHEET_COMPAT_MEDIUM = [0.5];\n  var SHEET_COMPAT_ALL = [0.5, 1.0];\n  var SHEET_DIMMED_ALWAYS = -1;\n  function assertDetentsArrayIsSorted(array) {\n    for (var i = 1; i < array.length; i++) {\n      if (array[i - 1] > array[i]) {\n        throw new Error('[RNScreens] The detent array is not sorted in ascending order!');\n      }\n    }\n  }\n\n  // These exist to transform old 'legacy' values used by the formsheet API to the new API shape.\n  // We can get rid of it, once we get rid of support for legacy values: 'large', 'medium', 'all'.\n  function resolveSheetAllowedDetents(allowedDetentsCompat) {\n    if (Array.isArray(allowedDetentsCompat)) {\n      if (_reactNative.Platform.OS === 'android' && allowedDetentsCompat.length > 3) {\n        if (__DEV__) {\n          console.warn('[RNScreens] Sheets API on Android do accept only up to 3 values. Any surplus value are ignored.');\n        }\n        allowedDetentsCompat = allowedDetentsCompat.slice(0, 3);\n      }\n      if (__DEV__) {\n        assertDetentsArrayIsSorted(allowedDetentsCompat);\n      }\n      return allowedDetentsCompat;\n    } else if (allowedDetentsCompat === 'fitToContents') {\n      return SHEET_FIT_TO_CONTENTS;\n    } else if (allowedDetentsCompat === 'large') {\n      return SHEET_COMPAT_LARGE;\n    } else if (allowedDetentsCompat === 'medium') {\n      return SHEET_COMPAT_MEDIUM;\n    } else if (allowedDetentsCompat === 'all') {\n      return SHEET_COMPAT_ALL;\n    } else {\n      // Safe default, only large detent is allowed.\n      return SHEET_COMPAT_LARGE;\n    }\n  }\n  function resolveSheetLargestUndimmedDetent(lud, lastDetentIndex) {\n    if (typeof lud === 'number') {\n      if (!isIndexInClosedRange(lud, SHEET_DIMMED_ALWAYS, lastDetentIndex)) {\n        if (__DEV__) {\n          throw new Error(\"[RNScreens] Provided value of 'sheetLargestUndimmedDetentIndex' prop is out of bounds of 'sheetAllowedDetents' array.\");\n        }\n        // Return default in production\n        return SHEET_DIMMED_ALWAYS;\n      }\n      return lud;\n    } else if (lud === 'last') {\n      return lastDetentIndex;\n    } else if (lud === 'none' || lud === 'all') {\n      return SHEET_DIMMED_ALWAYS;\n    } else if (lud === 'large') {\n      return 1;\n    } else if (lud === 'medium') {\n      return 0;\n    } else {\n      // Safe default, every detent is dimmed\n      return SHEET_DIMMED_ALWAYS;\n    }\n  }\n  function resolveSheetInitialDetentIndex(index, lastDetentIndex) {\n    if (index === 'last') {\n      index = lastDetentIndex;\n    } else if (index == null) {\n      // Intentional check for undefined & null ^\n      index = 0;\n    }\n    if (!isIndexInClosedRange(index, 0, lastDetentIndex)) {\n      if (__DEV__) {\n        throw new Error(\"[RNScreens] Provided value of 'sheetInitialDetentIndex' prop is out of bounds of 'sheetAllowedDetents' array.\");\n      }\n      // Return default in production\n      return 0;\n    }\n    return index;\n  }\n  function isIndexInClosedRange(value, lowerBound, upperBound) {\n    return Number.isInteger(value) && value >= lowerBound && value <= upperBound;\n  }\n});","lineCount":125,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"SHEET_FIT_TO_CONTENTS"],[10,34,5,0],[11,4,5,0],[12,2,5,0],[13,2,6,0,"Object"],[13,8,6,0],[13,9,6,0,"defineProperty"],[13,23,6,0],[13,24,6,0,"exports"],[13,31,6,0],[14,4,6,0,"enumerable"],[14,14,6,0],[15,4,6,0,"get"],[15,7,6,0],[15,18,6,0,"get"],[15,19,6,0],[16,6,6,0],[16,13,6,0,"SHEET_COMPAT_LARGE"],[16,31,6,0],[17,4,6,0],[18,2,6,0],[19,2,7,0,"Object"],[19,8,7,0],[19,9,7,0,"defineProperty"],[19,23,7,0],[19,24,7,0,"exports"],[19,31,7,0],[20,4,7,0,"enumerable"],[20,14,7,0],[21,4,7,0,"get"],[21,7,7,0],[21,18,7,0,"get"],[21,19,7,0],[22,6,7,0],[22,13,7,0,"SHEET_COMPAT_MEDIUM"],[22,32,7,0],[23,4,7,0],[24,2,7,0],[25,2,8,0,"Object"],[25,8,8,0],[25,9,8,0,"defineProperty"],[25,23,8,0],[25,24,8,0,"exports"],[25,31,8,0],[26,4,8,0,"enumerable"],[26,14,8,0],[27,4,8,0,"get"],[27,7,8,0],[27,18,8,0,"get"],[27,19,8,0],[28,6,8,0],[28,13,8,0,"SHEET_COMPAT_ALL"],[28,29,8,0],[29,4,8,0],[30,2,8,0],[31,2,9,0,"Object"],[31,8,9,0],[31,9,9,0,"defineProperty"],[31,23,9,0],[31,24,9,0,"exports"],[31,31,9,0],[32,4,9,0,"enumerable"],[32,14,9,0],[33,4,9,0,"get"],[33,7,9,0],[33,18,9,0,"get"],[33,19,9,0],[34,6,9,0],[34,13,9,0,"SHEET_DIMMED_ALWAYS"],[34,32,9,0],[35,4,9,0],[36,2,9,0],[37,2,11,0,"exports"],[37,9,11,0],[37,10,11,0,"assertDetentsArrayIsSorted"],[37,36,11,0],[37,39,11,0,"assertDetentsArrayIsSorted"],[37,65,11,0],[38,2,23,0,"exports"],[38,9,23,0],[38,10,23,0,"resolveSheetAllowedDetents"],[38,36,23,0],[38,39,23,0,"resolveSheetAllowedDetents"],[38,65,23,0],[39,2,53,0,"exports"],[39,9,53,0],[39,10,53,0,"resolveSheetLargestUndimmedDetent"],[39,43,53,0],[39,46,53,0,"resolveSheetLargestUndimmedDetent"],[39,79,53,0],[40,2,82,0,"exports"],[40,9,82,0],[40,10,82,0,"resolveSheetInitialDetentIndex"],[40,40,82,0],[40,43,82,0,"resolveSheetInitialDetentIndex"],[40,73,82,0],[41,2,1,0],[41,6,1,0,"_reactNative"],[41,18,1,0],[41,21,1,0,"require"],[41,28,1,0],[41,29,1,0,"_dependencyMap"],[41,43,1,0],[42,2,4,0],[43,2,5,7],[43,6,5,13,"SHEET_FIT_TO_CONTENTS"],[43,27,5,34],[43,30,5,37],[43,31,5,38],[43,32,5,39],[43,33,5,40],[43,34,5,41],[44,2,6,7],[44,6,6,13,"SHEET_COMPAT_LARGE"],[44,24,6,31],[44,27,6,34],[44,28,6,35],[44,31,6,38],[44,32,6,39],[45,2,7,7],[45,6,7,13,"SHEET_COMPAT_MEDIUM"],[45,25,7,32],[45,28,7,35],[45,29,7,36],[45,32,7,39],[45,33,7,40],[46,2,8,7],[46,6,8,13,"SHEET_COMPAT_ALL"],[46,22,8,29],[46,25,8,32],[46,26,8,33],[46,29,8,36],[46,31,8,38],[46,34,8,41],[46,35,8,42],[47,2,9,7],[47,6,9,13,"SHEET_DIMMED_ALWAYS"],[47,25,9,32],[47,28,9,35],[47,29,9,36],[47,30,9,37],[48,2,11,7],[48,11,11,16,"assertDetentsArrayIsSorted"],[48,37,11,42,"assertDetentsArrayIsSorted"],[48,38,11,43,"array"],[48,43,11,58],[48,45,11,60],[49,4,12,2],[49,9,12,7],[49,13,12,11,"i"],[49,14,12,12],[49,17,12,15],[49,18,12,16],[49,20,12,18,"i"],[49,21,12,19],[49,24,12,22,"array"],[49,29,12,27],[49,30,12,28,"length"],[49,36,12,34],[49,38,12,36,"i"],[49,39,12,37],[49,41,12,39],[49,43,12,41],[50,6,13,4],[50,10,13,8,"array"],[50,15,13,13],[50,16,13,14,"i"],[50,17,13,15],[50,20,13,18],[50,21,13,19],[50,22,13,20],[50,25,13,23,"array"],[50,30,13,28],[50,31,13,29,"i"],[50,32,13,30],[50,33,13,31],[50,35,13,33],[51,8,14,6],[51,14,14,12],[51,18,14,16,"Error"],[51,23,14,21],[51,24,15,8],[51,88,16,6],[51,89,16,7],[52,6,17,4],[53,4,18,2],[54,2,19,0],[56,2,21,0],[57,2,22,0],[58,2,23,7],[58,11,23,16,"resolveSheetAllowedDetents"],[58,37,23,42,"resolveSheetAllowedDetents"],[58,38,24,2,"allowedDetentsCompat"],[58,58,24,58],[58,60,25,12],[59,4,26,2],[59,8,26,6,"Array"],[59,13,26,11],[59,14,26,12,"isArray"],[59,21,26,19],[59,22,26,20,"allowedDetentsCompat"],[59,42,26,40],[59,43,26,41],[59,45,26,43],[60,6,27,4],[60,10,27,8,"Platform"],[60,22,27,16],[60,23,27,16,"Platform"],[60,31,27,16],[60,32,27,17,"OS"],[60,34,27,19],[60,39,27,24],[60,48,27,33],[60,52,27,37,"allowedDetentsCompat"],[60,72,27,57],[60,73,27,58,"length"],[60,79,27,64],[60,82,27,67],[60,83,27,68],[60,85,27,70],[61,8,28,6],[61,12,28,10,"__DEV__"],[61,19,28,17],[61,21,28,19],[62,10,29,8,"console"],[62,17,29,15],[62,18,29,16,"warn"],[62,22,29,20],[62,23,30,10],[62,120,31,8],[62,121,31,9],[63,8,32,6],[64,8,33,6,"allowedDetentsCompat"],[64,28,33,26],[64,31,33,29,"allowedDetentsCompat"],[64,51,33,49],[64,52,33,50,"slice"],[64,57,33,55],[64,58,33,56],[64,59,33,57],[64,61,33,59],[64,62,33,60],[64,63,33,61],[65,6,34,4],[66,6,35,4],[66,10,35,8,"__DEV__"],[66,17,35,15],[66,19,35,17],[67,8,36,6,"assertDetentsArrayIsSorted"],[67,34,36,32],[67,35,36,33,"allowedDetentsCompat"],[67,55,36,53],[67,56,36,54],[68,6,37,4],[69,6,38,4],[69,13,38,11,"allowedDetentsCompat"],[69,33,38,31],[70,4,39,2],[70,5,39,3],[70,11,39,9],[70,15,39,13,"allowedDetentsCompat"],[70,35,39,33],[70,40,39,38],[70,55,39,53],[70,57,39,55],[71,6,40,4],[71,13,40,11,"SHEET_FIT_TO_CONTENTS"],[71,34,40,32],[72,4,41,2],[72,5,41,3],[72,11,41,9],[72,15,41,13,"allowedDetentsCompat"],[72,35,41,33],[72,40,41,38],[72,47,41,45],[72,49,41,47],[73,6,42,4],[73,13,42,11,"SHEET_COMPAT_LARGE"],[73,31,42,29],[74,4,43,2],[74,5,43,3],[74,11,43,9],[74,15,43,13,"allowedDetentsCompat"],[74,35,43,33],[74,40,43,38],[74,48,43,46],[74,50,43,48],[75,6,44,4],[75,13,44,11,"SHEET_COMPAT_MEDIUM"],[75,32,44,30],[76,4,45,2],[76,5,45,3],[76,11,45,9],[76,15,45,13,"allowedDetentsCompat"],[76,35,45,33],[76,40,45,38],[76,45,45,43],[76,47,45,45],[77,6,46,4],[77,13,46,11,"SHEET_COMPAT_ALL"],[77,29,46,27],[78,4,47,2],[78,5,47,3],[78,11,47,9],[79,6,48,4],[80,6,49,4],[80,13,49,11,"SHEET_COMPAT_LARGE"],[80,31,49,29],[81,4,50,2],[82,2,51,0],[83,2,53,7],[83,11,53,16,"resolveSheetLargestUndimmedDetent"],[83,44,53,49,"resolveSheetLargestUndimmedDetent"],[83,45,54,2,"lud"],[83,48,54,53],[83,50,55,2,"lastDetentIndex"],[83,65,55,25],[83,67,56,10],[84,4,57,2],[84,8,57,6],[84,15,57,13,"lud"],[84,18,57,16],[84,23,57,21],[84,31,57,29],[84,33,57,31],[85,6,58,4],[85,10,58,8],[85,11,58,9,"isIndexInClosedRange"],[85,31,58,29],[85,32,58,30,"lud"],[85,35,58,33],[85,37,58,35,"SHEET_DIMMED_ALWAYS"],[85,56,58,54],[85,58,58,56,"lastDetentIndex"],[85,73,58,71],[85,74,58,72],[85,76,58,74],[86,8,59,6],[86,12,59,10,"__DEV__"],[86,19,59,17],[86,21,59,19],[87,10,60,8],[87,16,60,14],[87,20,60,18,"Error"],[87,25,60,23],[87,26,61,10],[87,145,62,8],[87,146,62,9],[88,8,63,6],[89,8,64,6],[90,8,65,6],[90,15,65,13,"SHEET_DIMMED_ALWAYS"],[90,34,65,32],[91,6,66,4],[92,6,67,4],[92,13,67,11,"lud"],[92,16,67,14],[93,4,68,2],[93,5,68,3],[93,11,68,9],[93,15,68,13,"lud"],[93,18,68,16],[93,23,68,21],[93,29,68,27],[93,31,68,29],[94,6,69,4],[94,13,69,11,"lastDetentIndex"],[94,28,69,26],[95,4,70,2],[95,5,70,3],[95,11,70,9],[95,15,70,13,"lud"],[95,18,70,16],[95,23,70,21],[95,29,70,27],[95,33,70,31,"lud"],[95,36,70,34],[95,41,70,39],[95,46,70,44],[95,48,70,46],[96,6,71,4],[96,13,71,11,"SHEET_DIMMED_ALWAYS"],[96,32,71,30],[97,4,72,2],[97,5,72,3],[97,11,72,9],[97,15,72,13,"lud"],[97,18,72,16],[97,23,72,21],[97,30,72,28],[97,32,72,30],[98,6,73,4],[98,13,73,11],[98,14,73,12],[99,4,74,2],[99,5,74,3],[99,11,74,9],[99,15,74,13,"lud"],[99,18,74,16],[99,23,74,21],[99,31,74,29],[99,33,74,31],[100,6,75,4],[100,13,75,11],[100,14,75,12],[101,4,76,2],[101,5,76,3],[101,11,76,9],[102,6,77,4],[103,6,78,4],[103,13,78,11,"SHEET_DIMMED_ALWAYS"],[103,32,78,30],[104,4,79,2],[105,2,80,0],[106,2,82,7],[106,11,82,16,"resolveSheetInitialDetentIndex"],[106,41,82,46,"resolveSheetInitialDetentIndex"],[106,42,83,2,"index"],[106,47,83,47],[106,49,84,2,"lastDetentIndex"],[106,64,84,25],[106,66,85,10],[107,4,86,2],[107,8,86,6,"index"],[107,13,86,11],[107,18,86,16],[107,24,86,22],[107,26,86,24],[108,6,87,4,"index"],[108,11,87,9],[108,14,87,12,"lastDetentIndex"],[108,29,87,27],[109,4,88,2],[109,5,88,3],[109,11,88,9],[109,15,88,13,"index"],[109,20,88,18],[109,24,88,22],[109,28,88,26],[109,30,88,28],[110,6,89,4],[111,6,90,4,"index"],[111,11,90,9],[111,14,90,12],[111,15,90,13],[112,4,91,2],[113,4,92,2],[113,8,92,6],[113,9,92,7,"isIndexInClosedRange"],[113,29,92,27],[113,30,92,28,"index"],[113,35,92,33],[113,37,92,35],[113,38,92,36],[113,40,92,38,"lastDetentIndex"],[113,55,92,53],[113,56,92,54],[113,58,92,56],[114,6,93,4],[114,10,93,8,"__DEV__"],[114,17,93,15],[114,19,93,17],[115,8,94,6],[115,14,94,12],[115,18,94,16,"Error"],[115,23,94,21],[115,24,95,8],[115,135,96,6],[115,136,96,7],[116,6,97,4],[117,6,98,4],[118,6,99,4],[118,13,99,11],[118,14,99,12],[119,4,100,2],[120,4,101,2],[120,11,101,9,"index"],[120,16,101,14],[121,2,102,0],[122,2,104,0],[122,11,104,9,"isIndexInClosedRange"],[122,31,104,29,"isIndexInClosedRange"],[122,32,105,2,"value"],[122,37,105,15],[122,39,106,2,"lowerBound"],[122,49,106,20],[122,51,107,2,"upperBound"],[122,61,107,20],[122,63,108,11],[123,4,109,2],[123,11,109,9,"Number"],[123,17,109,15],[123,18,109,16,"isInteger"],[123,27,109,25],[123,28,109,26,"value"],[123,33,109,31],[123,34,109,32],[123,38,109,36,"value"],[123,43,109,41],[123,47,109,45,"lowerBound"],[123,57,109,55],[123,61,109,59,"value"],[123,66,109,64],[123,70,109,68,"upperBound"],[123,80,109,78],[124,2,110,0],[125,0,110,1],[125,3]],"functionMap":{"names":["<global>","assertDetentsArrayIsSorted","resolveSheetAllowedDetents","resolveSheetLargestUndimmedDetent","resolveSheetInitialDetentIndex","isIndexInClosedRange"],"mappings":"AAA;OCU;CDQ;OEI;CF4B;OGE;CH2B;OIE;CJoB;AKE;CLM"},"hasCjsExports":false},"type":"js/module"}]}