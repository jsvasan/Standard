{"dependencies":[{"name":"@expo/metro/metro-runtime/modules/HMRClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":389},"end":{"line":11,"column":73,"index":462}}],"key":"QfpljAedMbYyH6zSiacYA0Wl1kE=","exportNames":["*"],"imports":1}},{"name":"pretty-format","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":463},"end":{"line":12,"column":54,"index":517}}],"key":"aXyG2GzrqNhJvIb2xvve/rJFBZA=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoMetroMetroRuntimeModulesHMRClient = require(_dependencyMap[0], \"@expo/metro/metro-runtime/modules/HMRClient\");\n  var MetroHMRClient = _interopDefault(_expoMetroMetroRuntimeModulesHMRClient);\n  var _prettyFormat = require(_dependencyMap[1], \"pretty-format\");\n  var prettyFormat = _interopDefault(_prettyFormat);\n  var _reactNativeWebDistExportsDeviceEventEmitter = require(_dependencyMap[2], \"react-native-web/dist/exports/DeviceEventEmitter\");\n  var DeviceEventEmitter = _interopDefault(_reactNativeWebDistExportsDeviceEventEmitter);\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * Based on this but with web support:\n   * https://github.com/facebook/react-native/blob/086714b02b0fb838dee5a66c5bcefe73b53cf3df/Libraries/Utilities/HMRClient.js\n   */\n\n  // Ensure events are sent so custom Fast Refresh views are shown.\n  function showLoading(message, _type) {\n    DeviceEventEmitter.default.emit('devLoadingView:showMessage', {\n      message\n    });\n  }\n  function hideLoading() {\n    DeviceEventEmitter.default.emit('devLoadingView:hide', {});\n  }\n  const pendingEntryPoints = [];\n\n  // @ts-expect-error: Account for multiple versions of pretty-format inside of a monorepo.\n  const prettyFormatFunc = typeof prettyFormat.default === 'function' ? prettyFormat.default : prettyFormat.default.default;\n  let hmrClient = null;\n  let hmrUnavailableReason = null;\n  let currentCompileErrorMessage = null;\n  let didConnect = false;\n  const pendingLogs = [];\n  function assert(foo, msg) {\n    if (!foo) throw new Error(msg);\n  }\n\n  /**\n   * HMR Client that receives from the server HMR updates and propagates them\n   * runtime to reflects those changes.\n   */\n  const HMRClient = {\n    enable() {\n      if (hmrUnavailableReason !== null) {\n        // If HMR became unavailable while you weren't using it,\n        // explain why when you try to turn it on.\n        // This is an error (and not a warning) because it is shown\n        // in response to a direct user action.\n        throw new Error(hmrUnavailableReason);\n      }\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      // We use this for internal logging only.\n      // It doesn't affect the logic.\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n\n      // When toggling Fast Refresh on, we might already have some stashed updates.\n      // Since they'll get applied now, we'll show a banner.\n      const hasUpdates = hmrClient.hasPendingUpdates();\n      if (hasUpdates) {\n        showLoading('Refreshing...', 'refresh');\n      }\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          hideLoading();\n        }\n      }\n\n      // There could be a compile error while Fast Refresh was off,\n      // but we ignored it at the time. Show it now.\n      showCompileError();\n    },\n    disable() {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      hmrClient.disable();\n    },\n    registerBundle(requestUrl) {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log(level, data) {\n      if (!hmrClient) {\n        // Catch a reasonable number of early logs\n        // in case hmrClient gets initialized later.\n        pendingLogs.push([level, data]);\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n        return;\n      }\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level,\n          platform: 'web',\n          mode: 'BRIDGE',\n          data: data.map(item => typeof item === 'string' ? item : prettyFormatFunc(item, {\n            escapeString: true,\n            highlight: true,\n            maxDepth: 3,\n            min: true,\n            plugins: [_prettyFormat.plugins.ReactElement]\n          }))\n        }));\n      } catch {\n        // If sending logs causes any failures we want to silently ignore them\n        // to ensure we do not cause infinite-logging loops.\n      }\n    },\n    // Called once by the bridge on startup, even if Fast Refresh is off.\n    // It creates the HMR client but doesn't actually set up the socket yet.\n    setup({\n      isEnabled\n    }) {\n      assert(!hmrClient, 'Cannot initialize hmrClient twice');\n      const serverScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n      const client = new MetroHMRClient.default(`${serverScheme}://${window.location.host}/hot`);\n      hmrClient = client;\n      const fullBundleUrl = (() => {\n        if (document?.currentScript && 'src' in document.currentScript) {\n          return document.currentScript.src;\n        }\n        const bundleUrl = new URL(location.href);\n        bundleUrl.searchParams.set('platform', \"web\" ?? 'web');\n        return bundleUrl.toString();\n      })();\n      pendingEntryPoints.push(\n      // HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl);\n      client.on('connection-error', e => {\n        let error = `Cannot connect to Metro.\n \n Try the following to fix the issue:\n - Ensure the Metro dev server is running and available on the same network as this device`;\n        error += `\n \n URL: ${window.location.host}\n \n Error: ${e.message}`;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', ({\n        isInitialUpdate\n      }) => {\n        currentCompileErrorMessage = null;\n        didConnect = true;\n        if (client.isEnabled() && !isInitialUpdate) {\n          showLoading('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', ({\n        isInitialUpdate\n      }) => {\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          // @ts-expect-error\n          globalThis.__expo_dev_resetErrors?.();\n          // LogBox.clearAllLogs();\n        }\n      });\n      client.on('update-done', () => {\n        hideLoading();\n      });\n      client.on('error', data => {\n        hideLoading();\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = `${data.type} ${data.message}`;\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', closeEvent => {\n        hideLoading();\n\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n        const isNormalOrUnsetCloseReason = closeEvent == null || closeEvent.code === 1000 || closeEvent.code === 1005 || closeEvent.code == null;\n        setHMRUnavailableReason(`${isNormalOrUnsetCloseReason ? 'Disconnected from Metro.' : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`}\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `);\n      });\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs();\n    }\n  };\n  function setHMRUnavailableReason(reason) {\n    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    if (hmrUnavailableReason !== null) {\n      // Don't show more than one warning.\n      return;\n    }\n    hmrUnavailableReason = reason;\n\n    // We only want to show a warning if Fast Refresh is on *and* if we ever\n    // previously managed to connect successfully. We don't want to show\n    // the warning to native engineers who use cached bundles without Metro.\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n      // (Not using the `warning` module to prevent a Buck cycle.)\n    }\n  }\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason != null) {\n      // \"Bundle Splitting â€“ Metro disconnected\"\n      window.location.reload();\n      return;\n    }\n    if (pendingEntryPoints.length > 0) {\n      client?.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n  function flushEarlyLogs() {\n    try {\n      pendingLogs.forEach(([level, data]) => {\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n  function dismissRedbox() {\n    // TODO(EvanBacon): Error overlay for web.\n  }\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    // Even if there is already a redbox, syntax errors are more important.\n    // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n    dismissRedbox();\n    const message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n    const error = new Error(message);\n    // Symbolicating compile errors is wasted effort\n    // because the stack trace is meaningless:\n    // @ts-expect-error\n    error.preventSymbolication = true;\n    throw error;\n  }\n  var _default = HMRClient;\n});","lineCount":287,"map":[[12,2,341,0,"Object"],[12,8,341,0],[12,9,341,0,"defineProperty"],[12,23,341,0],[12,24,341,0,"exports"],[12,31,341,0],[13,4,341,0,"enumerable"],[13,14,341,0],[14,4,341,0,"get"],[14,7,341,0],[14,18,341,0,"get"],[14,19,341,0],[15,6,341,0],[15,13,341,0,"_default"],[15,21,341,0],[16,4,341,0],[17,2,341,0],[18,2,11,0],[18,6,11,0,"_expoMetroMetroRuntimeModulesHMRClient"],[18,44,11,0],[18,47,11,0,"require"],[18,54,11,0],[18,55,11,0,"_dependencyMap"],[18,69,11,0],[19,2,11,0],[19,6,11,0,"MetroHMRClient"],[19,20,11,0],[19,23,11,0,"_interopDefault"],[19,38,11,0],[19,39,11,0,"_expoMetroMetroRuntimeModulesHMRClient"],[19,77,11,0],[20,2,12,0],[20,6,12,0,"_prettyFormat"],[20,19,12,0],[20,22,12,0,"require"],[20,29,12,0],[20,30,12,0,"_dependencyMap"],[20,44,12,0],[21,2,12,0],[21,6,12,0,"prettyFormat"],[21,18,12,0],[21,21,12,0,"_interopDefault"],[21,36,12,0],[21,37,12,0,"_prettyFormat"],[21,50,12,0],[22,2,12,54],[22,6,12,54,"_reactNativeWebDistExportsDeviceEventEmitter"],[22,50,12,54],[22,53,12,54,"require"],[22,60,12,54],[22,61,12,54,"_dependencyMap"],[22,75,12,54],[23,2,12,54],[23,6,12,54,"DeviceEventEmitter"],[23,24,12,54],[23,27,12,54,"_interopDefault"],[23,42,12,54],[23,43,12,54,"_reactNativeWebDistExportsDeviceEventEmitter"],[23,87,12,54],[24,2,1,0],[25,0,2,0],[26,0,3,0],[27,0,4,0],[28,0,5,0],[29,0,6,0],[30,0,7,0],[31,0,8,0],[32,0,9,0],[33,0,10,0],[35,2,15,0],[36,2,16,0],[36,11,16,9,"showLoading"],[36,22,16,20,"showLoading"],[36,23,16,21,"message"],[36,30,16,36],[36,32,16,38,"_type"],[36,37,16,63],[36,39,16,65],[37,4,17,2,"DeviceEventEmitter"],[37,22,17,20],[37,23,17,20,"default"],[37,30,17,20],[37,31,17,21,"emit"],[37,35,17,25],[37,36,17,26],[37,64,17,54],[37,66,17,56],[38,6,18,4,"message"],[39,4,19,2],[39,5,19,3],[39,6,19,4],[40,2,20,0],[41,2,22,0],[41,11,22,9,"hideLoading"],[41,22,22,20,"hideLoading"],[41,23,22,20],[41,25,22,23],[42,4,23,2,"DeviceEventEmitter"],[42,22,23,20],[42,23,23,20,"default"],[42,30,23,20],[42,31,23,21,"emit"],[42,35,23,25],[42,36,23,26],[42,57,23,47],[42,59,23,49],[42,60,23,50],[42,61,23,51],[42,62,23,52],[43,2,24,0],[44,2,26,0],[44,8,26,6,"pendingEntryPoints"],[44,26,26,34],[44,29,26,37],[44,31,26,39],[46,2,28,0],[47,2,29,0],[47,8,29,6,"prettyFormatFunc"],[47,24,29,22],[47,27,29,25],[47,34,29,32,"prettyFormat"],[47,46,29,44],[47,47,29,44,"default"],[47,54,29,44],[47,59,29,49],[47,69,29,59],[47,72,29,62,"prettyFormat"],[47,84,29,74],[47,85,29,74,"default"],[47,92,29,74],[47,95,29,77,"prettyFormat"],[47,107,29,89],[47,108,29,89,"default"],[47,115,29,89],[47,116,29,90,"default"],[47,123,29,97],[48,2,39,0],[48,6,39,4,"hmrClient"],[48,15,39,35],[48,18,39,38],[48,22,39,42],[49,2,40,0],[49,6,40,4,"hmrUnavailableReason"],[49,26,40,39],[49,29,40,42],[49,33,40,46],[50,2,41,0],[50,6,41,4,"currentCompileErrorMessage"],[50,32,41,45],[50,35,41,48],[50,39,41,52],[51,2,42,0],[51,6,42,4,"didConnect"],[51,16,42,23],[51,19,42,26],[51,24,42,31],[52,2,43,0],[52,8,43,6,"pendingLogs"],[52,19,43,38],[52,22,43,41],[52,24,43,43],[53,2,64,0],[53,11,64,9,"assert"],[53,17,64,15,"assert"],[53,18,64,16,"foo"],[53,21,64,24],[53,23,64,26,"msg"],[53,26,64,37],[53,28,64,52],[54,4,65,2],[54,8,65,6],[54,9,65,7,"foo"],[54,12,65,10],[54,14,65,12],[54,20,65,18],[54,24,65,22,"Error"],[54,29,65,27],[54,30,65,28,"msg"],[54,33,65,31],[54,34,65,32],[55,2,66,0],[57,2,68,0],[58,0,69,0],[59,0,70,0],[60,0,71,0],[61,2,72,0],[61,8,72,6,"HMRClient"],[61,17,72,41],[61,20,72,44],[62,4,73,2,"enable"],[62,10,73,8,"enable"],[62,11,73,8],[62,13,73,11],[63,6,74,4],[63,10,74,8,"hmrUnavailableReason"],[63,30,74,28],[63,35,74,33],[63,39,74,37],[63,41,74,39],[64,8,75,6],[65,8,76,6],[66,8,77,6],[67,8,78,6],[68,8,79,6],[68,14,79,12],[68,18,79,16,"Error"],[68,23,79,21],[68,24,79,22,"hmrUnavailableReason"],[68,44,79,42],[68,45,79,43],[69,6,80,4],[70,6,82,4,"assert"],[70,12,82,10],[70,13,82,11,"hmrClient"],[70,22,82,20],[70,24,82,22],[70,69,82,67],[70,70,82,68],[72,6,84,4],[73,6,85,4],[74,6,86,4,"hmrClient"],[74,15,86,13],[74,16,86,14,"send"],[74,20,86,18],[74,21,86,19,"JSON"],[74,25,86,23],[74,26,86,24,"stringify"],[74,35,86,33],[74,36,86,34],[75,8,86,36,"type"],[75,12,86,40],[75,14,86,42],[76,6,86,55],[76,7,86,56],[76,8,86,57],[76,9,86,58],[78,6,88,4],[79,6,89,4],[80,6,90,4],[80,12,90,10,"hasUpdates"],[80,22,90,20],[80,25,90,23,"hmrClient"],[80,34,90,32],[80,35,90,34,"hasPendingUpdates"],[80,52,90,51],[80,53,90,52],[80,54,90,53],[81,6,92,4],[81,10,92,8,"hasUpdates"],[81,20,92,18],[81,22,92,20],[82,8,93,6,"showLoading"],[82,19,93,17],[82,20,93,18],[82,35,93,33],[82,37,93,35],[82,46,93,44],[82,47,93,45],[83,6,94,4],[84,6,95,4],[84,10,95,8],[85,8,96,6,"hmrClient"],[85,17,96,15],[85,18,96,16,"enable"],[85,24,96,22],[85,25,96,23],[85,26,96,24],[86,6,97,4],[86,7,97,5],[86,16,97,14],[87,8,98,6],[87,12,98,10,"hasUpdates"],[87,22,98,20],[87,24,98,22],[88,10,99,8,"hideLoading"],[88,21,99,19],[88,22,99,20],[88,23,99,21],[89,8,100,6],[90,6,101,4],[92,6,103,4],[93,6,104,4],[94,6,105,4,"showCompileError"],[94,22,105,20],[94,23,105,21],[94,24,105,22],[95,4,106,2],[95,5,106,3],[96,4,108,2,"disable"],[96,11,108,9,"disable"],[96,12,108,9],[96,14,108,12],[97,6,109,4,"assert"],[97,12,109,10],[97,13,109,11,"hmrClient"],[97,22,109,20],[97,24,109,22],[97,69,109,67],[97,70,109,68],[98,6,110,4,"hmrClient"],[98,15,110,13],[98,16,110,14,"disable"],[98,23,110,21],[98,24,110,22],[98,25,110,23],[99,4,111,2],[99,5,111,3],[100,4,113,2,"registerBundle"],[100,18,113,16,"registerBundle"],[100,19,113,17,"requestUrl"],[100,29,113,35],[100,31,113,37],[101,6,114,4,"assert"],[101,12,114,10],[101,13,114,11,"hmrClient"],[101,22,114,20],[101,24,114,22],[101,69,114,67],[101,70,114,68],[102,6,115,4,"pendingEntryPoints"],[102,24,115,22],[102,25,115,23,"push"],[102,29,115,27],[102,30,115,28,"requestUrl"],[102,40,115,38],[102,41,115,39],[103,6,116,4,"registerBundleEntryPoints"],[103,31,116,29],[103,32,116,30,"hmrClient"],[103,41,116,39],[103,42,116,40],[104,4,117,2],[104,5,117,3],[105,4,119,2,"log"],[105,7,119,5,"log"],[105,8,119,6,"level"],[105,13,119,21],[105,15,119,23,"data"],[105,19,119,34],[105,21,119,36],[106,6,120,4],[106,10,120,8],[106,11,120,9,"hmrClient"],[106,20,120,18],[106,22,120,20],[107,8,121,6],[108,8,122,6],[109,8,123,6,"pendingLogs"],[109,19,123,17],[109,20,123,18,"push"],[109,24,123,22],[109,25,123,23],[109,26,123,24,"level"],[109,31,123,29],[109,33,123,31,"data"],[109,37,123,35],[109,38,123,36],[109,39,123,37],[110,8,124,6],[110,12,124,10,"pendingLogs"],[110,23,124,21],[110,24,124,22,"length"],[110,30,124,28],[110,33,124,31],[110,36,124,34],[110,38,124,36],[111,10,125,8,"pendingLogs"],[111,21,125,19],[111,22,125,20,"shift"],[111,27,125,25],[111,28,125,26],[111,29,125,27],[112,8,126,6],[113,8,127,6],[114,6,128,4],[115,6,129,4],[115,10,129,8],[116,8,130,6,"hmrClient"],[116,17,130,15],[116,18,130,16,"send"],[116,22,130,20],[116,23,131,8,"JSON"],[116,27,131,12],[116,28,131,13,"stringify"],[116,37,131,22],[116,38,131,23],[117,10,132,10,"type"],[117,14,132,14],[117,16,132,16],[117,21,132,21],[118,10,133,10,"level"],[118,15,133,15],[119,10,134,10,"platform"],[119,18,134,18],[119,20,134,20],[119,25,134,25],[120,10,135,10,"mode"],[120,14,135,14],[120,16,135,16],[120,24,135,24],[121,10,136,10,"data"],[121,14,136,14],[121,16,136,16,"data"],[121,20,136,20],[121,21,136,21,"map"],[121,24,136,24],[121,25,136,26,"item"],[121,29,136,30],[121,33,137,12],[121,40,137,19,"item"],[121,44,137,23],[121,49,137,28],[121,57,137,36],[121,60,138,16,"item"],[121,64,138,20],[121,67,139,16,"prettyFormatFunc"],[121,83,139,32],[121,84,139,33,"item"],[121,88,139,37],[121,90,139,39],[122,12,140,18,"escapeString"],[122,24,140,30],[122,26,140,32],[122,30,140,36],[123,12,141,18,"highlight"],[123,21,141,27],[123,23,141,29],[123,27,141,33],[124,12,142,18,"maxDepth"],[124,20,142,26],[124,22,142,28],[124,23,142,29],[125,12,143,18,"min"],[125,15,143,21],[125,17,143,23],[125,21,143,27],[126,12,144,18,"plugins"],[126,19,144,25],[126,21,144,27],[126,22,144,28,"plugins"],[126,35,144,35],[126,36,144,35,"plugins"],[126,43,144,35],[126,44,144,36,"ReactElement"],[126,56,144,48],[127,10,145,16],[127,11,145,17],[127,12,146,10],[128,8,147,8],[128,9,147,9],[128,10,148,6],[128,11,148,7],[129,6,149,4],[129,7,149,5],[129,8,149,6],[129,14,149,12],[130,8,150,6],[131,8,151,6],[132,6,151,6],[133,4,153,2],[133,5,153,3],[134,4,155,2],[135,4,156,2],[136,4,157,2,"setup"],[136,9,157,7,"setup"],[136,10,157,8],[137,6,157,10,"isEnabled"],[138,4,157,44],[138,5,157,45],[138,7,157,47],[139,6,158,4,"assert"],[139,12,158,10],[139,13,158,11],[139,14,158,12,"hmrClient"],[139,23,158,21],[139,25,158,23],[139,60,158,58],[139,61,158,59],[140,6,160,4],[140,12,160,10,"serverScheme"],[140,24,160,22],[140,27,160,25,"window"],[140,33,160,31],[140,34,160,32,"location"],[140,42,160,40],[140,43,160,41,"protocol"],[140,51,160,49],[140,56,160,54],[140,64,160,62],[140,67,160,65],[140,72,160,70],[140,75,160,73],[140,79,160,77],[141,6,161,4],[141,12,161,10,"client"],[141,18,161,16],[141,21,161,19],[141,25,161,23,"MetroHMRClient"],[141,39,161,37],[141,40,161,37,"default"],[141,47,161,37],[141,48,161,38],[141,51,161,41,"serverScheme"],[141,63,161,53],[141,69,161,59,"window"],[141,75,161,65],[141,76,161,66,"location"],[141,84,161,74],[141,85,161,75,"host"],[141,89,161,79],[141,95,161,85],[141,96,161,86],[142,6,162,4,"hmrClient"],[142,15,162,13],[142,18,162,16,"client"],[142,24,162,22],[143,6,164,4],[143,12,164,10,"fullBundleUrl"],[143,25,164,23],[143,28,164,26],[143,29,164,27],[143,35,164,33],[144,8,165,6],[144,12,165,10,"document"],[144,20,165,18],[144,22,165,20,"currentScript"],[144,35,165,33],[144,39,165,37],[144,44,165,42],[144,48,165,46,"document"],[144,56,165,54],[144,57,165,55,"currentScript"],[144,70,165,68],[144,72,165,70],[145,10,166,8],[145,17,166,15,"document"],[145,25,166,23],[145,26,166,24,"currentScript"],[145,39,166,37],[145,40,166,38,"src"],[145,43,166,41],[146,8,167,6],[147,8,169,6],[147,14,169,12,"bundleUrl"],[147,23,169,21],[147,26,169,24],[147,30,169,28,"URL"],[147,33,169,31],[147,34,169,32,"location"],[147,42,169,40],[147,43,169,41,"href"],[147,47,169,45],[147,48,169,46],[148,8,171,6,"bundleUrl"],[148,17,171,15],[148,18,171,16,"searchParams"],[148,30,171,28],[148,31,171,29,"set"],[148,34,171,32],[148,35,171,33],[148,45,171,43],[148,47,171,45],[148,56,171,68],[148,61,171,73],[148,62,171,74],[149,8,173,6],[149,15,173,13,"bundleUrl"],[149,24,173,22],[149,25,173,23,"toString"],[149,33,173,31],[149,34,173,32],[149,35,173,33],[150,6,174,4],[150,7,174,5],[150,9,174,7],[150,10,174,8],[151,6,176,4,"pendingEntryPoints"],[151,24,176,22],[151,25,176,23,"push"],[151,29,176,27],[152,6,177,6],[153,6,178,6],[154,6,179,6],[155,6,180,6,"fullBundleUrl"],[155,19,181,4],[155,20,181,5],[156,6,183,4,"client"],[156,12,183,10],[156,13,183,11,"on"],[156,15,183,13],[156,16,183,14],[156,34,183,32],[156,36,183,35,"e"],[156,37,183,43],[156,41,183,48],[157,8,184,6],[157,12,184,10,"error"],[157,17,184,15],[157,20,184,18],[158,0,185,0],[159,0,186,0],[160,0,187,0],[160,91,187,91],[161,8,188,6,"error"],[161,13,188,11],[161,17,188,15],[162,0,189,0],[163,0,190,0],[163,8,190,8,"window"],[163,14,190,14],[163,15,190,15,"location"],[163,23,190,23],[163,24,190,24,"host"],[163,28,190,28],[164,0,191,0],[165,0,192,0],[165,10,192,10,"e"],[165,11,192,11],[165,12,192,12,"message"],[165,19,192,19],[165,21,192,21],[166,8,194,6,"setHMRUnavailableReason"],[166,31,194,29],[166,32,194,30,"error"],[166,37,194,35],[166,38,194,36],[167,6,195,4],[167,7,195,5],[167,8,195,6],[168,6,197,4,"client"],[168,12,197,10],[168,13,197,11,"on"],[168,15,197,13],[168,16,197,14],[168,30,197,28],[168,32,197,30],[168,33,197,31],[169,8,197,33,"isInitialUpdate"],[170,6,197,80],[170,7,197,81],[170,12,197,86],[171,8,198,6,"currentCompileErrorMessage"],[171,34,198,32],[171,37,198,35],[171,41,198,39],[172,8,199,6,"didConnect"],[172,18,199,16],[172,21,199,19],[172,25,199,23],[173,8,201,6],[173,12,201,10,"client"],[173,18,201,16],[173,19,201,17,"isEnabled"],[173,28,201,26],[173,29,201,27],[173,30,201,28],[173,34,201,32],[173,35,201,33,"isInitialUpdate"],[173,50,201,48],[173,52,201,50],[174,10,202,8,"showLoading"],[174,21,202,19],[174,22,202,20],[174,37,202,35],[174,39,202,37],[174,48,202,46],[174,49,202,47],[175,8,203,6],[176,6,204,4],[176,7,204,5],[176,8,204,6],[177,6,206,4,"client"],[177,12,206,10],[177,13,206,11,"on"],[177,15,206,13],[177,16,206,14],[177,24,206,22],[177,26,206,24],[177,27,206,25],[178,8,206,27,"isInitialUpdate"],[179,6,206,74],[179,7,206,75],[179,12,206,80],[180,8,207,6],[180,12,207,10,"client"],[180,18,207,16],[180,19,207,17,"isEnabled"],[180,28,207,26],[180,29,207,27],[180,30,207,28],[180,34,207,32],[180,35,207,33,"isInitialUpdate"],[180,50,207,48],[180,52,207,50],[181,10,208,8,"dismissRedbox"],[181,23,208,21],[181,24,208,22],[181,25,208,23],[182,10,209,8],[183,10,210,8,"globalThis"],[183,20,210,18],[183,21,210,19,"__expo_dev_resetErrors"],[183,43,210,41],[183,46,210,44],[183,47,210,45],[184,10,211,8],[185,8,212,6],[186,6,213,4],[186,7,213,5],[186,8,213,6],[187,6,215,4,"client"],[187,12,215,10],[187,13,215,11,"on"],[187,15,215,13],[187,16,215,14],[187,29,215,27],[187,31,215,29],[187,37,215,35],[188,8,216,6,"hideLoading"],[188,19,216,17],[188,20,216,18],[188,21,216,19],[189,6,217,4],[189,7,217,5],[189,8,217,6],[190,6,219,4,"client"],[190,12,219,10],[190,13,219,11,"on"],[190,15,219,13],[190,16,219,14],[190,23,219,21],[190,25,219,24,"data"],[190,29,219,63],[190,33,219,68],[191,8,220,6,"hideLoading"],[191,19,220,17],[191,20,220,18],[191,21,220,19],[192,8,222,6],[192,12,222,10,"data"],[192,16,222,14],[192,17,222,15,"type"],[192,21,222,19],[192,26,222,24],[192,46,222,44],[192,48,222,46],[193,10,223,8,"client"],[193,16,223,14],[193,17,223,15,"close"],[193,22,223,20],[193,23,223,21],[193,24,223,22],[194,10,224,8,"setHMRUnavailableReason"],[194,33,224,31],[194,34,224,32],[194,97,224,95],[194,98,224,96],[195,8,225,6],[195,9,225,7],[195,15,225,13],[195,19,225,17,"data"],[195,23,225,21],[195,24,225,22,"type"],[195,28,225,26],[195,33,225,31],[195,56,225,54],[195,58,225,56],[196,10,226,8,"client"],[196,16,226,14],[196,17,226,15,"close"],[196,22,226,20],[196,23,226,21],[196,24,226,22],[197,10,227,8,"setHMRUnavailableReason"],[197,33,227,31],[197,34,227,32],[197,94,227,92],[197,95,227,93],[198,8,228,6],[198,9,228,7],[198,15,228,13],[199,10,229,8,"currentCompileErrorMessage"],[199,36,229,34],[199,39,229,37],[199,42,229,40,"data"],[199,46,229,44],[199,47,229,45,"type"],[199,51,229,49],[199,55,229,53,"data"],[199,59,229,57],[199,60,229,58,"message"],[199,67,229,65],[199,69,229,67],[200,10,230,8],[200,14,230,12,"client"],[200,20,230,18],[200,21,230,19,"isEnabled"],[200,30,230,28],[200,31,230,29],[200,32,230,30],[200,34,230,32],[201,12,231,10,"showCompileError"],[201,28,231,26],[201,29,231,27],[201,30,231,28],[202,10,232,8],[203,8,233,6],[204,6,234,4],[204,7,234,5],[204,8,234,6],[205,6,236,4,"client"],[205,12,236,10],[205,13,236,11,"on"],[205,15,236,13],[205,16,236,14],[205,23,236,21],[205,25,236,24,"closeEvent"],[205,35,236,68],[205,39,236,73],[206,8,237,6,"hideLoading"],[206,19,237,17],[206,20,237,18],[206,21,237,19],[208,8,239,6],[209,8,240,6],[210,8,241,6],[210,14,241,12,"isNormalOrUnsetCloseReason"],[210,40,241,38],[210,43,242,8,"closeEvent"],[210,53,242,18],[210,57,242,22],[210,61,242,26],[210,65,243,8,"closeEvent"],[210,75,243,18],[210,76,243,19,"code"],[210,80,243,23],[210,85,243,28],[210,89,243,32],[210,93,244,8,"closeEvent"],[210,103,244,18],[210,104,244,19,"code"],[210,108,244,23],[210,113,244,28],[210,117,244,32],[210,121,245,8,"closeEvent"],[210,131,245,18],[210,132,245,19,"code"],[210,136,245,23],[210,140,245,27],[210,144,245,31],[211,8,247,6,"setHMRUnavailableReason"],[211,31,247,29],[211,32,248,8],[211,35,249,10,"isNormalOrUnsetCloseReason"],[211,61,249,36],[211,64,250,14],[211,90,250,40],[211,93,251,14],[211,121,251,42,"closeEvent"],[211,131,251,52],[211,132,251,53,"code"],[211,136,251,57],[211,142,251,63,"closeEvent"],[211,152,251,73],[211,153,251,74,"reason"],[211,159,251,80],[211,164,251,85],[212,0,252,0],[213,0,253,0],[214,0,254,0],[215,0,255,0],[216,0,256,0],[216,7,258,6],[216,8,258,7],[217,6,259,4],[217,7,259,5],[217,8,259,6],[218,6,261,4],[218,10,261,8,"isEnabled"],[218,19,261,17],[218,21,261,19],[219,8,262,6,"HMRClient"],[219,17,262,15],[219,18,262,16,"enable"],[219,24,262,22],[219,25,262,23],[219,26,262,24],[220,6,263,4],[220,7,263,5],[220,13,263,11],[221,8,264,6,"HMRClient"],[221,17,264,15],[221,18,264,16,"disable"],[221,25,264,23],[221,26,264,24],[221,27,264,25],[222,6,265,4],[223,6,267,4,"registerBundleEntryPoints"],[223,31,267,29],[223,32,267,30,"hmrClient"],[223,41,267,39],[223,42,267,40],[224,6,268,4,"flushEarlyLogs"],[224,20,268,18],[224,21,268,19],[224,22,268,20],[225,4,269,2],[226,2,270,0],[226,3,270,1],[227,2,272,0],[227,11,272,9,"setHMRUnavailableReason"],[227,34,272,32,"setHMRUnavailableReason"],[227,35,272,33,"reason"],[227,41,272,47],[227,43,272,49],[228,4,273,2,"assert"],[228,10,273,8],[228,11,273,9,"hmrClient"],[228,20,273,18],[228,22,273,20],[228,67,273,65],[228,68,273,66],[229,4,274,2],[229,8,274,6,"hmrUnavailableReason"],[229,28,274,26],[229,33,274,31],[229,37,274,35],[229,39,274,37],[230,6,275,4],[231,6,276,4],[232,4,277,2],[233,4,278,2,"hmrUnavailableReason"],[233,24,278,22],[233,27,278,25,"reason"],[233,33,278,31],[235,4,280,2],[236,4,281,2],[237,4,282,2],[238,4,283,2],[238,8,283,6,"hmrClient"],[238,17,283,15],[238,18,283,16,"isEnabled"],[238,27,283,25],[238,28,283,26],[238,29,283,27],[238,33,283,31,"didConnect"],[238,43,283,41],[238,45,283,43],[239,6,284,4,"console"],[239,13,284,11],[239,14,284,12,"warn"],[239,18,284,16],[239,19,284,17,"reason"],[239,25,284,23],[239,26,284,24],[240,6,285,4],[241,4,286,2],[242,2,287,0],[243,2,289,0],[243,11,289,9,"registerBundleEntryPoints"],[243,36,289,34,"registerBundleEntryPoints"],[243,37,289,35,"client"],[243,43,289,63],[243,45,289,65],[244,4,290,2],[244,8,290,6,"hmrUnavailableReason"],[244,28,290,26],[244,32,290,30],[244,36,290,34],[244,38,290,36],[245,6,291,4],[246,6,292,4,"window"],[246,12,292,10],[246,13,292,11,"location"],[246,21,292,19],[246,22,292,20,"reload"],[246,28,292,26],[246,29,292,27],[246,30,292,28],[247,6,293,4],[248,4,294,2],[249,4,296,2],[249,8,296,6,"pendingEntryPoints"],[249,26,296,24],[249,27,296,25,"length"],[249,33,296,31],[249,36,296,34],[249,37,296,35],[249,39,296,37],[250,6,297,4,"client"],[250,12,297,10],[250,14,297,12,"send"],[250,18,297,16],[250,19,298,6,"JSON"],[250,23,298,10],[250,24,298,11,"stringify"],[250,33,298,20],[250,34,298,21],[251,8,299,8,"type"],[251,12,299,12],[251,14,299,14],[251,36,299,36],[252,8,300,8,"entryPoints"],[252,19,300,19],[252,21,300,21,"pendingEntryPoints"],[253,6,301,6],[253,7,301,7],[253,8,302,4],[253,9,302,5],[254,6,303,4,"pendingEntryPoints"],[254,24,303,22],[254,25,303,23,"length"],[254,31,303,29],[254,34,303,32],[254,35,303,33],[255,4,304,2],[256,2,305,0],[257,2,307,0],[257,11,307,9,"flushEarlyLogs"],[257,25,307,23,"flushEarlyLogs"],[257,26,307,23],[257,28,307,26],[258,4,308,2],[258,8,308,6],[259,6,309,4,"pendingLogs"],[259,17,309,15],[259,18,309,16,"forEach"],[259,25,309,23],[259,26,309,24],[259,27,309,25],[259,28,309,26,"level"],[259,33,309,31],[259,35,309,33,"data"],[259,39,309,37],[259,40,309,38],[259,45,309,43],[260,8,310,6,"HMRClient"],[260,17,310,15],[260,18,310,16,"log"],[260,21,310,19],[260,22,310,20,"level"],[260,27,310,25],[260,29,310,27,"data"],[260,33,310,31],[260,34,310,32],[261,6,311,4],[261,7,311,5],[261,8,311,6],[262,4,312,2],[262,5,312,3],[262,14,312,12],[263,6,313,4,"pendingLogs"],[263,17,313,15],[263,18,313,16,"length"],[263,24,313,22],[263,27,313,25],[263,28,313,26],[264,4,314,2],[265,2,315,0],[266,2,317,0],[266,11,317,9,"dismissRedbox"],[266,24,317,22,"dismissRedbox"],[266,25,317,22],[266,27,317,25],[267,4,318,2],[268,2,318,2],[269,2,321,0],[269,11,321,9,"showCompileError"],[269,27,321,25,"showCompileError"],[269,28,321,25],[269,30,321,28],[270,4,322,2],[270,8,322,6,"currentCompileErrorMessage"],[270,34,322,32],[270,39,322,37],[270,43,322,41],[270,45,322,43],[271,6,323,4],[272,4,324,2],[274,4,326,2],[275,4,327,2],[276,4,328,2,"dismissRedbox"],[276,17,328,15],[276,18,328,16],[276,19,328,17],[277,4,330,2],[277,10,330,8,"message"],[277,17,330,15],[277,20,330,18,"currentCompileErrorMessage"],[277,46,330,44],[278,4,331,2,"currentCompileErrorMessage"],[278,30,331,28],[278,33,331,31],[278,37,331,35],[279,4,333,2],[279,10,333,8,"error"],[279,15,333,13],[279,18,333,16],[279,22,333,20,"Error"],[279,27,333,25],[279,28,333,26,"message"],[279,35,333,33],[279,36,333,34],[280,4,334,2],[281,4,335,2],[282,4,336,2],[283,4,337,2,"error"],[283,9,337,7],[283,10,337,8,"preventSymbolication"],[283,30,337,28],[283,33,337,31],[283,37,337,35],[284,4,338,2],[284,10,338,8,"error"],[284,15,338,13],[285,2,339,0],[286,2,341,0],[286,6,341,0,"_default"],[286,14,341,0],[286,17,341,15,"HMRClient"],[286,26,341,24],[287,0,341,25],[287,3]],"functionMap":{"names":["<global>","showLoading","hideLoading","assert","HMRClient.enable","HMRClient.disable","HMRClient.registerBundle","HMRClient.log","data.map$argument_0","HMRClient.setup","<anonymous>","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;ACe;CDI;AEE;CFE;AGwC;CHE;EIO;GJiC;EKE;GLG;EME;GNI;EOE;yBCiB;kBDS;GPQ;ESI;2BCO;KDU;kCES;KFY;8BEE;KFO;wBEE;KFO;6BEE;KFE;uBEE;KFe;uBEE;KFuB;GTU;AYG;CZe;AaE;CbgB;AcE;wBCE;KDE;CdI;AgBE;ChBE;AiBE;CjBkB"},"hasCjsExports":false},"type":"js/module"}]}