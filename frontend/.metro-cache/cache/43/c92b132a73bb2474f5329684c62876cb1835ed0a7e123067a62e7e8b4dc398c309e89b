{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.tabRouterOverride = void 0;\n  const tabRouterOverride = original => {\n    return Object.assign({}, original, {\n      getStateForAction: (state, action, options) => {\n        if (action.target && action.target !== state.key) {\n          return null;\n        }\n        if (isReplaceAction(action)) {\n          // Generate the state as if we were using JUMP_TO\n          let nextState = original.getStateForAction(state, Object.assign({}, action, {\n            type: 'JUMP_TO'\n          }), options);\n          if (!nextState || nextState.index === undefined || !Array.isArray(nextState.history)) {\n            return null;\n          }\n          // If the state is valid and we didn't JUMP_TO a single history state,\n          // then remove the previous state.\n          if (nextState.index !== 0) {\n            const previousIndex = nextState.index - 1;\n            nextState = Object.assign({}, nextState, {\n              key: `${nextState.key}-replace`,\n              // Omit the previous history entry that we are replacing\n              history: [...nextState.history.slice(0, previousIndex), ...nextState.history.splice(nextState.index)]\n            });\n          }\n          return nextState;\n        }\n        return original.getStateForAction(state, action, options);\n      }\n    });\n  };\n  exports.tabRouterOverride = tabRouterOverride;\n  function isReplaceAction(action) {\n    return action.type === 'REPLACE';\n  }\n});","lineCount":43,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"tabRouterOverride"],[8,27,4,25],[8,30,4,28],[8,35,4,33],[8,36,4,34],[9,2,5,0],[9,8,5,6,"tabRouterOverride"],[9,25,5,23],[9,28,5,27,"original"],[9,36,5,35],[9,40,5,40],[10,4,6,4],[10,11,6,4,"Object"],[10,17,6,4],[10,18,6,4,"assign"],[10,24,6,4],[10,29,7,11,"original"],[10,37,7,19],[11,6,8,8,"getStateForAction"],[11,23,8,25],[11,25,8,27,"getStateForAction"],[11,26,8,28,"state"],[11,31,8,33],[11,33,8,35,"action"],[11,39,8,41],[11,41,8,43,"options"],[11,48,8,50],[11,53,8,55],[12,8,9,12],[12,12,9,16,"action"],[12,18,9,22],[12,19,9,23,"target"],[12,25,9,29],[12,29,9,33,"action"],[12,35,9,39],[12,36,9,40,"target"],[12,42,9,46],[12,47,9,51,"state"],[12,52,9,56],[12,53,9,57,"key"],[12,56,9,60],[12,58,9,62],[13,10,10,16],[13,17,10,23],[13,21,10,27],[14,8,11,12],[15,8,12,12],[15,12,12,16,"isReplaceAction"],[15,27,12,31],[15,28,12,32,"action"],[15,34,12,38],[15,35,12,39],[15,37,12,41],[16,10,13,16],[17,10,14,16],[17,14,14,20,"nextState"],[17,23,14,29],[17,26,14,32,"original"],[17,34,14,40],[17,35,14,41,"getStateForAction"],[17,52,14,58],[17,53,14,59,"state"],[17,58,14,64],[17,60,14,64,"Object"],[17,66,14,64],[17,67,14,64,"assign"],[17,73,14,64],[17,78,15,23,"action"],[17,84,15,29],[18,12,16,20,"type"],[18,16,16,24],[18,18,16,26],[19,10,16,35],[19,14,17,19,"options"],[19,21,17,26],[19,22,17,27],[20,10,18,16],[20,14,18,20],[20,15,18,21,"nextState"],[20,24,18,30],[20,28,18,34,"nextState"],[20,37,18,43],[20,38,18,44,"index"],[20,43,18,49],[20,48,18,54,"undefined"],[20,57,18,63],[20,61,18,67],[20,62,18,68,"Array"],[20,67,18,73],[20,68,18,74,"isArray"],[20,75,18,81],[20,76,18,82,"nextState"],[20,85,18,91],[20,86,18,92,"history"],[20,93,18,99],[20,94,18,100],[20,96,18,102],[21,12,19,20],[21,19,19,27],[21,23,19,31],[22,10,20,16],[23,10,21,16],[24,10,22,16],[25,10,23,16],[25,14,23,20,"nextState"],[25,23,23,29],[25,24,23,30,"index"],[25,29,23,35],[25,34,23,40],[25,35,23,41],[25,37,23,43],[26,12,24,20],[26,18,24,26,"previousIndex"],[26,31,24,39],[26,34,24,42,"nextState"],[26,43,24,51],[26,44,24,52,"index"],[26,49,24,57],[26,52,24,60],[26,53,24,61],[27,12,25,20,"nextState"],[27,21,25,29],[27,24,25,29,"Object"],[27,30,25,29],[27,31,25,29,"assign"],[27,37,25,29],[27,42,26,27,"nextState"],[27,51,26,36],[28,14,27,24,"key"],[28,17,27,27],[28,19,27,29],[28,22,27,32,"nextState"],[28,31,27,41],[28,32,27,42,"key"],[28,35,27,45],[28,45,27,55],[29,14,28,24],[30,14,29,24,"history"],[30,21,29,31],[30,23,29,33],[30,24,30,28],[30,27,30,31,"nextState"],[30,36,30,40],[30,37,30,41,"history"],[30,44,30,48],[30,45,30,49,"slice"],[30,50,30,54],[30,51,30,55],[30,52,30,56],[30,54,30,58,"previousIndex"],[30,67,30,71],[30,68,30,72],[30,70,31,28],[30,73,31,31,"nextState"],[30,82,31,40],[30,83,31,41,"history"],[30,90,31,48],[30,91,31,49,"splice"],[30,97,31,55],[30,98,31,56,"nextState"],[30,107,31,65],[30,108,31,66,"index"],[30,113,31,71],[30,114,31,72],[31,12,32,25],[31,14,33,21],[32,10,34,16],[33,10,35,16],[33,17,35,23,"nextState"],[33,26,35,32],[34,8,36,12],[35,8,37,12],[35,15,37,19,"original"],[35,23,37,27],[35,24,37,28,"getStateForAction"],[35,41,37,45],[35,42,37,46,"state"],[35,47,37,51],[35,49,37,53,"action"],[35,55,37,59],[35,57,37,61,"options"],[35,64,37,68],[35,65,37,69],[36,6,38,8],[37,4,38,9],[38,2,40,0],[38,3,40,1],[39,2,41,0,"exports"],[39,9,41,7],[39,10,41,8,"tabRouterOverride"],[39,27,41,25],[39,30,41,28,"tabRouterOverride"],[39,47,41,45],[40,2,42,0],[40,11,42,9,"isReplaceAction"],[40,26,42,24,"isReplaceAction"],[40,27,42,25,"action"],[40,33,42,31],[40,35,42,33],[41,4,43,4],[41,11,43,11,"action"],[41,17,43,17],[41,18,43,18,"type"],[41,22,43,22],[41,27,43,27],[41,36,43,36],[42,2,44,0],[43,0,44,1],[43,3]],"functionMap":{"names":["<global>","tabRouterOverride","getStateForAction","isReplaceAction"],"mappings":"AAA;0BCI;2BCG;SD8B;CDE;AGE;CHE"},"hasCjsExports":true},"type":"js/module"}]}