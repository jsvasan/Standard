{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":43,"column":17,"index":1780},"end":{"line":43,"column":52,"index":1815}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"query-string","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":44,"column":33,"index":1850},"end":{"line":44,"column":56,"index":1873}}],"key":"CQ4f6+ZdkmuRCkqw6zIINc/cka0=","exportNames":["*"],"imports":1}},{"name":"../matchers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":45,"column":19,"index":1895},"end":{"line":45,"column":41,"index":1917}}],"key":"lD+VV93WPi10A3qv5+9m649ytvA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _objectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  const _excluded = [\"preserveDynamicRoutes\", \"preserveGroups\", \"shouldEncodeURISegment\"],\n    _excluded2 = [\"#\"];\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function () {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, \"default\", {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = this && this.__importStar || function () {\n    var ownKeys = function (o) {\n      ownKeys = Object.getOwnPropertyNames || function (o) {\n        var ar = [];\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n        return ar;\n      };\n      return ownKeys(o);\n    };\n    return function (mod) {\n      if (mod && mod.__esModule) return mod;\n      var result = {};\n      if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n      __setModuleDefault(result, mod);\n      return result;\n    };\n  }();\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getParamName = void 0;\n  exports.validatePathConfig = validatePathConfig;\n  exports.fixCurrentParams = fixCurrentParams;\n  exports.appendQueryAndHash = appendQueryAndHash;\n  exports.appendBaseUrl = appendBaseUrl;\n  exports.getPathWithConventionsCollapsed = getPathWithConventionsCollapsed;\n  exports.isDynamicPart = isDynamicPart;\n  const native_1 = require(_dependencyMap[1], \"@react-navigation/native\");\n  const queryString = __importStar(require(_dependencyMap[2], \"query-string\"));\n  const matchers_1 = require(_dependencyMap[3], \"../matchers\");\n  function validatePathConfig(_ref) {\n    let options = _objectWithoutPropertiesLoose(_ref, _excluded);\n    (0, native_1.validatePathConfig)(options);\n  }\n  function fixCurrentParams(allParams, route, stringify) {\n    // Better handle array params\n    const currentParams = Object.fromEntries(Object.entries(route.params).flatMap(([key, value]) => {\n      if (key === 'screen' || key === 'params') {\n        return [];\n      }\n      return [[key, stringify?.[key] ? stringify[key](value) : Array.isArray(value) ? value.map(String) : String(value)]];\n    }));\n    // We always assign params, as non pattern routes may still have query params\n    Object.assign(allParams, currentParams);\n    return currentParams;\n  }\n  function appendQueryAndHash(path, _ref2) {\n    let {\n        '#': hash\n      } = _ref2,\n      focusedParams = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n    const query = queryString.stringify(focusedParams, {\n      sort: false\n    });\n    if (query) {\n      path += `?${query}`;\n    }\n    if (hash) {\n      path += `#${hash}`;\n    }\n    return path;\n  }\n  function appendBaseUrl(path, baseUrl = \"\") {\n    if (process.env.NODE_ENV !== 'development') {\n      if (baseUrl) {\n        return `/${baseUrl.replace(/^\\/+/, '').replace(/\\/$/, '')}${path}`;\n      }\n    }\n    return path;\n  }\n  function getPathWithConventionsCollapsed({\n    pattern,\n    route,\n    params,\n    preserveGroups,\n    preserveDynamicRoutes,\n    shouldEncodeURISegment = true,\n    initialRouteName\n  }) {\n    const segments = pattern.split('/');\n    return segments.map((p, i) => {\n      const name = (0, exports.getParamName)(p);\n      // Showing the route name seems ok, though whatever we show here will be incorrect\n      // Since the page doesn't actually exist\n      if (p.startsWith('*')) {\n        if (preserveDynamicRoutes) {\n          if (name === 'not-found') {\n            return '+not-found';\n          }\n          return `[...${name}]`;\n        } else if (params[name]) {\n          if (Array.isArray(params[name])) {\n            return params[name].join('/');\n          }\n          return params[name];\n        } else if (route.name.startsWith('[') && route.name.endsWith(']')) {\n          return '';\n        } else if (p === '*not-found') {\n          return '';\n        } else {\n          return route.name;\n        }\n      }\n      // If the path has a pattern for a param, put the param in the path\n      if (p.startsWith(':')) {\n        if (preserveDynamicRoutes) {\n          return `[${name}]`;\n        }\n        // Optional params without value assigned in route.params should be ignored\n        const value = params[name];\n        if (value === undefined && p.endsWith('?')) {\n          return;\n        }\n        return (shouldEncodeURISegment ? encodeURISegment(value) : value) ?? 'undefined';\n      }\n      if (!preserveGroups && (0, matchers_1.matchGroupName)(p) != null) {\n        // When the last part is a group it could be a shared URL\n        // if the route has an initialRouteName defined, then we should\n        // use that as the component path as we can assume it will be shown.\n        if (segments.length - 1 === i) {\n          if (initialRouteName) {\n            // Return an empty string if the init route is ambiguous.\n            if (segmentMatchesConvention(initialRouteName)) {\n              return '';\n            }\n            return shouldEncodeURISegment ? encodeURISegment(initialRouteName, {\n              preserveBrackets: true\n            }) : initialRouteName;\n          }\n        }\n        return '';\n      }\n      // Preserve dynamic syntax for rehydration\n      return shouldEncodeURISegment ? encodeURISegment(p, {\n        preserveBrackets: true\n      }) : p;\n    }).map(v => v ?? '').join('/');\n  }\n  const getParamName = pattern => pattern.replace(/^[:*]/, '').replace(/\\?$/, '');\n  exports.getParamName = getParamName;\n  function isDynamicPart(p) {\n    return p.startsWith(':') || p.startsWith('*');\n  }\n  function segmentMatchesConvention(segment) {\n    return segment === 'index' || (0, matchers_1.matchGroupName)(segment) != null || (0, matchers_1.matchDynamicName)(segment) != null;\n  }\n  function encodeURISegment(str, {\n    preserveBrackets = false\n  } = {}) {\n    // Valid characters according to\n    // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n    str = String(str).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n    if (preserveBrackets) {\n      // Preserve brackets\n      str = str.replace(/%5B/g, '[').replace(/%5D/g, ']');\n    }\n    return str;\n  }\n});","lineCount":189,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_objectWithoutPropertiesLoose"],[4,35,1,13],[4,38,1,13,"require"],[4,45,1,13],[4,46,1,13,"_dependencyMap"],[4,60,1,13],[5,2,1,13],[5,8,1,13,"_excluded"],[5,17,1,13],[6,4,1,13,"_excluded2"],[6,14,1,13],[7,2,2,0],[7,6,2,4,"__createBinding"],[7,21,2,19],[7,24,2,23],[7,28,2,27],[7,32,2,31],[7,36,2,35],[7,37,2,36,"__createBinding"],[7,52,2,51],[7,57,2,57,"Object"],[7,63,2,63],[7,64,2,64,"create"],[7,70,2,70],[7,73,2,74],[7,83,2,83,"o"],[7,84,2,84],[7,86,2,86,"m"],[7,87,2,87],[7,89,2,89,"k"],[7,90,2,90],[7,92,2,92,"k2"],[7,94,2,94],[7,96,2,96],[8,4,3,4],[8,8,3,8,"k2"],[8,10,3,10],[8,15,3,15,"undefined"],[8,24,3,24],[8,26,3,26,"k2"],[8,28,3,28],[8,31,3,31,"k"],[8,32,3,32],[9,4,4,4],[9,8,4,8,"desc"],[9,12,4,12],[9,15,4,15,"Object"],[9,21,4,21],[9,22,4,22,"getOwnPropertyDescriptor"],[9,46,4,46],[9,47,4,47,"m"],[9,48,4,48],[9,50,4,50,"k"],[9,51,4,51],[9,52,4,52],[10,4,5,4],[10,8,5,8],[10,9,5,9,"desc"],[10,13,5,13],[10,18,5,18],[10,23,5,23],[10,27,5,27,"desc"],[10,31,5,31],[10,34,5,34],[10,35,5,35,"m"],[10,36,5,36],[10,37,5,37,"__esModule"],[10,47,5,47],[10,50,5,50,"desc"],[10,54,5,54],[10,55,5,55,"writable"],[10,63,5,63],[10,67,5,67,"desc"],[10,71,5,71],[10,72,5,72,"configurable"],[10,84,5,84],[10,85,5,85],[10,87,5,87],[11,6,6,6,"desc"],[11,10,6,10],[11,13,6,13],[12,8,6,15,"enumerable"],[12,18,6,25],[12,20,6,27],[12,24,6,31],[13,8,6,33,"get"],[13,11,6,36],[13,13,6,38],[13,22,6,38,"get"],[13,23,6,38],[13,25,6,49],[14,10,6,51],[14,17,6,58,"m"],[14,18,6,59],[14,19,6,60,"k"],[14,20,6,61],[14,21,6,62],[15,8,6,64],[16,6,6,66],[16,7,6,67],[17,4,7,4],[18,4,8,4,"Object"],[18,10,8,10],[18,11,8,11,"defineProperty"],[18,25,8,25],[18,26,8,26,"o"],[18,27,8,27],[18,29,8,29,"k2"],[18,31,8,31],[18,33,8,33,"desc"],[18,37,8,37],[18,38,8,38],[19,2,9,0],[19,3,9,1],[19,6,9,6],[19,16,9,15,"o"],[19,17,9,16],[19,19,9,18,"m"],[19,20,9,19],[19,22,9,21,"k"],[19,23,9,22],[19,25,9,24,"k2"],[19,27,9,26],[19,29,9,28],[20,4,10,4],[20,8,10,8,"k2"],[20,10,10,10],[20,15,10,15,"undefined"],[20,24,10,24],[20,26,10,26,"k2"],[20,28,10,28],[20,31,10,31,"k"],[20,32,10,32],[21,4,11,4,"o"],[21,5,11,5],[21,6,11,6,"k2"],[21,8,11,8],[21,9,11,9],[21,12,11,12,"m"],[21,13,11,13],[21,14,11,14,"k"],[21,15,11,15],[21,16,11,16],[22,2,12,0],[22,3,12,2],[22,4,12,3],[23,2,13,0],[23,6,13,4,"__setModuleDefault"],[23,24,13,22],[23,27,13,26],[23,31,13,30],[23,35,13,34],[23,39,13,38],[23,40,13,39,"__setModuleDefault"],[23,58,13,57],[23,63,13,63,"Object"],[23,69,13,69],[23,70,13,70,"create"],[23,76,13,76],[23,79,13,80],[23,89,13,89,"o"],[23,90,13,90],[23,92,13,92,"v"],[23,93,13,93],[23,95,13,95],[24,4,14,4,"Object"],[24,10,14,10],[24,11,14,11,"defineProperty"],[24,25,14,25],[24,26,14,26,"o"],[24,27,14,27],[24,29,14,29],[24,38,14,38],[24,40,14,40],[25,6,14,42,"enumerable"],[25,16,14,52],[25,18,14,54],[25,22,14,58],[26,6,14,60,"value"],[26,11,14,65],[26,13,14,67,"v"],[27,4,14,69],[27,5,14,70],[27,6,14,71],[28,2,15,0],[28,3,15,1],[28,6,15,5],[28,16,15,14,"o"],[28,17,15,15],[28,19,15,17,"v"],[28,20,15,18],[28,22,15,20],[29,4,16,4,"o"],[29,5,16,5],[29,6,16,6],[29,15,16,15],[29,16,16,16],[29,19,16,19,"v"],[29,20,16,20],[30,2,17,0],[30,3,17,1],[30,4,17,2],[31,2,18,0],[31,6,18,4,"__importStar"],[31,18,18,16],[31,21,18,20],[31,25,18,24],[31,29,18,28],[31,33,18,32],[31,34,18,33,"__importStar"],[31,46,18,45],[31,50,18,51],[31,62,18,63],[32,4,19,4],[32,8,19,8,"ownKeys"],[32,15,19,15],[32,18,19,18],[32,27,19,18,"ownKeys"],[32,28,19,27,"o"],[32,29,19,28],[32,31,19,30],[33,6,20,8,"ownKeys"],[33,13,20,15],[33,16,20,18,"Object"],[33,22,20,24],[33,23,20,25,"getOwnPropertyNames"],[33,42,20,44],[33,46,20,48],[33,56,20,58,"o"],[33,57,20,59],[33,59,20,61],[34,8,21,12],[34,12,21,16,"ar"],[34,14,21,18],[34,17,21,21],[34,19,21,23],[35,8,22,12],[35,13,22,17],[35,17,22,21,"k"],[35,18,22,22],[35,22,22,26,"o"],[35,23,22,27],[35,25,22,29],[35,29,22,33,"Object"],[35,35,22,39],[35,36,22,40,"prototype"],[35,45,22,49],[35,46,22,50,"hasOwnProperty"],[35,60,22,64],[35,61,22,65,"call"],[35,65,22,69],[35,66,22,70,"o"],[35,67,22,71],[35,69,22,73,"k"],[35,70,22,74],[35,71,22,75],[35,73,22,77,"ar"],[35,75,22,79],[35,76,22,80,"ar"],[35,78,22,82],[35,79,22,83,"length"],[35,85,22,89],[35,86,22,90],[35,89,22,93,"k"],[35,90,22,94],[36,8,23,12],[36,15,23,19,"ar"],[36,17,23,21],[37,6,24,8],[37,7,24,9],[38,6,25,8],[38,13,25,15,"ownKeys"],[38,20,25,22],[38,21,25,23,"o"],[38,22,25,24],[38,23,25,25],[39,4,26,4],[39,5,26,5],[40,4,27,4],[40,11,27,11],[40,21,27,21,"mod"],[40,24,27,24],[40,26,27,26],[41,6,28,8],[41,10,28,12,"mod"],[41,13,28,15],[41,17,28,19,"mod"],[41,20,28,22],[41,21,28,23,"__esModule"],[41,31,28,33],[41,33,28,35],[41,40,28,42,"mod"],[41,43,28,45],[42,6,29,8],[42,10,29,12,"result"],[42,16,29,18],[42,19,29,21],[42,20,29,22],[42,21,29,23],[43,6,30,8],[43,10,30,12,"mod"],[43,13,30,15],[43,17,30,19],[43,21,30,23],[43,23,30,25],[43,28,30,30],[43,32,30,34,"k"],[43,33,30,35],[43,36,30,38,"ownKeys"],[43,43,30,45],[43,44,30,46,"mod"],[43,47,30,49],[43,48,30,50],[43,50,30,52,"i"],[43,51,30,53],[43,54,30,56],[43,55,30,57],[43,57,30,59,"i"],[43,58,30,60],[43,61,30,63,"k"],[43,62,30,64],[43,63,30,65,"length"],[43,69,30,71],[43,71,30,73,"i"],[43,72,30,74],[43,74,30,76],[43,76,30,78],[43,80,30,82,"k"],[43,81,30,83],[43,82,30,84,"i"],[43,83,30,85],[43,84,30,86],[43,89,30,91],[43,98,30,100],[43,100,30,102,"__createBinding"],[43,115,30,117],[43,116,30,118,"result"],[43,122,30,124],[43,124,30,126,"mod"],[43,127,30,129],[43,129,30,131,"k"],[43,130,30,132],[43,131,30,133,"i"],[43,132,30,134],[43,133,30,135],[43,134,30,136],[44,6,31,8,"__setModuleDefault"],[44,24,31,26],[44,25,31,27,"result"],[44,31,31,33],[44,33,31,35,"mod"],[44,36,31,38],[44,37,31,39],[45,6,32,8],[45,13,32,15,"result"],[45,19,32,21],[46,4,33,4],[46,5,33,5],[47,2,34,0],[47,3,34,1],[47,4,34,3],[47,5,34,4],[48,2,35,0,"Object"],[48,8,35,6],[48,9,35,7,"defineProperty"],[48,23,35,21],[48,24,35,22,"exports"],[48,31,35,29],[48,33,35,31],[48,45,35,43],[48,47,35,45],[49,4,35,47,"value"],[49,9,35,52],[49,11,35,54],[50,2,35,59],[50,3,35,60],[50,4,35,61],[51,2,36,0,"exports"],[51,9,36,7],[51,10,36,8,"getParamName"],[51,22,36,20],[51,25,36,23],[51,30,36,28],[51,31,36,29],[52,2,37,0,"exports"],[52,9,37,7],[52,10,37,8,"validatePathConfig"],[52,28,37,26],[52,31,37,29,"validatePathConfig"],[52,49,37,47],[53,2,38,0,"exports"],[53,9,38,7],[53,10,38,8,"fixCurrentParams"],[53,26,38,24],[53,29,38,27,"fixCurrentParams"],[53,45,38,43],[54,2,39,0,"exports"],[54,9,39,7],[54,10,39,8,"appendQueryAndHash"],[54,28,39,26],[54,31,39,29,"appendQueryAndHash"],[54,49,39,47],[55,2,40,0,"exports"],[55,9,40,7],[55,10,40,8,"appendBaseUrl"],[55,23,40,21],[55,26,40,24,"appendBaseUrl"],[55,39,40,37],[56,2,41,0,"exports"],[56,9,41,7],[56,10,41,8,"getPathWithConventionsCollapsed"],[56,41,41,39],[56,44,41,42,"getPathWithConventionsCollapsed"],[56,75,41,73],[57,2,42,0,"exports"],[57,9,42,7],[57,10,42,8,"isDynamicPart"],[57,23,42,21],[57,26,42,24,"isDynamicPart"],[57,39,42,37],[58,2,43,0],[58,8,43,6,"native_1"],[58,16,43,14],[58,19,43,17,"require"],[58,26,43,24],[58,27,43,24,"_dependencyMap"],[58,41,43,24],[58,72,43,51],[58,73,43,52],[59,2,44,0],[59,8,44,6,"queryString"],[59,19,44,17],[59,22,44,20,"__importStar"],[59,34,44,32],[59,35,44,33,"require"],[59,42,44,40],[59,43,44,40,"_dependencyMap"],[59,57,44,40],[59,76,44,55],[59,77,44,56],[59,78,44,57],[60,2,45,0],[60,8,45,6,"matchers_1"],[60,18,45,16],[60,21,45,19,"require"],[60,28,45,26],[60,29,45,26,"_dependencyMap"],[60,43,45,26],[60,61,45,40],[60,62,45,41],[61,2,46,0],[61,11,46,9,"validatePathConfig"],[61,29,46,27,"validatePathConfig"],[61,30,46,27,"_ref"],[61,34,46,27],[61,36,46,107],[62,4,46,107],[62,8,46,96,"options"],[62,15,46,103],[62,18,46,103,"_objectWithoutPropertiesLoose"],[62,47,46,103],[62,48,46,103,"_ref"],[62,52,46,103],[62,54,46,103,"_excluded"],[62,63,46,103],[63,4,47,4],[63,5,47,5],[63,6,47,6],[63,8,47,8,"native_1"],[63,16,47,16],[63,17,47,17,"validatePathConfig"],[63,35,47,35],[63,37,47,37,"options"],[63,44,47,44],[63,45,47,45],[64,2,48,0],[65,2,49,0],[65,11,49,9,"fixCurrentParams"],[65,27,49,25,"fixCurrentParams"],[65,28,49,26,"allParams"],[65,37,49,35],[65,39,49,37,"route"],[65,44,49,42],[65,46,49,44,"stringify"],[65,55,49,53],[65,57,49,55],[66,4,50,4],[67,4,51,4],[67,10,51,10,"currentParams"],[67,23,51,23],[67,26,51,26,"Object"],[67,32,51,32],[67,33,51,33,"fromEntries"],[67,44,51,44],[67,45,51,45,"Object"],[67,51,51,51],[67,52,51,52,"entries"],[67,59,51,59],[67,60,51,60,"route"],[67,65,51,65],[67,66,51,66,"params"],[67,72,51,72],[67,73,51,73],[67,74,51,74,"flatMap"],[67,81,51,81],[67,82,51,82],[67,83,51,83],[67,84,51,84,"key"],[67,87,51,87],[67,89,51,89,"value"],[67,94,51,94],[67,95,51,95],[67,100,51,100],[68,6,52,8],[68,10,52,12,"key"],[68,13,52,15],[68,18,52,20],[68,26,52,28],[68,30,52,32,"key"],[68,33,52,35],[68,38,52,40],[68,46,52,48],[68,48,52,50],[69,8,53,12],[69,15,53,19],[69,17,53,21],[70,6,54,8],[71,6,55,8],[71,13,55,15],[71,14,56,12],[71,15,57,16,"key"],[71,18,57,19],[71,20,58,16,"stringify"],[71,29,58,25],[71,32,58,28,"key"],[71,35,58,31],[71,36,58,32],[71,39,59,22,"stringify"],[71,48,59,31],[71,49,59,32,"key"],[71,52,59,35],[71,53,59,36],[71,54,59,37,"value"],[71,59,59,42],[71,60,59,43],[71,63,60,22,"Array"],[71,68,60,27],[71,69,60,28,"isArray"],[71,76,60,35],[71,77,60,36,"value"],[71,82,60,41],[71,83,60,42],[71,86,61,26,"value"],[71,91,61,31],[71,92,61,32,"map"],[71,95,61,35],[71,96,61,36,"String"],[71,102,61,42],[71,103,61,43],[71,106,62,26,"String"],[71,112,62,32],[71,113,62,33,"value"],[71,118,62,38],[71,119,62,39],[71,120,63,13],[71,121,64,9],[72,4,65,4],[72,5,65,5],[72,6,65,6],[72,7,65,7],[73,4,66,4],[74,4,67,4,"Object"],[74,10,67,10],[74,11,67,11,"assign"],[74,17,67,17],[74,18,67,18,"allParams"],[74,27,67,27],[74,29,67,29,"currentParams"],[74,42,67,42],[74,43,67,43],[75,4,68,4],[75,11,68,11,"currentParams"],[75,24,68,24],[76,2,69,0],[77,2,70,0],[77,11,70,9,"appendQueryAndHash"],[77,29,70,27,"appendQueryAndHash"],[77,30,70,28,"path"],[77,34,70,32],[77,36,70,32,"_ref2"],[77,41,70,32],[77,43,70,67],[78,4,70,67],[78,8,70,34],[79,8,70,36],[79,11,70,39],[79,13,70,41,"hash"],[80,6,70,64],[80,7,70,65],[80,10,70,65,"_ref2"],[80,15,70,65],[81,6,70,50,"focusedParams"],[81,19,70,63],[81,22,70,63,"_objectWithoutPropertiesLoose"],[81,51,70,63],[81,52,70,63,"_ref2"],[81,57,70,63],[81,59,70,63,"_excluded2"],[81,69,70,63],[82,4,71,4],[82,10,71,10,"query"],[82,15,71,15],[82,18,71,18,"queryString"],[82,29,71,29],[82,30,71,30,"stringify"],[82,39,71,39],[82,40,71,40,"focusedParams"],[82,53,71,53],[82,55,71,55],[83,6,71,57,"sort"],[83,10,71,61],[83,12,71,63],[84,4,71,69],[84,5,71,70],[84,6,71,71],[85,4,72,4],[85,8,72,8,"query"],[85,13,72,13],[85,15,72,15],[86,6,73,8,"path"],[86,10,73,12],[86,14,73,16],[86,18,73,20,"query"],[86,23,73,25],[86,25,73,27],[87,4,74,4],[88,4,75,4],[88,8,75,8,"hash"],[88,12,75,12],[88,14,75,14],[89,6,76,8,"path"],[89,10,76,12],[89,14,76,16],[89,18,76,20,"hash"],[89,22,76,24],[89,24,76,26],[90,4,77,4],[91,4,78,4],[91,11,78,11,"path"],[91,15,78,15],[92,2,79,0],[93,2,80,0],[93,11,80,9,"appendBaseUrl"],[93,24,80,22,"appendBaseUrl"],[93,25,80,23,"path"],[93,29,80,27],[93,31,80,29,"baseUrl"],[93,38,80,36],[93,43,80,64],[93,45,80,66],[94,4,81,4],[94,8,81,8,"process"],[94,15,81,15],[94,16,81,16,"env"],[94,19,81,19],[94,20,81,20,"NODE_ENV"],[94,28,81,28],[94,33,81,33],[94,46,81,46],[94,48,81,48],[95,6,82,8],[95,10,82,12,"baseUrl"],[95,17,82,19],[95,19,82,21],[96,8,83,12],[96,15,83,19],[96,19,83,23,"baseUrl"],[96,26,83,30],[96,27,83,31,"replace"],[96,34,83,38],[96,35,83,39],[96,41,83,45],[96,43,83,47],[96,45,83,49],[96,46,83,50],[96,47,83,51,"replace"],[96,54,83,58],[96,55,83,59],[96,60,83,64],[96,62,83,66],[96,64,83,68],[96,65,83,69],[96,68,83,72,"path"],[96,72,83,76],[96,74,83,78],[97,6,84,8],[98,4,85,4],[99,4,86,4],[99,11,86,11,"path"],[99,15,86,15],[100,2,87,0],[101,2,88,0],[101,11,88,9,"getPathWithConventionsCollapsed"],[101,42,88,40,"getPathWithConventionsCollapsed"],[101,43,88,41],[102,4,88,43,"pattern"],[102,11,88,50],[103,4,88,52,"route"],[103,9,88,57],[104,4,88,59,"params"],[104,10,88,65],[105,4,88,67,"preserveGroups"],[105,18,88,81],[106,4,88,83,"preserveDynamicRoutes"],[106,25,88,104],[107,4,88,106,"shouldEncodeURISegment"],[107,26,88,128],[107,29,88,131],[107,33,88,135],[108,4,88,137,"initialRouteName"],[109,2,88,155],[109,3,88,156],[109,5,88,158],[110,4,89,4],[110,10,89,10,"segments"],[110,18,89,18],[110,21,89,21,"pattern"],[110,28,89,28],[110,29,89,29,"split"],[110,34,89,34],[110,35,89,35],[110,38,89,38],[110,39,89,39],[111,4,90,4],[111,11,90,11,"segments"],[111,19,90,19],[111,20,91,9,"map"],[111,23,91,12],[111,24,91,13],[111,25,91,14,"p"],[111,26,91,15],[111,28,91,17,"i"],[111,29,91,18],[111,34,91,23],[112,6,92,8],[112,12,92,14,"name"],[112,16,92,18],[112,19,92,21],[112,20,92,22],[112,21,92,23],[112,23,92,25,"exports"],[112,30,92,32],[112,31,92,33,"getParamName"],[112,43,92,45],[112,45,92,47,"p"],[112,46,92,48],[112,47,92,49],[113,6,93,8],[114,6,94,8],[115,6,95,8],[115,10,95,12,"p"],[115,11,95,13],[115,12,95,14,"startsWith"],[115,22,95,24],[115,23,95,25],[115,26,95,28],[115,27,95,29],[115,29,95,31],[116,8,96,12],[116,12,96,16,"preserveDynamicRoutes"],[116,33,96,37],[116,35,96,39],[117,10,97,16],[117,14,97,20,"name"],[117,18,97,24],[117,23,97,29],[117,34,97,40],[117,36,97,42],[118,12,98,20],[118,19,98,27],[118,31,98,39],[119,10,99,16],[120,10,100,16],[120,17,100,23],[120,24,100,30,"name"],[120,28,100,34],[120,31,100,37],[121,8,101,12],[121,9,101,13],[121,15,102,17],[121,19,102,21,"params"],[121,25,102,27],[121,26,102,28,"name"],[121,30,102,32],[121,31,102,33],[121,33,102,35],[122,10,103,16],[122,14,103,20,"Array"],[122,19,103,25],[122,20,103,26,"isArray"],[122,27,103,33],[122,28,103,34,"params"],[122,34,103,40],[122,35,103,41,"name"],[122,39,103,45],[122,40,103,46],[122,41,103,47],[122,43,103,49],[123,12,104,20],[123,19,104,27,"params"],[123,25,104,33],[123,26,104,34,"name"],[123,30,104,38],[123,31,104,39],[123,32,104,40,"join"],[123,36,104,44],[123,37,104,45],[123,40,104,48],[123,41,104,49],[124,10,105,16],[125,10,106,16],[125,17,106,23,"params"],[125,23,106,29],[125,24,106,30,"name"],[125,28,106,34],[125,29,106,35],[126,8,107,12],[126,9,107,13],[126,15,108,17],[126,19,108,21,"route"],[126,24,108,26],[126,25,108,27,"name"],[126,29,108,31],[126,30,108,32,"startsWith"],[126,40,108,42],[126,41,108,43],[126,44,108,46],[126,45,108,47],[126,49,108,51,"route"],[126,54,108,56],[126,55,108,57,"name"],[126,59,108,61],[126,60,108,62,"endsWith"],[126,68,108,70],[126,69,108,71],[126,72,108,74],[126,73,108,75],[126,75,108,77],[127,10,109,16],[127,17,109,23],[127,19,109,25],[128,8,110,12],[128,9,110,13],[128,15,111,17],[128,19,111,21,"p"],[128,20,111,22],[128,25,111,27],[128,37,111,39],[128,39,111,41],[129,10,112,16],[129,17,112,23],[129,19,112,25],[130,8,113,12],[130,9,113,13],[130,15,114,17],[131,10,115,16],[131,17,115,23,"route"],[131,22,115,28],[131,23,115,29,"name"],[131,27,115,33],[132,8,116,12],[133,6,117,8],[134,6,118,8],[135,6,119,8],[135,10,119,12,"p"],[135,11,119,13],[135,12,119,14,"startsWith"],[135,22,119,24],[135,23,119,25],[135,26,119,28],[135,27,119,29],[135,29,119,31],[136,8,120,12],[136,12,120,16,"preserveDynamicRoutes"],[136,33,120,37],[136,35,120,39],[137,10,121,16],[137,17,121,23],[137,21,121,27,"name"],[137,25,121,31],[137,28,121,34],[138,8,122,12],[139,8,123,12],[140,8,124,12],[140,14,124,18,"value"],[140,19,124,23],[140,22,124,26,"params"],[140,28,124,32],[140,29,124,33,"name"],[140,33,124,37],[140,34,124,38],[141,8,125,12],[141,12,125,16,"value"],[141,17,125,21],[141,22,125,26,"undefined"],[141,31,125,35],[141,35,125,39,"p"],[141,36,125,40],[141,37,125,41,"endsWith"],[141,45,125,49],[141,46,125,50],[141,49,125,53],[141,50,125,54],[141,52,125,56],[142,10,126,16],[143,8,127,12],[144,8,128,12],[144,15,128,19],[144,16,128,20,"shouldEncodeURISegment"],[144,38,128,42],[144,41,128,45,"encodeURISegment"],[144,57,128,61],[144,58,128,62,"value"],[144,63,128,67],[144,64,128,68],[144,67,128,71,"value"],[144,72,128,76],[144,77,128,81],[144,88,128,92],[145,6,129,8],[146,6,130,8],[146,10,130,12],[146,11,130,13,"preserveGroups"],[146,25,130,27],[146,29,130,31],[146,30,130,32],[146,31,130,33],[146,33,130,35,"matchers_1"],[146,43,130,45],[146,44,130,46,"matchGroupName"],[146,58,130,60],[146,60,130,62,"p"],[146,61,130,63],[146,62,130,64],[146,66,130,68],[146,70,130,72],[146,72,130,74],[147,8,131,12],[148,8,132,12],[149,8,133,12],[150,8,134,12],[150,12,134,16,"segments"],[150,20,134,24],[150,21,134,25,"length"],[150,27,134,31],[150,30,134,34],[150,31,134,35],[150,36,134,40,"i"],[150,37,134,41],[150,39,134,43],[151,10,135,16],[151,14,135,20,"initialRouteName"],[151,30,135,36],[151,32,135,38],[152,12,136,20],[153,12,137,20],[153,16,137,24,"segmentMatchesConvention"],[153,40,137,48],[153,41,137,49,"initialRouteName"],[153,57,137,65],[153,58,137,66],[153,60,137,68],[154,14,138,24],[154,21,138,31],[154,23,138,33],[155,12,139,20],[156,12,140,20],[156,19,140,27,"shouldEncodeURISegment"],[156,41,140,49],[156,44,141,26,"encodeURISegment"],[156,60,141,42],[156,61,141,43,"initialRouteName"],[156,77,141,59],[156,79,141,61],[157,14,141,63,"preserveBrackets"],[157,30,141,79],[157,32,141,81],[158,12,141,86],[158,13,141,87],[158,14,141,88],[158,17,142,26,"initialRouteName"],[158,33,142,42],[159,10,143,16],[160,8,144,12],[161,8,145,12],[161,15,145,19],[161,17,145,21],[162,6,146,8],[163,6,147,8],[164,6,148,8],[164,13,148,15,"shouldEncodeURISegment"],[164,35,148,37],[164,38,148,40,"encodeURISegment"],[164,54,148,56],[164,55,148,57,"p"],[164,56,148,58],[164,58,148,60],[165,8,148,62,"preserveBrackets"],[165,24,148,78],[165,26,148,80],[166,6,148,85],[166,7,148,86],[166,8,148,87],[166,11,148,90,"p"],[166,12,148,91],[167,4,149,4],[167,5,149,5],[167,6,149,6],[167,7,150,9,"map"],[167,10,150,12],[167,11,150,14,"v"],[167,12,150,15],[167,16,150,20,"v"],[167,17,150,21],[167,21,150,25],[167,23,150,27],[167,24,150,28],[167,25,151,9,"join"],[167,29,151,13],[167,30,151,14],[167,33,151,17],[167,34,151,18],[168,2,152,0],[169,2,153,0],[169,8,153,6,"getParamName"],[169,20,153,18],[169,23,153,22,"pattern"],[169,30,153,29],[169,34,153,34,"pattern"],[169,41,153,41],[169,42,153,42,"replace"],[169,49,153,49],[169,50,153,50],[169,57,153,57],[169,59,153,59],[169,61,153,61],[169,62,153,62],[169,63,153,63,"replace"],[169,70,153,70],[169,71,153,71],[169,76,153,76],[169,78,153,78],[169,80,153,80],[169,81,153,81],[170,2,154,0,"exports"],[170,9,154,7],[170,10,154,8,"getParamName"],[170,22,154,20],[170,25,154,23,"getParamName"],[170,37,154,35],[171,2,155,0],[171,11,155,9,"isDynamicPart"],[171,24,155,22,"isDynamicPart"],[171,25,155,23,"p"],[171,26,155,24],[171,28,155,26],[172,4,156,4],[172,11,156,11,"p"],[172,12,156,12],[172,13,156,13,"startsWith"],[172,23,156,23],[172,24,156,24],[172,27,156,27],[172,28,156,28],[172,32,156,32,"p"],[172,33,156,33],[172,34,156,34,"startsWith"],[172,44,156,44],[172,45,156,45],[172,48,156,48],[172,49,156,49],[173,2,157,0],[174,2,158,0],[174,11,158,9,"segmentMatchesConvention"],[174,35,158,33,"segmentMatchesConvention"],[174,36,158,34,"segment"],[174,43,158,41],[174,45,158,43],[175,4,159,4],[175,11,159,12,"segment"],[175,18,159,19],[175,23,159,24],[175,30,159,31],[175,34,159,35],[175,35,159,36],[175,36,159,37],[175,38,159,39,"matchers_1"],[175,48,159,49],[175,49,159,50,"matchGroupName"],[175,63,159,64],[175,65,159,66,"segment"],[175,72,159,73],[175,73,159,74],[175,77,159,78],[175,81,159,82],[175,85,159,86],[175,86,159,87],[175,87,159,88],[175,89,159,90,"matchers_1"],[175,99,159,100],[175,100,159,101,"matchDynamicName"],[175,116,159,117],[175,118,159,119,"segment"],[175,125,159,126],[175,126,159,127],[175,130,159,131],[175,134,159,135],[176,2,160,0],[177,2,161,0],[177,11,161,9,"encodeURISegment"],[177,27,161,25,"encodeURISegment"],[177,28,161,26,"str"],[177,31,161,29],[177,33,161,31],[178,4,161,33,"preserveBrackets"],[178,20,161,49],[178,23,161,52],[179,2,161,58],[179,3,161,59],[179,6,161,62],[179,7,161,63],[179,8,161,64],[179,10,161,66],[180,4,162,4],[181,4,163,4],[182,4,164,4,"str"],[182,7,164,7],[182,10,164,10,"String"],[182,16,164,16],[182,17,164,17,"str"],[182,20,164,20],[182,21,164,21],[182,22,164,22,"replace"],[182,29,164,29],[182,30,164,30],[182,63,164,63],[182,65,164,66,"char"],[182,69,164,70],[182,73,164,75,"encodeURIComponent"],[182,91,164,93],[182,92,164,94,"char"],[182,96,164,98],[182,97,164,99],[182,98,164,100],[183,4,165,4],[183,8,165,8,"preserveBrackets"],[183,24,165,24],[183,26,165,26],[184,6,166,8],[185,6,167,8,"str"],[185,9,167,11],[185,12,167,14,"str"],[185,15,167,17],[185,16,167,18,"replace"],[185,23,167,25],[185,24,167,26],[185,30,167,32],[185,32,167,34],[185,35,167,37],[185,36,167,38],[185,37,167,39,"replace"],[185,44,167,46],[185,45,167,47],[185,51,167,53],[185,53,167,55],[185,56,167,58],[185,57,167,59],[186,4,168,4],[187,4,169,4],[187,11,169,11,"str"],[187,14,169,14],[188,2,170,0],[189,0,170,1],[189,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","ownKeys","validatePathConfig","fixCurrentParams","Object.entries.flatMap$argument_0","appendQueryAndHash","appendBaseUrl","getPathWithConventionsCollapsed","segments.map$argument_0","segments.map.map$argument_0","getParamName","isDynamicPart","segmentMatchesConvention","encodeURISegment","String.replace$argument_1"],"mappings":"AAA;0ECC;sCCI,2BD;CDG,KC;CDG;gFCC;CDE,IC;CDE;mDCC;kBEC;gDFC;SEI;KFE;CDQ;AIY;CJE;AKC;kFCE;KDc;CLI;AOC;CPS;AQC;CRO;ASC;aCG;KD0D;aEC,cF;CTE;qBYC,4DZ;AaE;CbE;AcC;CdE;AeC;iECG,kCD;CfM"},"hasCjsExports":true},"type":"js/module"}]}