{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"metro-runtime/src/modules/HMRClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":389},"end":{"line":11,"column":65,"index":454}}],"key":"+RxcUzp4ciHymeUULASNlv4i8Rk=","exportNames":["*"]}},{"name":"pretty-format","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":455},"end":{"line":12,"column":54,"index":509}}],"key":"aXyG2GzrqNhJvIb2xvve/rJFBZA=","exportNames":["*"]}},{"name":"./LoadingView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":511},"end":{"line":14,"column":40,"index":551}}],"key":"s9s4ribtctXRQH+3J26+63eGaRs=","exportNames":["*"]}},{"name":"./error-overlay/LogBox","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":552},"end":{"line":15,"column":44,"index":596}}],"key":"u1FnUfQ9dRX5CoqYWf/6NpeP41c=","exportNames":["*"]}},{"name":"./getDevServer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":597},"end":{"line":16,"column":42,"index":639}}],"key":"WKfBgnKYQ+362ADqmV6Rh2L8YC4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _HMRClient = _interopRequireDefault(require(_dependencyMap[1], \"metro-runtime/src/modules/HMRClient\"));\n  var _prettyFormat = _interopRequireWildcard(require(_dependencyMap[2], \"pretty-format\"));\n  var _LoadingView = _interopRequireDefault(require(_dependencyMap[3], \"./LoadingView\"));\n  var _LogBox = _interopRequireDefault(require(_dependencyMap[4], \"./error-overlay/LogBox\"));\n  var _getDevServer = _interopRequireDefault(require(_dependencyMap[5], \"./getDevServer\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * Based on this but with web support:\n   * https://github.com/facebook/react-native/blob/086714b02b0fb838dee5a66c5bcefe73b53cf3df/Libraries/Utilities/HMRClient.js\n   */\n\n  const pendingEntryPoints = [];\n\n  // @ts-expect-error: Account for multiple versions of pretty-format inside of a monorepo.\n  const prettyFormatFunc = typeof _prettyFormat.default === 'function' ? _prettyFormat.default : _prettyFormat.default.default;\n  let hmrClient = null;\n  let hmrUnavailableReason = null;\n  let currentCompileErrorMessage = null;\n  let didConnect = false;\n  const pendingLogs = [];\n  function assert(foo, msg) {\n    if (!foo) throw new Error(msg);\n  }\n\n  /**\n   * HMR Client that receives from the server HMR updates and propagates them\n   * runtime to reflects those changes.\n   */\n  const HMRClient = {\n    enable() {\n      if (hmrUnavailableReason !== null) {\n        // If HMR became unavailable while you weren't using it,\n        // explain why when you try to turn it on.\n        // This is an error (and not a warning) because it is shown\n        // in response to a direct user action.\n        throw new Error(hmrUnavailableReason);\n      }\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      // We use this for internal logging only.\n      // It doesn't affect the logic.\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n\n      // When toggling Fast Refresh on, we might already have some stashed updates.\n      // Since they'll get applied now, we'll show a banner.\n      const hasUpdates = hmrClient.hasPendingUpdates();\n      if (hasUpdates) {\n        _LoadingView.default.showMessage('Refreshing...', 'refresh');\n      }\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          _LoadingView.default.hide();\n        }\n      }\n\n      // There could be a compile error while Fast Refresh was off,\n      // but we ignored it at the time. Show it now.\n      showCompileError();\n    },\n    disable() {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      hmrClient.disable();\n    },\n    registerBundle(requestUrl) {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log(level, data) {\n      if (!hmrClient) {\n        // Catch a reasonable number of early logs\n        // in case hmrClient gets initialized later.\n        pendingLogs.push([level, data]);\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n        return;\n      }\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level,\n          platform: 'web',\n          mode: 'BRIDGE',\n          data: data.map(item => typeof item === 'string' ? item : prettyFormatFunc(item, {\n            escapeString: true,\n            highlight: true,\n            maxDepth: 3,\n            min: true,\n            plugins: [_prettyFormat.plugins.ReactElement]\n          }))\n        }));\n      } catch {\n        // If sending logs causes any failures we want to silently ignore them\n        // to ensure we do not cause infinite-logging loops.\n      }\n    },\n    // Called once by the bridge on startup, even if Fast Refresh is off.\n    // It creates the HMR client but doesn't actually set up the socket yet.\n    setup({\n      isEnabled\n    }) {\n      assert(!hmrClient, 'Cannot initialize hmrClient twice');\n      const serverScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n      const client = new _HMRClient.default(`${serverScheme}://${window.location.host}/hot`);\n      hmrClient = client;\n      const {\n        fullBundleUrl\n      } = (0, _getDevServer.default)();\n      pendingEntryPoints.push(\n      // HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl);\n      client.on('connection-error', e => {\n        let error = `Cannot connect to Metro.\n \n Try the following to fix the issue:\n - Ensure the Metro dev server is running and available on the same network as this device`;\n        error += `\n \n URL: ${window.location.host}\n \n Error: ${e.message}`;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', ({\n        isInitialUpdate\n      }) => {\n        currentCompileErrorMessage = null;\n        didConnect = true;\n        if (client.isEnabled() && !isInitialUpdate) {\n          _LoadingView.default.showMessage('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', ({\n        isInitialUpdate\n      }) => {\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          _LogBox.default.clearAllLogs();\n        }\n      });\n      client.on('update-done', () => {\n        _LoadingView.default.hide();\n      });\n      client.on('error', data => {\n        _LoadingView.default.hide();\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = `${data.type} ${data.message}`;\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', closeEvent => {\n        _LoadingView.default.hide();\n\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n        const isNormalOrUnsetCloseReason = closeEvent == null || closeEvent.code === 1000 || closeEvent.code === 1005 || closeEvent.code == null;\n        setHMRUnavailableReason(`${isNormalOrUnsetCloseReason ? 'Disconnected from Metro.' : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`}\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `);\n      });\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs();\n    }\n  };\n  function setHMRUnavailableReason(reason) {\n    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    if (hmrUnavailableReason !== null) {\n      // Don't show more than one warning.\n      return;\n    }\n    hmrUnavailableReason = reason;\n\n    // We only want to show a warning if Fast Refresh is on *and* if we ever\n    // previously managed to connect successfully. We don't want to show\n    // the warning to native engineers who use cached bundles without Metro.\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n      // (Not using the `warning` module to prevent a Buck cycle.)\n    }\n  }\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason != null) {\n      // \"Bundle Splitting – Metro disconnected\"\n      window.location.reload();\n      return;\n    }\n    if (pendingEntryPoints.length > 0) {\n      client?.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n  function flushEarlyLogs() {\n    try {\n      pendingLogs.forEach(([level, data]) => {\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n  function dismissRedbox() {\n    // TODO(EvanBacon): Error overlay for web.\n  }\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    // Even if there is already a redbox, syntax errors are more important.\n    // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n    dismissRedbox();\n    const message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n    const error = new Error(message);\n    // Symbolicating compile errors is wasted effort\n    // because the stack trace is meaningless:\n    // @ts-expect-error\n    error.preventSymbolication = true;\n    throw error;\n  }\n  var _default = exports.default = HMRClient;\n});","lineCount":260,"map":[[7,2,11,0],[7,6,11,0,"_HMRClient"],[7,16,11,0],[7,19,11,0,"_interopRequireDefault"],[7,41,11,0],[7,42,11,0,"require"],[7,49,11,0],[7,50,11,0,"_dependencyMap"],[7,64,11,0],[8,2,12,0],[8,6,12,0,"_prettyFormat"],[8,19,12,0],[8,22,12,0,"_interopRequireWildcard"],[8,45,12,0],[8,46,12,0,"require"],[8,53,12,0],[8,54,12,0,"_dependencyMap"],[8,68,12,0],[9,2,14,0],[9,6,14,0,"_LoadingView"],[9,18,14,0],[9,21,14,0,"_interopRequireDefault"],[9,43,14,0],[9,44,14,0,"require"],[9,51,14,0],[9,52,14,0,"_dependencyMap"],[9,66,14,0],[10,2,15,0],[10,6,15,0,"_LogBox"],[10,13,15,0],[10,16,15,0,"_interopRequireDefault"],[10,38,15,0],[10,39,15,0,"require"],[10,46,15,0],[10,47,15,0,"_dependencyMap"],[10,61,15,0],[11,2,16,0],[11,6,16,0,"_getDevServer"],[11,19,16,0],[11,22,16,0,"_interopRequireDefault"],[11,44,16,0],[11,45,16,0,"require"],[11,52,16,0],[11,53,16,0,"_dependencyMap"],[11,67,16,0],[12,2,16,42],[12,11,16,42,"_interopRequireWildcard"],[12,35,16,42,"e"],[12,36,16,42],[12,38,16,42,"t"],[12,39,16,42],[12,68,16,42,"WeakMap"],[12,75,16,42],[12,81,16,42,"r"],[12,82,16,42],[12,89,16,42,"WeakMap"],[12,96,16,42],[12,100,16,42,"n"],[12,101,16,42],[12,108,16,42,"WeakMap"],[12,115,16,42],[12,127,16,42,"_interopRequireWildcard"],[12,150,16,42],[12,162,16,42,"_interopRequireWildcard"],[12,163,16,42,"e"],[12,164,16,42],[12,166,16,42,"t"],[12,167,16,42],[12,176,16,42,"t"],[12,177,16,42],[12,181,16,42,"e"],[12,182,16,42],[12,186,16,42,"e"],[12,187,16,42],[12,188,16,42,"__esModule"],[12,198,16,42],[12,207,16,42,"e"],[12,208,16,42],[12,214,16,42,"o"],[12,215,16,42],[12,217,16,42,"i"],[12,218,16,42],[12,220,16,42,"f"],[12,221,16,42],[12,226,16,42,"__proto__"],[12,235,16,42],[12,243,16,42,"default"],[12,250,16,42],[12,252,16,42,"e"],[12,253,16,42],[12,270,16,42,"e"],[12,271,16,42],[12,294,16,42,"e"],[12,295,16,42],[12,320,16,42,"e"],[12,321,16,42],[12,330,16,42,"f"],[12,331,16,42],[12,337,16,42,"o"],[12,338,16,42],[12,341,16,42,"t"],[12,342,16,42],[12,345,16,42,"n"],[12,346,16,42],[12,349,16,42,"r"],[12,350,16,42],[12,358,16,42,"o"],[12,359,16,42],[12,360,16,42,"has"],[12,363,16,42],[12,364,16,42,"e"],[12,365,16,42],[12,375,16,42,"o"],[12,376,16,42],[12,377,16,42,"get"],[12,380,16,42],[12,381,16,42,"e"],[12,382,16,42],[12,385,16,42,"o"],[12,386,16,42],[12,387,16,42,"set"],[12,390,16,42],[12,391,16,42,"e"],[12,392,16,42],[12,394,16,42,"f"],[12,395,16,42],[12,411,16,42,"t"],[12,412,16,42],[12,416,16,42,"e"],[12,417,16,42],[12,433,16,42,"t"],[12,434,16,42],[12,441,16,42,"hasOwnProperty"],[12,455,16,42],[12,456,16,42,"call"],[12,460,16,42],[12,461,16,42,"e"],[12,462,16,42],[12,464,16,42,"t"],[12,465,16,42],[12,472,16,42,"i"],[12,473,16,42],[12,477,16,42,"o"],[12,478,16,42],[12,481,16,42,"Object"],[12,487,16,42],[12,488,16,42,"defineProperty"],[12,502,16,42],[12,507,16,42,"Object"],[12,513,16,42],[12,514,16,42,"getOwnPropertyDescriptor"],[12,538,16,42],[12,539,16,42,"e"],[12,540,16,42],[12,542,16,42,"t"],[12,543,16,42],[12,550,16,42,"i"],[12,551,16,42],[12,552,16,42,"get"],[12,555,16,42],[12,559,16,42,"i"],[12,560,16,42],[12,561,16,42,"set"],[12,564,16,42],[12,568,16,42,"o"],[12,569,16,42],[12,570,16,42,"f"],[12,571,16,42],[12,573,16,42,"t"],[12,574,16,42],[12,576,16,42,"i"],[12,577,16,42],[12,581,16,42,"f"],[12,582,16,42],[12,583,16,42,"t"],[12,584,16,42],[12,588,16,42,"e"],[12,589,16,42],[12,590,16,42,"t"],[12,591,16,42],[12,602,16,42,"f"],[12,603,16,42],[12,608,16,42,"e"],[12,609,16,42],[12,611,16,42,"t"],[12,612,16,42],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[24,2,18,0],[24,8,18,6,"pendingEntryPoints"],[24,26,18,34],[24,29,18,37],[24,31,18,39],[26,2,20,0],[27,2,21,0],[27,8,21,6,"prettyFormatFunc"],[27,24,21,22],[27,27,21,25],[27,34,21,32,"prettyFormat"],[27,55,21,44],[27,60,21,49],[27,70,21,59],[27,73,21,62,"prettyFormat"],[27,94,21,74],[27,97,21,77,"prettyFormat"],[27,118,21,89],[27,119,21,90,"default"],[27,126,21,97],[28,2,31,0],[28,6,31,4,"hmrClient"],[28,15,31,35],[28,18,31,38],[28,22,31,42],[29,2,32,0],[29,6,32,4,"hmrUnavailableReason"],[29,26,32,39],[29,29,32,42],[29,33,32,46],[30,2,33,0],[30,6,33,4,"currentCompileErrorMessage"],[30,32,33,45],[30,35,33,48],[30,39,33,52],[31,2,34,0],[31,6,34,4,"didConnect"],[31,16,34,23],[31,19,34,26],[31,24,34,31],[32,2,35,0],[32,8,35,6,"pendingLogs"],[32,19,35,38],[32,22,35,41],[32,24,35,43],[33,2,56,0],[33,11,56,9,"assert"],[33,17,56,15,"assert"],[33,18,56,16,"foo"],[33,21,56,24],[33,23,56,26,"msg"],[33,26,56,37],[33,28,56,52],[34,4,57,2],[34,8,57,6],[34,9,57,7,"foo"],[34,12,57,10],[34,14,57,12],[34,20,57,18],[34,24,57,22,"Error"],[34,29,57,27],[34,30,57,28,"msg"],[34,33,57,31],[34,34,57,32],[35,2,58,0],[37,2,60,0],[38,0,61,0],[39,0,62,0],[40,0,63,0],[41,2,64,0],[41,8,64,6,"HMRClient"],[41,17,64,41],[41,20,64,44],[42,4,65,2,"enable"],[42,10,65,8,"enable"],[42,11,65,8],[42,13,65,11],[43,6,66,4],[43,10,66,8,"hmrUnavailableReason"],[43,30,66,28],[43,35,66,33],[43,39,66,37],[43,41,66,39],[44,8,67,6],[45,8,68,6],[46,8,69,6],[47,8,70,6],[48,8,71,6],[48,14,71,12],[48,18,71,16,"Error"],[48,23,71,21],[48,24,71,22,"hmrUnavailableReason"],[48,44,71,42],[48,45,71,43],[49,6,72,4],[50,6,74,4,"assert"],[50,12,74,10],[50,13,74,11,"hmrClient"],[50,22,74,20],[50,24,74,22],[50,69,74,67],[50,70,74,68],[52,6,76,4],[53,6,77,4],[54,6,78,4,"hmrClient"],[54,15,78,13],[54,16,78,14,"send"],[54,20,78,18],[54,21,78,19,"JSON"],[54,25,78,23],[54,26,78,24,"stringify"],[54,35,78,33],[54,36,78,34],[55,8,78,36,"type"],[55,12,78,40],[55,14,78,42],[56,6,78,55],[56,7,78,56],[56,8,78,57],[56,9,78,58],[58,6,80,4],[59,6,81,4],[60,6,82,4],[60,12,82,10,"hasUpdates"],[60,22,82,20],[60,25,82,23,"hmrClient"],[60,34,82,32],[60,35,82,34,"hasPendingUpdates"],[60,52,82,51],[60,53,82,52],[60,54,82,53],[61,6,84,4],[61,10,84,8,"hasUpdates"],[61,20,84,18],[61,22,84,20],[62,8,85,6,"LoadingView"],[62,28,85,17],[62,29,85,18,"showMessage"],[62,40,85,29],[62,41,85,30],[62,56,85,45],[62,58,85,47],[62,67,85,56],[62,68,85,57],[63,6,86,4],[64,6,87,4],[64,10,87,8],[65,8,88,6,"hmrClient"],[65,17,88,15],[65,18,88,16,"enable"],[65,24,88,22],[65,25,88,23],[65,26,88,24],[66,6,89,4],[66,7,89,5],[66,16,89,14],[67,8,90,6],[67,12,90,10,"hasUpdates"],[67,22,90,20],[67,24,90,22],[68,10,91,8,"LoadingView"],[68,30,91,19],[68,31,91,20,"hide"],[68,35,91,24],[68,36,91,25],[68,37,91,26],[69,8,92,6],[70,6,93,4],[72,6,95,4],[73,6,96,4],[74,6,97,4,"showCompileError"],[74,22,97,20],[74,23,97,21],[74,24,97,22],[75,4,98,2],[75,5,98,3],[76,4,100,2,"disable"],[76,11,100,9,"disable"],[76,12,100,9],[76,14,100,12],[77,6,101,4,"assert"],[77,12,101,10],[77,13,101,11,"hmrClient"],[77,22,101,20],[77,24,101,22],[77,69,101,67],[77,70,101,68],[78,6,102,4,"hmrClient"],[78,15,102,13],[78,16,102,14,"disable"],[78,23,102,21],[78,24,102,22],[78,25,102,23],[79,4,103,2],[79,5,103,3],[80,4,105,2,"registerBundle"],[80,18,105,16,"registerBundle"],[80,19,105,17,"requestUrl"],[80,29,105,35],[80,31,105,37],[81,6,106,4,"assert"],[81,12,106,10],[81,13,106,11,"hmrClient"],[81,22,106,20],[81,24,106,22],[81,69,106,67],[81,70,106,68],[82,6,107,4,"pendingEntryPoints"],[82,24,107,22],[82,25,107,23,"push"],[82,29,107,27],[82,30,107,28,"requestUrl"],[82,40,107,38],[82,41,107,39],[83,6,108,4,"registerBundleEntryPoints"],[83,31,108,29],[83,32,108,30,"hmrClient"],[83,41,108,39],[83,42,108,40],[84,4,109,2],[84,5,109,3],[85,4,111,2,"log"],[85,7,111,5,"log"],[85,8,111,6,"level"],[85,13,111,21],[85,15,111,23,"data"],[85,19,111,34],[85,21,111,36],[86,6,112,4],[86,10,112,8],[86,11,112,9,"hmrClient"],[86,20,112,18],[86,22,112,20],[87,8,113,6],[88,8,114,6],[89,8,115,6,"pendingLogs"],[89,19,115,17],[89,20,115,18,"push"],[89,24,115,22],[89,25,115,23],[89,26,115,24,"level"],[89,31,115,29],[89,33,115,31,"data"],[89,37,115,35],[89,38,115,36],[89,39,115,37],[90,8,116,6],[90,12,116,10,"pendingLogs"],[90,23,116,21],[90,24,116,22,"length"],[90,30,116,28],[90,33,116,31],[90,36,116,34],[90,38,116,36],[91,10,117,8,"pendingLogs"],[91,21,117,19],[91,22,117,20,"shift"],[91,27,117,25],[91,28,117,26],[91,29,117,27],[92,8,118,6],[93,8,119,6],[94,6,120,4],[95,6,121,4],[95,10,121,8],[96,8,122,6,"hmrClient"],[96,17,122,15],[96,18,122,16,"send"],[96,22,122,20],[96,23,123,8,"JSON"],[96,27,123,12],[96,28,123,13,"stringify"],[96,37,123,22],[96,38,123,23],[97,10,124,10,"type"],[97,14,124,14],[97,16,124,16],[97,21,124,21],[98,10,125,10,"level"],[98,15,125,15],[99,10,126,10,"platform"],[99,18,126,18],[99,20,126,20],[99,25,126,25],[100,10,127,10,"mode"],[100,14,127,14],[100,16,127,16],[100,24,127,24],[101,10,128,10,"data"],[101,14,128,14],[101,16,128,16,"data"],[101,20,128,20],[101,21,128,21,"map"],[101,24,128,24],[101,25,128,26,"item"],[101,29,128,30],[101,33,129,12],[101,40,129,19,"item"],[101,44,129,23],[101,49,129,28],[101,57,129,36],[101,60,130,16,"item"],[101,64,130,20],[101,67,131,16,"prettyFormatFunc"],[101,83,131,32],[101,84,131,33,"item"],[101,88,131,37],[101,90,131,39],[102,12,132,18,"escapeString"],[102,24,132,30],[102,26,132,32],[102,30,132,36],[103,12,133,18,"highlight"],[103,21,133,27],[103,23,133,29],[103,27,133,33],[104,12,134,18,"maxDepth"],[104,20,134,26],[104,22,134,28],[104,23,134,29],[105,12,135,18,"min"],[105,15,135,21],[105,17,135,23],[105,21,135,27],[106,12,136,18,"plugins"],[106,19,136,25],[106,21,136,27],[106,22,136,28,"plugins"],[106,43,136,35],[106,44,136,36,"ReactElement"],[106,56,136,48],[107,10,137,16],[107,11,137,17],[107,12,138,10],[108,8,139,8],[108,9,139,9],[108,10,140,6],[108,11,140,7],[109,6,141,4],[109,7,141,5],[109,8,141,6],[109,14,141,12],[110,8,142,6],[111,8,143,6],[112,6,143,6],[113,4,145,2],[113,5,145,3],[114,4,147,2],[115,4,148,2],[116,4,149,2,"setup"],[116,9,149,7,"setup"],[116,10,149,8],[117,6,149,10,"isEnabled"],[118,4,149,44],[118,5,149,45],[118,7,149,47],[119,6,150,4,"assert"],[119,12,150,10],[119,13,150,11],[119,14,150,12,"hmrClient"],[119,23,150,21],[119,25,150,23],[119,60,150,58],[119,61,150,59],[120,6,152,4],[120,12,152,10,"serverScheme"],[120,24,152,22],[120,27,152,25,"window"],[120,33,152,31],[120,34,152,32,"location"],[120,42,152,40],[120,43,152,41,"protocol"],[120,51,152,49],[120,56,152,54],[120,64,152,62],[120,67,152,65],[120,72,152,70],[120,75,152,73],[120,79,152,77],[121,6,153,4],[121,12,153,10,"client"],[121,18,153,16],[121,21,153,19],[121,25,153,23,"MetroHMRClient"],[121,43,153,37],[121,44,153,38],[121,47,153,41,"serverScheme"],[121,59,153,53],[121,65,153,59,"window"],[121,71,153,65],[121,72,153,66,"location"],[121,80,153,74],[121,81,153,75,"host"],[121,85,153,79],[121,91,153,85],[121,92,153,86],[122,6,154,4,"hmrClient"],[122,15,154,13],[122,18,154,16,"client"],[122,24,154,22],[123,6,156,4],[123,12,156,10],[124,8,156,12,"fullBundleUrl"],[125,6,156,26],[125,7,156,27],[125,10,156,30],[125,14,156,30,"getDevServer"],[125,35,156,42],[125,37,156,43],[125,38,156,44],[126,6,157,4,"pendingEntryPoints"],[126,24,157,22],[126,25,157,23,"push"],[126,29,157,27],[127,6,158,6],[128,6,159,6],[129,6,160,6],[130,6,161,6,"fullBundleUrl"],[130,19,162,4],[130,20,162,5],[131,6,164,4,"client"],[131,12,164,10],[131,13,164,11,"on"],[131,15,164,13],[131,16,164,14],[131,34,164,32],[131,36,164,35,"e"],[131,37,164,43],[131,41,164,48],[132,8,165,6],[132,12,165,10,"error"],[132,17,165,15],[132,20,165,18],[133,0,166,0],[134,0,167,0],[135,0,168,0],[135,91,168,91],[136,8,169,6,"error"],[136,13,169,11],[136,17,169,15],[137,0,170,0],[138,0,171,0],[138,8,171,8,"window"],[138,14,171,14],[138,15,171,15,"location"],[138,23,171,23],[138,24,171,24,"host"],[138,28,171,28],[139,0,172,0],[140,0,173,0],[140,10,173,10,"e"],[140,11,173,11],[140,12,173,12,"message"],[140,19,173,19],[140,21,173,21],[141,8,175,6,"setHMRUnavailableReason"],[141,31,175,29],[141,32,175,30,"error"],[141,37,175,35],[141,38,175,36],[142,6,176,4],[142,7,176,5],[142,8,176,6],[143,6,178,4,"client"],[143,12,178,10],[143,13,178,11,"on"],[143,15,178,13],[143,16,178,14],[143,30,178,28],[143,32,178,30],[143,33,178,31],[144,8,178,33,"isInitialUpdate"],[145,6,178,80],[145,7,178,81],[145,12,178,86],[146,8,179,6,"currentCompileErrorMessage"],[146,34,179,32],[146,37,179,35],[146,41,179,39],[147,8,180,6,"didConnect"],[147,18,180,16],[147,21,180,19],[147,25,180,23],[148,8,182,6],[148,12,182,10,"client"],[148,18,182,16],[148,19,182,17,"isEnabled"],[148,28,182,26],[148,29,182,27],[148,30,182,28],[148,34,182,32],[148,35,182,33,"isInitialUpdate"],[148,50,182,48],[148,52,182,50],[149,10,183,8,"LoadingView"],[149,30,183,19],[149,31,183,20,"showMessage"],[149,42,183,31],[149,43,183,32],[149,58,183,47],[149,60,183,49],[149,69,183,58],[149,70,183,59],[150,8,184,6],[151,6,185,4],[151,7,185,5],[151,8,185,6],[152,6,187,4,"client"],[152,12,187,10],[152,13,187,11,"on"],[152,15,187,13],[152,16,187,14],[152,24,187,22],[152,26,187,24],[152,27,187,25],[153,8,187,27,"isInitialUpdate"],[154,6,187,74],[154,7,187,75],[154,12,187,80],[155,8,188,6],[155,12,188,10,"client"],[155,18,188,16],[155,19,188,17,"isEnabled"],[155,28,188,26],[155,29,188,27],[155,30,188,28],[155,34,188,32],[155,35,188,33,"isInitialUpdate"],[155,50,188,48],[155,52,188,50],[156,10,189,8,"dismissRedbox"],[156,23,189,21],[156,24,189,22],[156,25,189,23],[157,10,190,8,"LogBox"],[157,25,190,14],[157,26,190,15,"clearAllLogs"],[157,38,190,27],[157,39,190,28],[157,40,190,29],[158,8,191,6],[159,6,192,4],[159,7,192,5],[159,8,192,6],[160,6,194,4,"client"],[160,12,194,10],[160,13,194,11,"on"],[160,15,194,13],[160,16,194,14],[160,29,194,27],[160,31,194,29],[160,37,194,35],[161,8,195,6,"LoadingView"],[161,28,195,17],[161,29,195,18,"hide"],[161,33,195,22],[161,34,195,23],[161,35,195,24],[162,6,196,4],[162,7,196,5],[162,8,196,6],[163,6,198,4,"client"],[163,12,198,10],[163,13,198,11,"on"],[163,15,198,13],[163,16,198,14],[163,23,198,21],[163,25,198,24,"data"],[163,29,198,63],[163,33,198,68],[164,8,199,6,"LoadingView"],[164,28,199,17],[164,29,199,18,"hide"],[164,33,199,22],[164,34,199,23],[164,35,199,24],[165,8,201,6],[165,12,201,10,"data"],[165,16,201,14],[165,17,201,15,"type"],[165,21,201,19],[165,26,201,24],[165,46,201,44],[165,48,201,46],[166,10,202,8,"client"],[166,16,202,14],[166,17,202,15,"close"],[166,22,202,20],[166,23,202,21],[166,24,202,22],[167,10,203,8,"setHMRUnavailableReason"],[167,33,203,31],[167,34,203,32],[167,97,203,95],[167,98,203,96],[168,8,204,6],[168,9,204,7],[168,15,204,13],[168,19,204,17,"data"],[168,23,204,21],[168,24,204,22,"type"],[168,28,204,26],[168,33,204,31],[168,56,204,54],[168,58,204,56],[169,10,205,8,"client"],[169,16,205,14],[169,17,205,15,"close"],[169,22,205,20],[169,23,205,21],[169,24,205,22],[170,10,206,8,"setHMRUnavailableReason"],[170,33,206,31],[170,34,206,32],[170,94,206,92],[170,95,206,93],[171,8,207,6],[171,9,207,7],[171,15,207,13],[172,10,208,8,"currentCompileErrorMessage"],[172,36,208,34],[172,39,208,37],[172,42,208,40,"data"],[172,46,208,44],[172,47,208,45,"type"],[172,51,208,49],[172,55,208,53,"data"],[172,59,208,57],[172,60,208,58,"message"],[172,67,208,65],[172,69,208,67],[173,10,209,8],[173,14,209,12,"client"],[173,20,209,18],[173,21,209,19,"isEnabled"],[173,30,209,28],[173,31,209,29],[173,32,209,30],[173,34,209,32],[174,12,210,10,"showCompileError"],[174,28,210,26],[174,29,210,27],[174,30,210,28],[175,10,211,8],[176,8,212,6],[177,6,213,4],[177,7,213,5],[177,8,213,6],[178,6,215,4,"client"],[178,12,215,10],[178,13,215,11,"on"],[178,15,215,13],[178,16,215,14],[178,23,215,21],[178,25,215,24,"closeEvent"],[178,35,215,68],[178,39,215,73],[179,8,216,6,"LoadingView"],[179,28,216,17],[179,29,216,18,"hide"],[179,33,216,22],[179,34,216,23],[179,35,216,24],[181,8,218,6],[182,8,219,6],[183,8,220,6],[183,14,220,12,"isNormalOrUnsetCloseReason"],[183,40,220,38],[183,43,221,8,"closeEvent"],[183,53,221,18],[183,57,221,22],[183,61,221,26],[183,65,222,8,"closeEvent"],[183,75,222,18],[183,76,222,19,"code"],[183,80,222,23],[183,85,222,28],[183,89,222,32],[183,93,223,8,"closeEvent"],[183,103,223,18],[183,104,223,19,"code"],[183,108,223,23],[183,113,223,28],[183,117,223,32],[183,121,224,8,"closeEvent"],[183,131,224,18],[183,132,224,19,"code"],[183,136,224,23],[183,140,224,27],[183,144,224,31],[184,8,226,6,"setHMRUnavailableReason"],[184,31,226,29],[184,32,227,8],[184,35,228,10,"isNormalOrUnsetCloseReason"],[184,61,228,36],[184,64,229,14],[184,90,229,40],[184,93,230,14],[184,121,230,42,"closeEvent"],[184,131,230,52],[184,132,230,53,"code"],[184,136,230,57],[184,142,230,63,"closeEvent"],[184,152,230,73],[184,153,230,74,"reason"],[184,159,230,80],[184,164,230,85],[185,0,231,0],[186,0,232,0],[187,0,233,0],[188,0,234,0],[189,0,235,0],[189,7,237,6],[189,8,237,7],[190,6,238,4],[190,7,238,5],[190,8,238,6],[191,6,240,4],[191,10,240,8,"isEnabled"],[191,19,240,17],[191,21,240,19],[192,8,241,6,"HMRClient"],[192,17,241,15],[192,18,241,16,"enable"],[192,24,241,22],[192,25,241,23],[192,26,241,24],[193,6,242,4],[193,7,242,5],[193,13,242,11],[194,8,243,6,"HMRClient"],[194,17,243,15],[194,18,243,16,"disable"],[194,25,243,23],[194,26,243,24],[194,27,243,25],[195,6,244,4],[196,6,246,4,"registerBundleEntryPoints"],[196,31,246,29],[196,32,246,30,"hmrClient"],[196,41,246,39],[196,42,246,40],[197,6,247,4,"flushEarlyLogs"],[197,20,247,18],[197,21,247,19],[197,22,247,20],[198,4,248,2],[199,2,249,0],[199,3,249,1],[200,2,251,0],[200,11,251,9,"setHMRUnavailableReason"],[200,34,251,32,"setHMRUnavailableReason"],[200,35,251,33,"reason"],[200,41,251,47],[200,43,251,49],[201,4,252,2,"assert"],[201,10,252,8],[201,11,252,9,"hmrClient"],[201,20,252,18],[201,22,252,20],[201,67,252,65],[201,68,252,66],[202,4,253,2],[202,8,253,6,"hmrUnavailableReason"],[202,28,253,26],[202,33,253,31],[202,37,253,35],[202,39,253,37],[203,6,254,4],[204,6,255,4],[205,4,256,2],[206,4,257,2,"hmrUnavailableReason"],[206,24,257,22],[206,27,257,25,"reason"],[206,33,257,31],[208,4,259,2],[209,4,260,2],[210,4,261,2],[211,4,262,2],[211,8,262,6,"hmrClient"],[211,17,262,15],[211,18,262,16,"isEnabled"],[211,27,262,25],[211,28,262,26],[211,29,262,27],[211,33,262,31,"didConnect"],[211,43,262,41],[211,45,262,43],[212,6,263,4,"console"],[212,13,263,11],[212,14,263,12,"warn"],[212,18,263,16],[212,19,263,17,"reason"],[212,25,263,23],[212,26,263,24],[213,6,264,4],[214,4,265,2],[215,2,266,0],[216,2,268,0],[216,11,268,9,"registerBundleEntryPoints"],[216,36,268,34,"registerBundleEntryPoints"],[216,37,268,35,"client"],[216,43,268,63],[216,45,268,65],[217,4,269,2],[217,8,269,6,"hmrUnavailableReason"],[217,28,269,26],[217,32,269,30],[217,36,269,34],[217,38,269,36],[218,6,270,4],[219,6,271,4,"window"],[219,12,271,10],[219,13,271,11,"location"],[219,21,271,19],[219,22,271,20,"reload"],[219,28,271,26],[219,29,271,27],[219,30,271,28],[220,6,272,4],[221,4,273,2],[222,4,275,2],[222,8,275,6,"pendingEntryPoints"],[222,26,275,24],[222,27,275,25,"length"],[222,33,275,31],[222,36,275,34],[222,37,275,35],[222,39,275,37],[223,6,276,4,"client"],[223,12,276,10],[223,14,276,12,"send"],[223,18,276,16],[223,19,277,6,"JSON"],[223,23,277,10],[223,24,277,11,"stringify"],[223,33,277,20],[223,34,277,21],[224,8,278,8,"type"],[224,12,278,12],[224,14,278,14],[224,36,278,36],[225,8,279,8,"entryPoints"],[225,19,279,19],[225,21,279,21,"pendingEntryPoints"],[226,6,280,6],[226,7,280,7],[226,8,281,4],[226,9,281,5],[227,6,282,4,"pendingEntryPoints"],[227,24,282,22],[227,25,282,23,"length"],[227,31,282,29],[227,34,282,32],[227,35,282,33],[228,4,283,2],[229,2,284,0],[230,2,286,0],[230,11,286,9,"flushEarlyLogs"],[230,25,286,23,"flushEarlyLogs"],[230,26,286,23],[230,28,286,26],[231,4,287,2],[231,8,287,6],[232,6,288,4,"pendingLogs"],[232,17,288,15],[232,18,288,16,"forEach"],[232,25,288,23],[232,26,288,24],[232,27,288,25],[232,28,288,26,"level"],[232,33,288,31],[232,35,288,33,"data"],[232,39,288,37],[232,40,288,38],[232,45,288,43],[233,8,289,6,"HMRClient"],[233,17,289,15],[233,18,289,16,"log"],[233,21,289,19],[233,22,289,20,"level"],[233,27,289,25],[233,29,289,27,"data"],[233,33,289,31],[233,34,289,32],[234,6,290,4],[234,7,290,5],[234,8,290,6],[235,4,291,2],[235,5,291,3],[235,14,291,12],[236,6,292,4,"pendingLogs"],[236,17,292,15],[236,18,292,16,"length"],[236,24,292,22],[236,27,292,25],[236,28,292,26],[237,4,293,2],[238,2,294,0],[239,2,296,0],[239,11,296,9,"dismissRedbox"],[239,24,296,22,"dismissRedbox"],[239,25,296,22],[239,27,296,25],[240,4,297,2],[241,2,297,2],[242,2,300,0],[242,11,300,9,"showCompileError"],[242,27,300,25,"showCompileError"],[242,28,300,25],[242,30,300,28],[243,4,301,2],[243,8,301,6,"currentCompileErrorMessage"],[243,34,301,32],[243,39,301,37],[243,43,301,41],[243,45,301,43],[244,6,302,4],[245,4,303,2],[247,4,305,2],[248,4,306,2],[249,4,307,2,"dismissRedbox"],[249,17,307,15],[249,18,307,16],[249,19,307,17],[250,4,309,2],[250,10,309,8,"message"],[250,17,309,15],[250,20,309,18,"currentCompileErrorMessage"],[250,46,309,44],[251,4,310,2,"currentCompileErrorMessage"],[251,30,310,28],[251,33,310,31],[251,37,310,35],[252,4,312,2],[252,10,312,8,"error"],[252,15,312,13],[252,18,312,16],[252,22,312,20,"Error"],[252,27,312,25],[252,28,312,26,"message"],[252,35,312,33],[252,36,312,34],[253,4,313,2],[254,4,314,2],[255,4,315,2],[256,4,316,2,"error"],[256,9,316,7],[256,10,316,8,"preventSymbolication"],[256,30,316,28],[256,33,316,31],[256,37,316,35],[257,4,317,2],[257,10,317,8,"error"],[257,15,317,13],[258,2,318,0],[259,2,318,1],[259,6,318,1,"_default"],[259,14,318,1],[259,17,318,1,"exports"],[259,24,318,1],[259,25,318,1,"default"],[259,32,318,1],[259,35,320,15,"HMRClient"],[259,44,320,24],[260,0,320,24],[260,3]],"functionMap":{"names":["<global>","assert","enable","disable","registerBundle","log","data.map$argument_0","setup","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;ACuD;CDE;EEO;GFiC;EGE;GHG;EIE;GJI;EKE;yBCiB;kBDS;GLQ;EOI;kCCe;KDY;8BCE;KDO;wBCE;KDK;6BCE;KDE;uBCE;KDe;uBCE;KDuB;GPU;ASG;CTe;AUE;CVgB;AWE;wBCE;KDE;CXI;AaE;CbE;AcE;CdkB"}},"type":"js/module"}]}