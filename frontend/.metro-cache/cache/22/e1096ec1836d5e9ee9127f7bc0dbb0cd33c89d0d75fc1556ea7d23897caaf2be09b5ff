{"dependencies":[{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":173},"end":{"line":7,"column":44,"index":217}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"]}},{"name":"./fetchAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":218},"end":{"line":8,"column":42,"index":260}}],"key":"GJrX1EMy+DxI7FSLX0wJbybQg2o=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){Object.defineProperty(e,\"__esModule\",{value:!0}),e.fetchThenEvalAsync=fetchThenEvalAsync;var _errors=r(d[0]),_fetchAsync=r(d[1]);function fetchThenEvalAsync(url){return(0,_fetchAsync.fetchAsync)(url).then(({body:body,status:status,headers:headers})=>{if(null!=headers?.has?.('Content-Type')&&headers.get('Content-Type').includes('application/json'))throw new Error(JSON.parse(body).message||`Unknown error fetching '${url}'`);if(200===status)return eval(body);throw new Error(`Failed to load split bundle from URL: ${url}\\n${body}`)})}});","lineCount":1,"map":[[1,117,7,0],[1,121,7,0,"_errors"],[1,129,7,0,"r"],[1,131,7,0,"d"],[1,133,7,0],[1,137,8,0,"_fetchAsync"],[1,149,8,0,"r"],[1,151,8,0,"d"],[1,153,8,0],[1,157,14,7],[1,166,14,16,"fetchThenEvalAsync"],[1,185,14,35,"url"],[1,190,15,2],[1,197,15,9],[1,199,15,9,"fetchAsync"],[1,223,15,20,"url"],[1,228,15,25,"then"],[1,233,15,30],[1,235,15,33,"body"],[1,245,15,39,"status"],[1,259,15,47,"headers"],[1,279,16,4],[1,282,17,40],[1,288,17,6,"headers"],[1,297,17,15,"has"],[1,303,17,21],[1,320,18,6,"headers"],[1,328,18,14,"get"],[1,332,18,18],[1,348,18,35,"includes"],[1,357,18,44],[1,377,21,6],[1,383,21,12],[1,387,21,16,"Error"],[1,393,21,22,"JSON"],[1,398,21,27,"parse"],[1,404,21,33,"body"],[1,410,21,39,"message"],[1,419,21,50],[1,446,21,77,"url"],[1,454,24,4],[1,457,24,19],[1,463,24,8,"status"],[1,470,26,6],[1,477,26,13,"eval"],[1,482,26,18,"body"],[1,488,40,6],[1,494,40,12],[1,498,40,16,"Error"],[1,504,40,22],[1,545,40,63,"url"],[1,553,40,71,"body"],[1,562,43,0],[1,563,43,1],[1,566]],"functionMap":{"names":["<global>","fetchThenEvalAsync","fetchAsync.then$argument_0","jsonParseOptional"],"mappings":"AAA;OCa;8BCC;GD2B;CDC;AGE;CHM"}},"type":"js/module"}]}