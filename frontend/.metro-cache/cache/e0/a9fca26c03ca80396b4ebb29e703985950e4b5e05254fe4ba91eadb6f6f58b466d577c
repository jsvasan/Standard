{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":225},"end":{"line":13,"column":65,"index":290}}],"key":"SfRhzMj3Ex6qA89WTFEUm9Lj49A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _objectSpread2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread2\"));\n  class Info {\n    constructor() {\n      this.any_blank_count = 0;\n      this.any_blank_ms = 0;\n      this.any_blank_speed_sum = 0;\n      this.mostly_blank_count = 0;\n      this.mostly_blank_ms = 0;\n      this.pixels_blank = 0;\n      this.pixels_sampled = 0;\n      this.pixels_scrolled = 0;\n      this.total_time_spent = 0;\n      this.sample_count = 0;\n    }\n  }\n  var DEBUG = false;\n  var _listeners = [];\n  var _minSampleCount = 10;\n  var _sampleRate = DEBUG ? 1 : null;\n\n  /**\n   * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n   * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n   * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n   *\n   * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n   * `SceneTracker.getActiveScene` to determine the context of the events.\n   */\n  class FillRateHelper {\n    static addListener(callback) {\n      if (_sampleRate === null) {\n        console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');\n      }\n      _listeners.push(callback);\n      return {\n        remove: () => {\n          _listeners = _listeners.filter(listener => callback !== listener);\n        }\n      };\n    }\n    static setSampleRate(sampleRate) {\n      _sampleRate = sampleRate;\n    }\n    static setMinSampleCount(minSampleCount) {\n      _minSampleCount = minSampleCount;\n    }\n    constructor(getFrameMetrics) {\n      this._anyBlankStartTime = null;\n      this._enabled = false;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n      this._getFrameMetrics = getFrameMetrics;\n      this._enabled = (_sampleRate || 0) > Math.random();\n      this._resetData();\n    }\n    activate() {\n      if (this._enabled && this._samplesStartTime == null) {\n        DEBUG && console.debug('FillRateHelper: activate');\n        this._samplesStartTime = global.performance.now();\n      }\n    }\n    deactivateAndFlush() {\n      if (!this._enabled) {\n        return;\n      }\n      var start = this._samplesStartTime; // const for flow\n      if (start == null) {\n        DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n        return;\n      }\n      if (this._info.sample_count < _minSampleCount) {\n        // Don't bother with under-sampled events.\n        this._resetData();\n        return;\n      }\n      var total_time_spent = global.performance.now() - start;\n      var info = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this._info), {}, {\n        total_time_spent\n      });\n      if (DEBUG) {\n        var derived = {\n          avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n          avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n          avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n          any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n          any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n          mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n          mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n        };\n        for (var key in derived) {\n          // $FlowFixMe[prop-missing]\n          derived[key] = Math.round(1000 * derived[key]) / 1000;\n        }\n        console.debug('FillRateHelper deactivateAndFlush: ', {\n          derived,\n          info\n        });\n      }\n      _listeners.forEach(listener => listener(info));\n      this._resetData();\n    }\n    computeBlankness(props, cellsAroundViewport, scrollMetrics) {\n      if (!this._enabled || props.getItemCount(props.data) === 0 || cellsAroundViewport.last < cellsAroundViewport.first || this._samplesStartTime == null) {\n        return 0;\n      }\n      var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength;\n\n      // Denominator metrics that we track for all events - most of the time there is no blankness and\n      // we want to capture that.\n      this._info.sample_count++;\n      this._info.pixels_sampled += Math.round(visibleLength);\n      this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n      var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n      // Whether blank now or not, record the elapsed time blank if we were blank last time.\n      var now = global.performance.now();\n      if (this._anyBlankStartTime != null) {\n        this._info.any_blank_ms += now - this._anyBlankStartTime;\n      }\n      this._anyBlankStartTime = null;\n      if (this._mostlyBlankStartTime != null) {\n        this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n      }\n      this._mostlyBlankStartTime = null;\n      var blankTop = 0;\n      var first = cellsAroundViewport.first;\n      var firstFrame = this._getFrameMetrics(first, props);\n      while (first <= cellsAroundViewport.last && (!firstFrame || !firstFrame.inLayout)) {\n        firstFrame = this._getFrameMetrics(first, props);\n        first++;\n      }\n      // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n      // as blank.\n      if (firstFrame && first > 0) {\n        blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n      }\n      var blankBottom = 0;\n      var last = cellsAroundViewport.last;\n      var lastFrame = this._getFrameMetrics(last, props);\n      while (last >= cellsAroundViewport.first && (!lastFrame || !lastFrame.inLayout)) {\n        lastFrame = this._getFrameMetrics(last, props);\n        last--;\n      }\n      // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n      // footer as blank.\n      if (lastFrame && last < props.getItemCount(props.data) - 1) {\n        var bottomEdge = lastFrame.offset + lastFrame.length;\n        blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n      }\n      var pixels_blank = Math.round(blankTop + blankBottom);\n      var blankness = pixels_blank / visibleLength;\n      if (blankness > 0) {\n        this._anyBlankStartTime = now;\n        this._info.any_blank_speed_sum += scrollSpeed;\n        this._info.any_blank_count++;\n        this._info.pixels_blank += pixels_blank;\n        if (blankness > 0.5) {\n          this._mostlyBlankStartTime = now;\n          this._info.mostly_blank_count++;\n        }\n      } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n        this.deactivateAndFlush();\n      }\n      return blankness;\n    }\n    enabled() {\n      return this._enabled;\n    }\n    _resetData() {\n      this._anyBlankStartTime = null;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n    }\n  }\n  var _default = exports.default = FillRateHelper;\n});","lineCount":199,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"require"],[14,38,11,13],[14,39,11,13,"_dependencyMap"],[14,53,11,13],[15,2,11,13,"Object"],[15,8,11,13],[15,9,11,13,"defineProperty"],[15,23,11,13],[15,24,11,13,"exports"],[15,31,11,13],[16,4,11,13,"value"],[16,9,11,13],[17,2,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"default"],[18,17,11,13],[19,2,13,0],[19,6,13,0,"_objectSpread2"],[19,20,13,0],[19,23,13,0,"_interopRequireDefault"],[19,45,13,0],[19,46,13,0,"require"],[19,53,13,0],[19,54,13,0,"_dependencyMap"],[19,68,13,0],[20,2,14,0],[20,8,14,6,"Info"],[20,12,14,10],[20,13,14,11],[21,4,15,2,"constructor"],[21,15,15,13,"constructor"],[21,16,15,13],[21,18,15,16],[22,6,16,4],[22,10,16,8],[22,11,16,9,"any_blank_count"],[22,26,16,24],[22,29,16,27],[22,30,16,28],[23,6,17,4],[23,10,17,8],[23,11,17,9,"any_blank_ms"],[23,23,17,21],[23,26,17,24],[23,27,17,25],[24,6,18,4],[24,10,18,8],[24,11,18,9,"any_blank_speed_sum"],[24,30,18,28],[24,33,18,31],[24,34,18,32],[25,6,19,4],[25,10,19,8],[25,11,19,9,"mostly_blank_count"],[25,29,19,27],[25,32,19,30],[25,33,19,31],[26,6,20,4],[26,10,20,8],[26,11,20,9,"mostly_blank_ms"],[26,26,20,24],[26,29,20,27],[26,30,20,28],[27,6,21,4],[27,10,21,8],[27,11,21,9,"pixels_blank"],[27,23,21,21],[27,26,21,24],[27,27,21,25],[28,6,22,4],[28,10,22,8],[28,11,22,9,"pixels_sampled"],[28,25,22,23],[28,28,22,26],[28,29,22,27],[29,6,23,4],[29,10,23,8],[29,11,23,9,"pixels_scrolled"],[29,26,23,24],[29,29,23,27],[29,30,23,28],[30,6,24,4],[30,10,24,8],[30,11,24,9,"total_time_spent"],[30,27,24,25],[30,30,24,28],[30,31,24,29],[31,6,25,4],[31,10,25,8],[31,11,25,9,"sample_count"],[31,23,25,21],[31,26,25,24],[31,27,25,25],[32,4,26,2],[33,2,27,0],[34,2,28,0],[34,6,28,4,"DEBUG"],[34,11,28,9],[34,14,28,12],[34,19,28,17],[35,2,29,0],[35,6,29,4,"_listeners"],[35,16,29,14],[35,19,29,17],[35,21,29,19],[36,2,30,0],[36,6,30,4,"_minSampleCount"],[36,21,30,19],[36,24,30,22],[36,26,30,24],[37,2,31,0],[37,6,31,4,"_sampleRate"],[37,17,31,15],[37,20,31,18,"DEBUG"],[37,25,31,23],[37,28,31,26],[37,29,31,27],[37,32,31,30],[37,36,31,34],[39,2,33,0],[40,0,34,0],[41,0,35,0],[42,0,36,0],[43,0,37,0],[44,0,38,0],[45,0,39,0],[46,0,40,0],[47,2,41,0],[47,8,41,6,"FillRateHelper"],[47,22,41,20],[47,23,41,21],[48,4,42,2],[48,11,42,9,"addListener"],[48,22,42,20,"addListener"],[48,23,42,21,"callback"],[48,31,42,29],[48,33,42,31],[49,6,43,4],[49,10,43,8,"_sampleRate"],[49,21,43,19],[49,26,43,24],[49,30,43,28],[49,32,43,30],[50,8,44,6,"console"],[50,15,44,13],[50,16,44,14,"warn"],[50,20,44,18],[50,21,44,19],[50,80,44,78],[50,81,44,79],[51,6,45,4],[52,6,46,4,"_listeners"],[52,16,46,14],[52,17,46,15,"push"],[52,21,46,19],[52,22,46,20,"callback"],[52,30,46,28],[52,31,46,29],[53,6,47,4],[53,13,47,11],[54,8,48,6,"remove"],[54,14,48,12],[54,16,48,14,"remove"],[54,17,48,14],[54,22,48,20],[55,10,49,8,"_listeners"],[55,20,49,18],[55,23,49,21,"_listeners"],[55,33,49,31],[55,34,49,32,"filter"],[55,40,49,38],[55,41,49,39,"listener"],[55,49,49,47],[55,53,49,51,"callback"],[55,61,49,59],[55,66,49,64,"listener"],[55,74,49,72],[55,75,49,73],[56,8,50,6],[57,6,51,4],[57,7,51,5],[58,4,52,2],[59,4,53,2],[59,11,53,9,"setSampleRate"],[59,24,53,22,"setSampleRate"],[59,25,53,23,"sampleRate"],[59,35,53,33],[59,37,53,35],[60,6,54,4,"_sampleRate"],[60,17,54,15],[60,20,54,18,"sampleRate"],[60,30,54,28],[61,4,55,2],[62,4,56,2],[62,11,56,9,"setMinSampleCount"],[62,28,56,26,"setMinSampleCount"],[62,29,56,27,"minSampleCount"],[62,43,56,41],[62,45,56,43],[63,6,57,4,"_minSampleCount"],[63,21,57,19],[63,24,57,22,"minSampleCount"],[63,38,57,36],[64,4,58,2],[65,4,59,2,"constructor"],[65,15,59,13,"constructor"],[65,16,59,14,"getFrameMetrics"],[65,31,59,29],[65,33,59,31],[66,6,60,4],[66,10,60,8],[66,11,60,9,"_anyBlankStartTime"],[66,29,60,27],[66,32,60,30],[66,36,60,34],[67,6,61,4],[67,10,61,8],[67,11,61,9,"_enabled"],[67,19,61,17],[67,22,61,20],[67,27,61,25],[68,6,62,4],[68,10,62,8],[68,11,62,9,"_info"],[68,16,62,14],[68,19,62,17],[68,23,62,21,"Info"],[68,27,62,25],[68,28,62,26],[68,29,62,27],[69,6,63,4],[69,10,63,8],[69,11,63,9,"_mostlyBlankStartTime"],[69,32,63,30],[69,35,63,33],[69,39,63,37],[70,6,64,4],[70,10,64,8],[70,11,64,9,"_samplesStartTime"],[70,28,64,26],[70,31,64,29],[70,35,64,33],[71,6,65,4],[71,10,65,8],[71,11,65,9,"_getFrameMetrics"],[71,27,65,25],[71,30,65,28,"getFrameMetrics"],[71,45,65,43],[72,6,66,4],[72,10,66,8],[72,11,66,9,"_enabled"],[72,19,66,17],[72,22,66,20],[72,23,66,21,"_sampleRate"],[72,34,66,32],[72,38,66,36],[72,39,66,37],[72,43,66,41,"Math"],[72,47,66,45],[72,48,66,46,"random"],[72,54,66,52],[72,55,66,53],[72,56,66,54],[73,6,67,4],[73,10,67,8],[73,11,67,9,"_resetData"],[73,21,67,19],[73,22,67,20],[73,23,67,21],[74,4,68,2],[75,4,69,2,"activate"],[75,12,69,10,"activate"],[75,13,69,10],[75,15,69,13],[76,6,70,4],[76,10,70,8],[76,14,70,12],[76,15,70,13,"_enabled"],[76,23,70,21],[76,27,70,25],[76,31,70,29],[76,32,70,30,"_samplesStartTime"],[76,49,70,47],[76,53,70,51],[76,57,70,55],[76,59,70,57],[77,8,71,6,"DEBUG"],[77,13,71,11],[77,17,71,15,"console"],[77,24,71,22],[77,25,71,23,"debug"],[77,30,71,28],[77,31,71,29],[77,57,71,55],[77,58,71,56],[78,8,72,6],[78,12,72,10],[78,13,72,11,"_samplesStartTime"],[78,30,72,28],[78,33,72,31,"global"],[78,39,72,37],[78,40,72,38,"performance"],[78,51,72,49],[78,52,72,50,"now"],[78,55,72,53],[78,56,72,54],[78,57,72,55],[79,6,73,4],[80,4,74,2],[81,4,75,2,"deactivateAndFlush"],[81,22,75,20,"deactivateAndFlush"],[81,23,75,20],[81,25,75,23],[82,6,76,4],[82,10,76,8],[82,11,76,9],[82,15,76,13],[82,16,76,14,"_enabled"],[82,24,76,22],[82,26,76,24],[83,8,77,6],[84,6,78,4],[85,6,79,4],[85,10,79,8,"start"],[85,15,79,13],[85,18,79,16],[85,22,79,20],[85,23,79,21,"_samplesStartTime"],[85,40,79,38],[85,41,79,39],[85,42,79,40],[86,6,80,4],[86,10,80,8,"start"],[86,15,80,13],[86,19,80,17],[86,23,80,21],[86,25,80,23],[87,8,81,6,"DEBUG"],[87,13,81,11],[87,17,81,15,"console"],[87,24,81,22],[87,25,81,23,"debug"],[87,30,81,28],[87,31,81,29],[87,86,81,84],[87,87,81,85],[88,8,82,6],[89,6,83,4],[90,6,84,4],[90,10,84,8],[90,14,84,12],[90,15,84,13,"_info"],[90,20,84,18],[90,21,84,19,"sample_count"],[90,33,84,31],[90,36,84,34,"_minSampleCount"],[90,51,84,49],[90,53,84,51],[91,8,85,6],[92,8,86,6],[92,12,86,10],[92,13,86,11,"_resetData"],[92,23,86,21],[92,24,86,22],[92,25,86,23],[93,8,87,6],[94,6,88,4],[95,6,89,4],[95,10,89,8,"total_time_spent"],[95,26,89,24],[95,29,89,27,"global"],[95,35,89,33],[95,36,89,34,"performance"],[95,47,89,45],[95,48,89,46,"now"],[95,51,89,49],[95,52,89,50],[95,53,89,51],[95,56,89,54,"start"],[95,61,89,59],[96,6,90,4],[96,10,90,8,"info"],[96,14,90,12],[96,17,90,15],[96,21,90,15,"_objectSpread"],[96,43,90,28],[96,45,90,29],[96,49,90,29,"_objectSpread"],[96,71,90,42],[96,73,90,43],[96,74,90,44],[96,75,90,45],[96,77,90,47],[96,81,90,51],[96,82,90,52,"_info"],[96,87,90,57],[96,88,90,58],[96,90,90,60],[96,91,90,61],[96,92,90,62],[96,94,90,64],[97,8,91,6,"total_time_spent"],[98,6,92,4],[98,7,92,5],[98,8,92,6],[99,6,93,4],[99,10,93,8,"DEBUG"],[99,15,93,13],[99,17,93,15],[100,8,94,6],[100,12,94,10,"derived"],[100,19,94,17],[100,22,94,20],[101,10,95,8,"avg_blankness"],[101,23,95,21],[101,25,95,23],[101,29,95,27],[101,30,95,28,"_info"],[101,35,95,33],[101,36,95,34,"pixels_blank"],[101,48,95,46],[101,51,95,49],[101,55,95,53],[101,56,95,54,"_info"],[101,61,95,59],[101,62,95,60,"pixels_sampled"],[101,76,95,74],[102,10,96,8,"avg_speed"],[102,19,96,17],[102,21,96,19],[102,25,96,23],[102,26,96,24,"_info"],[102,31,96,29],[102,32,96,30,"pixels_scrolled"],[102,47,96,45],[102,51,96,49,"total_time_spent"],[102,67,96,65],[102,70,96,68],[102,74,96,72],[102,75,96,73],[103,10,97,8,"avg_speed_when_any_blank"],[103,34,97,32],[103,36,97,34],[103,40,97,38],[103,41,97,39,"_info"],[103,46,97,44],[103,47,97,45,"any_blank_speed_sum"],[103,66,97,64],[103,69,97,67],[103,73,97,71],[103,74,97,72,"_info"],[103,79,97,77],[103,80,97,78,"any_blank_count"],[103,95,97,93],[104,10,98,8,"any_blank_per_min"],[104,27,98,25],[104,29,98,27],[104,33,98,31],[104,34,98,32,"_info"],[104,39,98,37],[104,40,98,38,"any_blank_count"],[104,55,98,53],[104,59,98,57,"total_time_spent"],[104,75,98,73],[104,78,98,76],[104,82,98,80],[104,85,98,83],[104,87,98,85],[104,88,98,86],[105,10,99,8,"any_blank_time_frac"],[105,29,99,27],[105,31,99,29],[105,35,99,33],[105,36,99,34,"_info"],[105,41,99,39],[105,42,99,40,"any_blank_ms"],[105,54,99,52],[105,57,99,55,"total_time_spent"],[105,73,99,71],[106,10,100,8,"mostly_blank_per_min"],[106,30,100,28],[106,32,100,30],[106,36,100,34],[106,37,100,35,"_info"],[106,42,100,40],[106,43,100,41,"mostly_blank_count"],[106,61,100,59],[106,65,100,63,"total_time_spent"],[106,81,100,79],[106,84,100,82],[106,88,100,86],[106,91,100,89],[106,93,100,91],[106,94,100,92],[107,10,101,8,"mostly_blank_time_frac"],[107,32,101,30],[107,34,101,32],[107,38,101,36],[107,39,101,37,"_info"],[107,44,101,42],[107,45,101,43,"mostly_blank_ms"],[107,60,101,58],[107,63,101,61,"total_time_spent"],[108,8,102,6],[108,9,102,7],[109,8,103,6],[109,13,103,11],[109,17,103,15,"key"],[109,20,103,18],[109,24,103,22,"derived"],[109,31,103,29],[109,33,103,31],[110,10,104,8],[111,10,105,8,"derived"],[111,17,105,15],[111,18,105,16,"key"],[111,21,105,19],[111,22,105,20],[111,25,105,23,"Math"],[111,29,105,27],[111,30,105,28,"round"],[111,35,105,33],[111,36,105,34],[111,40,105,38],[111,43,105,41,"derived"],[111,50,105,48],[111,51,105,49,"key"],[111,54,105,52],[111,55,105,53],[111,56,105,54],[111,59,105,57],[111,63,105,61],[112,8,106,6],[113,8,107,6,"console"],[113,15,107,13],[113,16,107,14,"debug"],[113,21,107,19],[113,22,107,20],[113,59,107,57],[113,61,107,59],[114,10,108,8,"derived"],[114,17,108,15],[115,10,109,8,"info"],[116,8,110,6],[116,9,110,7],[116,10,110,8],[117,6,111,4],[118,6,112,4,"_listeners"],[118,16,112,14],[118,17,112,15,"forEach"],[118,24,112,22],[118,25,112,23,"listener"],[118,33,112,31],[118,37,112,35,"listener"],[118,45,112,43],[118,46,112,44,"info"],[118,50,112,48],[118,51,112,49],[118,52,112,50],[119,6,113,4],[119,10,113,8],[119,11,113,9,"_resetData"],[119,21,113,19],[119,22,113,20],[119,23,113,21],[120,4,114,2],[121,4,115,2,"computeBlankness"],[121,20,115,18,"computeBlankness"],[121,21,115,19,"props"],[121,26,115,24],[121,28,115,26,"cellsAroundViewport"],[121,47,115,45],[121,49,115,47,"scrollMetrics"],[121,62,115,60],[121,64,115,62],[122,6,116,4],[122,10,116,8],[122,11,116,9],[122,15,116,13],[122,16,116,14,"_enabled"],[122,24,116,22],[122,28,116,26,"props"],[122,33,116,31],[122,34,116,32,"getItemCount"],[122,46,116,44],[122,47,116,45,"props"],[122,52,116,50],[122,53,116,51,"data"],[122,57,116,55],[122,58,116,56],[122,63,116,61],[122,64,116,62],[122,68,116,66,"cellsAroundViewport"],[122,87,116,85],[122,88,116,86,"last"],[122,92,116,90],[122,95,116,93,"cellsAroundViewport"],[122,114,116,112],[122,115,116,113,"first"],[122,120,116,118],[122,124,116,122],[122,128,116,126],[122,129,116,127,"_samplesStartTime"],[122,146,116,144],[122,150,116,148],[122,154,116,152],[122,156,116,154],[123,8,117,6],[123,15,117,13],[123,16,117,14],[124,6,118,4],[125,6,119,4],[125,10,119,8,"dOffset"],[125,17,119,15],[125,20,119,18,"scrollMetrics"],[125,33,119,31],[125,34,119,32,"dOffset"],[125,41,119,39],[126,8,120,6,"offset"],[126,14,120,12],[126,17,120,15,"scrollMetrics"],[126,30,120,28],[126,31,120,29,"offset"],[126,37,120,35],[127,8,121,6,"velocity"],[127,16,121,14],[127,19,121,17,"scrollMetrics"],[127,32,121,30],[127,33,121,31,"velocity"],[127,41,121,39],[128,8,122,6,"visibleLength"],[128,21,122,19],[128,24,122,22,"scrollMetrics"],[128,37,122,35],[128,38,122,36,"visibleLength"],[128,51,122,49],[130,6,124,4],[131,6,125,4],[132,6,126,4],[132,10,126,8],[132,11,126,9,"_info"],[132,16,126,14],[132,17,126,15,"sample_count"],[132,29,126,27],[132,31,126,29],[133,6,127,4],[133,10,127,8],[133,11,127,9,"_info"],[133,16,127,14],[133,17,127,15,"pixels_sampled"],[133,31,127,29],[133,35,127,33,"Math"],[133,39,127,37],[133,40,127,38,"round"],[133,45,127,43],[133,46,127,44,"visibleLength"],[133,59,127,57],[133,60,127,58],[134,6,128,4],[134,10,128,8],[134,11,128,9,"_info"],[134,16,128,14],[134,17,128,15,"pixels_scrolled"],[134,32,128,30],[134,36,128,34,"Math"],[134,40,128,38],[134,41,128,39,"round"],[134,46,128,44],[134,47,128,45,"Math"],[134,51,128,49],[134,52,128,50,"abs"],[134,55,128,53],[134,56,128,54,"dOffset"],[134,63,128,61],[134,64,128,62],[134,65,128,63],[135,6,129,4],[135,10,129,8,"scrollSpeed"],[135,21,129,19],[135,24,129,22,"Math"],[135,28,129,26],[135,29,129,27,"round"],[135,34,129,32],[135,35,129,33,"Math"],[135,39,129,37],[135,40,129,38,"abs"],[135,43,129,41],[135,44,129,42,"velocity"],[135,52,129,50],[135,53,129,51],[135,56,129,54],[135,60,129,58],[135,61,129,59],[135,62,129,60],[135,63,129,61],[137,6,131,4],[138,6,132,4],[138,10,132,8,"now"],[138,13,132,11],[138,16,132,14,"global"],[138,22,132,20],[138,23,132,21,"performance"],[138,34,132,32],[138,35,132,33,"now"],[138,38,132,36],[138,39,132,37],[138,40,132,38],[139,6,133,4],[139,10,133,8],[139,14,133,12],[139,15,133,13,"_anyBlankStartTime"],[139,33,133,31],[139,37,133,35],[139,41,133,39],[139,43,133,41],[140,8,134,6],[140,12,134,10],[140,13,134,11,"_info"],[140,18,134,16],[140,19,134,17,"any_blank_ms"],[140,31,134,29],[140,35,134,33,"now"],[140,38,134,36],[140,41,134,39],[140,45,134,43],[140,46,134,44,"_anyBlankStartTime"],[140,64,134,62],[141,6,135,4],[142,6,136,4],[142,10,136,8],[142,11,136,9,"_anyBlankStartTime"],[142,29,136,27],[142,32,136,30],[142,36,136,34],[143,6,137,4],[143,10,137,8],[143,14,137,12],[143,15,137,13,"_mostlyBlankStartTime"],[143,36,137,34],[143,40,137,38],[143,44,137,42],[143,46,137,44],[144,8,138,6],[144,12,138,10],[144,13,138,11,"_info"],[144,18,138,16],[144,19,138,17,"mostly_blank_ms"],[144,34,138,32],[144,38,138,36,"now"],[144,41,138,39],[144,44,138,42],[144,48,138,46],[144,49,138,47,"_mostlyBlankStartTime"],[144,70,138,68],[145,6,139,4],[146,6,140,4],[146,10,140,8],[146,11,140,9,"_mostlyBlankStartTime"],[146,32,140,30],[146,35,140,33],[146,39,140,37],[147,6,141,4],[147,10,141,8,"blankTop"],[147,18,141,16],[147,21,141,19],[147,22,141,20],[148,6,142,4],[148,10,142,8,"first"],[148,15,142,13],[148,18,142,16,"cellsAroundViewport"],[148,37,142,35],[148,38,142,36,"first"],[148,43,142,41],[149,6,143,4],[149,10,143,8,"firstFrame"],[149,20,143,18],[149,23,143,21],[149,27,143,25],[149,28,143,26,"_getFrameMetrics"],[149,44,143,42],[149,45,143,43,"first"],[149,50,143,48],[149,52,143,50,"props"],[149,57,143,55],[149,58,143,56],[150,6,144,4],[150,13,144,11,"first"],[150,18,144,16],[150,22,144,20,"cellsAroundViewport"],[150,41,144,39],[150,42,144,40,"last"],[150,46,144,44],[150,51,144,49],[150,52,144,50,"firstFrame"],[150,62,144,60],[150,66,144,64],[150,67,144,65,"firstFrame"],[150,77,144,75],[150,78,144,76,"inLayout"],[150,86,144,84],[150,87,144,85],[150,89,144,87],[151,8,145,6,"firstFrame"],[151,18,145,16],[151,21,145,19],[151,25,145,23],[151,26,145,24,"_getFrameMetrics"],[151,42,145,40],[151,43,145,41,"first"],[151,48,145,46],[151,50,145,48,"props"],[151,55,145,53],[151,56,145,54],[152,8,146,6,"first"],[152,13,146,11],[152,15,146,13],[153,6,147,4],[154,6,148,4],[155,6,149,4],[156,6,150,4],[156,10,150,8,"firstFrame"],[156,20,150,18],[156,24,150,22,"first"],[156,29,150,27],[156,32,150,30],[156,33,150,31],[156,35,150,33],[157,8,151,6,"blankTop"],[157,16,151,14],[157,19,151,17,"Math"],[157,23,151,21],[157,24,151,22,"min"],[157,27,151,25],[157,28,151,26,"visibleLength"],[157,41,151,39],[157,43,151,41,"Math"],[157,47,151,45],[157,48,151,46,"max"],[157,51,151,49],[157,52,151,50],[157,53,151,51],[157,55,151,53,"firstFrame"],[157,65,151,63],[157,66,151,64,"offset"],[157,72,151,70],[157,75,151,73,"offset"],[157,81,151,79],[157,82,151,80],[157,83,151,81],[158,6,152,4],[159,6,153,4],[159,10,153,8,"blankBottom"],[159,21,153,19],[159,24,153,22],[159,25,153,23],[160,6,154,4],[160,10,154,8,"last"],[160,14,154,12],[160,17,154,15,"cellsAroundViewport"],[160,36,154,34],[160,37,154,35,"last"],[160,41,154,39],[161,6,155,4],[161,10,155,8,"lastFrame"],[161,19,155,17],[161,22,155,20],[161,26,155,24],[161,27,155,25,"_getFrameMetrics"],[161,43,155,41],[161,44,155,42,"last"],[161,48,155,46],[161,50,155,48,"props"],[161,55,155,53],[161,56,155,54],[162,6,156,4],[162,13,156,11,"last"],[162,17,156,15],[162,21,156,19,"cellsAroundViewport"],[162,40,156,38],[162,41,156,39,"first"],[162,46,156,44],[162,51,156,49],[162,52,156,50,"lastFrame"],[162,61,156,59],[162,65,156,63],[162,66,156,64,"lastFrame"],[162,75,156,73],[162,76,156,74,"inLayout"],[162,84,156,82],[162,85,156,83],[162,87,156,85],[163,8,157,6,"lastFrame"],[163,17,157,15],[163,20,157,18],[163,24,157,22],[163,25,157,23,"_getFrameMetrics"],[163,41,157,39],[163,42,157,40,"last"],[163,46,157,44],[163,48,157,46,"props"],[163,53,157,51],[163,54,157,52],[164,8,158,6,"last"],[164,12,158,10],[164,14,158,12],[165,6,159,4],[166,6,160,4],[167,6,161,4],[168,6,162,4],[168,10,162,8,"lastFrame"],[168,19,162,17],[168,23,162,21,"last"],[168,27,162,25],[168,30,162,28,"props"],[168,35,162,33],[168,36,162,34,"getItemCount"],[168,48,162,46],[168,49,162,47,"props"],[168,54,162,52],[168,55,162,53,"data"],[168,59,162,57],[168,60,162,58],[168,63,162,61],[168,64,162,62],[168,66,162,64],[169,8,163,6],[169,12,163,10,"bottomEdge"],[169,22,163,20],[169,25,163,23,"lastFrame"],[169,34,163,32],[169,35,163,33,"offset"],[169,41,163,39],[169,44,163,42,"lastFrame"],[169,53,163,51],[169,54,163,52,"length"],[169,60,163,58],[170,8,164,6,"blankBottom"],[170,19,164,17],[170,22,164,20,"Math"],[170,26,164,24],[170,27,164,25,"min"],[170,30,164,28],[170,31,164,29,"visibleLength"],[170,44,164,42],[170,46,164,44,"Math"],[170,50,164,48],[170,51,164,49,"max"],[170,54,164,52],[170,55,164,53],[170,56,164,54],[170,58,164,56,"offset"],[170,64,164,62],[170,67,164,65,"visibleLength"],[170,80,164,78],[170,83,164,81,"bottomEdge"],[170,93,164,91],[170,94,164,92],[170,95,164,93],[171,6,165,4],[172,6,166,4],[172,10,166,8,"pixels_blank"],[172,22,166,20],[172,25,166,23,"Math"],[172,29,166,27],[172,30,166,28,"round"],[172,35,166,33],[172,36,166,34,"blankTop"],[172,44,166,42],[172,47,166,45,"blankBottom"],[172,58,166,56],[172,59,166,57],[173,6,167,4],[173,10,167,8,"blankness"],[173,19,167,17],[173,22,167,20,"pixels_blank"],[173,34,167,32],[173,37,167,35,"visibleLength"],[173,50,167,48],[174,6,168,4],[174,10,168,8,"blankness"],[174,19,168,17],[174,22,168,20],[174,23,168,21],[174,25,168,23],[175,8,169,6],[175,12,169,10],[175,13,169,11,"_anyBlankStartTime"],[175,31,169,29],[175,34,169,32,"now"],[175,37,169,35],[176,8,170,6],[176,12,170,10],[176,13,170,11,"_info"],[176,18,170,16],[176,19,170,17,"any_blank_speed_sum"],[176,38,170,36],[176,42,170,40,"scrollSpeed"],[176,53,170,51],[177,8,171,6],[177,12,171,10],[177,13,171,11,"_info"],[177,18,171,16],[177,19,171,17,"any_blank_count"],[177,34,171,32],[177,36,171,34],[178,8,172,6],[178,12,172,10],[178,13,172,11,"_info"],[178,18,172,16],[178,19,172,17,"pixels_blank"],[178,31,172,29],[178,35,172,33,"pixels_blank"],[178,47,172,45],[179,8,173,6],[179,12,173,10,"blankness"],[179,21,173,19],[179,24,173,22],[179,27,173,25],[179,29,173,27],[180,10,174,8],[180,14,174,12],[180,15,174,13,"_mostlyBlankStartTime"],[180,36,174,34],[180,39,174,37,"now"],[180,42,174,40],[181,10,175,8],[181,14,175,12],[181,15,175,13,"_info"],[181,20,175,18],[181,21,175,19,"mostly_blank_count"],[181,39,175,37],[181,41,175,39],[182,8,176,6],[183,6,177,4],[183,7,177,5],[183,13,177,11],[183,17,177,15,"scrollSpeed"],[183,28,177,26],[183,31,177,29],[183,35,177,33],[183,39,177,37,"Math"],[183,43,177,41],[183,44,177,42,"abs"],[183,47,177,45],[183,48,177,46,"dOffset"],[183,55,177,53],[183,56,177,54],[183,59,177,57],[183,60,177,58],[183,62,177,60],[184,8,178,6],[184,12,178,10],[184,13,178,11,"deactivateAndFlush"],[184,31,178,29],[184,32,178,30],[184,33,178,31],[185,6,179,4],[186,6,180,4],[186,13,180,11,"blankness"],[186,22,180,20],[187,4,181,2],[188,4,182,2,"enabled"],[188,11,182,9,"enabled"],[188,12,182,9],[188,14,182,12],[189,6,183,4],[189,13,183,11],[189,17,183,15],[189,18,183,16,"_enabled"],[189,26,183,24],[190,4,184,2],[191,4,185,2,"_resetData"],[191,14,185,12,"_resetData"],[191,15,185,12],[191,17,185,15],[192,6,186,4],[192,10,186,8],[192,11,186,9,"_anyBlankStartTime"],[192,29,186,27],[192,32,186,30],[192,36,186,34],[193,6,187,4],[193,10,187,8],[193,11,187,9,"_info"],[193,16,187,14],[193,19,187,17],[193,23,187,21,"Info"],[193,27,187,25],[193,28,187,26],[193,29,187,27],[194,6,188,4],[194,10,188,8],[194,11,188,9,"_mostlyBlankStartTime"],[194,32,188,30],[194,35,188,33],[194,39,188,37],[195,6,189,4],[195,10,189,8],[195,11,189,9,"_samplesStartTime"],[195,28,189,26],[195,31,189,29],[195,35,189,33],[196,4,190,2],[197,2,191,0],[198,2,191,1],[198,6,191,1,"_default"],[198,14,191,1],[198,17,191,1,"exports"],[198,24,191,1],[198,25,191,1,"default"],[198,32,191,1],[198,35,192,15,"FillRateHelper"],[198,49,192,29],[199,0,192,29],[199,3]],"functionMap":{"names":["<global>","Info","Info#constructor","FillRateHelper","FillRateHelper.addListener","remove","_listeners.filter$argument_0","FillRateHelper.setSampleRate","FillRateHelper.setMinSampleCount","FillRateHelper#constructor","FillRateHelper#activate","FillRateHelper#deactivateAndFlush","_listeners.forEach$argument_0","FillRateHelper#computeBlankness","FillRateHelper#enabled","FillRateHelper#_resetData"],"mappings":"AAA;ACa;ECC;GDW;CDC;AGc;ECC;cCM;uCCC,iCD;ODC;GDE;EIC;GJE;EKC;GLE;EMC;GNS;EOC;GPK;EQC;uBCqC,0BD;GRE;EUC;GVkE;EWC;GXE;EYC;GZK;CHC"}},"type":"js/module"}]}