{"dependencies":[{"name":"metro-runtime/src/modules/HMRClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":389},"end":{"line":11,"column":65,"index":454}}],"key":"+RxcUzp4ciHymeUULASNlv4i8Rk=","exportNames":["*"],"imports":1}},{"name":"pretty-format","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":455},"end":{"line":12,"column":54,"index":509}}],"key":"aXyG2GzrqNhJvIb2xvve/rJFBZA=","exportNames":["*"],"imports":1}},{"name":"./LoadingView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":511},"end":{"line":14,"column":40,"index":551}}],"key":"s9s4ribtctXRQH+3J26+63eGaRs=","exportNames":["*"],"imports":1}},{"name":"./error-overlay/LogBox","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":552},"end":{"line":15,"column":44,"index":596}}],"key":"u1FnUfQ9dRX5CoqYWf/6NpeP41c=","exportNames":["*"],"imports":1}},{"name":"./getDevServer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":597},"end":{"line":16,"column":42,"index":639}}],"key":"WKfBgnKYQ+362ADqmV6Rh2L8YC4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _metroRuntimeSrcModulesHMRClient = require(_dependencyMap[0], \"metro-runtime/src/modules/HMRClient\");\n  var MetroHMRClient = _interopDefault(_metroRuntimeSrcModulesHMRClient);\n  var _prettyFormat = require(_dependencyMap[1], \"pretty-format\");\n  var prettyFormat = _interopDefault(_prettyFormat);\n  var _LoadingView = require(_dependencyMap[2], \"./LoadingView\");\n  var LoadingView = _interopDefault(_LoadingView);\n  var _errorOverlayLogBox = require(_dependencyMap[3], \"./error-overlay/LogBox\");\n  var LogBox = _interopDefault(_errorOverlayLogBox);\n  var _getDevServer = require(_dependencyMap[4], \"./getDevServer\");\n  var getDevServer = _interopDefault(_getDevServer);\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * Based on this but with web support:\n   * https://github.com/facebook/react-native/blob/086714b02b0fb838dee5a66c5bcefe73b53cf3df/Libraries/Utilities/HMRClient.js\n   */\n\n  const pendingEntryPoints = [];\n\n  // @ts-expect-error: Account for multiple versions of pretty-format inside of a monorepo.\n  const prettyFormatFunc = typeof prettyFormat.default === 'function' ? prettyFormat.default : prettyFormat.default.default;\n  let hmrClient = null;\n  let hmrUnavailableReason = null;\n  let currentCompileErrorMessage = null;\n  let didConnect = false;\n  const pendingLogs = [];\n  function assert(foo, msg) {\n    if (!foo) throw new Error(msg);\n  }\n\n  /**\n   * HMR Client that receives from the server HMR updates and propagates them\n   * runtime to reflects those changes.\n   */\n  const HMRClient = {\n    enable() {\n      if (hmrUnavailableReason !== null) {\n        // If HMR became unavailable while you weren't using it,\n        // explain why when you try to turn it on.\n        // This is an error (and not a warning) because it is shown\n        // in response to a direct user action.\n        throw new Error(hmrUnavailableReason);\n      }\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      // We use this for internal logging only.\n      // It doesn't affect the logic.\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n\n      // When toggling Fast Refresh on, we might already have some stashed updates.\n      // Since they'll get applied now, we'll show a banner.\n      const hasUpdates = hmrClient.hasPendingUpdates();\n      if (hasUpdates) {\n        LoadingView.default.showMessage('Refreshing...', 'refresh');\n      }\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          LoadingView.default.hide();\n        }\n      }\n\n      // There could be a compile error while Fast Refresh was off,\n      // but we ignored it at the time. Show it now.\n      showCompileError();\n    },\n    disable() {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      hmrClient.disable();\n    },\n    registerBundle(requestUrl) {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log(level, data) {\n      if (!hmrClient) {\n        // Catch a reasonable number of early logs\n        // in case hmrClient gets initialized later.\n        pendingLogs.push([level, data]);\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n        return;\n      }\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level,\n          platform: 'web',\n          mode: 'BRIDGE',\n          data: data.map(item => typeof item === 'string' ? item : prettyFormatFunc(item, {\n            escapeString: true,\n            highlight: true,\n            maxDepth: 3,\n            min: true,\n            plugins: [_prettyFormat.plugins.ReactElement]\n          }))\n        }));\n      } catch {\n        // If sending logs causes any failures we want to silently ignore them\n        // to ensure we do not cause infinite-logging loops.\n      }\n    },\n    // Called once by the bridge on startup, even if Fast Refresh is off.\n    // It creates the HMR client but doesn't actually set up the socket yet.\n    setup({\n      isEnabled\n    }) {\n      assert(!hmrClient, 'Cannot initialize hmrClient twice');\n      const serverScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n      const client = new MetroHMRClient.default(`${serverScheme}://${window.location.host}/hot`);\n      hmrClient = client;\n      const {\n        fullBundleUrl\n      } = (0, getDevServer.default)();\n      pendingEntryPoints.push(\n      // HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl);\n      client.on('connection-error', e => {\n        let error = `Cannot connect to Metro.\n \n Try the following to fix the issue:\n - Ensure the Metro dev server is running and available on the same network as this device`;\n        error += `\n \n URL: ${window.location.host}\n \n Error: ${e.message}`;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', ({\n        isInitialUpdate\n      }) => {\n        currentCompileErrorMessage = null;\n        didConnect = true;\n        if (client.isEnabled() && !isInitialUpdate) {\n          LoadingView.default.showMessage('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', ({\n        isInitialUpdate\n      }) => {\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          LogBox.default.clearAllLogs();\n        }\n      });\n      client.on('update-done', () => {\n        LoadingView.default.hide();\n      });\n      client.on('error', data => {\n        LoadingView.default.hide();\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = `${data.type} ${data.message}`;\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', closeEvent => {\n        LoadingView.default.hide();\n\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n        const isNormalOrUnsetCloseReason = closeEvent == null || closeEvent.code === 1000 || closeEvent.code === 1005 || closeEvent.code == null;\n        setHMRUnavailableReason(`${isNormalOrUnsetCloseReason ? 'Disconnected from Metro.' : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`}\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `);\n      });\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs();\n    }\n  };\n  function setHMRUnavailableReason(reason) {\n    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    if (hmrUnavailableReason !== null) {\n      // Don't show more than one warning.\n      return;\n    }\n    hmrUnavailableReason = reason;\n\n    // We only want to show a warning if Fast Refresh is on *and* if we ever\n    // previously managed to connect successfully. We don't want to show\n    // the warning to native engineers who use cached bundles without Metro.\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n      // (Not using the `warning` module to prevent a Buck cycle.)\n    }\n  }\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason != null) {\n      // \"Bundle Splitting â€“ Metro disconnected\"\n      window.location.reload();\n      return;\n    }\n    if (pendingEntryPoints.length > 0) {\n      client?.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n  function flushEarlyLogs() {\n    try {\n      pendingLogs.forEach(([level, data]) => {\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n  function dismissRedbox() {\n    // TODO(EvanBacon): Error overlay for web.\n  }\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    // Even if there is already a redbox, syntax errors are more important.\n    // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n    dismissRedbox();\n    const message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n    const error = new Error(message);\n    // Symbolicating compile errors is wasted effort\n    // because the stack trace is meaningless:\n    // @ts-expect-error\n    error.preventSymbolication = true;\n    throw error;\n  }\n  var _default = HMRClient;\n});","lineCount":275,"map":[[12,2,320,0,"Object"],[12,8,320,0],[12,9,320,0,"defineProperty"],[12,23,320,0],[12,24,320,0,"exports"],[12,31,320,0],[13,4,320,0,"enumerable"],[13,14,320,0],[14,4,320,0,"get"],[14,7,320,0],[14,18,320,0,"get"],[14,19,320,0],[15,6,320,0],[15,13,320,0,"_default"],[15,21,320,0],[16,4,320,0],[17,2,320,0],[18,2,11,0],[18,6,11,0,"_metroRuntimeSrcModulesHMRClient"],[18,38,11,0],[18,41,11,0,"require"],[18,48,11,0],[18,49,11,0,"_dependencyMap"],[18,63,11,0],[19,2,11,0],[19,6,11,0,"MetroHMRClient"],[19,20,11,0],[19,23,11,0,"_interopDefault"],[19,38,11,0],[19,39,11,0,"_metroRuntimeSrcModulesHMRClient"],[19,71,11,0],[20,2,12,0],[20,6,12,0,"_prettyFormat"],[20,19,12,0],[20,22,12,0,"require"],[20,29,12,0],[20,30,12,0,"_dependencyMap"],[20,44,12,0],[21,2,12,0],[21,6,12,0,"prettyFormat"],[21,18,12,0],[21,21,12,0,"_interopDefault"],[21,36,12,0],[21,37,12,0,"_prettyFormat"],[21,50,12,0],[22,2,14,0],[22,6,14,0,"_LoadingView"],[22,18,14,0],[22,21,14,0,"require"],[22,28,14,0],[22,29,14,0,"_dependencyMap"],[22,43,14,0],[23,2,14,0],[23,6,14,0,"LoadingView"],[23,17,14,0],[23,20,14,0,"_interopDefault"],[23,35,14,0],[23,36,14,0,"_LoadingView"],[23,48,14,0],[24,2,15,0],[24,6,15,0,"_errorOverlayLogBox"],[24,25,15,0],[24,28,15,0,"require"],[24,35,15,0],[24,36,15,0,"_dependencyMap"],[24,50,15,0],[25,2,15,0],[25,6,15,0,"LogBox"],[25,12,15,0],[25,15,15,0,"_interopDefault"],[25,30,15,0],[25,31,15,0,"_errorOverlayLogBox"],[25,50,15,0],[26,2,16,0],[26,6,16,0,"_getDevServer"],[26,19,16,0],[26,22,16,0,"require"],[26,29,16,0],[26,30,16,0,"_dependencyMap"],[26,44,16,0],[27,2,16,0],[27,6,16,0,"getDevServer"],[27,18,16,0],[27,21,16,0,"_interopDefault"],[27,36,16,0],[27,37,16,0,"_getDevServer"],[27,50,16,0],[28,2,1,0],[29,0,2,0],[30,0,3,0],[31,0,4,0],[32,0,5,0],[33,0,6,0],[34,0,7,0],[35,0,8,0],[36,0,9,0],[37,0,10,0],[39,2,18,0],[39,8,18,6,"pendingEntryPoints"],[39,26,18,34],[39,29,18,37],[39,31,18,39],[41,2,20,0],[42,2,21,0],[42,8,21,6,"prettyFormatFunc"],[42,24,21,22],[42,27,21,25],[42,34,21,32,"prettyFormat"],[42,46,21,44],[42,47,21,44,"default"],[42,54,21,44],[42,59,21,49],[42,69,21,59],[42,72,21,62,"prettyFormat"],[42,84,21,74],[42,85,21,74,"default"],[42,92,21,74],[42,95,21,77,"prettyFormat"],[42,107,21,89],[42,108,21,89,"default"],[42,115,21,89],[42,116,21,90,"default"],[42,123,21,97],[43,2,31,0],[43,6,31,4,"hmrClient"],[43,15,31,35],[43,18,31,38],[43,22,31,42],[44,2,32,0],[44,6,32,4,"hmrUnavailableReason"],[44,26,32,39],[44,29,32,42],[44,33,32,46],[45,2,33,0],[45,6,33,4,"currentCompileErrorMessage"],[45,32,33,45],[45,35,33,48],[45,39,33,52],[46,2,34,0],[46,6,34,4,"didConnect"],[46,16,34,23],[46,19,34,26],[46,24,34,31],[47,2,35,0],[47,8,35,6,"pendingLogs"],[47,19,35,38],[47,22,35,41],[47,24,35,43],[48,2,56,0],[48,11,56,9,"assert"],[48,17,56,15,"assert"],[48,18,56,16,"foo"],[48,21,56,24],[48,23,56,26,"msg"],[48,26,56,37],[48,28,56,52],[49,4,57,2],[49,8,57,6],[49,9,57,7,"foo"],[49,12,57,10],[49,14,57,12],[49,20,57,18],[49,24,57,22,"Error"],[49,29,57,27],[49,30,57,28,"msg"],[49,33,57,31],[49,34,57,32],[50,2,58,0],[52,2,60,0],[53,0,61,0],[54,0,62,0],[55,0,63,0],[56,2,64,0],[56,8,64,6,"HMRClient"],[56,17,64,41],[56,20,64,44],[57,4,65,2,"enable"],[57,10,65,8,"enable"],[57,11,65,8],[57,13,65,11],[58,6,66,4],[58,10,66,8,"hmrUnavailableReason"],[58,30,66,28],[58,35,66,33],[58,39,66,37],[58,41,66,39],[59,8,67,6],[60,8,68,6],[61,8,69,6],[62,8,70,6],[63,8,71,6],[63,14,71,12],[63,18,71,16,"Error"],[63,23,71,21],[63,24,71,22,"hmrUnavailableReason"],[63,44,71,42],[63,45,71,43],[64,6,72,4],[65,6,74,4,"assert"],[65,12,74,10],[65,13,74,11,"hmrClient"],[65,22,74,20],[65,24,74,22],[65,69,74,67],[65,70,74,68],[67,6,76,4],[68,6,77,4],[69,6,78,4,"hmrClient"],[69,15,78,13],[69,16,78,14,"send"],[69,20,78,18],[69,21,78,19,"JSON"],[69,25,78,23],[69,26,78,24,"stringify"],[69,35,78,33],[69,36,78,34],[70,8,78,36,"type"],[70,12,78,40],[70,14,78,42],[71,6,78,55],[71,7,78,56],[71,8,78,57],[71,9,78,58],[73,6,80,4],[74,6,81,4],[75,6,82,4],[75,12,82,10,"hasUpdates"],[75,22,82,20],[75,25,82,23,"hmrClient"],[75,34,82,32],[75,35,82,34,"hasPendingUpdates"],[75,52,82,51],[75,53,82,52],[75,54,82,53],[76,6,84,4],[76,10,84,8,"hasUpdates"],[76,20,84,18],[76,22,84,20],[77,8,85,6,"LoadingView"],[77,19,85,17],[77,20,85,17,"default"],[77,27,85,17],[77,28,85,18,"showMessage"],[77,39,85,29],[77,40,85,30],[77,55,85,45],[77,57,85,47],[77,66,85,56],[77,67,85,57],[78,6,86,4],[79,6,87,4],[79,10,87,8],[80,8,88,6,"hmrClient"],[80,17,88,15],[80,18,88,16,"enable"],[80,24,88,22],[80,25,88,23],[80,26,88,24],[81,6,89,4],[81,7,89,5],[81,16,89,14],[82,8,90,6],[82,12,90,10,"hasUpdates"],[82,22,90,20],[82,24,90,22],[83,10,91,8,"LoadingView"],[83,21,91,19],[83,22,91,19,"default"],[83,29,91,19],[83,30,91,20,"hide"],[83,34,91,24],[83,35,91,25],[83,36,91,26],[84,8,92,6],[85,6,93,4],[87,6,95,4],[88,6,96,4],[89,6,97,4,"showCompileError"],[89,22,97,20],[89,23,97,21],[89,24,97,22],[90,4,98,2],[90,5,98,3],[91,4,100,2,"disable"],[91,11,100,9,"disable"],[91,12,100,9],[91,14,100,12],[92,6,101,4,"assert"],[92,12,101,10],[92,13,101,11,"hmrClient"],[92,22,101,20],[92,24,101,22],[92,69,101,67],[92,70,101,68],[93,6,102,4,"hmrClient"],[93,15,102,13],[93,16,102,14,"disable"],[93,23,102,21],[93,24,102,22],[93,25,102,23],[94,4,103,2],[94,5,103,3],[95,4,105,2,"registerBundle"],[95,18,105,16,"registerBundle"],[95,19,105,17,"requestUrl"],[95,29,105,35],[95,31,105,37],[96,6,106,4,"assert"],[96,12,106,10],[96,13,106,11,"hmrClient"],[96,22,106,20],[96,24,106,22],[96,69,106,67],[96,70,106,68],[97,6,107,4,"pendingEntryPoints"],[97,24,107,22],[97,25,107,23,"push"],[97,29,107,27],[97,30,107,28,"requestUrl"],[97,40,107,38],[97,41,107,39],[98,6,108,4,"registerBundleEntryPoints"],[98,31,108,29],[98,32,108,30,"hmrClient"],[98,41,108,39],[98,42,108,40],[99,4,109,2],[99,5,109,3],[100,4,111,2,"log"],[100,7,111,5,"log"],[100,8,111,6,"level"],[100,13,111,21],[100,15,111,23,"data"],[100,19,111,34],[100,21,111,36],[101,6,112,4],[101,10,112,8],[101,11,112,9,"hmrClient"],[101,20,112,18],[101,22,112,20],[102,8,113,6],[103,8,114,6],[104,8,115,6,"pendingLogs"],[104,19,115,17],[104,20,115,18,"push"],[104,24,115,22],[104,25,115,23],[104,26,115,24,"level"],[104,31,115,29],[104,33,115,31,"data"],[104,37,115,35],[104,38,115,36],[104,39,115,37],[105,8,116,6],[105,12,116,10,"pendingLogs"],[105,23,116,21],[105,24,116,22,"length"],[105,30,116,28],[105,33,116,31],[105,36,116,34],[105,38,116,36],[106,10,117,8,"pendingLogs"],[106,21,117,19],[106,22,117,20,"shift"],[106,27,117,25],[106,28,117,26],[106,29,117,27],[107,8,118,6],[108,8,119,6],[109,6,120,4],[110,6,121,4],[110,10,121,8],[111,8,122,6,"hmrClient"],[111,17,122,15],[111,18,122,16,"send"],[111,22,122,20],[111,23,123,8,"JSON"],[111,27,123,12],[111,28,123,13,"stringify"],[111,37,123,22],[111,38,123,23],[112,10,124,10,"type"],[112,14,124,14],[112,16,124,16],[112,21,124,21],[113,10,125,10,"level"],[113,15,125,15],[114,10,126,10,"platform"],[114,18,126,18],[114,20,126,20],[114,25,126,25],[115,10,127,10,"mode"],[115,14,127,14],[115,16,127,16],[115,24,127,24],[116,10,128,10,"data"],[116,14,128,14],[116,16,128,16,"data"],[116,20,128,20],[116,21,128,21,"map"],[116,24,128,24],[116,25,128,26,"item"],[116,29,128,30],[116,33,129,12],[116,40,129,19,"item"],[116,44,129,23],[116,49,129,28],[116,57,129,36],[116,60,130,16,"item"],[116,64,130,20],[116,67,131,16,"prettyFormatFunc"],[116,83,131,32],[116,84,131,33,"item"],[116,88,131,37],[116,90,131,39],[117,12,132,18,"escapeString"],[117,24,132,30],[117,26,132,32],[117,30,132,36],[118,12,133,18,"highlight"],[118,21,133,27],[118,23,133,29],[118,27,133,33],[119,12,134,18,"maxDepth"],[119,20,134,26],[119,22,134,28],[119,23,134,29],[120,12,135,18,"min"],[120,15,135,21],[120,17,135,23],[120,21,135,27],[121,12,136,18,"plugins"],[121,19,136,25],[121,21,136,27],[121,22,136,28,"plugins"],[121,35,136,35],[121,36,136,35,"plugins"],[121,43,136,35],[121,44,136,36,"ReactElement"],[121,56,136,48],[122,10,137,16],[122,11,137,17],[122,12,138,10],[123,8,139,8],[123,9,139,9],[123,10,140,6],[123,11,140,7],[124,6,141,4],[124,7,141,5],[124,8,141,6],[124,14,141,12],[125,8,142,6],[126,8,143,6],[127,6,143,6],[128,4,145,2],[128,5,145,3],[129,4,147,2],[130,4,148,2],[131,4,149,2,"setup"],[131,9,149,7,"setup"],[131,10,149,8],[132,6,149,10,"isEnabled"],[133,4,149,44],[133,5,149,45],[133,7,149,47],[134,6,150,4,"assert"],[134,12,150,10],[134,13,150,11],[134,14,150,12,"hmrClient"],[134,23,150,21],[134,25,150,23],[134,60,150,58],[134,61,150,59],[135,6,152,4],[135,12,152,10,"serverScheme"],[135,24,152,22],[135,27,152,25,"window"],[135,33,152,31],[135,34,152,32,"location"],[135,42,152,40],[135,43,152,41,"protocol"],[135,51,152,49],[135,56,152,54],[135,64,152,62],[135,67,152,65],[135,72,152,70],[135,75,152,73],[135,79,152,77],[136,6,153,4],[136,12,153,10,"client"],[136,18,153,16],[136,21,153,19],[136,25,153,23,"MetroHMRClient"],[136,39,153,37],[136,40,153,37,"default"],[136,47,153,37],[136,48,153,38],[136,51,153,41,"serverScheme"],[136,63,153,53],[136,69,153,59,"window"],[136,75,153,65],[136,76,153,66,"location"],[136,84,153,74],[136,85,153,75,"host"],[136,89,153,79],[136,95,153,85],[136,96,153,86],[137,6,154,4,"hmrClient"],[137,15,154,13],[137,18,154,16,"client"],[137,24,154,22],[138,6,156,4],[138,12,156,10],[139,8,156,12,"fullBundleUrl"],[140,6,156,26],[140,7,156,27],[140,10,156,30],[140,14,156,30,"getDevServer"],[140,26,156,42],[140,27,156,42,"default"],[140,34,156,42],[140,36,156,43],[140,37,156,44],[141,6,157,4,"pendingEntryPoints"],[141,24,157,22],[141,25,157,23,"push"],[141,29,157,27],[142,6,158,6],[143,6,159,6],[144,6,160,6],[145,6,161,6,"fullBundleUrl"],[145,19,162,4],[145,20,162,5],[146,6,164,4,"client"],[146,12,164,10],[146,13,164,11,"on"],[146,15,164,13],[146,16,164,14],[146,34,164,32],[146,36,164,35,"e"],[146,37,164,43],[146,41,164,48],[147,8,165,6],[147,12,165,10,"error"],[147,17,165,15],[147,20,165,18],[148,0,166,0],[149,0,167,0],[150,0,168,0],[150,91,168,91],[151,8,169,6,"error"],[151,13,169,11],[151,17,169,15],[152,0,170,0],[153,0,171,0],[153,8,171,8,"window"],[153,14,171,14],[153,15,171,15,"location"],[153,23,171,23],[153,24,171,24,"host"],[153,28,171,28],[154,0,172,0],[155,0,173,0],[155,10,173,10,"e"],[155,11,173,11],[155,12,173,12,"message"],[155,19,173,19],[155,21,173,21],[156,8,175,6,"setHMRUnavailableReason"],[156,31,175,29],[156,32,175,30,"error"],[156,37,175,35],[156,38,175,36],[157,6,176,4],[157,7,176,5],[157,8,176,6],[158,6,178,4,"client"],[158,12,178,10],[158,13,178,11,"on"],[158,15,178,13],[158,16,178,14],[158,30,178,28],[158,32,178,30],[158,33,178,31],[159,8,178,33,"isInitialUpdate"],[160,6,178,80],[160,7,178,81],[160,12,178,86],[161,8,179,6,"currentCompileErrorMessage"],[161,34,179,32],[161,37,179,35],[161,41,179,39],[162,8,180,6,"didConnect"],[162,18,180,16],[162,21,180,19],[162,25,180,23],[163,8,182,6],[163,12,182,10,"client"],[163,18,182,16],[163,19,182,17,"isEnabled"],[163,28,182,26],[163,29,182,27],[163,30,182,28],[163,34,182,32],[163,35,182,33,"isInitialUpdate"],[163,50,182,48],[163,52,182,50],[164,10,183,8,"LoadingView"],[164,21,183,19],[164,22,183,19,"default"],[164,29,183,19],[164,30,183,20,"showMessage"],[164,41,183,31],[164,42,183,32],[164,57,183,47],[164,59,183,49],[164,68,183,58],[164,69,183,59],[165,8,184,6],[166,6,185,4],[166,7,185,5],[166,8,185,6],[167,6,187,4,"client"],[167,12,187,10],[167,13,187,11,"on"],[167,15,187,13],[167,16,187,14],[167,24,187,22],[167,26,187,24],[167,27,187,25],[168,8,187,27,"isInitialUpdate"],[169,6,187,74],[169,7,187,75],[169,12,187,80],[170,8,188,6],[170,12,188,10,"client"],[170,18,188,16],[170,19,188,17,"isEnabled"],[170,28,188,26],[170,29,188,27],[170,30,188,28],[170,34,188,32],[170,35,188,33,"isInitialUpdate"],[170,50,188,48],[170,52,188,50],[171,10,189,8,"dismissRedbox"],[171,23,189,21],[171,24,189,22],[171,25,189,23],[172,10,190,8,"LogBox"],[172,16,190,14],[172,17,190,14,"default"],[172,24,190,14],[172,25,190,15,"clearAllLogs"],[172,37,190,27],[172,38,190,28],[172,39,190,29],[173,8,191,6],[174,6,192,4],[174,7,192,5],[174,8,192,6],[175,6,194,4,"client"],[175,12,194,10],[175,13,194,11,"on"],[175,15,194,13],[175,16,194,14],[175,29,194,27],[175,31,194,29],[175,37,194,35],[176,8,195,6,"LoadingView"],[176,19,195,17],[176,20,195,17,"default"],[176,27,195,17],[176,28,195,18,"hide"],[176,32,195,22],[176,33,195,23],[176,34,195,24],[177,6,196,4],[177,7,196,5],[177,8,196,6],[178,6,198,4,"client"],[178,12,198,10],[178,13,198,11,"on"],[178,15,198,13],[178,16,198,14],[178,23,198,21],[178,25,198,24,"data"],[178,29,198,63],[178,33,198,68],[179,8,199,6,"LoadingView"],[179,19,199,17],[179,20,199,17,"default"],[179,27,199,17],[179,28,199,18,"hide"],[179,32,199,22],[179,33,199,23],[179,34,199,24],[180,8,201,6],[180,12,201,10,"data"],[180,16,201,14],[180,17,201,15,"type"],[180,21,201,19],[180,26,201,24],[180,46,201,44],[180,48,201,46],[181,10,202,8,"client"],[181,16,202,14],[181,17,202,15,"close"],[181,22,202,20],[181,23,202,21],[181,24,202,22],[182,10,203,8,"setHMRUnavailableReason"],[182,33,203,31],[182,34,203,32],[182,97,203,95],[182,98,203,96],[183,8,204,6],[183,9,204,7],[183,15,204,13],[183,19,204,17,"data"],[183,23,204,21],[183,24,204,22,"type"],[183,28,204,26],[183,33,204,31],[183,56,204,54],[183,58,204,56],[184,10,205,8,"client"],[184,16,205,14],[184,17,205,15,"close"],[184,22,205,20],[184,23,205,21],[184,24,205,22],[185,10,206,8,"setHMRUnavailableReason"],[185,33,206,31],[185,34,206,32],[185,94,206,92],[185,95,206,93],[186,8,207,6],[186,9,207,7],[186,15,207,13],[187,10,208,8,"currentCompileErrorMessage"],[187,36,208,34],[187,39,208,37],[187,42,208,40,"data"],[187,46,208,44],[187,47,208,45,"type"],[187,51,208,49],[187,55,208,53,"data"],[187,59,208,57],[187,60,208,58,"message"],[187,67,208,65],[187,69,208,67],[188,10,209,8],[188,14,209,12,"client"],[188,20,209,18],[188,21,209,19,"isEnabled"],[188,30,209,28],[188,31,209,29],[188,32,209,30],[188,34,209,32],[189,12,210,10,"showCompileError"],[189,28,210,26],[189,29,210,27],[189,30,210,28],[190,10,211,8],[191,8,212,6],[192,6,213,4],[192,7,213,5],[192,8,213,6],[193,6,215,4,"client"],[193,12,215,10],[193,13,215,11,"on"],[193,15,215,13],[193,16,215,14],[193,23,215,21],[193,25,215,24,"closeEvent"],[193,35,215,68],[193,39,215,73],[194,8,216,6,"LoadingView"],[194,19,216,17],[194,20,216,17,"default"],[194,27,216,17],[194,28,216,18,"hide"],[194,32,216,22],[194,33,216,23],[194,34,216,24],[196,8,218,6],[197,8,219,6],[198,8,220,6],[198,14,220,12,"isNormalOrUnsetCloseReason"],[198,40,220,38],[198,43,221,8,"closeEvent"],[198,53,221,18],[198,57,221,22],[198,61,221,26],[198,65,222,8,"closeEvent"],[198,75,222,18],[198,76,222,19,"code"],[198,80,222,23],[198,85,222,28],[198,89,222,32],[198,93,223,8,"closeEvent"],[198,103,223,18],[198,104,223,19,"code"],[198,108,223,23],[198,113,223,28],[198,117,223,32],[198,121,224,8,"closeEvent"],[198,131,224,18],[198,132,224,19,"code"],[198,136,224,23],[198,140,224,27],[198,144,224,31],[199,8,226,6,"setHMRUnavailableReason"],[199,31,226,29],[199,32,227,8],[199,35,228,10,"isNormalOrUnsetCloseReason"],[199,61,228,36],[199,64,229,14],[199,90,229,40],[199,93,230,14],[199,121,230,42,"closeEvent"],[199,131,230,52],[199,132,230,53,"code"],[199,136,230,57],[199,142,230,63,"closeEvent"],[199,152,230,73],[199,153,230,74,"reason"],[199,159,230,80],[199,164,230,85],[200,0,231,0],[201,0,232,0],[202,0,233,0],[203,0,234,0],[204,0,235,0],[204,7,237,6],[204,8,237,7],[205,6,238,4],[205,7,238,5],[205,8,238,6],[206,6,240,4],[206,10,240,8,"isEnabled"],[206,19,240,17],[206,21,240,19],[207,8,241,6,"HMRClient"],[207,17,241,15],[207,18,241,16,"enable"],[207,24,241,22],[207,25,241,23],[207,26,241,24],[208,6,242,4],[208,7,242,5],[208,13,242,11],[209,8,243,6,"HMRClient"],[209,17,243,15],[209,18,243,16,"disable"],[209,25,243,23],[209,26,243,24],[209,27,243,25],[210,6,244,4],[211,6,246,4,"registerBundleEntryPoints"],[211,31,246,29],[211,32,246,30,"hmrClient"],[211,41,246,39],[211,42,246,40],[212,6,247,4,"flushEarlyLogs"],[212,20,247,18],[212,21,247,19],[212,22,247,20],[213,4,248,2],[214,2,249,0],[214,3,249,1],[215,2,251,0],[215,11,251,9,"setHMRUnavailableReason"],[215,34,251,32,"setHMRUnavailableReason"],[215,35,251,33,"reason"],[215,41,251,47],[215,43,251,49],[216,4,252,2,"assert"],[216,10,252,8],[216,11,252,9,"hmrClient"],[216,20,252,18],[216,22,252,20],[216,67,252,65],[216,68,252,66],[217,4,253,2],[217,8,253,6,"hmrUnavailableReason"],[217,28,253,26],[217,33,253,31],[217,37,253,35],[217,39,253,37],[218,6,254,4],[219,6,255,4],[220,4,256,2],[221,4,257,2,"hmrUnavailableReason"],[221,24,257,22],[221,27,257,25,"reason"],[221,33,257,31],[223,4,259,2],[224,4,260,2],[225,4,261,2],[226,4,262,2],[226,8,262,6,"hmrClient"],[226,17,262,15],[226,18,262,16,"isEnabled"],[226,27,262,25],[226,28,262,26],[226,29,262,27],[226,33,262,31,"didConnect"],[226,43,262,41],[226,45,262,43],[227,6,263,4,"console"],[227,13,263,11],[227,14,263,12,"warn"],[227,18,263,16],[227,19,263,17,"reason"],[227,25,263,23],[227,26,263,24],[228,6,264,4],[229,4,265,2],[230,2,266,0],[231,2,268,0],[231,11,268,9,"registerBundleEntryPoints"],[231,36,268,34,"registerBundleEntryPoints"],[231,37,268,35,"client"],[231,43,268,63],[231,45,268,65],[232,4,269,2],[232,8,269,6,"hmrUnavailableReason"],[232,28,269,26],[232,32,269,30],[232,36,269,34],[232,38,269,36],[233,6,270,4],[234,6,271,4,"window"],[234,12,271,10],[234,13,271,11,"location"],[234,21,271,19],[234,22,271,20,"reload"],[234,28,271,26],[234,29,271,27],[234,30,271,28],[235,6,272,4],[236,4,273,2],[237,4,275,2],[237,8,275,6,"pendingEntryPoints"],[237,26,275,24],[237,27,275,25,"length"],[237,33,275,31],[237,36,275,34],[237,37,275,35],[237,39,275,37],[238,6,276,4,"client"],[238,12,276,10],[238,14,276,12,"send"],[238,18,276,16],[238,19,277,6,"JSON"],[238,23,277,10],[238,24,277,11,"stringify"],[238,33,277,20],[238,34,277,21],[239,8,278,8,"type"],[239,12,278,12],[239,14,278,14],[239,36,278,36],[240,8,279,8,"entryPoints"],[240,19,279,19],[240,21,279,21,"pendingEntryPoints"],[241,6,280,6],[241,7,280,7],[241,8,281,4],[241,9,281,5],[242,6,282,4,"pendingEntryPoints"],[242,24,282,22],[242,25,282,23,"length"],[242,31,282,29],[242,34,282,32],[242,35,282,33],[243,4,283,2],[244,2,284,0],[245,2,286,0],[245,11,286,9,"flushEarlyLogs"],[245,25,286,23,"flushEarlyLogs"],[245,26,286,23],[245,28,286,26],[246,4,287,2],[246,8,287,6],[247,6,288,4,"pendingLogs"],[247,17,288,15],[247,18,288,16,"forEach"],[247,25,288,23],[247,26,288,24],[247,27,288,25],[247,28,288,26,"level"],[247,33,288,31],[247,35,288,33,"data"],[247,39,288,37],[247,40,288,38],[247,45,288,43],[248,8,289,6,"HMRClient"],[248,17,289,15],[248,18,289,16,"log"],[248,21,289,19],[248,22,289,20,"level"],[248,27,289,25],[248,29,289,27,"data"],[248,33,289,31],[248,34,289,32],[249,6,290,4],[249,7,290,5],[249,8,290,6],[250,4,291,2],[250,5,291,3],[250,14,291,12],[251,6,292,4,"pendingLogs"],[251,17,292,15],[251,18,292,16,"length"],[251,24,292,22],[251,27,292,25],[251,28,292,26],[252,4,293,2],[253,2,294,0],[254,2,296,0],[254,11,296,9,"dismissRedbox"],[254,24,296,22,"dismissRedbox"],[254,25,296,22],[254,27,296,25],[255,4,297,2],[256,2,297,2],[257,2,300,0],[257,11,300,9,"showCompileError"],[257,27,300,25,"showCompileError"],[257,28,300,25],[257,30,300,28],[258,4,301,2],[258,8,301,6,"currentCompileErrorMessage"],[258,34,301,32],[258,39,301,37],[258,43,301,41],[258,45,301,43],[259,6,302,4],[260,4,303,2],[262,4,305,2],[263,4,306,2],[264,4,307,2,"dismissRedbox"],[264,17,307,15],[264,18,307,16],[264,19,307,17],[265,4,309,2],[265,10,309,8,"message"],[265,17,309,15],[265,20,309,18,"currentCompileErrorMessage"],[265,46,309,44],[266,4,310,2,"currentCompileErrorMessage"],[266,30,310,28],[266,33,310,31],[266,37,310,35],[267,4,312,2],[267,10,312,8,"error"],[267,15,312,13],[267,18,312,16],[267,22,312,20,"Error"],[267,27,312,25],[267,28,312,26,"message"],[267,35,312,33],[267,36,312,34],[268,4,313,2],[269,4,314,2],[270,4,315,2],[271,4,316,2,"error"],[271,9,316,7],[271,10,316,8,"preventSymbolication"],[271,30,316,28],[271,33,316,31],[271,37,316,35],[272,4,317,2],[272,10,317,8,"error"],[272,15,317,13],[273,2,318,0],[274,2,320,0],[274,6,320,0,"_default"],[274,14,320,0],[274,17,320,15,"HMRClient"],[274,26,320,24],[275,0,320,25],[275,3]],"functionMap":{"names":["<global>","assert","enable","disable","registerBundle","log","data.map$argument_0","setup","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;ACuD;CDE;EEO;GFiC;EGE;GHG;EIE;GJI;EKE;yBCiB;kBDS;GLQ;EOI;kCCe;KDY;8BCE;KDO;wBCE;KDK;6BCE;KDE;uBCE;KDe;uBCE;KDuB;GPU;ASG;CTe;AUE;CVgB;AWE;wBCE;KDE;CXI;AaE;CbE;AcE;CdkB"},"hasCjsExports":false},"type":"js/module"}]}