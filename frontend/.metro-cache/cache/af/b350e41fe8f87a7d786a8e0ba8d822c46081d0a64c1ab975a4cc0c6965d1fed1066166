{"dependencies":[{"name":"./AnimatedInterpolation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":225},"end":{"line":13,"column":60,"index":285}}],"key":"rc+0kZbcFDfUhy6xWENBgDldync=","exportNames":["*"],"imports":1}},{"name":"./AnimatedWithChildren","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":286},"end":{"line":14,"column":58,"index":344}}],"key":"IUkIH5MYbr+OqFsp9MMa/cV/D0g=","exportNames":["*"],"imports":1}},{"name":"../../../../exports/InteractionManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":345},"end":{"line":15,"column":72,"index":417}}],"key":"Vo2jnUHRPLhSe76GaFHNJKMNFAE=","exportNames":["*"],"imports":1}},{"name":"../NativeAnimatedHelper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":418},"end":{"line":16,"column":59,"index":477}}],"key":"7+Fs6fvkAbHB0IU2p+AMhuguGZA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _AnimatedInterpolation = require(_dependencyMap[0], \"./AnimatedInterpolation\");\n  var AnimatedInterpolation = _interopDefault(_AnimatedInterpolation);\n  var _AnimatedWithChildren = require(_dependencyMap[1], \"./AnimatedWithChildren\");\n  var AnimatedWithChildren = _interopDefault(_AnimatedWithChildren);\n  var _exportsInteractionManager = require(_dependencyMap[2], \"../../../../exports/InteractionManager\");\n  var InteractionManager = _interopDefault(_exportsInteractionManager);\n  var _NativeAnimatedHelper = require(_dependencyMap[3], \"../NativeAnimatedHelper\");\n  var NativeAnimatedHelper = _interopDefault(_NativeAnimatedHelper);\n  var NativeAnimatedAPI = NativeAnimatedHelper.default.API;\n\n  /**\n   * Animated works by building a directed acyclic graph of dependencies\n   * transparently when you render your Animated components.\n   *\n   *               new Animated.Value(0)\n   *     .interpolate()        .interpolate()    new Animated.Value(1)\n   *         opacity               translateY      scale\n   *          style                         transform\n   *         View#234                         style\n   *                                         View#123\n   *\n   * A) Top Down phase\n   * When an Animated.Value is updated, we recursively go down through this\n   * graph in order to find leaf nodes: the views that we flag as needing\n   * an update.\n   *\n   * B) Bottom Up phase\n   * When a view is flagged as needing an update, we recursively go back up\n   * in order to build the new value that it needs. The reason why we need\n   * this two-phases process is to deal with composite props such as\n   * transform which can receive values from multiple parents.\n   */\n  function _flush(rootNode) {\n    var animatedStyles = new Set();\n    function findAnimatedStyles(node) {\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the error\n       * delete this comment and run Flow. */\n      if (typeof node.update === 'function') {\n        animatedStyles.add(node);\n      } else {\n        node.__getChildren().forEach(findAnimatedStyles);\n      }\n    }\n    findAnimatedStyles(rootNode);\n    // $FlowFixMe[prop-missing]\n    animatedStyles.forEach(animatedStyle => animatedStyle.update());\n  }\n\n  /**\n   * Some operations are executed only on batch end, which is _mostly_ scheduled when\n   * Animated component props change. For some of the changes which require immediate execution\n   * (e.g. setValue), we create a separate batch in case none is scheduled.\n   */\n  function _executeAsAnimatedBatch(id, operation) {\n    NativeAnimatedAPI.setWaitingForIdentifier(id);\n    operation();\n    NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n  }\n\n  /**\n   * Standard value for driving animations.  One `Animated.Value` can drive\n   * multiple properties in a synchronized fashion, but can only be driven by one\n   * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n   * or calling `setValue`) will stop any previous ones.\n   *\n   * See https://reactnative.dev/docs/animatedvalue\n   */\n  class AnimatedValue extends AnimatedWithChildren.default {\n    constructor(value, config) {\n      super();\n      if (typeof value !== 'number') {\n        throw new Error('AnimatedValue: Attempting to set value to undefined');\n      }\n      this._startingValue = this._value = value;\n      this._offset = 0;\n      this._animation = null;\n      if (config && config.useNativeDriver) {\n        this.__makeNative();\n      }\n    }\n    __detach() {\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n          this._value = value - this._offset;\n        });\n      }\n      this.stopAnimation();\n      super.__detach();\n    }\n    __getValue() {\n      return this._value + this._offset;\n    }\n\n    /**\n     * Directly set the value.  This will stop any animations running on the value\n     * and update all the bound properties.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#setvalue\n     */\n    setValue(value) {\n      if (this._animation) {\n        this._animation.stop();\n        this._animation = null;\n      }\n      this._updateValue(value, !this.__isNative /* don't perform a flush for natively driven values */);\n      if (this.__isNative) {\n        _executeAsAnimatedBatch(this.__getNativeTag().toString(), () => NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value));\n      }\n    }\n\n    /**\n     * Sets an offset that is applied on top of whatever value is set, whether via\n     * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n     * things like the start of a pan gesture.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#setoffset\n     */\n    setOffset(offset) {\n      this._offset = offset;\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n      }\n    }\n\n    /**\n     * Merges the offset value into the base value and resets the offset to zero.\n     * The final output of the value is unchanged.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#flattenoffset\n     */\n    flattenOffset() {\n      this._value += this._offset;\n      this._offset = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n\n    /**\n     * Sets the offset value to the base value, and resets the base value to zero.\n     * The final output of the value is unchanged.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#extractoffset\n     */\n    extractOffset() {\n      this._offset += this._value;\n      this._value = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n\n    /**\n     * Stops any running animation or tracking. `callback` is invoked with the\n     * final value after stopping the animation, which is useful for updating\n     * state to match the animation position with layout.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#stopanimation\n     */\n    stopAnimation(callback) {\n      this.stopTracking();\n      this._animation && this._animation.stop();\n      this._animation = null;\n      if (callback) {\n        if (this.__isNative) {\n          NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n        } else {\n          callback(this.__getValue());\n        }\n      }\n    }\n\n    /**\n     * Stops any animation and resets the value to its original.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#resetanimation\n     */\n    resetAnimation(callback) {\n      this.stopAnimation(callback);\n      this._value = this._startingValue;\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), this._startingValue);\n      }\n    }\n    __onAnimatedValueUpdateReceived(value) {\n      this._updateValue(value, false /*flush*/);\n    }\n\n    /**\n     * Interpolates the value before updating the property, e.g. mapping 0-1 to\n     * 0-10.\n     */\n    interpolate(config) {\n      return new AnimatedInterpolation.default(this, config);\n    }\n\n    /**\n     * Typically only used internally, but could be used by a custom Animation\n     * class.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#animate\n     */\n    animate(animation, callback) {\n      var handle = null;\n      if (animation.__isInteraction) {\n        handle = InteractionManager.default.createInteractionHandle();\n      }\n      var previousAnimation = this._animation;\n      this._animation && this._animation.stop();\n      this._animation = animation;\n      animation.start(this._value, value => {\n        // Natively driven animations will never call into that callback\n        this._updateValue(value, true /* flush */);\n      }, result => {\n        this._animation = null;\n        if (handle !== null) {\n          InteractionManager.default.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      }, previousAnimation, this);\n    }\n\n    /**\n     * Typically only used internally.\n     */\n    stopTracking() {\n      this._tracking && this._tracking.__detach();\n      this._tracking = null;\n    }\n\n    /**\n     * Typically only used internally.\n     */\n    track(tracking) {\n      this.stopTracking();\n      this._tracking = tracking;\n      // Make sure that the tracking animation starts executing\n      this._tracking && this._tracking.update();\n    }\n    _updateValue(value, flush) {\n      if (value === undefined) {\n        throw new Error('AnimatedValue: Attempting to set value to undefined');\n      }\n      this._value = value;\n      if (flush) {\n        _flush(this);\n      }\n      super.__callListeners(this.__getValue());\n    }\n    __getNativeConfig() {\n      return {\n        type: 'value',\n        value: this._value,\n        offset: this._offset\n      };\n    }\n  }\n  var _default = AnimatedValue;\n});","lineCount":287,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13],[17,11,11,13,"_interopDefault"],[17,27,11,13,"e"],[17,28,11,13],[18,4,11,13],[18,11,11,13,"e"],[18,12,11,13],[18,16,11,13,"e"],[18,17,11,13],[18,18,11,13,"__esModule"],[18,28,11,13],[18,31,11,13,"e"],[18,32,11,13],[19,6,11,13,"default"],[19,13,11,13],[19,15,11,13,"e"],[20,4,11,13],[21,2,11,13],[22,2,267,0,"Object"],[22,8,267,0],[22,9,267,0,"defineProperty"],[22,23,267,0],[22,24,267,0,"exports"],[22,31,267,0],[23,4,267,0,"enumerable"],[23,14,267,0],[24,4,267,0,"get"],[24,7,267,0],[24,18,267,0,"get"],[24,19,267,0],[25,6,267,0],[25,13,267,0,"_default"],[25,21,267,0],[26,4,267,0],[27,2,267,0],[28,2,13,0],[28,6,13,0,"_AnimatedInterpolation"],[28,28,13,0],[28,31,13,0,"require"],[28,38,13,0],[28,39,13,0,"_dependencyMap"],[28,53,13,0],[29,2,13,0],[29,6,13,0,"AnimatedInterpolation"],[29,27,13,0],[29,30,13,0,"_interopDefault"],[29,45,13,0],[29,46,13,0,"_AnimatedInterpolation"],[29,68,13,0],[30,2,14,0],[30,6,14,0,"_AnimatedWithChildren"],[30,27,14,0],[30,30,14,0,"require"],[30,37,14,0],[30,38,14,0,"_dependencyMap"],[30,52,14,0],[31,2,14,0],[31,6,14,0,"AnimatedWithChildren"],[31,26,14,0],[31,29,14,0,"_interopDefault"],[31,44,14,0],[31,45,14,0,"_AnimatedWithChildren"],[31,66,14,0],[32,2,15,0],[32,6,15,0,"_exportsInteractionManager"],[32,32,15,0],[32,35,15,0,"require"],[32,42,15,0],[32,43,15,0,"_dependencyMap"],[32,57,15,0],[33,2,15,0],[33,6,15,0,"InteractionManager"],[33,24,15,0],[33,27,15,0,"_interopDefault"],[33,42,15,0],[33,43,15,0,"_exportsInteractionManager"],[33,69,15,0],[34,2,16,0],[34,6,16,0,"_NativeAnimatedHelper"],[34,27,16,0],[34,30,16,0,"require"],[34,37,16,0],[34,38,16,0,"_dependencyMap"],[34,52,16,0],[35,2,16,0],[35,6,16,0,"NativeAnimatedHelper"],[35,26,16,0],[35,29,16,0,"_interopDefault"],[35,44,16,0],[35,45,16,0,"_NativeAnimatedHelper"],[35,66,16,0],[36,2,17,0],[36,6,17,4,"NativeAnimatedAPI"],[36,23,17,21],[36,26,17,24,"NativeAnimatedHelper"],[36,46,17,44],[36,47,17,44,"default"],[36,54,17,44],[36,55,17,45,"API"],[36,58,17,48],[38,2,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[59,0,40,0],[60,2,41,0],[60,11,41,9,"_flush"],[60,17,41,15,"_flush"],[60,18,41,16,"rootNode"],[60,26,41,24],[60,28,41,26],[61,4,42,2],[61,8,42,6,"animatedStyles"],[61,22,42,20],[61,25,42,23],[61,29,42,27,"Set"],[61,32,42,30],[61,33,42,31],[61,34,42,32],[62,4,43,2],[62,13,43,11,"findAnimatedStyles"],[62,31,43,29,"findAnimatedStyles"],[62,32,43,30,"node"],[62,36,43,34],[62,38,43,36],[63,6,44,4],[64,0,45,0],[65,0,46,0],[66,6,47,4],[66,10,47,8],[66,17,47,15,"node"],[66,21,47,19],[66,22,47,20,"update"],[66,28,47,26],[66,33,47,31],[66,43,47,41],[66,45,47,43],[67,8,48,6,"animatedStyles"],[67,22,48,20],[67,23,48,21,"add"],[67,26,48,24],[67,27,48,25,"node"],[67,31,48,29],[67,32,48,30],[68,6,49,4],[68,7,49,5],[68,13,49,11],[69,8,50,6,"node"],[69,12,50,10],[69,13,50,11,"__getChildren"],[69,26,50,24],[69,27,50,25],[69,28,50,26],[69,29,50,27,"forEach"],[69,36,50,34],[69,37,50,35,"findAnimatedStyles"],[69,55,50,53],[69,56,50,54],[70,6,51,4],[71,4,52,2],[72,4,53,2,"findAnimatedStyles"],[72,22,53,20],[72,23,53,21,"rootNode"],[72,31,53,29],[72,32,53,30],[73,4,54,2],[74,4,55,2,"animatedStyles"],[74,18,55,16],[74,19,55,17,"forEach"],[74,26,55,24],[74,27,55,25,"animatedStyle"],[74,40,55,38],[74,44,55,42,"animatedStyle"],[74,57,55,55],[74,58,55,56,"update"],[74,64,55,62],[74,65,55,63],[74,66,55,64],[74,67,55,65],[75,2,56,0],[77,2,58,0],[78,0,59,0],[79,0,60,0],[80,0,61,0],[81,0,62,0],[82,2,63,0],[82,11,63,9,"_executeAsAnimatedBatch"],[82,34,63,32,"_executeAsAnimatedBatch"],[82,35,63,33,"id"],[82,37,63,35],[82,39,63,37,"operation"],[82,48,63,46],[82,50,63,48],[83,4,64,2,"NativeAnimatedAPI"],[83,21,64,19],[83,22,64,20,"setWaitingForIdentifier"],[83,45,64,43],[83,46,64,44,"id"],[83,48,64,46],[83,49,64,47],[84,4,65,2,"operation"],[84,13,65,11],[84,14,65,12],[84,15,65,13],[85,4,66,2,"NativeAnimatedAPI"],[85,21,66,19],[85,22,66,20,"unsetWaitingForIdentifier"],[85,47,66,45],[85,48,66,46,"id"],[85,50,66,48],[85,51,66,49],[86,2,67,0],[88,2,69,0],[89,0,70,0],[90,0,71,0],[91,0,72,0],[92,0,73,0],[93,0,74,0],[94,0,75,0],[95,0,76,0],[96,2,77,0],[96,8,77,6,"AnimatedValue"],[96,21,77,19],[96,30,77,28,"AnimatedWithChildren"],[96,50,77,48],[96,51,77,48,"default"],[96,58,77,48],[96,59,77,49],[97,4,78,2,"constructor"],[97,15,78,13,"constructor"],[97,16,78,14,"value"],[97,21,78,19],[97,23,78,21,"config"],[97,29,78,27],[97,31,78,29],[98,6,79,4],[98,11,79,9],[98,12,79,10],[98,13,79,11],[99,6,80,4],[99,10,80,8],[99,17,80,15,"value"],[99,22,80,20],[99,27,80,25],[99,35,80,33],[99,37,80,35],[100,8,81,6],[100,14,81,12],[100,18,81,16,"Error"],[100,23,81,21],[100,24,81,22],[100,77,81,75],[100,78,81,76],[101,6,82,4],[102,6,83,4],[102,10,83,8],[102,11,83,9,"_startingValue"],[102,25,83,23],[102,28,83,26],[102,32,83,30],[102,33,83,31,"_value"],[102,39,83,37],[102,42,83,40,"value"],[102,47,83,45],[103,6,84,4],[103,10,84,8],[103,11,84,9,"_offset"],[103,18,84,16],[103,21,84,19],[103,22,84,20],[104,6,85,4],[104,10,85,8],[104,11,85,9,"_animation"],[104,21,85,19],[104,24,85,22],[104,28,85,26],[105,6,86,4],[105,10,86,8,"config"],[105,16,86,14],[105,20,86,18,"config"],[105,26,86,24],[105,27,86,25,"useNativeDriver"],[105,42,86,40],[105,44,86,42],[106,8,87,6],[106,12,87,10],[106,13,87,11,"__makeNative"],[106,25,87,23],[106,26,87,24],[106,27,87,25],[107,6,88,4],[108,4,89,2],[109,4,90,2,"__detach"],[109,12,90,10,"__detach"],[109,13,90,10],[109,15,90,13],[110,6,91,4],[110,10,91,8],[110,14,91,12],[110,15,91,13,"__isNative"],[110,25,91,23],[110,27,91,25],[111,8,92,6,"NativeAnimatedAPI"],[111,25,92,23],[111,26,92,24,"getValue"],[111,34,92,32],[111,35,92,33],[111,39,92,37],[111,40,92,38,"__getNativeTag"],[111,54,92,52],[111,55,92,53],[111,56,92,54],[111,58,92,56,"value"],[111,63,92,61],[111,67,92,65],[112,10,93,8],[112,14,93,12],[112,15,93,13,"_value"],[112,21,93,19],[112,24,93,22,"value"],[112,29,93,27],[112,32,93,30],[112,36,93,34],[112,37,93,35,"_offset"],[112,44,93,42],[113,8,94,6],[113,9,94,7],[113,10,94,8],[114,6,95,4],[115,6,96,4],[115,10,96,8],[115,11,96,9,"stopAnimation"],[115,24,96,22],[115,25,96,23],[115,26,96,24],[116,6,97,4],[116,11,97,9],[116,12,97,10,"__detach"],[116,20,97,18],[116,21,97,19],[116,22,97,20],[117,4,98,2],[118,4,99,2,"__getValue"],[118,14,99,12,"__getValue"],[118,15,99,12],[118,17,99,15],[119,6,100,4],[119,13,100,11],[119,17,100,15],[119,18,100,16,"_value"],[119,24,100,22],[119,27,100,25],[119,31,100,29],[119,32,100,30,"_offset"],[119,39,100,37],[120,4,101,2],[122,4,103,2],[123,0,104,0],[124,0,105,0],[125,0,106,0],[126,0,107,0],[127,0,108,0],[128,4,109,2,"setValue"],[128,12,109,10,"setValue"],[128,13,109,11,"value"],[128,18,109,16],[128,20,109,18],[129,6,110,4],[129,10,110,8],[129,14,110,12],[129,15,110,13,"_animation"],[129,25,110,23],[129,27,110,25],[130,8,111,6],[130,12,111,10],[130,13,111,11,"_animation"],[130,23,111,21],[130,24,111,22,"stop"],[130,28,111,26],[130,29,111,27],[130,30,111,28],[131,8,112,6],[131,12,112,10],[131,13,112,11,"_animation"],[131,23,112,21],[131,26,112,24],[131,30,112,28],[132,6,113,4],[133,6,114,4],[133,10,114,8],[133,11,114,9,"_updateValue"],[133,23,114,21],[133,24,114,22,"value"],[133,29,114,27],[133,31,114,29],[133,32,114,30],[133,36,114,34],[133,37,114,35,"__isNative"],[133,47,114,45],[133,48,114,46],[133,102,114,100],[133,103,114,101],[134,6,115,4],[134,10,115,8],[134,14,115,12],[134,15,115,13,"__isNative"],[134,25,115,23],[134,27,115,25],[135,8,116,6,"_executeAsAnimatedBatch"],[135,31,116,29],[135,32,116,30],[135,36,116,34],[135,37,116,35,"__getNativeTag"],[135,51,116,49],[135,52,116,50],[135,53,116,51],[135,54,116,52,"toString"],[135,62,116,60],[135,63,116,61],[135,64,116,62],[135,66,116,64],[135,72,116,70,"NativeAnimatedAPI"],[135,89,116,87],[135,90,116,88,"setAnimatedNodeValue"],[135,110,116,108],[135,111,116,109],[135,115,116,113],[135,116,116,114,"__getNativeTag"],[135,130,116,128],[135,131,116,129],[135,132,116,130],[135,134,116,132,"value"],[135,139,116,137],[135,140,116,138],[135,141,116,139],[136,6,117,4],[137,4,118,2],[139,4,120,2],[140,0,121,0],[141,0,122,0],[142,0,123,0],[143,0,124,0],[144,0,125,0],[145,0,126,0],[146,4,127,2,"setOffset"],[146,13,127,11,"setOffset"],[146,14,127,12,"offset"],[146,20,127,18],[146,22,127,20],[147,6,128,4],[147,10,128,8],[147,11,128,9,"_offset"],[147,18,128,16],[147,21,128,19,"offset"],[147,27,128,25],[148,6,129,4],[148,10,129,8],[148,14,129,12],[148,15,129,13,"__isNative"],[148,25,129,23],[148,27,129,25],[149,8,130,6,"NativeAnimatedAPI"],[149,25,130,23],[149,26,130,24,"setAnimatedNodeOffset"],[149,47,130,45],[149,48,130,46],[149,52,130,50],[149,53,130,51,"__getNativeTag"],[149,67,130,65],[149,68,130,66],[149,69,130,67],[149,71,130,69,"offset"],[149,77,130,75],[149,78,130,76],[150,6,131,4],[151,4,132,2],[153,4,134,2],[154,0,135,0],[155,0,136,0],[156,0,137,0],[157,0,138,0],[158,0,139,0],[159,4,140,2,"flattenOffset"],[159,17,140,15,"flattenOffset"],[159,18,140,15],[159,20,140,18],[160,6,141,4],[160,10,141,8],[160,11,141,9,"_value"],[160,17,141,15],[160,21,141,19],[160,25,141,23],[160,26,141,24,"_offset"],[160,33,141,31],[161,6,142,4],[161,10,142,8],[161,11,142,9,"_offset"],[161,18,142,16],[161,21,142,19],[161,22,142,20],[162,6,143,4],[162,10,143,8],[162,14,143,12],[162,15,143,13,"__isNative"],[162,25,143,23],[162,27,143,25],[163,8,144,6,"NativeAnimatedAPI"],[163,25,144,23],[163,26,144,24,"flattenAnimatedNodeOffset"],[163,51,144,49],[163,52,144,50],[163,56,144,54],[163,57,144,55,"__getNativeTag"],[163,71,144,69],[163,72,144,70],[163,73,144,71],[163,74,144,72],[164,6,145,4],[165,4,146,2],[167,4,148,2],[168,0,149,0],[169,0,150,0],[170,0,151,0],[171,0,152,0],[172,0,153,0],[173,4,154,2,"extractOffset"],[173,17,154,15,"extractOffset"],[173,18,154,15],[173,20,154,18],[174,6,155,4],[174,10,155,8],[174,11,155,9,"_offset"],[174,18,155,16],[174,22,155,20],[174,26,155,24],[174,27,155,25,"_value"],[174,33,155,31],[175,6,156,4],[175,10,156,8],[175,11,156,9,"_value"],[175,17,156,15],[175,20,156,18],[175,21,156,19],[176,6,157,4],[176,10,157,8],[176,14,157,12],[176,15,157,13,"__isNative"],[176,25,157,23],[176,27,157,25],[177,8,158,6,"NativeAnimatedAPI"],[177,25,158,23],[177,26,158,24,"extractAnimatedNodeOffset"],[177,51,158,49],[177,52,158,50],[177,56,158,54],[177,57,158,55,"__getNativeTag"],[177,71,158,69],[177,72,158,70],[177,73,158,71],[177,74,158,72],[178,6,159,4],[179,4,160,2],[181,4,162,2],[182,0,163,0],[183,0,164,0],[184,0,165,0],[185,0,166,0],[186,0,167,0],[187,0,168,0],[188,4,169,2,"stopAnimation"],[188,17,169,15,"stopAnimation"],[188,18,169,16,"callback"],[188,26,169,24],[188,28,169,26],[189,6,170,4],[189,10,170,8],[189,11,170,9,"stopTracking"],[189,23,170,21],[189,24,170,22],[189,25,170,23],[190,6,171,4],[190,10,171,8],[190,11,171,9,"_animation"],[190,21,171,19],[190,25,171,23],[190,29,171,27],[190,30,171,28,"_animation"],[190,40,171,38],[190,41,171,39,"stop"],[190,45,171,43],[190,46,171,44],[190,47,171,45],[191,6,172,4],[191,10,172,8],[191,11,172,9,"_animation"],[191,21,172,19],[191,24,172,22],[191,28,172,26],[192,6,173,4],[192,10,173,8,"callback"],[192,18,173,16],[192,20,173,18],[193,8,174,6],[193,12,174,10],[193,16,174,14],[193,17,174,15,"__isNative"],[193,27,174,25],[193,29,174,27],[194,10,175,8,"NativeAnimatedAPI"],[194,27,175,25],[194,28,175,26,"getValue"],[194,36,175,34],[194,37,175,35],[194,41,175,39],[194,42,175,40,"__getNativeTag"],[194,56,175,54],[194,57,175,55],[194,58,175,56],[194,60,175,58,"callback"],[194,68,175,66],[194,69,175,67],[195,8,176,6],[195,9,176,7],[195,15,176,13],[196,10,177,8,"callback"],[196,18,177,16],[196,19,177,17],[196,23,177,21],[196,24,177,22,"__getValue"],[196,34,177,32],[196,35,177,33],[196,36,177,34],[196,37,177,35],[197,8,178,6],[198,6,179,4],[199,4,180,2],[201,4,182,2],[202,0,183,0],[203,0,184,0],[204,0,185,0],[205,0,186,0],[206,4,187,2,"resetAnimation"],[206,18,187,16,"resetAnimation"],[206,19,187,17,"callback"],[206,27,187,25],[206,29,187,27],[207,6,188,4],[207,10,188,8],[207,11,188,9,"stopAnimation"],[207,24,188,22],[207,25,188,23,"callback"],[207,33,188,31],[207,34,188,32],[208,6,189,4],[208,10,189,8],[208,11,189,9,"_value"],[208,17,189,15],[208,20,189,18],[208,24,189,22],[208,25,189,23,"_startingValue"],[208,39,189,37],[209,6,190,4],[209,10,190,8],[209,14,190,12],[209,15,190,13,"__isNative"],[209,25,190,23],[209,27,190,25],[210,8,191,6,"NativeAnimatedAPI"],[210,25,191,23],[210,26,191,24,"setAnimatedNodeValue"],[210,46,191,44],[210,47,191,45],[210,51,191,49],[210,52,191,50,"__getNativeTag"],[210,66,191,64],[210,67,191,65],[210,68,191,66],[210,70,191,68],[210,74,191,72],[210,75,191,73,"_startingValue"],[210,89,191,87],[210,90,191,88],[211,6,192,4],[212,4,193,2],[213,4,194,2,"__onAnimatedValueUpdateReceived"],[213,35,194,33,"__onAnimatedValueUpdateReceived"],[213,36,194,34,"value"],[213,41,194,39],[213,43,194,41],[214,6,195,4],[214,10,195,8],[214,11,195,9,"_updateValue"],[214,23,195,21],[214,24,195,22,"value"],[214,29,195,27],[214,31,195,29],[214,36,195,34],[214,37,195,35],[214,46,195,44],[214,47,195,45],[215,4,196,2],[217,4,198,2],[218,0,199,0],[219,0,200,0],[220,0,201,0],[221,4,202,2,"interpolate"],[221,15,202,13,"interpolate"],[221,16,202,14,"config"],[221,22,202,20],[221,24,202,22],[222,6,203,4],[222,13,203,11],[222,17,203,15,"AnimatedInterpolation"],[222,38,203,36],[222,39,203,36,"default"],[222,46,203,36],[222,47,203,37],[222,51,203,41],[222,53,203,43,"config"],[222,59,203,49],[222,60,203,50],[223,4,204,2],[225,4,206,2],[226,0,207,0],[227,0,208,0],[228,0,209,0],[229,0,210,0],[230,0,211,0],[231,4,212,2,"animate"],[231,11,212,9,"animate"],[231,12,212,10,"animation"],[231,21,212,19],[231,23,212,21,"callback"],[231,31,212,29],[231,33,212,31],[232,6,213,4],[232,10,213,8,"handle"],[232,16,213,14],[232,19,213,17],[232,23,213,21],[233,6,214,4],[233,10,214,8,"animation"],[233,19,214,17],[233,20,214,18,"__isInteraction"],[233,35,214,33],[233,37,214,35],[234,8,215,6,"handle"],[234,14,215,12],[234,17,215,15,"InteractionManager"],[234,35,215,33],[234,36,215,33,"default"],[234,43,215,33],[234,44,215,34,"createInteractionHandle"],[234,67,215,57],[234,68,215,58],[234,69,215,59],[235,6,216,4],[236,6,217,4],[236,10,217,8,"previousAnimation"],[236,27,217,25],[236,30,217,28],[236,34,217,32],[236,35,217,33,"_animation"],[236,45,217,43],[237,6,218,4],[237,10,218,8],[237,11,218,9,"_animation"],[237,21,218,19],[237,25,218,23],[237,29,218,27],[237,30,218,28,"_animation"],[237,40,218,38],[237,41,218,39,"stop"],[237,45,218,43],[237,46,218,44],[237,47,218,45],[238,6,219,4],[238,10,219,8],[238,11,219,9,"_animation"],[238,21,219,19],[238,24,219,22,"animation"],[238,33,219,31],[239,6,220,4,"animation"],[239,15,220,13],[239,16,220,14,"start"],[239,21,220,19],[239,22,220,20],[239,26,220,24],[239,27,220,25,"_value"],[239,33,220,31],[239,35,220,33,"value"],[239,40,220,38],[239,44,220,42],[240,8,221,6],[241,8,222,6],[241,12,222,10],[241,13,222,11,"_updateValue"],[241,25,222,23],[241,26,222,24,"value"],[241,31,222,29],[241,33,222,31],[241,37,222,35],[241,38,222,36],[241,49,222,47],[241,50,222,48],[242,6,223,4],[242,7,223,5],[242,9,223,7,"result"],[242,15,223,13],[242,19,223,17],[243,8,224,6],[243,12,224,10],[243,13,224,11,"_animation"],[243,23,224,21],[243,26,224,24],[243,30,224,28],[244,8,225,6],[244,12,225,10,"handle"],[244,18,225,16],[244,23,225,21],[244,27,225,25],[244,29,225,27],[245,10,226,8,"InteractionManager"],[245,28,226,26],[245,29,226,26,"default"],[245,36,226,26],[245,37,226,27,"clearInteractionHandle"],[245,59,226,49],[245,60,226,50,"handle"],[245,66,226,56],[245,67,226,57],[246,8,227,6],[247,8,228,6,"callback"],[247,16,228,14],[247,20,228,18,"callback"],[247,28,228,26],[247,29,228,27,"result"],[247,35,228,33],[247,36,228,34],[248,6,229,4],[248,7,229,5],[248,9,229,7,"previousAnimation"],[248,26,229,24],[248,28,229,26],[248,32,229,30],[248,33,229,31],[249,4,230,2],[251,4,232,2],[252,0,233,0],[253,0,234,0],[254,4,235,2,"stopTracking"],[254,16,235,14,"stopTracking"],[254,17,235,14],[254,19,235,17],[255,6,236,4],[255,10,236,8],[255,11,236,9,"_tracking"],[255,20,236,18],[255,24,236,22],[255,28,236,26],[255,29,236,27,"_tracking"],[255,38,236,36],[255,39,236,37,"__detach"],[255,47,236,45],[255,48,236,46],[255,49,236,47],[256,6,237,4],[256,10,237,8],[256,11,237,9,"_tracking"],[256,20,237,18],[256,23,237,21],[256,27,237,25],[257,4,238,2],[259,4,240,2],[260,0,241,0],[261,0,242,0],[262,4,243,2,"track"],[262,9,243,7,"track"],[262,10,243,8,"tracking"],[262,18,243,16],[262,20,243,18],[263,6,244,4],[263,10,244,8],[263,11,244,9,"stopTracking"],[263,23,244,21],[263,24,244,22],[263,25,244,23],[264,6,245,4],[264,10,245,8],[264,11,245,9,"_tracking"],[264,20,245,18],[264,23,245,21,"tracking"],[264,31,245,29],[265,6,246,4],[266,6,247,4],[266,10,247,8],[266,11,247,9,"_tracking"],[266,20,247,18],[266,24,247,22],[266,28,247,26],[266,29,247,27,"_tracking"],[266,38,247,36],[266,39,247,37,"update"],[266,45,247,43],[266,46,247,44],[266,47,247,45],[267,4,248,2],[268,4,249,2,"_updateValue"],[268,16,249,14,"_updateValue"],[268,17,249,15,"value"],[268,22,249,20],[268,24,249,22,"flush"],[268,29,249,27],[268,31,249,29],[269,6,250,4],[269,10,250,8,"value"],[269,15,250,13],[269,20,250,18,"undefined"],[269,29,250,27],[269,31,250,29],[270,8,251,6],[270,14,251,12],[270,18,251,16,"Error"],[270,23,251,21],[270,24,251,22],[270,77,251,75],[270,78,251,76],[271,6,252,4],[272,6,253,4],[272,10,253,8],[272,11,253,9,"_value"],[272,17,253,15],[272,20,253,18,"value"],[272,25,253,23],[273,6,254,4],[273,10,254,8,"flush"],[273,15,254,13],[273,17,254,15],[274,8,255,6,"_flush"],[274,14,255,12],[274,15,255,13],[274,19,255,17],[274,20,255,18],[275,6,256,4],[276,6,257,4],[276,11,257,9],[276,12,257,10,"__callListeners"],[276,27,257,25],[276,28,257,26],[276,32,257,30],[276,33,257,31,"__getValue"],[276,43,257,41],[276,44,257,42],[276,45,257,43],[276,46,257,44],[277,4,258,2],[278,4,259,2,"__getNativeConfig"],[278,21,259,19,"__getNativeConfig"],[278,22,259,19],[278,24,259,22],[279,6,260,4],[279,13,260,11],[280,8,261,6,"type"],[280,12,261,10],[280,14,261,12],[280,21,261,19],[281,8,262,6,"value"],[281,13,262,11],[281,15,262,13],[281,19,262,17],[281,20,262,18,"_value"],[281,26,262,24],[282,8,263,6,"offset"],[282,14,263,12],[282,16,263,14],[282,20,263,18],[282,21,263,19,"_offset"],[283,6,264,4],[283,7,264,5],[284,4,265,2],[285,2,266,0],[286,2,267,0],[286,6,267,0,"_default"],[286,14,267,0],[286,17,267,15,"AnimatedValue"],[286,30,267,28],[287,0,267,29],[287,3]],"functionMap":{"names":["<global>","_flush","findAnimatedStyles","animatedStyles.forEach$argument_0","_executeAsAnimatedBatch","AnimatedValue","constructor","__detach","NativeAnimatedAPI.getValue$argument_1","__getValue","setValue","_executeAsAnimatedBatch$argument_1","setOffset","flattenOffset","extractOffset","stopAnimation","resetAnimation","__onAnimatedValueUpdateReceived","interpolate","animate","animation.start$argument_1","animation.start$argument_2","stopTracking","track","_updateValue","__getNativeConfig"],"mappings":"AAA;ACwC;ECE;GDS;yBEG,uCF;CDC;AIO;CJI;AKU;ECC;GDW;EEC;wDCE;ODE;GFI;EIC;GJE;EKQ;gECO,0ED;GLE;EOS;GPK;EQQ;GRM;ESQ;GTM;EUS;GVW;EWO;GXM;EYC;GZE;EaM;GbE;EcQ;iCCQ;KDG,EE;KFM;GdC;EiBK;GjBG;EkBK;GlBK;EmBC;GnBS;EoBC;GpBM;CLC"},"hasCjsExports":false},"type":"js/module"}]}