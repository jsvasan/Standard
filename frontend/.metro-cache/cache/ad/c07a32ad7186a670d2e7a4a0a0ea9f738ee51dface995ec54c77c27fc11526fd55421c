{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseBase","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"jktBven9cFmiXr10q2uuMiBaNBg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseKey","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YYsVumDWjUPySlBONhl8so2wff4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _classPrivateFieldLooseBase2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n  var _classPrivateFieldLooseKey2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n  var _registry = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"registry\");\n  var EventEmitter = exports.default = /*#__PURE__*/function () {\n    function EventEmitter() {\n      (0, _classCallCheck2.default)(this, EventEmitter);\n      Object.defineProperty(this, _registry, {\n        writable: true,\n        value: {}\n      });\n    }\n    return (0, _createClass2.default)(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        if (typeof listener !== 'function') {\n          throw new TypeError('EventEmitter.addListener(...): 2nd argument must be a function.');\n        }\n        var registrations = allocate((0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry], eventType);\n        var registration = {\n          context,\n          listener,\n          remove() {\n            registrations.delete(registration);\n          }\n        };\n        registrations.add(registration);\n        return registration;\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var registrations = (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];\n        if (registrations != null) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          for (var registration of Array.from(registrations)) {\n            registration.listener.apply(registration.context, args);\n          }\n        }\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        if (eventType == null) {\n          (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry] = {};\n        } else {\n          delete (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];\n        }\n      }\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        var registrations = (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];\n        return registrations == null ? 0 : registrations.size;\n      }\n    }]);\n  }();\n  function allocate(registry, eventType) {\n    var registrations = registry[eventType];\n    if (registrations == null) {\n      registrations = new Set();\n      registry[eventType] = registrations;\n    }\n    return registrations;\n  }\n});","lineCount":75,"map":[[12,6,69,21,"EventEmitter"],[12,18,69,33],[12,21,69,33,"exports"],[12,28,69,33],[12,29,69,33,"default"],[12,36,69,33],[13,4,69,33],[13,13,69,33,"EventEmitter"],[13,26,69,33],[14,6,69,33],[14,10,69,33,"_classCallCheck2"],[14,26,69,33],[14,27,69,33,"default"],[14,34,69,33],[14,42,69,33,"EventEmitter"],[14,54,69,33],[15,6,69,33,"Object"],[15,12,69,33],[15,13,69,33,"defineProperty"],[15,27,69,33],[15,34,69,33,"_registry"],[15,43,69,33],[16,8,69,33,"writable"],[16,16,69,33],[17,8,69,33,"value"],[17,13,69,33],[17,15,76,41],[17,16,76,42],[18,6,76,43],[19,4,76,43],[20,4,76,43],[20,15,76,43,"_createClass2"],[20,28,76,43],[20,29,76,43,"default"],[20,36,76,43],[20,38,76,43,"EventEmitter"],[20,50,76,43],[21,6,76,43,"key"],[21,9,76,43],[22,6,76,43,"value"],[22,11,76,43],[22,13,82,2],[22,22,82,2,"addListener"],[22,33,82,13,"addListener"],[22,34,83,4,"eventType"],[22,43,83,21],[22,45,84,4,"listener"],[22,53,84,57],[22,55,85,4,"context"],[22,62,85,18],[22,64,86,23],[23,8,87,4],[23,12,87,8],[23,19,87,15,"listener"],[23,27,87,23],[23,32,87,28],[23,42,87,38],[23,44,87,40],[24,10,88,6],[24,16,88,12],[24,20,88,16,"TypeError"],[24,29,88,25],[24,30,89,8],[24,95,90,6],[24,96,90,7],[25,8,91,4],[26,8,92,4],[26,12,92,10,"registrations"],[26,25,92,23],[26,28,92,26,"allocate"],[26,36,92,34],[26,41,92,34,"_classPrivateFieldLooseBase2"],[26,69,92,34],[26,70,92,34,"default"],[26,77,92,34],[26,79,96,6],[26,83,96,10],[26,85,96,10,"_registry"],[26,94,96,10],[26,96,96,10,"_registry"],[26,105,96,10],[26,108,96,22,"eventType"],[26,117,96,31],[26,118,96,32],[27,8,97,4],[27,12,97,10,"registration"],[27,24,97,61],[27,27,97,64],[28,10,98,6,"context"],[28,17,98,13],[29,10,99,6,"listener"],[29,18,99,14],[30,10,100,6,"remove"],[30,16,100,12,"remove"],[30,17,100,12],[30,19,100,21],[31,12,101,8,"registrations"],[31,25,101,21],[31,26,101,22,"delete"],[31,32,101,28],[31,33,101,29,"registration"],[31,45,101,41],[31,46,101,42],[32,10,102,6],[33,8,103,4],[33,9,103,5],[34,8,104,4,"registrations"],[34,21,104,17],[34,22,104,18,"add"],[34,25,104,21],[34,26,104,22,"registration"],[34,38,104,34],[34,39,104,35],[35,8,105,4],[35,15,105,11,"registration"],[35,27,105,23],[36,6,106,2],[37,4,106,3],[38,6,106,3,"key"],[38,9,106,3],[39,6,106,3,"value"],[39,11,106,3],[39,13,115,2],[39,22,115,2,"emit"],[39,26,115,6,"emit"],[39,27,116,4,"eventType"],[39,36,116,21],[39,38,118,10],[40,8,119,4],[40,12,119,10,"registrations"],[40,25,119,68],[40,28,120,6],[40,32,120,6,"_classPrivateFieldLooseBase2"],[40,60,120,6],[40,61,120,6,"default"],[40,68,120,6],[40,74,120,10],[40,76,120,10,"_registry"],[40,85,120,10],[40,87,120,10,"_registry"],[40,96,120,10],[40,98,120,21,"eventType"],[40,107,120,30],[40,108,120,31],[41,8,121,4],[41,12,121,8,"registrations"],[41,25,121,21],[41,29,121,25],[41,33,121,29],[41,35,121,31],[42,10,121,31],[42,19,121,31,"_len"],[42,23,121,31],[42,26,121,31,"arguments"],[42,35,121,31],[42,36,121,31,"length"],[42,42,121,31],[42,44,117,7,"args"],[42,48,117,11],[42,55,117,11,"Array"],[42,60,117,11],[42,61,117,11,"_len"],[42,65,117,11],[42,72,117,11,"_len"],[42,76,117,11],[42,87,117,11,"_key"],[42,91,117,11],[42,97,117,11,"_key"],[42,101,117,11],[42,104,117,11,"_len"],[42,108,117,11],[42,110,117,11,"_key"],[42,114,117,11],[43,12,117,7,"args"],[43,16,117,11],[43,17,117,11,"_key"],[43,21,117,11],[43,29,117,11,"arguments"],[43,38,117,11],[43,39,117,11,"_key"],[43,43,117,11],[44,10,117,11],[45,10,124,6],[45,15,124,11],[45,19,124,17,"registration"],[45,31,124,29],[45,35,124,33,"Array"],[45,40,124,38],[45,41,124,39,"from"],[45,45,124,43],[45,46,124,44,"registrations"],[45,59,124,57],[45,60,124,58],[45,62,124,60],[46,12,126,8,"registration"],[46,24,126,20],[46,25,126,21,"listener"],[46,33,126,29],[46,34,126,30,"apply"],[46,39,126,35],[46,40,126,36,"registration"],[46,52,126,48],[46,53,126,49,"context"],[46,60,126,56],[46,62,126,58,"args"],[46,66,126,62],[46,67,126,63],[47,10,127,6],[48,8,128,4],[49,6,129,2],[50,4,129,3],[51,6,129,3,"key"],[51,9,129,3],[52,6,129,3,"value"],[52,11,129,3],[52,13,134,2],[52,22,134,2,"removeAllListeners"],[52,40,134,20,"removeAllListeners"],[52,41,135,4,"eventType"],[52,50,135,23],[52,52,136,10],[53,8,137,4],[53,12,137,8,"eventType"],[53,21,137,17],[53,25,137,21],[53,29,137,25],[53,31,137,27],[54,10,139,6],[54,14,139,6,"_classPrivateFieldLooseBase2"],[54,42,139,6],[54,43,139,6,"default"],[54,50,139,6],[54,56,139,10],[54,58,139,10,"_registry"],[54,67,139,10],[54,69,139,10,"_registry"],[54,78,139,10],[54,82,139,23],[54,83,139,24],[54,84,139,25],[55,8,140,4],[55,9,140,5],[55,15,140,11],[56,10,141,6],[56,17,141,13],[56,21,141,13,"_classPrivateFieldLooseBase2"],[56,49,141,13],[56,50,141,13,"default"],[56,57,141,13],[56,63,141,17],[56,65,141,17,"_registry"],[56,74,141,17],[56,76,141,17,"_registry"],[56,85,141,17],[56,87,141,28,"eventType"],[56,96,141,37],[56,97,141,38],[57,8,142,4],[58,6,143,2],[59,4,143,3],[60,6,143,3,"key"],[60,9,143,3],[61,6,143,3,"value"],[61,11,143,3],[61,13,148,2],[61,22,148,2,"listenerCount"],[61,35,148,15,"listenerCount"],[61,36,148,48,"eventType"],[61,45,148,65],[61,47,148,75],[62,8,149,4],[62,12,149,10,"registrations"],[62,25,149,68],[62,28,150,6],[62,32,150,6,"_classPrivateFieldLooseBase2"],[62,60,150,6],[62,61,150,6,"default"],[62,68,150,6],[62,74,150,10],[62,76,150,10,"_registry"],[62,85,150,10],[62,87,150,10,"_registry"],[62,96,150,10],[62,98,150,21,"eventType"],[62,107,150,30],[62,108,150,31],[63,8,151,4],[63,15,151,11,"registrations"],[63,28,151,24],[63,32,151,28],[63,36,151,32],[63,39,151,35],[63,40,151,36],[63,43,151,39,"registrations"],[63,56,151,52],[63,57,151,53,"size"],[63,61,151,57],[64,6,152,2],[65,4,152,3],[66,2,152,3],[67,2,155,0],[67,11,155,9,"allocate"],[67,19,155,17,"allocate"],[67,20,160,2,"registry"],[67,28,160,37],[67,30,161,2,"eventType"],[67,39,161,19],[67,41,162,46],[68,4,163,2],[68,8,163,6,"registrations"],[68,21,163,64],[68,24,164,4,"registry"],[68,32,164,12],[68,33,164,13,"eventType"],[68,42,164,22],[68,43,164,23],[69,4,165,2],[69,8,165,6,"registrations"],[69,21,165,19],[69,25,165,23],[69,29,165,27],[69,31,165,29],[70,6,166,4,"registrations"],[70,19,166,17],[70,22,166,20],[70,26,166,24,"Set"],[70,29,166,27],[70,30,166,28],[70,31,166,29],[71,6,167,4,"registry"],[71,14,167,12],[71,15,167,13,"eventType"],[71,24,167,22],[71,25,167,23],[71,28,167,26,"registrations"],[71,41,167,39],[72,4,168,2],[73,4,169,2],[73,11,169,9,"registrations"],[73,24,169,22],[74,2,170,0],[75,0,170,1],[75,3]],"functionMap":{"names":["<global>","EventEmitter","addListener","registration.remove","emit","removeAllListeners","listenerCount","allocate"],"mappings":"AAA;eCoE;ECa;MCkB;ODE;GDI;EGS;GHc;EIK;GJS;EKK;GLI;CDC;AOE"}},"type":"js/module"}]}