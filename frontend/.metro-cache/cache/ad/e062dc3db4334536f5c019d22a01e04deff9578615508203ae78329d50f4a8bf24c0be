{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../Utilities/infoLog","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":16},"end":{"line":13,"column":47}}],"key":"JOQiliPDxvxpS4qCtoh0JoUHvB4=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var infoLog = require(_dependencyMap[2], \"../Utilities/infoLog\").default;\n  var invariant = require(_dependencyMap[3], \"invariant\");\n  var DEBUG = false;\n  var TaskQueue = /*#__PURE__*/function () {\n    function TaskQueue(_ref) {\n      var onMoreTasks = _ref.onMoreTasks;\n      (0, _classCallCheck.default)(this, TaskQueue);\n      this._onMoreTasks = onMoreTasks;\n      this._queueStack = [{\n        tasks: [],\n        popable: false\n      }];\n    }\n    return (0, _createClass.default)(TaskQueue, [{\n      key: \"enqueue\",\n      value: function enqueue(task) {\n        this._getCurrentQueue().push(task);\n      }\n    }, {\n      key: \"enqueueTasks\",\n      value: function enqueueTasks(tasks) {\n        tasks.forEach(task => this.enqueue(task));\n      }\n    }, {\n      key: \"cancelTasks\",\n      value: function cancelTasks(tasksToCancel) {\n        this._queueStack = this._queueStack.map(queue => ({\n          ...queue,\n          tasks: queue.tasks.filter(task => tasksToCancel.indexOf(task) === -1)\n        })).filter((queue, idx) => queue.tasks.length > 0 || idx === 0);\n      }\n    }, {\n      key: \"hasTasksToProcess\",\n      value: function hasTasksToProcess() {\n        return this._getCurrentQueue().length > 0;\n      }\n    }, {\n      key: \"processNext\",\n      value: function processNext() {\n        var queue = this._getCurrentQueue();\n        if (queue.length) {\n          var task = queue.shift();\n          try {\n            if (typeof task === 'object' && task.gen) {\n              DEBUG && infoLog('TaskQueue: genPromise for task ' + task.name);\n              this._genPromise(task);\n            } else if (typeof task === 'object' && task.run) {\n              DEBUG && infoLog('TaskQueue: run task ' + task.name);\n              task.run();\n            } else {\n              invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n              DEBUG && infoLog('TaskQueue: run anonymous task');\n              task();\n            }\n          } catch (e) {\n            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n            throw e;\n          }\n        }\n      }\n    }, {\n      key: \"_getCurrentQueue\",\n      value: function _getCurrentQueue() {\n        var stackIdx = this._queueStack.length - 1;\n        var queue = this._queueStack[stackIdx];\n        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {\n          this._queueStack.pop();\n          DEBUG && infoLog('TaskQueue: popped queue: ', {\n            stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          return this._getCurrentQueue();\n        } else {\n          return queue.tasks;\n        }\n      }\n    }, {\n      key: \"_genPromise\",\n      value: function _genPromise(task) {\n        this._queueStack.push({\n          tasks: [],\n          popable: false\n        });\n        var stackIdx = this._queueStack.length - 1;\n        var stackItem = this._queueStack[stackIdx];\n        DEBUG && infoLog('TaskQueue: push new queue: ', {\n          stackIdx\n        });\n        DEBUG && infoLog('TaskQueue: exec gen task ' + task.name);\n        task.gen().then(() => {\n          DEBUG && infoLog('TaskQueue: onThen for gen task ' + task.name, {\n            stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          stackItem.popable = true;\n          this.hasTasksToProcess() && this._onMoreTasks();\n        }).catch(ex => {\n          setTimeout(() => {\n            ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;\n            throw ex;\n          }, 0);\n        });\n      }\n    }]);\n  }();\n  var _default = TaskQueue;\n});","lineCount":128,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13],[7,11,11,13,"_interopDefault"],[7,27,11,13,"e"],[7,28,11,13],[8,4,11,13],[8,11,11,13,"e"],[8,12,11,13],[8,16,11,13,"e"],[8,17,11,13],[8,18,11,13,"__esModule"],[8,28,11,13],[8,31,11,13,"e"],[8,32,11,13],[9,6,11,13,"default"],[9,13,11,13],[9,15,11,13,"e"],[10,4,11,13],[11,2,11,13],[12,2,183,0,"Object"],[12,8,183,0],[12,9,183,0,"defineProperty"],[12,23,183,0],[12,24,183,0,"exports"],[12,31,183,0],[13,4,183,0,"enumerable"],[13,14,183,0],[14,4,183,0,"get"],[14,7,183,0],[14,18,183,0,"get"],[14,19,183,0],[15,6,183,0],[15,13,183,0,"_default"],[15,21,183,0],[16,4,183,0],[17,2,183,0],[18,2,183,25],[18,6,183,25,"_babelRuntimeHelpersClassCallCheck"],[18,40,183,25],[18,43,183,25,"require"],[18,50,183,25],[18,51,183,25,"_dependencyMap"],[18,65,183,25],[19,2,183,25],[19,6,183,25,"_classCallCheck"],[19,21,183,25],[19,24,183,25,"_interopDefault"],[19,39,183,25],[19,40,183,25,"_babelRuntimeHelpersClassCallCheck"],[19,74,183,25],[20,2,183,25],[20,6,183,25,"_babelRuntimeHelpersCreateClass"],[20,37,183,25],[20,40,183,25,"require"],[20,47,183,25],[20,48,183,25,"_dependencyMap"],[20,62,183,25],[21,2,183,25],[21,6,183,25,"_createClass"],[21,18,183,25],[21,21,183,25,"_interopDefault"],[21,36,183,25],[21,37,183,25,"_babelRuntimeHelpersCreateClass"],[21,68,183,25],[22,2,13,0],[22,6,13,6,"infoLog"],[22,13,13,13],[22,16,13,16,"require"],[22,23,13,23],[22,24,13,23,"_dependencyMap"],[22,38,13,23],[22,65,13,46],[22,66,13,47],[22,67,13,48,"default"],[22,74,13,55],[23,2,14,0],[23,6,14,6,"invariant"],[23,15,14,15],[23,18,14,18,"require"],[23,25,14,25],[23,26,14,25,"_dependencyMap"],[23,40,14,25],[23,56,14,37],[23,57,14,38],[24,2,26,0],[24,6,26,6,"DEBUG"],[24,11,26,18],[24,14,26,21],[24,19,26,26],[25,2,26,27],[25,6,44,6,"TaskQueue"],[25,15,44,15],[26,4,52,2],[26,13,52,2,"TaskQueue"],[26,23,52,2,"_ref"],[26,27,52,2],[26,29,52,61],[27,6,52,61],[27,10,52,15,"onMoreTasks"],[27,21,52,26],[27,24,52,26,"_ref"],[27,28,52,26],[27,29,52,15,"onMoreTasks"],[27,40,52,26],[28,6,52,26],[28,10,52,26,"_classCallCheck"],[28,25,52,26],[28,26,52,26,"default"],[28,33,52,26],[28,41,52,26,"TaskQueue"],[28,50,52,26],[29,6,53,4],[29,10,53,8],[29,11,53,9,"_onMoreTasks"],[29,23,53,21],[29,26,53,24,"onMoreTasks"],[29,37,53,35],[30,6,54,4],[30,10,54,8],[30,11,54,9,"_queueStack"],[30,22,54,20],[30,25,54,23],[30,26,54,24],[31,8,54,25,"tasks"],[31,13,54,30],[31,15,54,32],[31,17,54,34],[32,8,54,36,"popable"],[32,15,54,43],[32,17,54,45],[33,6,54,50],[33,7,54,51],[33,8,54,52],[34,4,55,2],[35,4,55,3],[35,15,55,3,"_createClass"],[35,27,55,3],[35,28,55,3,"default"],[35,35,55,3],[35,37,55,3,"TaskQueue"],[35,46,55,3],[36,6,55,3,"key"],[36,9,55,3],[37,6,55,3,"value"],[37,11,55,3],[37,13,62,2],[37,22,62,2,"enqueue"],[37,29,62,9,"enqueue"],[37,30,62,10,"task"],[37,34,62,20],[37,36,62,28],[38,8,63,4],[38,12,63,8],[38,13,63,9,"_getCurrentQueue"],[38,29,63,25],[38,30,63,26],[38,31,63,27],[38,32,63,28,"push"],[38,36,63,32],[38,37,63,33,"task"],[38,41,63,37],[38,42,63,38],[39,6,64,2],[40,4,64,3],[41,6,64,3,"key"],[41,9,64,3],[42,6,64,3,"value"],[42,11,64,3],[42,13,66,2],[42,22,66,2,"enqueueTasks"],[42,34,66,14,"enqueueTasks"],[42,35,66,15,"tasks"],[42,40,66,33],[42,42,66,41],[43,8,67,4,"tasks"],[43,13,67,9],[43,14,67,10,"forEach"],[43,21,67,17],[43,22,67,18,"task"],[43,26,67,22],[43,30,67,26],[43,34,67,30],[43,35,67,31,"enqueue"],[43,42,67,38],[43,43,67,39,"task"],[43,47,67,43],[43,48,67,44],[43,49,67,45],[44,6,68,2],[45,4,68,3],[46,6,68,3,"key"],[46,9,68,3],[47,6,68,3,"value"],[47,11,68,3],[47,13,70,2],[47,22,70,2,"cancelTasks"],[47,33,70,13,"cancelTasks"],[47,34,70,14,"tasksToCancel"],[47,47,70,40],[47,49,70,48],[48,8,72,4],[48,12,72,8],[48,13,72,9,"_queueStack"],[48,24,72,20],[48,27,72,23],[48,31,72,27],[48,32,72,28,"_queueStack"],[48,43,72,39],[48,44,73,7,"map"],[48,47,73,10],[48,48,73,11,"queue"],[48,53,73,16],[48,58,73,21],[49,10,74,8],[49,13,74,11,"queue"],[49,18,74,16],[50,10,75,8,"tasks"],[50,15,75,13],[50,17,75,15,"queue"],[50,22,75,20],[50,23,75,21,"tasks"],[50,28,75,26],[50,29,75,27,"filter"],[50,35,75,33],[50,36,75,34,"task"],[50,40,75,38],[50,44,75,42,"tasksToCancel"],[50,57,75,55],[50,58,75,56,"indexOf"],[50,65,75,63],[50,66,75,64,"task"],[50,70,75,68],[50,71,75,69],[50,76,75,74],[50,77,75,75],[50,78,75,76],[51,8,76,6],[51,9,76,7],[51,10,76,8],[51,11,76,9],[51,12,77,7,"filter"],[51,18,77,13],[51,19,77,14],[51,20,77,15,"queue"],[51,25,77,20],[51,27,77,22,"idx"],[51,30,77,25],[51,35,77,30,"queue"],[51,40,77,35],[51,41,77,36,"tasks"],[51,46,77,41],[51,47,77,42,"length"],[51,53,77,48],[51,56,77,51],[51,57,77,52],[51,61,77,56,"idx"],[51,64,77,59],[51,69,77,64],[51,70,77,65],[51,71,77,66],[52,6,78,2],[53,4,78,3],[54,6,78,3,"key"],[54,9,78,3],[55,6,78,3,"value"],[55,11,78,3],[55,13,90,2],[55,22,90,2,"hasTasksToProcess"],[55,39,90,19,"hasTasksToProcess"],[55,40,90,19],[55,42,90,31],[56,8,91,4],[56,15,91,11],[56,19,91,15],[56,20,91,16,"_getCurrentQueue"],[56,36,91,32],[56,37,91,33],[56,38,91,34],[56,39,91,35,"length"],[56,45,91,41],[56,48,91,44],[56,49,91,45],[57,6,92,2],[58,4,92,3],[59,6,92,3,"key"],[59,9,92,3],[60,6,92,3,"value"],[60,11,92,3],[60,13,97,2],[60,22,97,2,"processNext"],[60,33,97,13,"processNext"],[60,34,97,13],[60,36,97,22],[61,8,98,4],[61,12,98,10,"queue"],[61,17,98,15],[61,20,98,18],[61,24,98,22],[61,25,98,23,"_getCurrentQueue"],[61,41,98,39],[61,42,98,40],[61,43,98,41],[62,8,99,4],[62,12,99,8,"queue"],[62,17,99,13],[62,18,99,14,"length"],[62,24,99,20],[62,26,99,22],[63,10,100,6],[63,14,100,12,"task"],[63,18,100,16],[63,21,100,19,"queue"],[63,26,100,24],[63,27,100,25,"shift"],[63,32,100,30],[63,33,100,31],[63,34,100,32],[64,10,101,6],[64,14,101,10],[65,12,102,8],[65,16,102,12],[65,23,102,19,"task"],[65,27,102,23],[65,32,102,28],[65,40,102,36],[65,44,102,40,"task"],[65,48,102,44],[65,49,102,45,"gen"],[65,52,102,48],[65,54,102,50],[66,14,103,10,"DEBUG"],[66,19,103,15],[66,23,103,19,"infoLog"],[66,30,103,26],[66,31,103,27],[66,64,103,60],[66,67,103,63,"task"],[66,71,103,67],[66,72,103,68,"name"],[66,76,103,72],[66,77,103,73],[67,14,104,10],[67,18,104,14],[67,19,104,15,"_genPromise"],[67,30,104,26],[67,31,104,27,"task"],[67,35,104,31],[67,36,104,32],[68,12,105,8],[68,13,105,9],[68,19,105,15],[68,23,105,19],[68,30,105,26,"task"],[68,34,105,30],[68,39,105,35],[68,47,105,43],[68,51,105,47,"task"],[68,55,105,51],[68,56,105,52,"run"],[68,59,105,55],[68,61,105,57],[69,14,106,10,"DEBUG"],[69,19,106,15],[69,23,106,19,"infoLog"],[69,30,106,26],[69,31,106,27],[69,53,106,49],[69,56,106,52,"task"],[69,60,106,56],[69,61,106,57,"name"],[69,65,106,61],[69,66,106,62],[70,14,107,10,"task"],[70,18,107,14],[70,19,107,15,"run"],[70,22,107,18],[70,23,107,19],[70,24,107,20],[71,12,108,8],[71,13,108,9],[71,19,108,15],[72,14,109,10,"invariant"],[72,23,109,19],[72,24,110,12],[72,31,110,19,"task"],[72,35,110,23],[72,40,110,28],[72,50,110,38],[72,52,111,12],[72,111,111,71],[72,114,112,14,"JSON"],[72,118,112,18],[72,119,112,19,"stringify"],[72,128,112,28],[72,129,112,29,"task"],[72,133,112,33],[72,135,112,35],[72,139,112,39],[72,141,112,41],[72,142,112,42],[72,143,113,10],[72,144,113,11],[73,14,114,10,"DEBUG"],[73,19,114,15],[73,23,114,19,"infoLog"],[73,30,114,26],[73,31,114,27],[73,62,114,58],[73,63,114,59],[74,14,115,10,"task"],[74,18,115,14],[74,19,115,15],[74,20,115,16],[75,12,116,8],[76,10,117,6],[76,11,117,7],[76,12,117,8],[76,19,117,15,"e"],[76,20,117,16],[76,22,117,18],[77,12,118,8,"e"],[77,13,118,9],[77,14,118,10,"message"],[77,21,118,17],[77,24,120,10],[77,53,120,39],[77,57,120,43,"task"],[77,61,120,47],[77,62,120,48,"name"],[77,66,120,52],[77,70,120,56],[77,72,120,58],[77,73,120,59],[77,76,120,62],[77,80,120,66],[77,83,120,69,"e"],[77,84,120,70],[77,85,120,71,"message"],[77,92,120,78],[78,12,121,8],[78,18,121,14,"e"],[78,19,121,15],[79,10,122,6],[80,8,123,4],[81,6,124,2],[82,4,124,3],[83,6,124,3,"key"],[83,9,124,3],[84,6,124,3,"value"],[84,11,124,3],[84,13,133,2],[84,22,133,2,"_getCurrentQueue"],[84,38,133,18,"_getCurrentQueue"],[84,39,133,18],[84,41,133,34],[85,8,134,4],[85,12,134,10,"stackIdx"],[85,20,134,18],[85,23,134,21],[85,27,134,25],[85,28,134,26,"_queueStack"],[85,39,134,37],[85,40,134,38,"length"],[85,46,134,44],[85,49,134,47],[85,50,134,48],[86,8,135,4],[86,12,135,10,"queue"],[86,17,135,15],[86,20,135,18],[86,24,135,22],[86,25,135,23,"_queueStack"],[86,36,135,34],[86,37,135,35,"stackIdx"],[86,45,135,43],[86,46,135,44],[87,8,136,4],[87,12,137,6,"queue"],[87,17,137,11],[87,18,137,12,"popable"],[87,25,137,19],[87,29,138,6,"queue"],[87,34,138,11],[87,35,138,12,"tasks"],[87,40,138,17],[87,41,138,18,"length"],[87,47,138,24],[87,52,138,29],[87,53,138,30],[87,57,139,6],[87,61,139,10],[87,62,139,11,"_queueStack"],[87,73,139,22],[87,74,139,23,"length"],[87,80,139,29],[87,83,139,32],[87,84,139,33],[87,86,140,6],[88,10,141,6],[88,14,141,10],[88,15,141,11,"_queueStack"],[88,26,141,22],[88,27,141,23,"pop"],[88,30,141,26],[88,31,141,27],[88,32,141,28],[89,10,142,6,"DEBUG"],[89,15,142,11],[89,19,143,8,"infoLog"],[89,26,143,15],[89,27,143,16],[89,54,143,43],[89,56,143,45],[90,12,144,10,"stackIdx"],[90,20,144,18],[91,12,145,10,"queueStackSize"],[91,26,145,24],[91,28,145,26],[91,32,145,30],[91,33,145,31,"_queueStack"],[91,44,145,42],[91,45,145,43,"length"],[92,10,146,8],[92,11,146,9],[92,12,146,10],[93,10,147,6],[93,17,147,13],[93,21,147,17],[93,22,147,18,"_getCurrentQueue"],[93,38,147,34],[93,39,147,35],[93,40,147,36],[94,8,148,4],[94,9,148,5],[94,15,148,11],[95,10,149,6],[95,17,149,13,"queue"],[95,22,149,18],[95,23,149,19,"tasks"],[95,28,149,24],[96,8,150,4],[97,6,151,2],[98,4,151,3],[99,6,151,3,"key"],[99,9,151,3],[100,6,151,3,"value"],[100,11,151,3],[100,13,153,2],[100,22,153,2,"_genPromise"],[100,33,153,13,"_genPromise"],[100,34,153,14,"task"],[100,38,153,31],[100,40,153,33],[101,8,158,4],[101,12,158,8],[101,13,158,9,"_queueStack"],[101,24,158,20],[101,25,158,21,"push"],[101,29,158,25],[101,30,158,26],[102,10,158,27,"tasks"],[102,15,158,32],[102,17,158,34],[102,19,158,36],[103,10,158,38,"popable"],[103,17,158,45],[103,19,158,47],[104,8,158,52],[104,9,158,53],[104,10,158,54],[105,8,159,4],[105,12,159,10,"stackIdx"],[105,20,159,18],[105,23,159,21],[105,27,159,25],[105,28,159,26,"_queueStack"],[105,39,159,37],[105,40,159,38,"length"],[105,46,159,44],[105,49,159,47],[105,50,159,48],[106,8,160,4],[106,12,160,10,"stackItem"],[106,21,160,19],[106,24,160,22],[106,28,160,26],[106,29,160,27,"_queueStack"],[106,40,160,38],[106,41,160,39,"stackIdx"],[106,49,160,47],[106,50,160,48],[107,8,161,4,"DEBUG"],[107,13,161,9],[107,17,161,13,"infoLog"],[107,24,161,20],[107,25,161,21],[107,54,161,50],[107,56,161,52],[108,10,161,53,"stackIdx"],[109,8,161,61],[109,9,161,62],[109,10,161,63],[110,8,162,4,"DEBUG"],[110,13,162,9],[110,17,162,13,"infoLog"],[110,24,162,20],[110,25,162,21],[110,52,162,48],[110,55,162,51,"task"],[110,59,162,55],[110,60,162,56,"name"],[110,64,162,60],[110,65,162,61],[111,8,163,4,"task"],[111,12,163,8],[111,13,164,7,"gen"],[111,16,164,10],[111,17,164,11],[111,18,164,12],[111,19,165,7,"then"],[111,23,165,11],[111,24,165,12],[111,30,165,18],[112,10,166,8,"DEBUG"],[112,15,166,13],[112,19,167,10,"infoLog"],[112,26,167,17],[112,27,167,18],[112,60,167,51],[112,63,167,54,"task"],[112,67,167,58],[112,68,167,59,"name"],[112,72,167,63],[112,74,167,65],[113,12,168,12,"stackIdx"],[113,20,168,20],[114,12,169,12,"queueStackSize"],[114,26,169,26],[114,28,169,28],[114,32,169,32],[114,33,169,33,"_queueStack"],[114,44,169,44],[114,45,169,45,"length"],[115,10,170,10],[115,11,170,11],[115,12,170,12],[116,10,171,8,"stackItem"],[116,19,171,17],[116,20,171,18,"popable"],[116,27,171,25],[116,30,171,28],[116,34,171,32],[117,10,172,8],[117,14,172,12],[117,15,172,13,"hasTasksToProcess"],[117,32,172,30],[117,33,172,31],[117,34,172,32],[117,38,172,36],[117,42,172,40],[117,43,172,41,"_onMoreTasks"],[117,55,172,53],[117,56,172,54],[117,57,172,55],[118,8,173,6],[118,9,173,7],[118,10,173,8],[118,11,174,7,"catch"],[118,16,174,12],[118,17,174,13,"ex"],[118,19,174,15],[118,23,174,19],[119,10,175,8,"setTimeout"],[119,20,175,18],[119,21,175,19],[119,27,175,25],[120,12,176,10,"ex"],[120,14,176,12],[120,15,176,13,"message"],[120,22,176,20],[120,25,176,23],[120,71,176,69,"task"],[120,75,176,73],[120,76,176,74,"name"],[120,80,176,78],[120,85,176,83,"ex"],[120,87,176,85],[120,88,176,86,"message"],[120,95,176,93],[120,97,176,95],[121,12,177,10],[121,18,177,16,"ex"],[121,20,177,18],[122,10,178,8],[122,11,178,9],[122,13,178,11],[122,14,178,12],[122,15,178,13],[123,8,179,6],[123,9,179,7],[123,10,179,8],[124,6,180,2],[125,4,180,3],[126,2,180,3],[127,2,183,0],[127,6,183,0,"_default"],[127,14,183,0],[127,17,183,15,"TaskQueue"],[127,26,183,24],[128,0,183,25],[128,3]],"functionMap":{"names":["<global>","TaskQueue","constructor","enqueue","enqueueTasks","tasks.forEach$argument_0","cancelTasks","_queueStack.map$argument_0","queue.tasks.filter$argument_0","_queueStack.map.filter$argument_0","hasTasksToProcess","processNext","_getCurrentQueue","_genPromise","task.gen.then$argument_0","task.gen.then._catch$argument_0","setTimeout$argument_0"],"mappings":"AAA;AC2C;ECQ;GDG;EEO;GFE;EGE;kBCC,0BD;GHC;EKE;WCG;kCCE,0CD;QDC;cGC,mDH;GLC;ESY;GTE;EUK;GV2B;EWS;GXkB;EYE;YCY;ODQ;aEC;mBCC;SDG;OFC;GZC;CDC"},"hasCjsExports":false},"type":"js/module"}]}