{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-asset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"ZXJFWHziJpBZf3W7vl00wXf6fd8=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":47,"index":83}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoFontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":84},"end":{"line":3,"column":46,"index":130}}],"key":"7dk3JQGwGYesJt8OOG3pkBz+dtE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getAssetForSource = getAssetForSource;\n  exports.loadSingleFontAsync = loadSingleFontAsync;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoAsset = require(_dependencyMap[1], \"expo-asset\");\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _ExpoFontLoader = require(_dependencyMap[3], \"./ExpoFontLoader\");\n  var ExpoFontLoader = _interopDefault(_ExpoFontLoader);\n  function getAssetForSource(source) {\n    if (source instanceof _expoAsset.Asset) {\n      return source;\n    }\n    if (typeof source === 'string') {\n      return _expoAsset.Asset.fromURI(source);\n    } else if (typeof source === 'number') {\n      return _expoAsset.Asset.fromModule(source);\n    } else if (typeof source === 'object' && typeof source.uri !== 'undefined') {\n      return getAssetForSource(source.uri);\n    }\n    // @ts-ignore Error: Type 'string' is not assignable to type 'Asset'\n    // We can't have a string here, we would have thrown an error if !isWeb\n    // or returned Asset.fromModule if isWeb.\n    return source;\n  }\n  function loadSingleFontAsync(_x, _x2) {\n    return _loadSingleFontAsync.apply(this, arguments);\n  }\n  function _loadSingleFontAsync() {\n    _loadSingleFontAsync = (0, _asyncToGenerator.default)(function* (name, input) {\n      var asset = input;\n      if (!asset.downloadAsync) {\n        throw new _expoModulesCore.CodedError(`ERR_FONT_SOURCE`, '`loadSingleFontAsync` expected resource of type `Asset` from expo-asset on native');\n      }\n      yield asset.downloadAsync();\n      if (!asset.downloaded) {\n        throw new _expoModulesCore.CodedError(`ERR_DOWNLOAD`, `Failed to download asset for font \"${name}\"`);\n      }\n      yield ExpoFontLoader.default.loadAsync(name, asset.localUri);\n    });\n    return _loadSingleFontAsync.apply(this, arguments);\n  }\n});","lineCount":53,"map":[[12,2,4,0,"exports"],[12,9,4,0],[12,10,4,0,"getAssetForSource"],[12,27,4,0],[12,30,4,0,"getAssetForSource"],[12,47,4,0],[13,2,22,0,"exports"],[13,9,22,0],[13,10,22,0,"loadSingleFontAsync"],[13,29,22,0],[13,32,22,0,"loadSingleFontAsync"],[13,51,22,0],[14,2,32,1],[14,6,32,1,"_babelRuntimeHelpersAsyncToGenerator"],[14,42,32,1],[14,45,32,1,"require"],[14,52,32,1],[14,53,32,1,"_dependencyMap"],[14,67,32,1],[15,2,32,1],[15,6,32,1,"_asyncToGenerator"],[15,23,32,1],[15,26,32,1,"_interopDefault"],[15,41,32,1],[15,42,32,1,"_babelRuntimeHelpersAsyncToGenerator"],[15,78,32,1],[16,2,1,0],[16,6,1,0,"_expoAsset"],[16,16,1,0],[16,19,1,0,"require"],[16,26,1,0],[16,27,1,0,"_dependencyMap"],[16,41,1,0],[17,2,2,0],[17,6,2,0,"_expoModulesCore"],[17,22,2,0],[17,25,2,0,"require"],[17,32,2,0],[17,33,2,0,"_dependencyMap"],[17,47,2,0],[18,2,3,0],[18,6,3,0,"_ExpoFontLoader"],[18,21,3,0],[18,24,3,0,"require"],[18,31,3,0],[18,32,3,0,"_dependencyMap"],[18,46,3,0],[19,2,3,0],[19,6,3,0,"ExpoFontLoader"],[19,20,3,0],[19,23,3,0,"_interopDefault"],[19,38,3,0],[19,39,3,0,"_ExpoFontLoader"],[19,54,3,0],[20,2,4,7],[20,11,4,16,"getAssetForSource"],[20,28,4,33,"getAssetForSource"],[20,29,4,34,"source"],[20,35,4,40],[20,37,4,42],[21,4,5,4],[21,8,5,8,"source"],[21,14,5,14],[21,26,5,26,"Asset"],[21,36,5,31],[21,37,5,31,"Asset"],[21,42,5,31],[21,44,5,33],[22,6,6,8],[22,13,6,15,"source"],[22,19,6,21],[23,4,7,4],[24,4,8,4],[24,8,8,8],[24,15,8,15,"source"],[24,21,8,21],[24,26,8,26],[24,34,8,34],[24,36,8,36],[25,6,9,8],[25,13,9,15,"Asset"],[25,23,9,20],[25,24,9,20,"Asset"],[25,29,9,20],[25,30,9,21,"fromURI"],[25,37,9,28],[25,38,9,29,"source"],[25,44,9,35],[25,45,9,36],[26,4,10,4],[26,5,10,5],[26,11,11,9],[26,15,11,13],[26,22,11,20,"source"],[26,28,11,26],[26,33,11,31],[26,41,11,39],[26,43,11,41],[27,6,12,8],[27,13,12,15,"Asset"],[27,23,12,20],[27,24,12,20,"Asset"],[27,29,12,20],[27,30,12,21,"fromModule"],[27,40,12,31],[27,41,12,32,"source"],[27,47,12,38],[27,48,12,39],[28,4,13,4],[28,5,13,5],[28,11,14,9],[28,15,14,13],[28,22,14,20,"source"],[28,28,14,26],[28,33,14,31],[28,41,14,39],[28,45,14,43],[28,52,14,50,"source"],[28,58,14,56],[28,59,14,57,"uri"],[28,62,14,60],[28,67,14,65],[28,78,14,76],[28,80,14,78],[29,6,15,8],[29,13,15,15,"getAssetForSource"],[29,30,15,32],[29,31,15,33,"source"],[29,37,15,39],[29,38,15,40,"uri"],[29,41,15,43],[29,42,15,44],[30,4,16,4],[31,4,17,4],[32,4,18,4],[33,4,19,4],[34,4,20,4],[34,11,20,11,"source"],[34,17,20,17],[35,2,21,0],[36,2,21,1],[36,11,22,22,"loadSingleFontAsync"],[36,30,22,41,"loadSingleFontAsync"],[36,31,22,41,"_x"],[36,33,22,41],[36,35,22,41,"_x2"],[36,38,22,41],[37,4,22,41],[37,11,22,41,"_loadSingleFontAsync"],[37,31,22,41],[37,32,22,41,"apply"],[37,37,22,41],[37,44,22,41,"arguments"],[37,53,22,41],[38,2,22,41],[39,2,22,41],[39,11,22,41,"_loadSingleFontAsync"],[39,32,22,41],[40,4,22,41,"_loadSingleFontAsync"],[40,24,22,41],[40,31,22,41,"_asyncToGenerator"],[40,48,22,41],[40,49,22,41,"default"],[40,56,22,41],[40,58,22,7],[40,69,22,42,"name"],[40,73,22,46],[40,75,22,48,"input"],[40,80,22,53],[40,82,22,55],[41,6,23,4],[41,10,23,10,"asset"],[41,15,23,15],[41,18,23,18,"input"],[41,23,23,23],[42,6,24,4],[42,10,24,8],[42,11,24,9,"asset"],[42,16,24,14],[42,17,24,15,"downloadAsync"],[42,30,24,28],[42,32,24,30],[43,8,25,8],[43,14,25,14],[43,18,25,18,"CodedError"],[43,34,25,28],[43,35,25,28,"CodedError"],[43,45,25,28],[43,46,25,29],[43,63,25,46],[43,65,25,48],[43,148,25,131],[43,149,25,132],[44,6,26,4],[45,6,27,4],[45,12,27,10,"asset"],[45,17,27,15],[45,18,27,16,"downloadAsync"],[45,31,27,29],[45,32,27,30],[45,33,27,31],[46,6,28,4],[46,10,28,8],[46,11,28,9,"asset"],[46,16,28,14],[46,17,28,15,"downloaded"],[46,27,28,25],[46,29,28,27],[47,8,29,8],[47,14,29,14],[47,18,29,18,"CodedError"],[47,34,29,28],[47,35,29,28,"CodedError"],[47,45,29,28],[47,46,29,29],[47,60,29,43],[47,62,29,45],[47,100,29,83,"name"],[47,104,29,87],[47,107,29,90],[47,108,29,91],[48,6,30,4],[49,6,31,4],[49,12,31,10,"ExpoFontLoader"],[49,26,31,24],[49,27,31,24,"default"],[49,34,31,24],[49,35,31,25,"loadAsync"],[49,44,31,34],[49,45,31,35,"name"],[49,49,31,39],[49,51,31,41,"asset"],[49,56,31,46],[49,57,31,47,"localUri"],[49,65,31,55],[49,66,31,56],[50,4,32,0],[50,5,32,1],[51,4,32,1],[51,11,32,1,"_loadSingleFontAsync"],[51,31,32,1],[51,32,32,1,"apply"],[51,37,32,1],[51,44,32,1,"arguments"],[51,53,32,1],[52,2,32,1],[53,0,32,1],[53,3]],"functionMap":{"names":["<global>","getAssetForSource","loadSingleFontAsync"],"mappings":"AAA;OCG;CDiB;OEC;CFU"},"hasCjsExports":false},"type":"js/module"}]}