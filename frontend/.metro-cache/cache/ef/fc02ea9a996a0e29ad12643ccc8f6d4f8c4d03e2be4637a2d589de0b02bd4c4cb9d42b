{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./bytesToUuid","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"xaWt6Yz4UoVWhmPSw/5J6OHvgNE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,e,d){var t=r(d[0]);Object.defineProperty(e,\"__esModule\",{value:!0}),e.default=function(t,u,f){const s=function(t,s,i,y){const l=i&&y||0;if('string'==typeof t&&(t=c(t)),'string'==typeof s&&(s=o(s)),!Array.isArray(t))throw TypeError('value must be an array of bytes');if(!Array.isArray(s)||16!==s.length)throw TypeError('namespace must be uuid string or an Array of 16 byte values');const b=f(s.concat(t));if(b[6]=15&b[6]|u,b[8]=63&b[8]|128,i)for(let t=0;t<16;++t)i[l+t]=b[t];return(0,n.default)(b)};try{s.name=t}catch{}return s.DNS='6ba7b810-9dad-11d1-80b4-00c04fd430c8',s.URL='6ba7b811-9dad-11d1-80b4-00c04fd430c8',s};var n=t(r(d[1]));function o(t){const n=[];return t.replace(/[a-fA-F0-9]{2}/g,t=>(n.push(parseInt(t,16)),'')),n}function c(t){t=unescape(encodeURIComponent(t));const n=new Array(t.length);for(let o=0;o<t.length;o++)n[o]=t.charCodeAt(o);return n}});","lineCount":1,"map":[[1,102,23,15],[1,111,24,2,"name"],[1,113,25,2,"version"],[1,115,26,2,"hashfunc"],[1,118,28,2],[1,124,28,8,"generateUUID"],[1,126,28,23],[1,135,29,4,"value"],[1,137,30,4,"namespace"],[1,139,31,4,"buf"],[1,141,32,4,"offset"],[1,144,34,4],[1,150,34,10,"off"],[1,152,34,17,"buf"],[1,155,34,24,"offset"],[1,158,34,35],[1,160,39,4],[1,163,36,24],[1,180,36,15,"value"],[1,184,36,34,"value"],[1,186,36,42,"stringToBytes"],[1,188,36,56,"value"],[1,192,37,28],[1,209,37,15,"namespace"],[1,213,37,38,"namespace"],[1,215,37,50,"uuidToBytes"],[1,217,37,62,"namespace"],[1,222,39,9,"Array"],[1,228,39,15,"isArray"],[1,236,39,23,"value"],[1,239,39,31],[1,245,39,37,"TypeError"],[1,255,39,47],[1,290,40,4],[1,294,40,9,"Array"],[1,300,40,15,"isArray"],[1,308,40,23,"namespace"],[1,312,40,58],[1,317,40,37,"namespace"],[1,319,40,47,"length"],[1,326,41,6],[1,332,41,12,"TypeError"],[1,342,41,22],[1,405,44,4],[1,411,44,10,"bytes"],[1,413,44,18,"hashfunc"],[1,415,44,27,"namespace"],[1,417,44,37,"concat"],[1,424,44,44,"value"],[1,428,48,4],[1,431,45,4,"bytes"],[1,433,45,10],[1,436,45,27],[1,439,45,16,"bytes"],[1,441,45,22],[1,444,45,35,"version"],[1,446,46,4,"bytes"],[1,448,46,10],[1,451,46,27],[1,454,46,16,"bytes"],[1,456,46,22],[1,459,46,35],[1,463,48,8,"buf"],[1,465,49,6],[1,469,49,11],[1,473,49,15,"idx"],[1,475,49,21],[1,477,49,24,"idx"],[1,479,49,30],[1,484,49,36,"idx"],[1,486,50,8,"buf"],[1,488,50,12,"off"],[1,490,50,18,"idx"],[1,493,50,25,"bytes"],[1,495,50,31,"idx"],[1,498,54,4],[1,505,54,11],[1,507,54,11,"bytesToUuid"],[1,518,54,23,"bytes"],[1,520,55,2],[1,522,58,2],[1,526,59,4,"generateUUID"],[1,528,59,17,"name"],[1,533,59,24,"name"],[1,534,60,2],[1,535,60,4],[1,541,60,11],[1,542,66,2],[1,549,63,2,"generateUUID"],[1,551,63,15,"DNS"],[1,555,63,21],[1,594,64,2,"generateUUID"],[1,596,64,15,"URL"],[1,600,64,21],[1,639,66,9,"generateUUID"],[1,640,67,0],[1,642,1,0],[1,646,1,0,"_bytesToUuid"],[1,648,1,0,"_interopRequireDefault"],[1,650,1,0,"r"],[1,652,1,0,"d"],[1,654,1,0],[1,659,3,0],[1,668,3,9,"uuidToBytes"],[1,670,3,21,"uuid"],[1,673,5,2],[1,679,5,8,"bytes"],[1,681,5,26],[1,684,11,2],[1,691,6,2,"uuid"],[1,693,6,7,"replace"],[1,701,6,15],[1,719,6,35,"hex"],[1,723,7,4,"bytes"],[1,725,7,10,"push"],[1,730,7,15,"parseInt"],[1,739,7,24,"hex"],[1,741,7,29],[1,746,8,11],[1,751,11,9,"bytes"],[1,752,12,0],[1,753,14,0],[1,762,14,9,"stringToBytes"],[1,764,14,23,"str"],[1,767,15,2,"str"],[1,769,15,8,"unescape"],[1,778,15,17,"encodeURIComponent"],[1,797,15,36,"str"],[1,801,16,2],[1,807,16,8,"bytes"],[1,809,16,26],[1,813,16,30,"Array"],[1,819,16,36,"str"],[1,821,16,40,"length"],[1,829,17,2],[1,833,17,7],[1,837,17,11,"i"],[1,839,17,15],[1,841,17,18,"i"],[1,843,17,22,"str"],[1,845,17,26,"length"],[1,852,17,34,"i"],[1,856,18,4,"bytes"],[1,858,18,10,"i"],[1,861,18,15,"str"],[1,863,18,19,"charCodeAt"],[1,874,18,30,"i"],[1,877,20,2],[1,884,20,9,"bytes"],[1,885,21,0],[1,886,67,1],[1,889]],"functionMap":{"names":["<global>","uuidToBytes","uuid.replace$argument_1","stringToBytes","default","generateUUID"],"mappings":"AAA;ACE;kCCG;GDG;CDG;AGE;CHO;eIE;uBCK;GD2B;CJY"}},"type":"js/module"}]}