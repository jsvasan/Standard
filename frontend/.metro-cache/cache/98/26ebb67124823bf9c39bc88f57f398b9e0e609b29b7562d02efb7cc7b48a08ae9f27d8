{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"]}},{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"2ER/r3Agt+5SFwaFR8HXg24Rpu4=","exportNames":["*"]}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"rNxrvQaXjK4/vUvPksJpbMJ5u+4=","exportNames":["*"]}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"81XLedmR1ugWwxXMAacEe45V43M=","exportNames":["*"]}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"]}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"E5lU3h554k94C0V5puhR219BWnU=","exportNames":["*"]}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"UPnefzBCahUrTRoOWw51hXJ7z+A=","exportNames":["*"]}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"AWXnpGNA5UkH1qQUM7hLv2L9KzI=","exportNames":["*"]}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"vPXNy6i2DuFIp7nHtHgSOvNmS+U=","exportNames":["*"]}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"A/nq9Y/xSFBE06OzxjBtNMD9uQU=","exportNames":["*"]}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"YbGte4vf40k4Yjb9DRJvUiBpPUk=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"+uLQCjZF6jwjpLbZFDGLy8MVJhc=","exportNames":["*"]}},{"name":"./useClientLayoutEffect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":67,"index":885}}],"key":"LhoNk5P88pw/w9+MH8FRVAlr+OQ=","exportNames":["*"]}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":886},"end":{"line":19,"column":49,"index":935}}],"key":"b66LKsk9Jf3uaP2v5j6OCNwoJlU=","exportNames":["*"]}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":936},"end":{"line":20,"column":57,"index":993}}],"key":"McuG59KD5h0BHxEULOXCoLs/e2E=","exportNames":["*"]}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":994},"end":{"line":21,"column":53,"index":1047}}],"key":"G1CfJySCSkhPC7rH5rQhaqLaTI0=","exportNames":["*"]}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1048},"end":{"line":22,"column":55,"index":1103}}],"key":"f/gs/fnvuaPtRHedK9bCgn238kE=","exportNames":["*"]}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1104},"end":{"line":23,"column":93,"index":1197}}],"key":"OygHMRn4bEenld73jIuOxQ+gu9U=","exportNames":["*"]}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1198},"end":{"line":24,"column":53,"index":1251}}],"key":"8zqWYqMNSd/k9LIqrmfq1M3LrQU=","exportNames":["*"]}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1252},"end":{"line":25,"column":69,"index":1321}}],"key":"uvEgxGYPcoeW+RryvJ51Glj8+aw=","exportNames":["*"]}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1322},"end":{"line":26,"column":49,"index":1371}}],"key":"4aMiFZmnD/ZJbzJTaYI7ECYTV2s=","exportNames":["*"]}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1372},"end":{"line":27,"column":65,"index":1437}}],"key":"c9g7geoBBHpEed2xjMQ2EV7DCFE=","exportNames":["*"]}},{"name":"./useNavigationState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":1438},"end":{"line":28,"column":74,"index":1512}}],"key":"YLzO6pWqOUYOyLCSKhbq1BFmhy0=","exportNames":["*"]}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":1513},"end":{"line":29,"column":47,"index":1560}}],"key":"oVCZ93YyJFpAvJlQLQH3T1CuCCk=","exportNames":["*"]}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":1561},"end":{"line":30,"column":51,"index":1612}}],"key":"/XMjJjmKD4ejBJNDiIDjXKDJRFk=","exportNames":["*"]}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1613},"end":{"line":31,"column":55,"index":1668}}],"key":"5V4g0kBeeaIrUwTen4o2q6oj60U=","exportNames":["*"]}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":1669},"end":{"line":32,"column":65,"index":1734}}],"key":"KZzTt58Kkr/mzgiCdvRDRowLya8=","exportNames":["*"]}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":1735},"end":{"line":33,"column":59,"index":1794}}],"key":"FnFZL3NH40gExc7dikLfREzDCec=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1910},"end":{"line":37,"column":48,"index":1958}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _routers = require(_dependencyMap[3], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(require(_dependencyMap[4], \"react\"));\n  var _reactIs = require(_dependencyMap[5], \"react-is\");\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[6], \"use-latest-callback\"));\n  var _deepFreeze = require(_dependencyMap[7], \"./deepFreeze.js\");\n  var _Group = require(_dependencyMap[8], \"./Group.js\");\n  var _isArrayEqual = require(_dependencyMap[9], \"./isArrayEqual.js\");\n  var _isRecordEqual = require(_dependencyMap[10], \"./isRecordEqual.js\");\n  var _NavigationHelpersContext = require(_dependencyMap[11], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContext = require(_dependencyMap[12], \"./NavigationRouteContext.js\");\n  var _NavigationStateContext = require(_dependencyMap[13], \"./NavigationStateContext.js\");\n  var _PreventRemoveProvider = require(_dependencyMap[14], \"./PreventRemoveProvider.js\");\n  var _Screen = require(_dependencyMap[15], \"./Screen.js\");\n  var _types = require(_dependencyMap[16], \"./types.js\");\n  var _useChildListeners2 = require(_dependencyMap[17], \"./useChildListeners.js\");\n  var _useClientLayoutEffect = require(_dependencyMap[18], \"./useClientLayoutEffect.js\");\n  var _useComponent = require(_dependencyMap[19], \"./useComponent.js\");\n  var _useCurrentRender = require(_dependencyMap[20], \"./useCurrentRender.js\");\n  var _useDescriptors2 = require(_dependencyMap[21], \"./useDescriptors.js\");\n  var _useEventEmitter = require(_dependencyMap[22], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapter = require(_dependencyMap[23], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEvents = require(_dependencyMap[24], \"./useFocusEvents.js\");\n  var _useKeyedChildListeners = require(_dependencyMap[25], \"./useKeyedChildListeners.js\");\n  var _useLazyValue = require(_dependencyMap[26], \"./useLazyValue.js\");\n  var _useNavigationHelpers = require(_dependencyMap[27], \"./useNavigationHelpers.js\");\n  var _useNavigationState = require(_dependencyMap[28], \"./useNavigationState.js\");\n  var _useOnAction = require(_dependencyMap[29], \"./useOnAction.js\");\n  var _useOnGetState = require(_dependencyMap[30], \"./useOnGetState.js\");\n  var _useOnRouteFocus = require(_dependencyMap[31], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigator = require(_dependencyMap[32], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdate = require(_dependencyMap[33], \"./useScheduleUpdate.js\");\n  var _jsxRuntime = require(_dependencyMap[34], \"react/jsx-runtime\");\n  var _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\", \"UNSTABLE_router\"]; // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  _types.PrivateValueStore;\n  var isScreen = child => {\n    return child.type === _Screen.Screen;\n  };\n  var isGroup = child => {\n    return child.type === React.Fragment || child.type === _Group.Group;\n  };\n  var isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  var getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    var configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _Group.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        var _config$props = config.props,\n          name = _config$props.name,\n          children = _config$props.children,\n          component = _config$props.component,\n          getComponent = _config$props.getComponent;\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, _useRegisterNavigator.useRegisterNavigator)();\n    var route = React.useContext(_NavigationRouteContext.NavigationRouteContext);\n    var children = options.children,\n      layout = options.layout,\n      screenOptions = options.screenOptions,\n      screenLayout = options.screenLayout,\n      screenListeners = options.screenListeners,\n      UNSTABLE_router = options.UNSTABLE_router,\n      rest = (0, _objectWithoutProperties2.default)(options, _excluded);\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var router = (0, _useLazyValue.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      var original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        var overrides = UNSTABLE_router(original);\n        return {\n          ...original,\n          ...overrides\n        };\n      }\n      return original;\n    });\n    var screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(config => config.props.name);\n    var routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    var routeParamList = routeNames.reduce((acc, curr) => {\n      var initialParams = screens[curr].props.initialParams;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    var routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    var isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    var isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    var _React$useContext = React.useContext(_NavigationStateContext.NavigationStateContext),\n      currentState = _React$useContext.state,\n      getCurrentState = _React$useContext.getState,\n      setCurrentState = _React$useContext.setState,\n      setKey = _React$useContext.setKey,\n      getKey = _React$useContext.getKey,\n      getIsInitial = _React$useContext.getIsInitial;\n    var stateCleanedUp = React.useRef(false);\n    var setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    var _React$useMemo = React.useMemo(() => {\n        var initialRouteParamList = routeNames.reduce((acc, curr) => {\n          var initialParams = screens[curr].props.initialParams;\n          var initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n          acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n            ...initialParams,\n            ...initialParamsFromParams\n          } : undefined;\n          return acc;\n        }, {});\n\n        // If the current state isn't initialized on first render, we initialize it\n        // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n        // Otherwise assume that the state was provided as initial state\n        // So we need to rehydrate it to make it usable\n        if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n          return [router.getInitialState({\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), true];\n        } else {\n          var stateFromParams;\n          if (route?.params?.state != null) {\n            stateFromParams = route.params.state;\n          } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n            stateFromParams = {\n              index: 0,\n              routes: [{\n                name: route.params.screen,\n                params: route.params.params,\n                path: route.params.path\n              }]\n            };\n          }\n          return [router.getRehydratedState(stateFromParams ?? currentState, {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), false];\n        }\n        // We explicitly don't include routeNames, route.params etc. in the dep list\n        // below. We want to avoid forcing a new state to be calculated in those cases\n        // Instead, we handle changes to these in the nextState code below. Note\n        // that some changes to routeConfigs are explicitly ignored, such as changes\n        // to initialParams\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentState, router, isStateValid]),\n      _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 2),\n      initializedState = _React$useMemo2[0],\n      isFirstStateInitialization = _React$useMemo2[1];\n    var previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    var previousRouteKeyList = previousRouteKeyListRef.current;\n    var state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    var nextState = state;\n    if (!(0, _isArrayEqual.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqual.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    var previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      var previousParams = previousNestedParamsRef.current;\n      var action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          merge: route.params.merge,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      var updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    var shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    var stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useClientLayoutEffect.useClientLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    var getState = (0, _useLatestCallback.default)(() => {\n      var currentState = getCurrentState();\n      return (0, _deepFreeze.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    var emitter = (0, _useEventEmitter.useEventEmitter)(e => {\n      var routeNames = [];\n      var route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      var navigation = descriptors[route.key].navigation;\n      var listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        var listeners = screens[name].props.listeners;\n        return listeners;\n      })].map(listeners => {\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEvents.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    var _useChildListeners = (0, _useChildListeners2.useChildListeners)(),\n      childListeners = _useChildListeners.listeners,\n      addListener = _useChildListeners.addListener;\n    var _useKeyedChildListene = (0, _useKeyedChildListeners.useKeyedChildListeners)(),\n      keyedListeners = _useKeyedChildListene.keyedListeners,\n      addKeyedListener = _useKeyedChildListene.addKeyedListener;\n    var onAction = (0, _useOnAction.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    var onRouteFocus = (0, _useOnRouteFocus.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    var navigation = (0, _useNavigationHelpers.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    var _useDescriptors = (0, _useDescriptors2.useDescriptors)({\n        state,\n        screens,\n        navigation,\n        screenOptions,\n        screenLayout,\n        onAction,\n        getState,\n        setState,\n        onRouteFocus,\n        addListener,\n        addKeyedListener,\n        router,\n        // @ts-expect-error: this should have both core and custom events, but too much work right now\n        emitter\n      }),\n      describe = _useDescriptors.describe,\n      descriptors = _useDescriptors.descriptors;\n    (0, _useCurrentRender.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    var NavigationContent = (0, _useComponent.useComponent)(children => {\n      var element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_useNavigationState.NavigationStateListenerProvider, {\n          state: state,\n          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider, {\n            children: element\n          })\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":504,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationBuilder"],[8,30,1,13],[8,33,1,13,"useNavigationBuilder"],[8,53,1,13],[9,2,1,13],[9,6,1,13,"_slicedToArray2"],[9,21,1,13],[9,24,1,13,"_interopRequireDefault"],[9,46,1,13],[9,47,1,13,"require"],[9,54,1,13],[9,55,1,13,"_dependencyMap"],[9,69,1,13],[10,2,1,13],[10,6,1,13,"_objectWithoutProperties2"],[10,31,1,13],[10,34,1,13,"_interopRequireDefault"],[10,56,1,13],[10,57,1,13,"require"],[10,64,1,13],[10,65,1,13,"_dependencyMap"],[10,79,1,13],[11,2,3,0],[11,6,3,0,"_routers"],[11,14,3,0],[11,17,3,0,"require"],[11,24,3,0],[11,25,3,0,"_dependencyMap"],[11,39,3,0],[12,2,4,0],[12,6,4,0,"React"],[12,11,4,0],[12,14,4,0,"_interopRequireWildcard"],[12,37,4,0],[12,38,4,0,"require"],[12,45,4,0],[12,46,4,0,"_dependencyMap"],[12,60,4,0],[13,2,5,0],[13,6,5,0,"_reactIs"],[13,14,5,0],[13,17,5,0,"require"],[13,24,5,0],[13,25,5,0,"_dependencyMap"],[13,39,5,0],[14,2,6,0],[14,6,6,0,"_useLatestCallback"],[14,24,6,0],[14,27,6,0,"_interopRequireDefault"],[14,49,6,0],[14,50,6,0,"require"],[14,57,6,0],[14,58,6,0,"_dependencyMap"],[14,72,6,0],[15,2,7,0],[15,6,7,0,"_deepFreeze"],[15,17,7,0],[15,20,7,0,"require"],[15,27,7,0],[15,28,7,0,"_dependencyMap"],[15,42,7,0],[16,2,8,0],[16,6,8,0,"_Group"],[16,12,8,0],[16,15,8,0,"require"],[16,22,8,0],[16,23,8,0,"_dependencyMap"],[16,37,8,0],[17,2,9,0],[17,6,9,0,"_isArrayEqual"],[17,19,9,0],[17,22,9,0,"require"],[17,29,9,0],[17,30,9,0,"_dependencyMap"],[17,44,9,0],[18,2,10,0],[18,6,10,0,"_isRecordEqual"],[18,20,10,0],[18,23,10,0,"require"],[18,30,10,0],[18,31,10,0,"_dependencyMap"],[18,45,10,0],[19,2,11,0],[19,6,11,0,"_NavigationHelpersContext"],[19,31,11,0],[19,34,11,0,"require"],[19,41,11,0],[19,42,11,0,"_dependencyMap"],[19,56,11,0],[20,2,12,0],[20,6,12,0,"_NavigationRouteContext"],[20,29,12,0],[20,32,12,0,"require"],[20,39,12,0],[20,40,12,0,"_dependencyMap"],[20,54,12,0],[21,2,13,0],[21,6,13,0,"_NavigationStateContext"],[21,29,13,0],[21,32,13,0,"require"],[21,39,13,0],[21,40,13,0,"_dependencyMap"],[21,54,13,0],[22,2,14,0],[22,6,14,0,"_PreventRemoveProvider"],[22,28,14,0],[22,31,14,0,"require"],[22,38,14,0],[22,39,14,0,"_dependencyMap"],[22,53,14,0],[23,2,15,0],[23,6,15,0,"_Screen"],[23,13,15,0],[23,16,15,0,"require"],[23,23,15,0],[23,24,15,0,"_dependencyMap"],[23,38,15,0],[24,2,16,0],[24,6,16,0,"_types"],[24,12,16,0],[24,15,16,0,"require"],[24,22,16,0],[24,23,16,0,"_dependencyMap"],[24,37,16,0],[25,2,17,0],[25,6,17,0,"_useChildListeners2"],[25,25,17,0],[25,28,17,0,"require"],[25,35,17,0],[25,36,17,0,"_dependencyMap"],[25,50,17,0],[26,2,18,0],[26,6,18,0,"_useClientLayoutEffect"],[26,28,18,0],[26,31,18,0,"require"],[26,38,18,0],[26,39,18,0,"_dependencyMap"],[26,53,18,0],[27,2,19,0],[27,6,19,0,"_useComponent"],[27,19,19,0],[27,22,19,0,"require"],[27,29,19,0],[27,30,19,0,"_dependencyMap"],[27,44,19,0],[28,2,20,0],[28,6,20,0,"_useCurrentRender"],[28,23,20,0],[28,26,20,0,"require"],[28,33,20,0],[28,34,20,0,"_dependencyMap"],[28,48,20,0],[29,2,21,0],[29,6,21,0,"_useDescriptors2"],[29,22,21,0],[29,25,21,0,"require"],[29,32,21,0],[29,33,21,0,"_dependencyMap"],[29,47,21,0],[30,2,22,0],[30,6,22,0,"_useEventEmitter"],[30,22,22,0],[30,25,22,0,"require"],[30,32,22,0],[30,33,22,0,"_dependencyMap"],[30,47,22,0],[31,2,23,0],[31,6,23,0,"_useFocusedListenersChildrenAdapter"],[31,41,23,0],[31,44,23,0,"require"],[31,51,23,0],[31,52,23,0,"_dependencyMap"],[31,66,23,0],[32,2,24,0],[32,6,24,0,"_useFocusEvents"],[32,21,24,0],[32,24,24,0,"require"],[32,31,24,0],[32,32,24,0,"_dependencyMap"],[32,46,24,0],[33,2,25,0],[33,6,25,0,"_useKeyedChildListeners"],[33,29,25,0],[33,32,25,0,"require"],[33,39,25,0],[33,40,25,0,"_dependencyMap"],[33,54,25,0],[34,2,26,0],[34,6,26,0,"_useLazyValue"],[34,19,26,0],[34,22,26,0,"require"],[34,29,26,0],[34,30,26,0,"_dependencyMap"],[34,44,26,0],[35,2,27,0],[35,6,27,0,"_useNavigationHelpers"],[35,27,27,0],[35,30,27,0,"require"],[35,37,27,0],[35,38,27,0,"_dependencyMap"],[35,52,27,0],[36,2,28,0],[36,6,28,0,"_useNavigationState"],[36,25,28,0],[36,28,28,0,"require"],[36,35,28,0],[36,36,28,0,"_dependencyMap"],[36,50,28,0],[37,2,29,0],[37,6,29,0,"_useOnAction"],[37,18,29,0],[37,21,29,0,"require"],[37,28,29,0],[37,29,29,0,"_dependencyMap"],[37,43,29,0],[38,2,30,0],[38,6,30,0,"_useOnGetState"],[38,20,30,0],[38,23,30,0,"require"],[38,30,30,0],[38,31,30,0,"_dependencyMap"],[38,45,30,0],[39,2,31,0],[39,6,31,0,"_useOnRouteFocus"],[39,22,31,0],[39,25,31,0,"require"],[39,32,31,0],[39,33,31,0,"_dependencyMap"],[39,47,31,0],[40,2,32,0],[40,6,32,0,"_useRegisterNavigator"],[40,27,32,0],[40,30,32,0,"require"],[40,37,32,0],[40,38,32,0,"_dependencyMap"],[40,52,32,0],[41,2,33,0],[41,6,33,0,"_useScheduleUpdate"],[41,24,33,0],[41,27,33,0,"require"],[41,34,33,0],[41,35,33,0,"_dependencyMap"],[41,49,33,0],[42,2,37,0],[42,6,37,0,"_jsxRuntime"],[42,17,37,0],[42,20,37,0,"require"],[42,27,37,0],[42,28,37,0,"_dependencyMap"],[42,42,37,0],[43,2,37,48],[43,6,37,48,"_excluded"],[43,15,37,48],[43,113,35,0],[44,2,36,0],[45,2,36,0],[45,11,36,0,"_interopRequireWildcard"],[45,35,36,0,"e"],[45,36,36,0],[45,38,36,0,"t"],[45,39,36,0],[45,68,36,0,"WeakMap"],[45,75,36,0],[45,81,36,0,"r"],[45,82,36,0],[45,89,36,0,"WeakMap"],[45,96,36,0],[45,100,36,0,"n"],[45,101,36,0],[45,108,36,0,"WeakMap"],[45,115,36,0],[45,127,36,0,"_interopRequireWildcard"],[45,150,36,0],[45,162,36,0,"_interopRequireWildcard"],[45,163,36,0,"e"],[45,164,36,0],[45,166,36,0,"t"],[45,167,36,0],[45,176,36,0,"t"],[45,177,36,0],[45,181,36,0,"e"],[45,182,36,0],[45,186,36,0,"e"],[45,187,36,0],[45,188,36,0,"__esModule"],[45,198,36,0],[45,207,36,0,"e"],[45,208,36,0],[45,214,36,0,"o"],[45,215,36,0],[45,217,36,0,"i"],[45,218,36,0],[45,220,36,0,"f"],[45,221,36,0],[45,226,36,0,"__proto__"],[45,235,36,0],[45,243,36,0,"default"],[45,250,36,0],[45,252,36,0,"e"],[45,253,36,0],[45,270,36,0,"e"],[45,271,36,0],[45,294,36,0,"e"],[45,295,36,0],[45,320,36,0,"e"],[45,321,36,0],[45,330,36,0,"f"],[45,331,36,0],[45,337,36,0,"o"],[45,338,36,0],[45,341,36,0,"t"],[45,342,36,0],[45,345,36,0,"n"],[45,346,36,0],[45,349,36,0,"r"],[45,350,36,0],[45,358,36,0,"o"],[45,359,36,0],[45,360,36,0,"has"],[45,363,36,0],[45,364,36,0,"e"],[45,365,36,0],[45,375,36,0,"o"],[45,376,36,0],[45,377,36,0,"get"],[45,380,36,0],[45,381,36,0,"e"],[45,382,36,0],[45,385,36,0,"o"],[45,386,36,0],[45,387,36,0,"set"],[45,390,36,0],[45,391,36,0,"e"],[45,392,36,0],[45,394,36,0,"f"],[45,395,36,0],[45,409,36,0,"_t"],[45,411,36,0],[45,415,36,0,"e"],[45,416,36,0],[45,432,36,0,"_t"],[45,434,36,0],[45,441,36,0,"hasOwnProperty"],[45,455,36,0],[45,456,36,0,"call"],[45,460,36,0],[45,461,36,0,"e"],[45,462,36,0],[45,464,36,0,"_t"],[45,466,36,0],[45,473,36,0,"i"],[45,474,36,0],[45,478,36,0,"o"],[45,479,36,0],[45,482,36,0,"Object"],[45,488,36,0],[45,489,36,0,"defineProperty"],[45,503,36,0],[45,508,36,0,"Object"],[45,514,36,0],[45,515,36,0,"getOwnPropertyDescriptor"],[45,539,36,0],[45,540,36,0,"e"],[45,541,36,0],[45,543,36,0,"_t"],[45,545,36,0],[45,552,36,0,"i"],[45,553,36,0],[45,554,36,0,"get"],[45,557,36,0],[45,561,36,0,"i"],[45,562,36,0],[45,563,36,0,"set"],[45,566,36,0],[45,570,36,0,"o"],[45,571,36,0],[45,572,36,0,"f"],[45,573,36,0],[45,575,36,0,"_t"],[45,577,36,0],[45,579,36,0,"i"],[45,580,36,0],[45,584,36,0,"f"],[45,585,36,0],[45,586,36,0,"_t"],[45,588,36,0],[45,592,36,0,"e"],[45,593,36,0],[45,594,36,0,"_t"],[45,596,36,0],[45,607,36,0,"f"],[45,608,36,0],[45,613,36,0,"e"],[45,614,36,0],[45,616,36,0,"t"],[45,617,36,0],[46,2,38,0,"PrivateValueStore"],[46,26,38,17],[47,2,39,0],[47,6,39,6,"isScreen"],[47,14,39,14],[47,17,39,17,"child"],[47,22,39,22],[47,26,39,26],[48,4,40,2],[48,11,40,9,"child"],[48,16,40,14],[48,17,40,15,"type"],[48,21,40,19],[48,26,40,24,"Screen"],[48,40,40,30],[49,2,41,0],[49,3,41,1],[50,2,42,0],[50,6,42,6,"isGroup"],[50,13,42,13],[50,16,42,16,"child"],[50,21,42,21],[50,25,42,25],[51,4,43,2],[51,11,43,9,"child"],[51,16,43,14],[51,17,43,15,"type"],[51,21,43,19],[51,26,43,24,"React"],[51,31,43,29],[51,32,43,30,"Fragment"],[51,40,43,38],[51,44,43,42,"child"],[51,49,43,47],[51,50,43,48,"type"],[51,54,43,52],[51,59,43,57,"Group"],[51,71,43,62],[52,2,44,0],[52,3,44,1],[53,2,45,0],[53,6,45,6,"isValidKey"],[53,16,45,16],[53,19,45,19,"key"],[53,22,45,22],[53,26,45,26,"key"],[53,29,45,29],[53,34,45,34,"undefined"],[53,43,45,43],[53,47,45,47],[53,54,45,54,"key"],[53,57,45,57],[53,62,45,62],[53,70,45,70],[53,74,45,74,"key"],[53,77,45,77],[53,82,45,82],[53,84,45,84],[55,2,47,0],[56,0,48,0],[57,0,49,0],[58,0,50,0],[59,0,51,0],[60,2,52,0],[60,6,52,6,"getRouteConfigsFromChildren"],[60,33,52,33],[60,36,52,36,"getRouteConfigsFromChildren"],[60,37,52,37,"children"],[60,45,52,45],[60,47,52,47,"groupKey"],[60,55,52,55],[60,57,52,57,"groupOptions"],[60,69,52,69],[60,71,52,71,"groupLayout"],[60,82,52,82],[60,87,52,87],[61,4,53,2],[61,8,53,8,"configs"],[61,15,53,15],[61,18,53,18,"React"],[61,23,53,23],[61,24,53,24,"Children"],[61,32,53,32],[61,33,53,33,"toArray"],[61,40,53,40],[61,41,53,41,"children"],[61,49,53,49],[61,50,53,50],[61,51,53,51,"reduce"],[61,57,53,57],[61,58,53,58],[61,59,53,59,"acc"],[61,62,53,62],[61,64,53,64,"child"],[61,69,53,69],[61,74,53,74],[62,6,54,4],[62,10,54,8],[62,23,54,21,"React"],[62,28,54,26],[62,29,54,27,"isValidElement"],[62,43,54,41],[62,44,54,42,"child"],[62,49,54,47],[62,50,54,48],[62,52,54,50],[63,8,55,6],[63,12,55,10,"isScreen"],[63,20,55,18],[63,21,55,19,"child"],[63,26,55,24],[63,27,55,25],[63,29,55,27],[64,10,56,8],[65,10,57,8],[67,10,59,8],[67,14,59,12],[67,21,59,19,"child"],[67,26,59,24],[67,27,59,25,"props"],[67,32,59,30],[67,37,59,35],[67,45,59,43],[67,49,59,47,"child"],[67,54,59,52],[67,55,59,53,"props"],[67,60,59,58],[67,65,59,63],[67,69,59,67],[67,71,59,69],[68,12,60,10],[68,18,60,16],[68,22,60,20,"Error"],[68,27,60,25],[68,28,60,26],[68,64,60,62],[68,65,60,63],[69,10,61,8],[70,10,62,8],[70,14,62,12],[70,21,62,19,"child"],[70,26,62,24],[70,27,62,25,"props"],[70,32,62,30],[70,33,62,31,"name"],[70,37,62,35],[70,42,62,40],[70,50,62,48],[70,54,62,52,"child"],[70,59,62,57],[70,60,62,58,"props"],[70,65,62,63],[70,66,62,64,"name"],[70,70,62,68],[70,75,62,73],[70,77,62,75],[70,79,62,77],[71,12,63,10],[71,18,63,16],[71,22,63,20,"Error"],[71,27,63,25],[71,28,63,26],[71,52,63,50,"JSON"],[71,56,63,54],[71,57,63,55,"stringify"],[71,66,63,64],[71,67,63,65,"child"],[71,72,63,70],[71,73,63,71,"props"],[71,78,63,76],[71,79,63,77,"name"],[71,83,63,81],[71,84,63,82],[71,134,63,132],[71,135,63,133],[72,10,64,8],[73,10,65,8],[73,14,65,12,"child"],[73,19,65,17],[73,20,65,18,"props"],[73,25,65,23],[73,26,65,24,"navigationKey"],[73,39,65,37],[73,44,65,42,"undefined"],[73,53,65,51],[73,58,65,56],[73,65,65,63,"child"],[73,70,65,68],[73,71,65,69,"props"],[73,76,65,74],[73,77,65,75,"navigationKey"],[73,90,65,88],[73,95,65,93],[73,103,65,101],[73,107,65,105,"child"],[73,112,65,110],[73,113,65,111,"props"],[73,118,65,116],[73,119,65,117,"navigationKey"],[73,132,65,130],[73,137,65,135],[73,139,65,137],[73,140,65,138],[73,142,65,140],[74,12,66,10],[74,18,66,16],[74,22,66,20,"Error"],[74,27,66,25],[74,28,66,26],[74,68,66,66,"JSON"],[74,72,66,70],[74,73,66,71,"stringify"],[74,82,66,80],[74,83,66,81,"child"],[74,88,66,86],[74,89,66,87,"props"],[74,94,66,92],[74,95,66,93,"navigationKey"],[74,108,66,106],[74,109,66,107],[74,130,66,128,"child"],[74,135,66,133],[74,136,66,134,"props"],[74,141,66,139],[74,142,66,140,"name"],[74,146,66,144],[74,196,66,194],[74,197,66,195],[75,10,67,8],[76,10,68,8,"acc"],[76,13,68,11],[76,14,68,12,"push"],[76,18,68,16],[76,19,68,17],[77,12,69,10,"keys"],[77,16,69,14],[77,18,69,16],[77,19,69,17,"groupKey"],[77,27,69,25],[77,29,69,27,"child"],[77,34,69,32],[77,35,69,33,"props"],[77,40,69,38],[77,41,69,39,"navigationKey"],[77,54,69,52],[77,55,69,53],[78,12,70,10,"options"],[78,19,70,17],[78,21,70,19,"groupOptions"],[78,33,70,31],[79,12,71,10,"layout"],[79,18,71,16],[79,20,71,18,"groupLayout"],[79,31,71,29],[80,12,72,10,"props"],[80,17,72,15],[80,19,72,17,"child"],[80,24,72,22],[80,25,72,23,"props"],[81,10,73,8],[81,11,73,9],[81,12,73,10],[82,10,74,8],[82,17,74,15,"acc"],[82,20,74,18],[83,8,75,6],[84,8,76,6],[84,12,76,10,"isGroup"],[84,19,76,17],[84,20,76,18,"child"],[84,25,76,23],[84,26,76,24],[84,28,76,26],[85,10,77,8],[85,14,77,12],[85,15,77,13,"isValidKey"],[85,25,77,23],[85,26,77,24,"child"],[85,31,77,29],[85,32,77,30,"props"],[85,37,77,35],[85,38,77,36,"navigationKey"],[85,51,77,49],[85,52,77,50],[85,54,77,52],[86,12,78,10],[86,18,78,16],[86,22,78,20,"Error"],[86,27,78,25],[86,28,78,26],[86,68,78,66,"JSON"],[86,72,78,70],[86,73,78,71,"stringify"],[86,82,78,80],[86,83,78,81,"child"],[86,88,78,86],[86,89,78,87,"props"],[86,94,78,92],[86,95,78,93,"navigationKey"],[86,108,78,106],[86,109,78,107],[86,173,78,171],[86,174,78,172],[87,10,79,8],[89,10,81,8],[90,10,82,8],[91,10,83,8,"acc"],[91,13,83,11],[91,14,83,12,"push"],[91,18,83,16],[91,19,83,17],[91,22,83,20,"getRouteConfigsFromChildren"],[91,49,83,47],[91,50,83,48,"child"],[91,55,83,53],[91,56,83,54,"props"],[91,61,83,59],[91,62,83,60,"children"],[91,70,83,68],[91,72,83,70,"child"],[91,77,83,75],[91,78,83,76,"props"],[91,83,83,81],[91,84,83,82,"navigationKey"],[91,97,83,95],[92,10,84,8],[93,10,85,8],[94,10,86,8,"child"],[94,15,86,13],[94,16,86,14,"type"],[94,20,86,18],[94,25,86,23,"Group"],[94,37,86,28],[94,40,86,31,"groupOptions"],[94,52,86,43],[94,55,86,46,"groupOptions"],[94,67,86,58],[94,71,86,62],[94,75,86,66],[94,78,86,69],[94,79,86,70],[94,82,86,73,"groupOptions"],[94,94,86,85],[94,96,86,87,"child"],[94,101,86,92],[94,102,86,93,"props"],[94,107,86,98],[94,108,86,99,"screenOptions"],[94,121,86,112],[94,122,86,113],[94,125,86,116],[94,126,86,117,"child"],[94,131,86,122],[94,132,86,123,"props"],[94,137,86,128],[94,138,86,129,"screenOptions"],[94,151,86,142],[94,152,86,143],[94,154,86,145],[94,161,86,152,"child"],[94,166,86,157],[94,167,86,158,"props"],[94,172,86,163],[94,173,86,164,"screenLayout"],[94,185,86,176],[94,190,86,181],[94,200,86,191],[94,203,86,194,"child"],[94,208,86,199],[94,209,86,200,"props"],[94,214,86,205],[94,215,86,206,"screenLayout"],[94,227,86,218],[94,230,86,221,"groupLayout"],[94,241,86,232],[94,242,86,233],[94,243,86,234],[95,10,87,8],[95,17,87,15,"acc"],[95,20,87,18],[96,8,88,6],[97,6,89,4],[98,6,90,4],[98,12,90,10],[98,16,90,14,"Error"],[98,21,90,19],[98,22,90,20],[98,122,90,120],[98,135,90,133],[98,149,90,133,"React"],[98,154,90,138],[98,155,90,139,"isValidElement"],[98,169,90,153],[98,170,90,154,"child"],[98,175,90,159],[98,176,90,160],[98,179,90,163],[98,183,90,167],[98,190,90,174,"child"],[98,195,90,179],[98,196,90,180,"type"],[98,200,90,184],[98,205,90,189],[98,213,90,197],[98,216,90,200,"child"],[98,221,90,205],[98,222,90,206,"type"],[98,226,90,210],[98,229,90,213,"child"],[98,234,90,218],[98,235,90,219,"type"],[98,239,90,223],[98,241,90,225,"name"],[98,245,90,229],[98,249,90,233,"child"],[98,254,90,238],[98,255,90,239,"props"],[98,260,90,244],[98,264,90,248],[98,268,90,252],[98,272,90,256],[98,279,90,263,"child"],[98,284,90,268],[98,285,90,269,"props"],[98,290,90,274],[98,295,90,279],[98,303,90,287],[98,307,90,291],[98,313,90,297],[98,317,90,301,"child"],[98,322,90,306],[98,323,90,307,"props"],[98,328,90,312],[98,332,90,316,"child"],[98,337,90,321],[98,338,90,322,"props"],[98,343,90,327],[98,345,90,329,"name"],[98,349,90,333],[98,352,90,336],[98,372,90,356,"child"],[98,377,90,361],[98,378,90,362,"props"],[98,383,90,367],[98,384,90,368,"name"],[98,388,90,372],[98,391,90,375],[98,394,90,378],[98,396,90,380],[98,398,90,382],[98,401,90,385],[98,408,90,392,"child"],[98,413,90,397],[98,418,90,402],[98,426,90,410],[98,429,90,413,"JSON"],[98,433,90,417],[98,434,90,418,"stringify"],[98,443,90,427],[98,444,90,428,"child"],[98,449,90,433],[98,450,90,434],[98,453,90,437],[98,457,90,441,"String"],[98,463,90,447],[98,464,90,448,"child"],[98,469,90,453],[98,470,90,454],[98,473,90,457],[98,565,90,549],[98,566,90,550],[99,4,91,2],[99,5,91,3],[99,7,91,5],[99,9,91,7],[99,10,91,8],[100,4,92,2],[100,8,92,6,"process"],[100,15,92,13],[100,16,92,14,"env"],[100,19,92,17],[100,20,92,18,"NODE_ENV"],[100,28,92,26],[100,33,92,31],[100,45,92,43],[100,47,92,45],[101,6,93,4,"configs"],[101,13,93,11],[101,14,93,12,"forEach"],[101,21,93,19],[101,22,93,20,"config"],[101,28,93,26],[101,32,93,30],[102,8,94,6],[102,12,94,6,"_config$props"],[102,25,94,6],[102,28,99,10,"config"],[102,34,99,16],[102,35,99,17,"props"],[102,40,99,22],[103,10,95,8,"name"],[103,14,95,12],[103,17,95,12,"_config$props"],[103,30,95,12],[103,31,95,8,"name"],[103,35,95,12],[104,10,96,8,"children"],[104,18,96,16],[104,21,96,16,"_config$props"],[104,34,96,16],[104,35,96,8,"children"],[104,43,96,16],[105,10,97,8,"component"],[105,19,97,17],[105,22,97,17,"_config$props"],[105,35,97,17],[105,36,97,8,"component"],[105,45,97,17],[106,10,98,8,"getComponent"],[106,22,98,20],[106,25,98,20,"_config$props"],[106,38,98,20],[106,39,98,8,"getComponent"],[106,51,98,20],[107,8,100,6],[107,12,100,10,"children"],[107,20,100,18],[107,24,100,22],[107,28,100,26],[107,32,100,30,"component"],[107,41,100,39],[107,46,100,44,"undefined"],[107,55,100,53],[107,59,100,57,"getComponent"],[107,71,100,69],[107,76,100,74,"undefined"],[107,85,100,83],[107,87,100,85],[108,10,101,8],[108,14,101,12,"children"],[108,22,101,20],[108,26,101,24],[108,30,101,28],[108,34,101,32,"component"],[108,43,101,41],[108,48,101,46,"undefined"],[108,57,101,55],[108,59,101,57],[109,12,102,10],[109,18,102,16],[109,22,102,20,"Error"],[109,27,102,25],[109,28,102,26],[109,89,102,87,"name"],[109,93,102,91],[109,129,102,127],[109,130,102,128],[110,10,103,8],[111,10,104,8],[111,14,104,12,"children"],[111,22,104,20],[111,26,104,24],[111,30,104,28],[111,34,104,32,"getComponent"],[111,46,104,44],[111,51,104,49,"undefined"],[111,60,104,58],[111,62,104,60],[112,12,105,10],[112,18,105,16],[112,22,105,20,"Error"],[112,27,105,25],[112,28,105,26],[112,92,105,90,"name"],[112,96,105,94],[112,132,105,130],[112,133,105,131],[113,10,106,8],[114,10,107,8],[114,14,107,12,"component"],[114,23,107,21],[114,28,107,26,"undefined"],[114,37,107,35],[114,41,107,39,"getComponent"],[114,53,107,51],[114,58,107,56,"undefined"],[114,67,107,65],[114,69,107,67],[115,12,108,10],[115,18,108,16],[115,22,108,20,"Error"],[115,27,108,25],[115,28,108,26],[115,93,108,91,"name"],[115,97,108,95],[115,133,108,131],[115,134,108,132],[116,10,109,8],[117,10,110,8],[117,14,110,12,"children"],[117,22,110,20],[117,26,110,24],[117,30,110,28],[117,34,110,32],[117,41,110,39,"children"],[117,49,110,47],[117,54,110,52],[117,64,110,62],[117,66,110,64],[118,12,111,10],[118,18,111,16],[118,22,111,20,"Error"],[118,27,111,25],[118,28,111,26],[118,88,111,86,"name"],[118,92,111,90],[118,145,111,143],[118,146,111,144],[119,10,112,8],[120,10,113,8],[120,14,113,12,"component"],[120,23,113,21],[120,28,113,26,"undefined"],[120,37,113,35],[120,41,113,39],[120,42,113,40],[120,46,113,40,"isValidElementType"],[120,73,113,58],[120,75,113,59,"component"],[120,84,113,68],[120,85,113,69],[120,87,113,71],[121,12,114,10],[121,18,114,16],[121,22,114,20,"Error"],[121,27,114,25],[121,28,114,26],[121,89,114,87,"name"],[121,93,114,91],[121,133,114,131],[121,134,114,132],[122,10,115,8],[123,10,116,8],[123,14,116,12,"getComponent"],[123,26,116,24],[123,31,116,29,"undefined"],[123,40,116,38],[123,44,116,42],[123,51,116,49,"getComponent"],[123,63,116,61],[123,68,116,66],[123,78,116,76],[123,80,116,78],[124,12,117,10],[124,18,117,16],[124,22,117,20,"Error"],[124,27,117,25],[124,28,117,26],[124,92,117,90,"name"],[124,96,117,94],[124,151,117,149],[124,152,117,150],[125,10,118,8],[126,10,119,8],[126,14,119,12],[126,21,119,19,"component"],[126,30,119,28],[126,35,119,33],[126,45,119,43],[126,47,119,45],[127,12,120,10],[127,16,120,14,"component"],[127,25,120,23],[127,26,120,24,"name"],[127,30,120,28],[127,35,120,33],[127,46,120,44],[127,48,120,46],[128,14,121,12],[129,14,122,12],[130,14,123,12],[131,14,124,12,"console"],[131,21,124,19],[131,22,124,20,"warn"],[131,26,124,24],[131,27,124,25],[131,112,124,110,"name"],[131,116,124,114],[131,395,124,393],[131,396,124,394],[132,12,125,10],[132,13,125,11],[132,19,125,17],[132,23,125,21],[132,31,125,29],[132,32,125,30,"test"],[132,36,125,34],[132,37,125,35,"component"],[132,46,125,44],[132,47,125,45,"name"],[132,51,125,49],[132,52,125,50],[132,54,125,52],[133,14,126,12,"console"],[133,21,126,19],[133,22,126,20,"warn"],[133,26,126,24],[133,27,126,25],[133,61,126,59,"component"],[133,70,126,68],[133,71,126,69,"name"],[133,75,126,73],[133,96,126,94,"name"],[133,100,126,98],[133,301,126,299],[133,302,126,300],[134,12,127,10],[135,10,128,8],[136,8,129,6],[136,9,129,7],[136,15,129,13],[137,10,130,8],[137,16,130,14],[137,20,130,18,"Error"],[137,25,130,23],[137,26,130,24],[137,108,130,106,"name"],[137,112,130,110],[137,293,130,291],[137,294,130,292],[138,8,131,6],[139,6,132,4],[139,7,132,5],[139,8,132,6],[140,4,133,2],[141,4,134,2],[141,11,134,9,"configs"],[141,18,134,16],[142,2,135,0],[142,3,135,1],[144,2,137,0],[145,0,138,0],[146,0,139,0],[147,0,140,0],[148,0,141,0],[149,0,142,0],[150,0,143,0],[151,2,144,7],[151,11,144,16,"useNavigationBuilder"],[151,31,144,36,"useNavigationBuilder"],[151,32,144,37,"createRouter"],[151,44,144,49],[151,46,144,51,"options"],[151,53,144,58],[151,55,144,60],[152,4,145,2],[152,8,145,8,"navigatorKey"],[152,20,145,20],[152,23,145,23],[152,27,145,23,"useRegisterNavigator"],[152,69,145,43],[152,71,145,44],[152,72,145,45],[153,4,146,2],[153,8,146,8,"route"],[153,13,146,13],[153,16,146,16,"React"],[153,21,146,21],[153,22,146,22,"useContext"],[153,32,146,32],[153,33,146,33,"NavigationRouteContext"],[153,79,146,55],[153,80,146,56],[154,4,147,2],[154,8,148,4,"children"],[154,16,148,12],[154,19,155,6,"options"],[154,26,155,13],[154,27,148,4,"children"],[154,35,148,12],[155,6,149,4,"layout"],[155,12,149,10],[155,15,155,6,"options"],[155,22,155,13],[155,23,149,4,"layout"],[155,29,149,10],[156,6,150,4,"screenOptions"],[156,19,150,17],[156,22,155,6,"options"],[156,29,155,13],[156,30,150,4,"screenOptions"],[156,43,150,17],[157,6,151,4,"screenLayout"],[157,18,151,16],[157,21,155,6,"options"],[157,28,155,13],[157,29,151,4,"screenLayout"],[157,41,151,16],[158,6,152,4,"screenListeners"],[158,21,152,19],[158,24,155,6,"options"],[158,31,155,13],[158,32,152,4,"screenListeners"],[158,47,152,19],[159,6,153,4,"UNSTABLE_router"],[159,21,153,19],[159,24,155,6,"options"],[159,31,155,13],[159,32,153,4,"UNSTABLE_router"],[159,47,153,19],[160,6,154,7,"rest"],[160,10,154,11],[160,17,154,11,"_objectWithoutProperties2"],[160,42,154,11],[160,43,154,11,"default"],[160,50,154,11],[160,52,155,6,"options"],[160,59,155,13],[160,61,155,13,"_excluded"],[160,70,155,13],[161,4,156,2],[161,8,156,8,"routeConfigs"],[161,20,156,20],[161,23,156,23,"getRouteConfigsFromChildren"],[161,50,156,50],[161,51,156,51,"children"],[161,59,156,59],[161,60,156,60],[162,4,157,2],[162,8,157,8,"router"],[162,14,157,14],[162,17,157,17],[162,21,157,17,"useLazyValue"],[162,47,157,29],[162,49,157,30],[162,55,157,36],[163,6,158,4],[163,10,158,8,"rest"],[163,14,158,12],[163,15,158,13,"initialRouteName"],[163,31,158,29],[163,35,158,33],[163,39,158,37],[163,43,158,41,"routeConfigs"],[163,55,158,53],[163,56,158,54,"every"],[163,61,158,59],[163,62,158,60,"config"],[163,68,158,66],[163,72,158,70,"config"],[163,78,158,76],[163,79,158,77,"props"],[163,84,158,82],[163,85,158,83,"name"],[163,89,158,87],[163,94,158,92,"rest"],[163,98,158,96],[163,99,158,97,"initialRouteName"],[163,115,158,113],[163,116,158,114],[163,118,158,116],[164,8,159,6],[164,14,159,12],[164,18,159,16,"Error"],[164,23,159,21],[164,24,159,22],[164,57,159,55,"rest"],[164,61,159,59],[164,62,159,60,"initialRouteName"],[164,78,159,76],[164,111,159,109],[164,112,159,110],[165,6,160,4],[166,6,161,4],[166,10,161,10,"original"],[166,18,161,18],[166,21,161,21,"createRouter"],[166,33,161,33],[166,34,161,34,"rest"],[166,38,161,38],[166,39,161,39],[167,6,162,4],[167,10,162,8,"UNSTABLE_router"],[167,25,162,23],[167,29,162,27],[167,33,162,31],[167,35,162,33],[168,8,163,6],[168,12,163,12,"overrides"],[168,21,163,21],[168,24,163,24,"UNSTABLE_router"],[168,39,163,39],[168,40,163,40,"original"],[168,48,163,48],[168,49,163,49],[169,8,164,6],[169,15,164,13],[170,10,165,8],[170,13,165,11,"original"],[170,21,165,19],[171,10,166,8],[171,13,166,11,"overrides"],[172,8,167,6],[172,9,167,7],[173,6,168,4],[174,6,169,4],[174,13,169,11,"original"],[174,21,169,19],[175,4,170,2],[175,5,170,3],[175,6,170,4],[176,4,171,2],[176,8,171,8,"screens"],[176,15,171,15],[176,18,171,18,"routeConfigs"],[176,30,171,30],[176,31,171,31,"reduce"],[176,37,171,37],[176,38,171,38],[176,39,171,39,"acc"],[176,42,171,42],[176,44,171,44,"config"],[176,50,171,50],[176,55,171,55],[177,6,172,4],[177,10,172,8,"config"],[177,16,172,14],[177,17,172,15,"props"],[177,22,172,20],[177,23,172,21,"name"],[177,27,172,25],[177,31,172,29,"acc"],[177,34,172,32],[177,36,172,34],[178,8,173,6],[178,14,173,12],[178,18,173,16,"Error"],[178,23,173,21],[178,24,173,22],[178,133,173,131,"config"],[178,139,173,137],[178,140,173,138,"props"],[178,145,173,143],[178,146,173,144,"name"],[178,150,173,148],[178,154,173,152],[178,155,173,153],[179,6,174,4],[180,6,175,4,"acc"],[180,9,175,7],[180,10,175,8,"config"],[180,16,175,14],[180,17,175,15,"props"],[180,22,175,20],[180,23,175,21,"name"],[180,27,175,25],[180,28,175,26],[180,31,175,29,"config"],[180,37,175,35],[181,6,176,4],[181,13,176,11,"acc"],[181,16,176,14],[182,4,177,2],[182,5,177,3],[182,7,177,5],[182,8,177,6],[182,9,177,7],[182,10,177,8],[183,4,178,2],[183,8,178,8,"routeNames"],[183,18,178,18],[183,21,178,21,"routeConfigs"],[183,33,178,33],[183,34,178,34,"map"],[183,37,178,37],[183,38,178,38,"config"],[183,44,178,44],[183,48,178,48,"config"],[183,54,178,54],[183,55,178,55,"props"],[183,60,178,60],[183,61,178,61,"name"],[183,65,178,65],[183,66,178,66],[184,4,179,2],[184,8,179,8,"routeKeyList"],[184,20,179,20],[184,23,179,23,"routeNames"],[184,33,179,33],[184,34,179,34,"reduce"],[184,40,179,40],[184,41,179,41],[184,42,179,42,"acc"],[184,45,179,45],[184,47,179,47,"curr"],[184,51,179,51],[184,56,179,56],[185,6,180,4,"acc"],[185,9,180,7],[185,10,180,8,"curr"],[185,14,180,12],[185,15,180,13],[185,18,180,16,"screens"],[185,25,180,23],[185,26,180,24,"curr"],[185,30,180,28],[185,31,180,29],[185,32,180,30,"keys"],[185,36,180,34],[185,37,180,35,"map"],[185,40,180,38],[185,41,180,39,"key"],[185,44,180,42],[185,48,180,46,"key"],[185,51,180,49],[185,55,180,53],[185,57,180,55],[185,58,180,56],[185,59,180,57,"join"],[185,63,180,61],[185,64,180,62],[185,67,180,65],[185,68,180,66],[186,6,181,4],[186,13,181,11,"acc"],[186,16,181,14],[187,4,182,2],[187,5,182,3],[187,7,182,5],[187,8,182,6],[187,9,182,7],[187,10,182,8],[188,4,183,2],[188,8,183,8,"routeParamList"],[188,22,183,22],[188,25,183,25,"routeNames"],[188,35,183,35],[188,36,183,36,"reduce"],[188,42,183,42],[188,43,183,43],[188,44,183,44,"acc"],[188,47,183,47],[188,49,183,49,"curr"],[188,53,183,53],[188,58,183,58],[189,6,184,4],[189,10,185,6,"initialParams"],[189,23,185,19],[189,26,186,8,"screens"],[189,33,186,15],[189,34,186,16,"curr"],[189,38,186,20],[189,39,186,21],[189,40,186,22,"props"],[189,45,186,27],[189,46,185,6,"initialParams"],[189,59,185,19],[190,6,187,4,"acc"],[190,9,187,7],[190,10,187,8,"curr"],[190,14,187,12],[190,15,187,13],[190,18,187,16,"initialParams"],[190,31,187,29],[191,6,188,4],[191,13,188,11,"acc"],[191,16,188,14],[192,4,189,2],[192,5,189,3],[192,7,189,5],[192,8,189,6],[192,9,189,7],[192,10,189,8],[193,4,190,2],[193,8,190,8,"routeGetIdList"],[193,22,190,22],[193,25,190,25,"routeNames"],[193,35,190,35],[193,36,190,36,"reduce"],[193,42,190,42],[193,43,190,43],[193,44,190,44,"acc"],[193,47,190,47],[193,49,190,49,"curr"],[193,53,190,53],[193,58,190,58,"Object"],[193,64,190,64],[193,65,190,65,"assign"],[193,71,190,71],[193,72,190,72,"acc"],[193,75,190,75],[193,77,190,77],[194,6,191,4],[194,7,191,5,"curr"],[194,11,191,9],[194,14,191,12,"screens"],[194,21,191,19],[194,22,191,20,"curr"],[194,26,191,24],[194,27,191,25],[194,28,191,26,"props"],[194,33,191,31],[194,34,191,32,"getId"],[195,4,192,2],[195,5,192,3],[195,6,192,4],[195,8,192,6],[195,9,192,7],[195,10,192,8],[195,11,192,9],[196,4,193,2],[196,8,193,6],[196,9,193,7,"routeNames"],[196,19,193,17],[196,20,193,18,"length"],[196,26,193,24],[196,28,193,26],[197,6,194,4],[197,12,194,10],[197,16,194,14,"Error"],[197,21,194,19],[197,22,194,20],[197,114,194,112],[197,115,194,113],[198,4,195,2],[199,4,196,2],[199,8,196,8,"isStateValid"],[199,20,196,20],[199,23,196,23,"React"],[199,28,196,28],[199,29,196,29,"useCallback"],[199,40,196,40],[199,41,196,41,"state"],[199,46,196,46],[199,50,196,50,"state"],[199,55,196,55],[199,56,196,56,"type"],[199,60,196,60],[199,65,196,65,"undefined"],[199,74,196,74],[199,78,196,78,"state"],[199,83,196,83],[199,84,196,84,"type"],[199,88,196,88],[199,93,196,93,"router"],[199,99,196,99],[199,100,196,100,"type"],[199,104,196,104],[199,106,196,106],[199,107,196,107,"router"],[199,113,196,113],[199,114,196,114,"type"],[199,118,196,118],[199,119,196,119],[199,120,196,120],[200,4,197,2],[200,8,197,8,"isStateInitialized"],[200,26,197,26],[200,29,197,29,"React"],[200,34,197,34],[200,35,197,35,"useCallback"],[200,46,197,46],[200,47,197,47,"state"],[200,52,197,52],[200,56,197,56,"state"],[200,61,197,61],[200,66,197,66,"undefined"],[200,75,197,75],[200,79,197,79,"state"],[200,84,197,84],[200,85,197,85,"stale"],[200,90,197,90],[200,95,197,95],[200,100,197,100],[200,104,197,104,"isStateValid"],[200,116,197,116],[200,117,197,117,"state"],[200,122,197,122],[200,123,197,123],[200,125,197,125],[200,126,197,126,"isStateValid"],[200,138,197,138],[200,139,197,139],[200,140,197,140],[201,4,198,2],[201,8,198,2,"_React$useContext"],[201,25,198,2],[201,28,205,6,"React"],[201,33,205,11],[201,34,205,12,"useContext"],[201,44,205,22],[201,45,205,23,"NavigationStateContext"],[201,91,205,45],[201,92,205,46],[202,6,199,11,"currentState"],[202,18,199,23],[202,21,199,23,"_React$useContext"],[202,38,199,23],[202,39,199,4,"state"],[202,44,199,9],[203,6,200,14,"getCurrentState"],[203,21,200,29],[203,24,200,29,"_React$useContext"],[203,41,200,29],[203,42,200,4,"getState"],[203,50,200,12],[204,6,201,14,"setCurrentState"],[204,21,201,29],[204,24,201,29,"_React$useContext"],[204,41,201,29],[204,42,201,4,"setState"],[204,50,201,12],[205,6,202,4,"setKey"],[205,12,202,10],[205,15,202,10,"_React$useContext"],[205,32,202,10],[205,33,202,4,"setKey"],[205,39,202,10],[206,6,203,4,"getKey"],[206,12,203,10],[206,15,203,10,"_React$useContext"],[206,32,203,10],[206,33,203,4,"getKey"],[206,39,203,10],[207,6,204,4,"getIsInitial"],[207,18,204,16],[207,21,204,16,"_React$useContext"],[207,38,204,16],[207,39,204,4,"getIsInitial"],[207,51,204,16],[208,4,206,2],[208,8,206,8,"stateCleanedUp"],[208,22,206,22],[208,25,206,25,"React"],[208,30,206,30],[208,31,206,31,"useRef"],[208,37,206,37],[208,38,206,38],[208,43,206,43],[208,44,206,44],[209,4,207,2],[209,8,207,8,"setState"],[209,16,207,16],[209,19,207,19],[209,23,207,19,"useLatestCallback"],[209,49,207,36],[209,51,207,37,"state"],[209,56,207,42],[209,60,207,46],[210,6,208,4],[210,10,208,8,"stateCleanedUp"],[210,24,208,22],[210,25,208,23,"current"],[210,32,208,30],[210,34,208,32],[211,8,209,6],[212,8,210,6],[213,8,211,6],[214,8,212,6],[215,6,213,4],[216,6,214,4,"setCurrentState"],[216,21,214,19],[216,22,214,20,"state"],[216,27,214,25],[216,28,214,26],[217,4,215,2],[217,5,215,3],[217,6,215,4],[218,4,216,2],[218,8,216,2,"_React$useMemo"],[218,22,216,2],[218,25,216,57,"React"],[218,30,216,62],[218,31,216,63,"useMemo"],[218,38,216,70],[218,39,216,71],[218,45,216,77],[219,8,217,4],[219,12,217,10,"initialRouteParamList"],[219,33,217,31],[219,36,217,34,"routeNames"],[219,46,217,44],[219,47,217,45,"reduce"],[219,53,217,51],[219,54,217,52],[219,55,217,53,"acc"],[219,58,217,56],[219,60,217,58,"curr"],[219,64,217,62],[219,69,217,67],[220,10,218,6],[220,14,219,8,"initialParams"],[220,27,219,21],[220,30,220,10,"screens"],[220,37,220,17],[220,38,220,18,"curr"],[220,42,220,22],[220,43,220,23],[220,44,220,24,"props"],[220,49,220,29],[220,50,219,8,"initialParams"],[220,63,219,21],[221,10,221,6],[221,14,221,12,"initialParamsFromParams"],[221,37,221,35],[221,40,221,38,"route"],[221,45,221,43],[221,47,221,45,"params"],[221,53,221,51],[221,55,221,53,"state"],[221,60,221,58],[221,64,221,62],[221,68,221,66],[221,72,221,70,"route"],[221,77,221,75],[221,79,221,77,"params"],[221,85,221,83],[221,87,221,85,"initial"],[221,94,221,92],[221,99,221,97],[221,104,221,102],[221,108,221,106,"route"],[221,113,221,111],[221,115,221,113,"params"],[221,121,221,119],[221,123,221,121,"screen"],[221,129,221,127],[221,134,221,132,"curr"],[221,138,221,136],[221,141,221,139,"route"],[221,146,221,144],[221,147,221,145,"params"],[221,153,221,151],[221,154,221,152,"params"],[221,160,221,158],[221,163,221,161,"undefined"],[221,172,221,170],[222,10,222,6,"acc"],[222,13,222,9],[222,14,222,10,"curr"],[222,18,222,14],[222,19,222,15],[222,22,222,18,"initialParams"],[222,35,222,31],[222,40,222,36,"undefined"],[222,49,222,45],[222,53,222,49,"initialParamsFromParams"],[222,76,222,72],[222,81,222,77,"undefined"],[222,90,222,86],[222,93,222,89],[223,12,223,8],[223,15,223,11,"initialParams"],[223,28,223,24],[224,12,224,8],[224,15,224,11,"initialParamsFromParams"],[225,10,225,6],[225,11,225,7],[225,14,225,10,"undefined"],[225,23,225,19],[226,10,226,6],[226,17,226,13,"acc"],[226,20,226,16],[227,8,227,4],[227,9,227,5],[227,11,227,7],[227,12,227,8],[227,13,227,9],[227,14,227,10],[229,8,229,4],[230,8,230,4],[231,8,231,4],[232,8,232,4],[233,8,233,4],[233,12,233,8],[233,13,233,9,"currentState"],[233,25,233,21],[233,30,233,26,"undefined"],[233,39,233,35],[233,43,233,39],[233,44,233,40,"isStateValid"],[233,56,233,52],[233,57,233,53,"currentState"],[233,69,233,65],[233,70,233,66],[233,75,233,71,"route"],[233,80,233,76],[233,82,233,78,"params"],[233,88,233,84],[233,90,233,86,"state"],[233,95,233,91],[233,99,233,95],[233,103,233,99],[233,107,233,103],[233,109,233,105],[233,116,233,112,"route"],[233,121,233,117],[233,123,233,119,"params"],[233,129,233,125],[233,131,233,127,"screen"],[233,137,233,133],[233,142,233,138],[233,150,233,146],[233,154,233,150,"route"],[233,159,233,155],[233,161,233,157,"params"],[233,167,233,163],[233,169,233,165,"initial"],[233,176,233,172],[233,181,233,177],[233,186,233,182],[233,187,233,183],[233,189,233,185],[234,10,234,6],[234,17,234,13],[234,18,234,14,"router"],[234,24,234,20],[234,25,234,21,"getInitialState"],[234,40,234,36],[234,41,234,37],[235,12,235,8,"routeNames"],[235,22,235,18],[236,12,236,8,"routeParamList"],[236,26,236,22],[236,28,236,24,"initialRouteParamList"],[236,49,236,45],[237,12,237,8,"routeGetIdList"],[238,10,238,6],[238,11,238,7],[238,12,238,8],[238,14,238,10],[238,18,238,14],[238,19,238,15],[239,8,239,4],[239,9,239,5],[239,15,239,11],[240,10,240,6],[240,14,240,10,"stateFromParams"],[240,29,240,25],[241,10,241,6],[241,14,241,10,"route"],[241,19,241,15],[241,21,241,17,"params"],[241,27,241,23],[241,29,241,25,"state"],[241,34,241,30],[241,38,241,34],[241,42,241,38],[241,44,241,40],[242,12,242,8,"stateFromParams"],[242,27,242,23],[242,30,242,26,"route"],[242,35,242,31],[242,36,242,32,"params"],[242,42,242,38],[242,43,242,39,"state"],[242,48,242,44],[243,10,243,6],[243,11,243,7],[243,17,243,13],[243,21,243,17],[243,28,243,24,"route"],[243,33,243,29],[243,35,243,31,"params"],[243,41,243,37],[243,43,243,39,"screen"],[243,49,243,45],[243,54,243,50],[243,62,243,58],[243,66,243,62,"route"],[243,71,243,67],[243,73,243,69,"params"],[243,79,243,75],[243,81,243,77,"initial"],[243,88,243,84],[243,93,243,89],[243,98,243,94],[243,100,243,96],[244,12,244,8,"stateFromParams"],[244,27,244,23],[244,30,244,26],[245,14,245,10,"index"],[245,19,245,15],[245,21,245,17],[245,22,245,18],[246,14,246,10,"routes"],[246,20,246,16],[246,22,246,18],[246,23,246,19],[247,16,247,12,"name"],[247,20,247,16],[247,22,247,18,"route"],[247,27,247,23],[247,28,247,24,"params"],[247,34,247,30],[247,35,247,31,"screen"],[247,41,247,37],[248,16,248,12,"params"],[248,22,248,18],[248,24,248,20,"route"],[248,29,248,25],[248,30,248,26,"params"],[248,36,248,32],[248,37,248,33,"params"],[248,43,248,39],[249,16,249,12,"path"],[249,20,249,16],[249,22,249,18,"route"],[249,27,249,23],[249,28,249,24,"params"],[249,34,249,30],[249,35,249,31,"path"],[250,14,250,10],[250,15,250,11],[251,12,251,8],[251,13,251,9],[252,10,252,6],[253,10,253,6],[253,17,253,13],[253,18,253,14,"router"],[253,24,253,20],[253,25,253,21,"getRehydratedState"],[253,43,253,39],[253,44,253,40,"stateFromParams"],[253,59,253,55],[253,63,253,59,"currentState"],[253,75,253,71],[253,77,253,73],[254,12,254,8,"routeNames"],[254,22,254,18],[255,12,255,8,"routeParamList"],[255,26,255,22],[255,28,255,24,"initialRouteParamList"],[255,49,255,45],[256,12,256,8,"routeGetIdList"],[257,10,257,6],[257,11,257,7],[257,12,257,8],[257,14,257,10],[257,19,257,15],[257,20,257,16],[258,8,258,4],[259,8,259,4],[260,8,260,4],[261,8,261,4],[262,8,262,4],[263,8,263,4],[264,8,264,4],[265,6,265,2],[265,7,265,3],[265,9,265,5],[265,10,265,6,"currentState"],[265,22,265,18],[265,24,265,20,"router"],[265,30,265,26],[265,32,265,28,"isStateValid"],[265,44,265,40],[265,45,265,41],[265,46,265,42],[266,6,265,42,"_React$useMemo2"],[266,21,265,42],[266,28,265,42,"_slicedToArray2"],[266,43,265,42],[266,44,265,42,"default"],[266,51,265,42],[266,53,265,42,"_React$useMemo"],[266,67,265,42],[267,6,216,9,"initializedState"],[267,22,216,25],[267,25,216,25,"_React$useMemo2"],[267,40,216,25],[268,6,216,27,"isFirstStateInitialization"],[268,32,216,53],[268,35,216,53,"_React$useMemo2"],[268,50,216,53],[269,4,266,2],[269,8,266,8,"previousRouteKeyListRef"],[269,31,266,31],[269,34,266,34,"React"],[269,39,266,39],[269,40,266,40,"useRef"],[269,46,266,46],[269,47,266,47,"routeKeyList"],[269,59,266,59],[269,60,266,60],[270,4,267,2,"React"],[270,9,267,7],[270,10,267,8,"useEffect"],[270,19,267,17],[270,20,267,18],[270,26,267,24],[271,6,268,4,"previousRouteKeyListRef"],[271,29,268,27],[271,30,268,28,"current"],[271,37,268,35],[271,40,268,38,"routeKeyList"],[271,52,268,50],[272,4,269,2],[272,5,269,3],[272,6,269,4],[273,4,270,2],[273,8,270,8,"previousRouteKeyList"],[273,28,270,28],[273,31,270,31,"previousRouteKeyListRef"],[273,54,270,54],[273,55,270,55,"current"],[273,62,270,62],[274,4,271,2],[274,8,271,6,"state"],[274,13,271,11],[275,4,272,2],[276,4,273,2],[277,4,274,2],[278,4,275,2,"isStateInitialized"],[278,22,275,20],[278,23,275,21,"currentState"],[278,35,275,33],[278,36,275,34],[278,39,275,37,"currentState"],[278,51,275,49],[278,54,275,52,"initializedState"],[278,70,275,68],[279,4,276,2],[279,8,276,6,"nextState"],[279,17,276,15],[279,20,276,18,"state"],[279,25,276,23],[280,4,277,2],[280,8,277,6],[280,9,277,7],[280,13,277,7,"isArrayEqual"],[280,39,277,19],[280,41,277,20,"state"],[280,46,277,25],[280,47,277,26,"routeNames"],[280,57,277,36],[280,59,277,38,"routeNames"],[280,69,277,48],[280,70,277,49],[280,74,277,53],[280,75,277,54],[280,79,277,54,"isRecordEqual"],[280,107,277,67],[280,109,277,68,"routeKeyList"],[280,121,277,80],[280,123,277,82,"previousRouteKeyList"],[280,143,277,102],[280,144,277,103],[280,146,277,105],[281,6,278,4],[282,6,279,4,"nextState"],[282,15,279,13],[282,18,279,16,"router"],[282,24,279,22],[282,25,279,23,"getStateForRouteNamesChange"],[282,52,279,50],[282,53,279,51,"state"],[282,58,279,56],[282,60,279,58],[283,8,280,6,"routeNames"],[283,18,280,16],[284,8,281,6,"routeParamList"],[284,22,281,20],[285,8,282,6,"routeGetIdList"],[285,22,282,20],[286,8,283,6,"routeKeyChanges"],[286,23,283,21],[286,25,283,23,"Object"],[286,31,283,29],[286,32,283,30,"keys"],[286,36,283,34],[286,37,283,35,"routeKeyList"],[286,49,283,47],[286,50,283,48],[286,51,283,49,"filter"],[286,57,283,55],[286,58,283,56,"name"],[286,62,283,60],[286,66,283,64,"name"],[286,70,283,68],[286,74,283,72,"previousRouteKeyList"],[286,94,283,92],[286,98,283,96,"routeKeyList"],[286,110,283,108],[286,111,283,109,"name"],[286,115,283,113],[286,116,283,114],[286,121,283,119,"previousRouteKeyList"],[286,141,283,139],[286,142,283,140,"name"],[286,146,283,144],[286,147,283,145],[287,6,284,4],[287,7,284,5],[287,8,284,6],[288,4,285,2],[289,4,286,2],[289,8,286,8,"previousNestedParamsRef"],[289,31,286,31],[289,34,286,34,"React"],[289,39,286,39],[289,40,286,40,"useRef"],[289,46,286,46],[289,47,286,47,"route"],[289,52,286,52],[289,54,286,54,"params"],[289,60,286,60],[289,61,286,61],[290,4,287,2,"React"],[290,9,287,7],[290,10,287,8,"useEffect"],[290,19,287,17],[290,20,287,18],[290,26,287,24],[291,6,288,4,"previousNestedParamsRef"],[291,29,288,27],[291,30,288,28,"current"],[291,37,288,35],[291,40,288,38,"route"],[291,45,288,43],[291,47,288,45,"params"],[291,53,288,51],[292,4,289,2],[292,5,289,3],[292,7,289,5],[292,8,289,6,"route"],[292,13,289,11],[292,15,289,13,"params"],[292,21,289,19],[292,22,289,20],[292,23,289,21],[293,4,290,2],[293,8,290,6,"route"],[293,13,290,11],[293,15,290,13,"params"],[293,21,290,19],[293,23,290,21],[294,6,291,4],[294,10,291,10,"previousParams"],[294,24,291,24],[294,27,291,27,"previousNestedParamsRef"],[294,50,291,50],[294,51,291,51,"current"],[294,58,291,58],[295,6,292,4],[295,10,292,8,"action"],[295,16,292,14],[296,6,293,4],[296,10,293,8],[296,17,293,15,"route"],[296,22,293,20],[296,23,293,21,"params"],[296,29,293,27],[296,30,293,28,"state"],[296,35,293,33],[296,40,293,38],[296,48,293,46],[296,52,293,50,"route"],[296,57,293,55],[296,58,293,56,"params"],[296,64,293,62],[296,65,293,63,"state"],[296,70,293,68],[296,74,293,72],[296,78,293,76],[296,82,293,80,"route"],[296,87,293,85],[296,88,293,86,"params"],[296,94,293,92],[296,99,293,97,"previousParams"],[296,113,293,111],[296,115,293,113],[297,8,294,6],[298,8,295,6,"action"],[298,14,295,12],[298,17,295,15,"CommonActions"],[298,39,295,28],[298,40,295,29,"reset"],[298,45,295,34],[298,46,295,35,"route"],[298,51,295,40],[298,52,295,41,"params"],[298,58,295,47],[298,59,295,48,"state"],[298,64,295,53],[298,65,295,54],[299,6,296,4],[299,7,296,5],[299,13,296,11],[299,17,296,15],[299,24,296,22,"route"],[299,29,296,27],[299,30,296,28,"params"],[299,36,296,34],[299,37,296,35,"screen"],[299,43,296,41],[299,48,296,46],[299,56,296,54],[299,61,296,59,"route"],[299,66,296,64],[299,67,296,65,"params"],[299,73,296,71],[299,74,296,72,"initial"],[299,81,296,79],[299,86,296,84],[299,91,296,89],[299,95,296,93,"isFirstStateInitialization"],[299,121,296,119],[299,125,296,123,"route"],[299,130,296,128],[299,131,296,129,"params"],[299,137,296,135],[299,142,296,140,"previousParams"],[299,156,296,154],[299,157,296,155],[299,159,296,157],[300,8,297,6],[301,8,298,6,"action"],[301,14,298,12],[301,17,298,15,"CommonActions"],[301,39,298,28],[301,40,298,29,"navigate"],[301,48,298,37],[301,49,298,38],[302,10,299,8,"name"],[302,14,299,12],[302,16,299,14,"route"],[302,21,299,19],[302,22,299,20,"params"],[302,28,299,26],[302,29,299,27,"screen"],[302,35,299,33],[303,10,300,8,"params"],[303,16,300,14],[303,18,300,16,"route"],[303,23,300,21],[303,24,300,22,"params"],[303,30,300,28],[303,31,300,29,"params"],[303,37,300,35],[304,10,301,8,"path"],[304,14,301,12],[304,16,301,14,"route"],[304,21,301,19],[304,22,301,20,"params"],[304,28,301,26],[304,29,301,27,"path"],[304,33,301,31],[305,10,302,8,"merge"],[305,15,302,13],[305,17,302,15,"route"],[305,22,302,20],[305,23,302,21,"params"],[305,29,302,27],[305,30,302,28,"merge"],[305,35,302,33],[306,10,303,8,"pop"],[306,13,303,11],[306,15,303,13,"route"],[306,20,303,18],[306,21,303,19,"params"],[306,27,303,25],[306,28,303,26,"pop"],[307,8,304,6],[307,9,304,7],[307,10,304,8],[308,6,305,4],[310,6,307,4],[311,6,308,4],[311,10,308,10,"updatedState"],[311,22,308,22],[311,25,308,25,"action"],[311,31,308,31],[311,34,308,34,"router"],[311,40,308,40],[311,41,308,41,"getStateForAction"],[311,58,308,58],[311,59,308,59,"nextState"],[311,68,308,68],[311,70,308,70,"action"],[311,76,308,76],[311,78,308,78],[312,8,309,6,"routeNames"],[312,18,309,16],[313,8,310,6,"routeParamList"],[313,22,310,20],[314,8,311,6,"routeGetIdList"],[315,6,312,4],[315,7,312,5],[315,8,312,6],[315,11,312,9],[315,15,312,13],[316,6,313,4,"nextState"],[316,15,313,13],[316,18,313,16,"updatedState"],[316,30,313,28],[316,35,313,33],[316,39,313,37],[316,42,313,40,"router"],[316,48,313,46],[316,49,313,47,"getRehydratedState"],[316,67,313,65],[316,68,313,66,"updatedState"],[316,80,313,78],[316,82,313,80],[317,8,314,6,"routeNames"],[317,18,314,16],[318,8,315,6,"routeParamList"],[318,22,315,20],[319,8,316,6,"routeGetIdList"],[320,6,317,4],[320,7,317,5],[320,8,317,6],[320,11,317,9,"nextState"],[320,20,317,18],[321,4,318,2],[322,4,319,2],[322,8,319,8,"shouldUpdate"],[322,20,319,20],[322,23,319,23,"state"],[322,28,319,28],[322,33,319,33,"nextState"],[322,42,319,42],[323,4,320,2],[323,8,320,2,"useScheduleUpdate"],[323,44,320,19],[323,46,320,20],[323,52,320,26],[324,6,321,4],[324,10,321,8,"shouldUpdate"],[324,22,321,20],[324,24,321,22],[325,8,322,6],[326,8,323,6,"setState"],[326,16,323,14],[326,17,323,15,"nextState"],[326,26,323,24],[326,27,323,25],[327,6,324,4],[328,4,325,2],[328,5,325,3],[328,6,325,4],[330,4,327,2],[331,4,328,2],[332,4,329,2],[333,4,330,2,"state"],[333,9,330,7],[333,12,330,10,"nextState"],[333,21,330,19],[334,4,331,2,"React"],[334,9,331,7],[334,10,331,8,"useEffect"],[334,19,331,17],[334,20,331,18],[334,26,331,24],[335,6,332,4],[336,6,333,4],[337,6,334,4,"stateCleanedUp"],[337,20,334,18],[337,21,334,19,"current"],[337,28,334,26],[337,31,334,29],[337,36,334,34],[338,6,335,4,"setKey"],[338,12,335,10],[338,13,335,11,"navigatorKey"],[338,25,335,23],[338,26,335,24],[339,6,336,4],[339,10,336,8],[339,11,336,9,"getIsInitial"],[339,23,336,21],[339,24,336,22],[339,25,336,23],[339,27,336,25],[340,8,337,6],[341,8,338,6],[342,8,339,6],[343,8,340,6,"setState"],[343,16,340,14],[343,17,340,15,"nextState"],[343,26,340,24],[343,27,340,25],[344,6,341,4],[345,6,342,4],[345,13,342,11],[345,19,342,17],[346,8,343,6],[347,8,344,6],[347,12,344,10,"getCurrentState"],[347,27,344,25],[347,28,344,26],[347,29,344,27],[347,34,344,32,"undefined"],[347,43,344,41],[347,47,344,45,"getKey"],[347,53,344,51],[347,54,344,52],[347,55,344,53],[347,60,344,58,"navigatorKey"],[347,72,344,70],[347,74,344,72],[348,10,345,8,"setCurrentState"],[348,25,345,23],[348,26,345,24,"undefined"],[348,35,345,33],[348,36,345,34],[349,10,346,8,"stateCleanedUp"],[349,24,346,22],[349,25,346,23,"current"],[349,32,346,30],[349,35,346,33],[349,39,346,37],[350,8,347,6],[351,6,348,4],[351,7,348,5],[352,6,349,4],[353,4,350,2],[353,5,350,3],[353,7,350,5],[353,9,350,7],[353,10,350,8],[355,4,352,2],[356,4,353,2],[357,4,354,2],[358,4,355,2],[359,4,356,2],[360,4,357,2],[360,8,357,8,"stateRef"],[360,16,357,16],[360,19,357,19,"React"],[360,24,357,24],[360,25,357,25,"useRef"],[360,31,357,31],[360,32,357,32,"state"],[360,37,357,37],[360,38,357,38],[361,4,358,2,"stateRef"],[361,12,358,10],[361,13,358,11,"current"],[361,20,358,18],[361,23,358,21,"state"],[361,28,358,26],[362,4,359,2],[362,8,359,2,"useClientLayoutEffect"],[362,52,359,23],[362,54,359,24],[362,60,359,30],[363,6,360,4,"stateRef"],[363,14,360,12],[363,15,360,13,"current"],[363,22,360,20],[363,25,360,23],[363,29,360,27],[364,4,361,2],[364,5,361,3],[364,6,361,4],[365,4,362,2],[365,8,362,8,"getState"],[365,16,362,16],[365,19,362,19],[365,23,362,19,"useLatestCallback"],[365,49,362,36],[365,51,362,37],[365,57,362,43],[366,6,363,4],[366,10,363,10,"currentState"],[366,22,363,22],[366,25,363,25,"getCurrentState"],[366,40,363,40],[366,41,363,41],[366,42,363,42],[367,6,364,4],[367,13,364,11],[367,17,364,11,"deepFreeze"],[367,39,364,21],[367,41,364,22,"isStateInitialized"],[367,59,364,40],[367,60,364,41,"currentState"],[367,72,364,53],[367,73,364,54],[367,76,364,57,"currentState"],[367,88,364,69],[367,91,364,72,"initializedState"],[367,107,364,88],[367,108,364,89],[368,4,365,2],[368,5,365,3],[368,6,365,4],[369,4,366,2],[369,8,366,8,"emitter"],[369,15,366,15],[369,18,366,18],[369,22,366,18,"useEventEmitter"],[369,54,366,33],[369,56,366,34,"e"],[369,57,366,35],[369,61,366,39],[370,6,367,4],[370,10,367,10,"routeNames"],[370,20,367,20],[370,23,367,23],[370,25,367,25],[371,6,368,4],[371,10,368,8,"route"],[371,15,368,13],[372,6,369,4],[372,10,369,8,"e"],[372,11,369,9],[372,12,369,10,"target"],[372,18,369,16],[372,20,369,18],[373,8,370,6,"route"],[373,13,370,11],[373,16,370,14,"state"],[373,21,370,19],[373,22,370,20,"routes"],[373,28,370,26],[373,29,370,27,"find"],[373,33,370,31],[373,34,370,32,"route"],[373,39,370,37],[373,43,370,41,"route"],[373,48,370,46],[373,49,370,47,"key"],[373,52,370,50],[373,57,370,55,"e"],[373,58,370,56],[373,59,370,57,"target"],[373,65,370,63],[373,66,370,64],[374,8,371,6],[374,12,371,10,"route"],[374,17,371,15],[374,19,371,17,"name"],[374,23,371,21],[374,25,371,23],[375,10,372,8,"routeNames"],[375,20,372,18],[375,21,372,19,"push"],[375,25,372,23],[375,26,372,24,"route"],[375,31,372,29],[375,32,372,30,"name"],[375,36,372,34],[375,37,372,35],[376,8,373,6],[377,6,374,4],[377,7,374,5],[377,13,374,11],[378,8,375,6,"route"],[378,13,375,11],[378,16,375,14,"state"],[378,21,375,19],[378,22,375,20,"routes"],[378,28,375,26],[378,29,375,27,"state"],[378,34,375,32],[378,35,375,33,"index"],[378,40,375,38],[378,41,375,39],[379,8,376,6,"routeNames"],[379,18,376,16],[379,19,376,17,"push"],[379,23,376,21],[379,24,376,22],[379,27,376,25,"Object"],[379,33,376,31],[379,34,376,32,"keys"],[379,38,376,36],[379,39,376,37,"screens"],[379,46,376,44],[379,47,376,45],[379,48,376,46,"filter"],[379,54,376,52],[379,55,376,53,"name"],[379,59,376,57],[379,63,376,61,"route"],[379,68,376,66],[379,70,376,68,"name"],[379,74,376,72],[379,79,376,77,"name"],[379,83,376,81],[379,84,376,82],[379,85,376,83],[380,6,377,4],[381,6,378,4],[381,10,378,8,"route"],[381,15,378,13],[381,19,378,17],[381,23,378,21],[381,25,378,23],[382,8,379,6],[383,6,380,4],[384,6,381,4],[384,10,381,10,"navigation"],[384,20,381,20],[384,23,381,23,"descriptors"],[384,34,381,34],[384,35,381,35,"route"],[384,40,381,40],[384,41,381,41,"key"],[384,44,381,44],[384,45,381,45],[384,46,381,46,"navigation"],[384,56,381,56],[385,6,382,4],[385,10,382,10,"listeners"],[385,19,382,19],[385,22,382,22],[385,24,382,24],[385,25,382,25,"concat"],[385,31,382,31],[386,6,383,4],[387,6,384,4],[387,9,384,7],[387,10,384,8,"screenListeners"],[387,25,384,23],[387,27,384,25],[387,30,384,28,"routeNames"],[387,40,384,38],[387,41,384,39,"map"],[387,44,384,42],[387,45,384,43,"name"],[387,49,384,47],[387,53,384,51],[388,8,385,6],[388,12,386,8,"listeners"],[388,21,386,17],[388,24,387,10,"screens"],[388,31,387,17],[388,32,387,18,"name"],[388,36,387,22],[388,37,387,23],[388,38,387,24,"props"],[388,43,387,29],[388,44,386,8,"listeners"],[388,53,386,17],[389,8,388,6],[389,15,388,13,"listeners"],[389,24,388,22],[390,6,389,4],[390,7,389,5],[390,8,389,6],[390,9,389,7],[390,10,389,8,"map"],[390,13,389,11],[390,14,389,12,"listeners"],[390,23,389,21],[390,27,389,25],[391,8,390,6],[391,12,390,12,"map"],[391,15,390,15],[391,18,390,18],[391,25,390,25,"listeners"],[391,34,390,34],[391,39,390,39],[391,49,390,49],[391,52,390,52,"listeners"],[391,61,390,61],[391,62,390,62],[392,10,391,8,"route"],[392,15,391,13],[392,17,391,15,"route"],[392,22,391,20],[393,10,392,8,"navigation"],[394,8,393,6],[394,9,393,7],[394,10,393,8],[394,13,393,11,"listeners"],[394,22,393,20],[395,8,394,6],[395,15,394,13,"map"],[395,18,394,16],[395,21,394,19,"Object"],[395,27,394,25],[395,28,394,26,"keys"],[395,32,394,30],[395,33,394,31,"map"],[395,36,394,34],[395,37,394,35],[395,38,394,36,"filter"],[395,44,394,42],[395,45,394,43,"type"],[395,49,394,47],[395,53,394,51,"type"],[395,57,394,55],[395,62,394,60,"e"],[395,63,394,61],[395,64,394,62,"type"],[395,68,394,66],[395,69,394,67],[395,70,394,68,"map"],[395,73,394,71],[395,74,394,72,"type"],[395,78,394,76],[395,82,394,80,"map"],[395,85,394,83],[395,88,394,86,"type"],[395,92,394,90],[395,93,394,91],[395,94,394,92],[395,97,394,95,"undefined"],[395,106,394,104],[396,6,395,4],[396,7,395,5],[396,8,395,6],[397,6,396,4],[398,6,397,4],[399,6,397,4],[399,7,398,5,"filter"],[399,13,398,11],[399,14,398,12],[399,15,398,13,"cb"],[399,17,398,15],[399,19,398,17,"i"],[399,20,398,18],[399,22,398,20,"self"],[399,26,398,24],[399,31,398,29,"cb"],[399,33,398,31],[399,37,398,35,"self"],[399,41,398,39],[399,42,398,40,"lastIndexOf"],[399,53,398,51],[399,54,398,52,"cb"],[399,56,398,54],[399,57,398,55],[399,62,398,60,"i"],[399,63,398,61],[399,64,398,62],[400,6,399,4,"listeners"],[400,15,399,13],[400,16,399,14,"forEach"],[400,23,399,21],[400,24,399,22,"listener"],[400,32,399,30],[400,36,399,34,"listener"],[400,44,399,42],[400,47,399,45,"e"],[400,48,399,46],[400,49,399,47],[400,50,399,48],[401,4,400,2],[401,5,400,3],[401,6,400,4],[402,4,401,2],[402,8,401,2,"useFocusEvents"],[402,38,401,16],[402,40,401,17],[403,6,402,4,"state"],[403,11,402,9],[404,6,403,4,"emitter"],[405,4,404,2],[405,5,404,3],[405,6,404,4],[406,4,405,2,"React"],[406,9,405,7],[406,10,405,8,"useEffect"],[406,19,405,17],[406,20,405,18],[406,26,405,24],[407,6,406,4,"emitter"],[407,13,406,11],[407,14,406,12,"emit"],[407,18,406,16],[407,19,406,17],[408,8,407,6,"type"],[408,12,407,10],[408,14,407,12],[408,21,407,19],[409,8,408,6,"data"],[409,12,408,10],[409,14,408,12],[410,10,409,8,"state"],[411,8,410,6],[412,6,411,4],[412,7,411,5],[412,8,411,6],[413,4,412,2],[413,5,412,3],[413,7,412,5],[413,8,412,6,"emitter"],[413,15,412,13],[413,17,412,15,"state"],[413,22,412,20],[413,23,412,21],[413,24,412,22],[414,4,413,2],[414,8,413,2,"_useChildListeners"],[414,26,413,2],[414,29,416,6],[414,33,416,6,"useChildListeners"],[414,70,416,23],[414,72,416,24],[414,73,416,25],[415,6,414,15,"childListeners"],[415,20,414,29],[415,23,414,29,"_useChildListeners"],[415,41,414,29],[415,42,414,4,"listeners"],[415,51,414,13],[416,6,415,4,"addListener"],[416,17,415,15],[416,20,415,15,"_useChildListeners"],[416,38,415,15],[416,39,415,4,"addListener"],[416,50,415,15],[417,4,417,2],[417,8,417,2,"_useKeyedChildListene"],[417,29,417,2],[417,32,420,6],[417,36,420,6,"useKeyedChildListeners"],[417,82,420,28],[417,84,420,29],[417,85,420,30],[418,6,418,4,"keyedListeners"],[418,20,418,18],[418,23,418,18,"_useKeyedChildListene"],[418,44,418,18],[418,45,418,4,"keyedListeners"],[418,59,418,18],[419,6,419,4,"addKeyedListener"],[419,22,419,20],[419,25,419,20,"_useKeyedChildListene"],[419,46,419,20],[419,47,419,4,"addKeyedListener"],[419,63,419,20],[420,4,421,2],[420,8,421,8,"onAction"],[420,16,421,16],[420,19,421,19],[420,23,421,19,"useOnAction"],[420,47,421,30],[420,49,421,31],[421,6,422,4,"router"],[421,12,422,10],[422,6,423,4,"getState"],[422,14,423,12],[423,6,424,4,"setState"],[423,14,424,12],[424,6,425,4,"key"],[424,9,425,7],[424,11,425,9,"route"],[424,16,425,14],[424,18,425,16,"key"],[424,21,425,19],[425,6,426,4,"actionListeners"],[425,21,426,19],[425,23,426,21,"childListeners"],[425,37,426,35],[425,38,426,36,"action"],[425,44,426,42],[426,6,427,4,"beforeRemoveListeners"],[426,27,427,25],[426,29,427,27,"keyedListeners"],[426,43,427,41],[426,44,427,42,"beforeRemove"],[426,56,427,54],[427,6,428,4,"routerConfigOptions"],[427,25,428,23],[427,27,428,25],[428,8,429,6,"routeNames"],[428,18,429,16],[429,8,430,6,"routeParamList"],[429,22,430,20],[430,8,431,6,"routeGetIdList"],[431,6,432,4],[431,7,432,5],[432,6,433,4,"emitter"],[433,4,434,2],[433,5,434,3],[433,6,434,4],[434,4,435,2],[434,8,435,8,"onRouteFocus"],[434,20,435,20],[434,23,435,23],[434,27,435,23,"useOnRouteFocus"],[434,59,435,38],[434,61,435,39],[435,6,436,4,"router"],[435,12,436,10],[436,6,437,4,"key"],[436,9,437,7],[436,11,437,9,"route"],[436,16,437,14],[436,18,437,16,"key"],[436,21,437,19],[437,6,438,4,"getState"],[437,14,438,12],[438,6,439,4,"setState"],[439,4,440,2],[439,5,440,3],[439,6,440,4],[440,4,441,2],[440,8,441,8,"navigation"],[440,18,441,18],[440,21,441,21],[440,25,441,21,"useNavigationHelpers"],[440,67,441,41],[440,69,441,42],[441,6,442,4,"id"],[441,8,442,6],[441,10,442,8,"options"],[441,17,442,15],[441,18,442,16,"id"],[441,20,442,18],[442,6,443,4,"onAction"],[442,14,443,12],[443,6,444,4,"getState"],[443,14,444,12],[444,6,445,4,"emitter"],[444,13,445,11],[445,6,446,4,"router"],[445,12,446,10],[446,6,447,4,"stateRef"],[447,4,448,2],[447,5,448,3],[447,6,448,4],[448,4,449,2],[448,8,449,2,"useFocusedListenersChildrenAdapter"],[448,78,449,36],[448,80,449,37],[449,6,450,4,"navigation"],[449,16,450,14],[450,6,451,4,"focusedListeners"],[450,22,451,20],[450,24,451,22,"childListeners"],[450,38,451,36],[450,39,451,37,"focus"],[451,4,452,2],[451,5,452,3],[451,6,452,4],[452,4,453,2],[452,8,453,2,"useOnGetState"],[452,36,453,15],[452,38,453,16],[453,6,454,4,"getState"],[453,14,454,12],[454,6,455,4,"getStateListeners"],[454,23,455,21],[454,25,455,23,"keyedListeners"],[454,39,455,37],[454,40,455,38,"getState"],[455,4,456,2],[455,5,456,3],[455,6,456,4],[456,4,457,2],[456,8,457,2,"_useDescriptors"],[456,23,457,2],[456,26,460,6],[456,30,460,6,"useDescriptors"],[456,61,460,20],[456,63,460,21],[457,8,461,4,"state"],[457,13,461,9],[458,8,462,4,"screens"],[458,15,462,11],[459,8,463,4,"navigation"],[459,18,463,14],[460,8,464,4,"screenOptions"],[460,21,464,17],[461,8,465,4,"screenLayout"],[461,20,465,16],[462,8,466,4,"onAction"],[462,16,466,12],[463,8,467,4,"getState"],[463,16,467,12],[464,8,468,4,"setState"],[464,16,468,12],[465,8,469,4,"onRouteFocus"],[465,20,469,16],[466,8,470,4,"addListener"],[466,19,470,15],[467,8,471,4,"addKeyedListener"],[467,24,471,20],[468,8,472,4,"router"],[468,14,472,10],[469,8,473,4],[470,8,474,4,"emitter"],[471,6,475,2],[471,7,475,3],[471,8,475,4],[472,6,458,4,"describe"],[472,14,458,12],[472,17,458,12,"_useDescriptors"],[472,32,458,12],[472,33,458,4,"describe"],[472,41,458,12],[473,6,459,4,"descriptors"],[473,17,459,15],[473,20,459,15,"_useDescriptors"],[473,35,459,15],[473,36,459,4,"descriptors"],[473,47,459,15],[474,4,476,2],[474,8,476,2,"useCurrentRender"],[474,42,476,18],[474,44,476,19],[475,6,477,4,"state"],[475,11,477,9],[476,6,478,4,"navigation"],[476,16,478,14],[477,6,479,4,"descriptors"],[478,4,480,2],[478,5,480,3],[478,6,480,4],[479,4,481,2],[479,8,481,8,"NavigationContent"],[479,25,481,25],[479,28,481,28],[479,32,481,28,"useComponent"],[479,58,481,40],[479,60,481,41,"children"],[479,68,481,49],[479,72,481,53],[480,6,482,4],[480,10,482,10,"element"],[480,17,482,17],[480,20,482,20,"layout"],[480,26,482,26],[480,30,482,30],[480,34,482,34],[480,37,482,37,"layout"],[480,43,482,43],[480,44,482,44],[481,8,483,6,"state"],[481,13,483,11],[482,8,484,6,"descriptors"],[482,19,484,17],[483,8,485,6,"navigation"],[483,18,485,16],[484,8,486,6,"children"],[485,6,487,4],[485,7,487,5],[485,8,487,6],[485,11,487,9,"children"],[485,19,487,17],[486,6,488,4],[486,13,488,11],[486,26,488,24],[486,30,488,24,"_jsx"],[486,45,488,28],[486,47,488,29,"NavigationHelpersContext"],[486,97,488,53],[486,98,488,54,"Provider"],[486,106,488,62],[486,108,488,64],[487,8,489,6,"value"],[487,13,489,11],[487,15,489,13,"navigation"],[487,25,489,23],[488,8,490,6,"children"],[488,16,490,14],[488,18,490,16],[488,31,490,29],[488,35,490,29,"_jsx"],[488,50,490,33],[488,52,490,34,"NavigationStateListenerProvider"],[488,103,490,65],[488,105,490,67],[489,10,491,8,"state"],[489,15,491,13],[489,17,491,15,"state"],[489,22,491,20],[490,10,492,8,"children"],[490,18,492,16],[490,20,492,18],[490,33,492,31],[490,37,492,31,"_jsx"],[490,52,492,35],[490,54,492,36,"PreventRemoveProvider"],[490,98,492,57],[490,100,492,59],[491,12,493,10,"children"],[491,20,493,18],[491,22,493,20,"element"],[492,10,494,8],[492,11,494,9],[493,8,495,6],[493,9,495,7],[494,6,496,4],[494,7,496,5],[494,8,496,6],[495,4,497,2],[495,5,497,3],[495,6,497,4],[496,4,498,2],[496,11,498,9],[497,6,499,4,"state"],[497,11,499,9],[498,6,500,4,"navigation"],[498,16,500,14],[499,6,501,4,"describe"],[499,14,501,12],[500,6,502,4,"descriptors"],[500,17,502,15],[501,6,503,4,"NavigationContent"],[502,4,504,2],[502,5,504,3],[503,2,505,0],[504,0,505,1],[504,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useClientLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCsC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;OOS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYc,yFZ;kBWI;GXE;oBa+B;GbK;kBWM;WGW;KHM;GXE;wBeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBgB;CPQ"}},"type":"js/module"}]}