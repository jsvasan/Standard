{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":115,"index":130}}],"key":"Wm75LgE4xYscVWo0KoLFlflJQCo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":131},"end":{"line":4,"column":31,"index":162}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":163},"end":{"line":5,"column":40,"index":203}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./LinkingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":204},"end":{"line":6,"column":53,"index":257}}],"key":"r/0Yvi+HouDAqn4vN4m4I6AMfEI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useLinkProps = useLinkProps;\n  var _reactNavigationCore = require(_dependencyMap[0], \"@react-navigation/core\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _LinkingContextJs = require(_dependencyMap[3], \"./LinkingContext.js\");\n  var getStateFromParams = params => {\n    if (params?.state) {\n      return params.state;\n    }\n    if (params?.screen) {\n      return {\n        routes: [{\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error this is fine ðŸ”¥\n          state: params.screen ? getStateFromParams(params.params) : undefined\n        }]\n      };\n    }\n    return undefined;\n  };\n\n  /**\n   * Hook to get props for an anchor tag so it can work with in page navigation.\n   *\n   * @param props.screen Name of the screen to navigate to (e.g. `'Feeds'`).\n   * @param props.params Params to pass to the screen to navigate to (e.g. `{ sort: 'hot' }`).\n   * @param props.href Optional absolute path to use for the href (e.g. `/feeds/hot`).\n   * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n   */\n  function useLinkProps(_ref) {\n    var screen = _ref.screen,\n      params = _ref.params,\n      href = _ref.href,\n      action = _ref.action;\n    var root = React.useContext(_reactNavigationCore.NavigationContainerRefContext);\n    var navigation = React.useContext(_reactNavigationCore.NavigationHelpersContext);\n    var _React$useContext = React.useContext(_LinkingContextJs.LinkingContext),\n      options = _React$useContext.options;\n    var onPress = e => {\n      var shouldHandle = false;\n      if (_reactNative.Platform.OS !== 'web' || !e) {\n        e?.preventDefault?.();\n        shouldHandle = true;\n      } else {\n        // ignore clicks with modifier keys\n        var hasModifierKey = 'metaKey' in e && e.metaKey || 'altKey' in e && e.altKey || 'ctrlKey' in e && e.ctrlKey || 'shiftKey' in e && e.shiftKey;\n\n        // only handle left clicks\n        var isLeftClick = 'button' in e ? e.button == null || e.button === 0 : true;\n\n        // let browser handle \"target=_blank\" etc.\n        var isSelfTarget = e.currentTarget && 'target' in e.currentTarget ? [undefined, null, '', 'self'].includes(e.currentTarget.target) : true;\n        if (!hasModifierKey && isLeftClick && isSelfTarget) {\n          e.preventDefault?.();\n          shouldHandle = true;\n        }\n      }\n      if (shouldHandle) {\n        if (action) {\n          if (navigation) {\n            navigation.dispatch(action);\n          } else if (root) {\n            root.dispatch(action);\n          } else {\n            throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n          }\n        } else {\n          // @ts-expect-error This is already type-checked by the prop types\n          navigation?.navigate(screen, params);\n        }\n      }\n    };\n    var getPathFromStateHelper = options?.getPathFromState ?? _reactNavigationCore.getPathFromState;\n    return {\n      href: href ?? (_reactNative.Platform.OS === 'web' && screen != null ? getPathFromStateHelper({\n        routes: [{\n          // @ts-expect-error this is fine ðŸ”¥\n          name: screen,\n          // @ts-expect-error this is fine ðŸ”¥\n          params: params,\n          // @ts-expect-error this is fine ðŸ”¥\n          state: getStateFromParams(params)\n        }]\n      }, options?.config) : undefined),\n      role: 'link',\n      onPress\n    };\n  }\n});","lineCount":112,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13],[11,10,1,13,"d"],[11,11,1,13],[11,14,1,13,"Object"],[11,20,1,13],[11,21,1,13,"getOwnPropertyDescriptor"],[11,45,1,13],[11,46,1,13,"e"],[11,47,1,13],[11,49,1,13,"k"],[11,50,1,13],[12,6,1,13,"Object"],[12,12,1,13],[12,13,1,13,"defineProperty"],[12,27,1,13],[12,28,1,13,"n"],[12,29,1,13],[12,31,1,13,"k"],[12,32,1,13],[12,34,1,13,"d"],[12,35,1,13],[12,36,1,13,"get"],[12,39,1,13],[12,42,1,13,"d"],[12,43,1,13],[13,8,1,13,"enumerable"],[13,18,1,13],[14,8,1,13,"get"],[14,11,1,13],[14,22,1,13,"get"],[14,23,1,13],[15,10,1,13],[15,17,1,13,"e"],[15,18,1,13],[15,19,1,13,"k"],[15,20,1,13],[16,8,1,13],[17,6,1,13],[18,4,1,13],[19,4,1,13,"n"],[19,5,1,13],[19,6,1,13,"default"],[19,13,1,13],[19,16,1,13,"e"],[19,17,1,13],[20,4,1,13],[20,11,1,13,"n"],[20,12,1,13],[21,2,1,13],[22,2,32,0,"exports"],[22,9,32,0],[22,10,32,0,"useLinkProps"],[22,22,32,0],[22,25,32,0,"useLinkProps"],[22,37,32,0],[23,2,3,0],[23,6,3,0,"_reactNavigationCore"],[23,26,3,0],[23,29,3,0,"require"],[23,36,3,0],[23,37,3,0,"_dependencyMap"],[23,51,3,0],[24,2,4,0],[24,6,4,0,"_react"],[24,12,4,0],[24,15,4,0,"require"],[24,22,4,0],[24,23,4,0,"_dependencyMap"],[24,37,4,0],[25,2,4,0],[25,6,4,0,"React"],[25,11,4,0],[25,14,4,0,"_interopNamespace"],[25,31,4,0],[25,32,4,0,"_react"],[25,38,4,0],[26,2,5,0],[26,6,5,0,"_reactNative"],[26,18,5,0],[26,21,5,0,"require"],[26,28,5,0],[26,29,5,0,"_dependencyMap"],[26,43,5,0],[27,2,6,0],[27,6,6,0,"_LinkingContextJs"],[27,23,6,0],[27,26,6,0,"require"],[27,33,6,0],[27,34,6,0,"_dependencyMap"],[27,48,6,0],[28,2,7,0],[28,6,7,6,"getStateFromParams"],[28,24,7,24],[28,27,7,27,"params"],[28,33,7,33],[28,37,7,37],[29,4,8,2],[29,8,8,6,"params"],[29,14,8,12],[29,16,8,14,"state"],[29,21,8,19],[29,23,8,21],[30,6,9,4],[30,13,9,11,"params"],[30,19,9,17],[30,20,9,18,"state"],[30,25,9,23],[31,4,10,2],[32,4,11,2],[32,8,11,6,"params"],[32,14,11,12],[32,16,11,14,"screen"],[32,22,11,20],[32,24,11,22],[33,6,12,4],[33,13,12,11],[34,8,13,6,"routes"],[34,14,13,12],[34,16,13,14],[34,17,13,15],[35,10,14,8,"name"],[35,14,14,12],[35,16,14,14,"params"],[35,22,14,20],[35,23,14,21,"screen"],[35,29,14,27],[36,10,15,8,"params"],[36,16,15,14],[36,18,15,16,"params"],[36,24,15,22],[36,25,15,23,"params"],[36,31,15,29],[37,10,16,8],[38,10,17,8,"state"],[38,15,17,13],[38,17,17,15,"params"],[38,23,17,21],[38,24,17,22,"screen"],[38,30,17,28],[38,33,17,31,"getStateFromParams"],[38,51,17,49],[38,52,17,50,"params"],[38,58,17,56],[38,59,17,57,"params"],[38,65,17,63],[38,66,17,64],[38,69,17,67,"undefined"],[39,8,18,6],[39,9,18,7],[40,6,19,4],[40,7,19,5],[41,4,20,2],[42,4,21,2],[42,11,21,9,"undefined"],[42,20,21,18],[43,2,22,0],[43,3,22,1],[45,2,24,0],[46,0,25,0],[47,0,26,0],[48,0,27,0],[49,0,28,0],[50,0,29,0],[51,0,30,0],[52,0,31,0],[53,2,32,7],[53,11,32,16,"useLinkProps"],[53,23,32,28,"useLinkProps"],[53,24,32,28,"_ref"],[53,28,32,28],[53,30,37,3],[54,4,37,3],[54,8,33,2,"screen"],[54,14,33,8],[54,17,33,8,"_ref"],[54,21,33,8],[54,22,33,2,"screen"],[54,28,33,8],[55,6,34,2,"params"],[55,12,34,8],[55,15,34,8,"_ref"],[55,19,34,8],[55,20,34,2,"params"],[55,26,34,8],[56,6,35,2,"href"],[56,10,35,6],[56,13,35,6,"_ref"],[56,17,35,6],[56,18,35,2,"href"],[56,22,35,6],[57,6,36,2,"action"],[57,12,36,8],[57,15,36,8,"_ref"],[57,19,36,8],[57,20,36,2,"action"],[57,26,36,8],[58,4,38,2],[58,8,38,8,"root"],[58,12,38,12],[58,15,38,15,"React"],[58,20,38,20],[58,21,38,21,"useContext"],[58,31,38,31],[58,32,38,32,"NavigationContainerRefContext"],[58,52,38,61],[58,53,38,61,"NavigationContainerRefContext"],[58,82,38,61],[58,83,38,62],[59,4,39,2],[59,8,39,8,"navigation"],[59,18,39,18],[59,21,39,21,"React"],[59,26,39,26],[59,27,39,27,"useContext"],[59,37,39,37],[59,38,39,38,"NavigationHelpersContext"],[59,58,39,62],[59,59,39,62,"NavigationHelpersContext"],[59,83,39,62],[59,84,39,63],[60,4,40,2],[60,8,40,2,"_React$useContext"],[60,25,40,2],[60,28,42,6,"React"],[60,33,42,11],[60,34,42,12,"useContext"],[60,44,42,22],[60,45,42,23,"LinkingContext"],[60,62,42,37],[60,63,42,37,"LinkingContext"],[60,77,42,37],[60,78,42,38],[61,6,41,4,"options"],[61,13,41,11],[61,16,41,11,"_React$useContext"],[61,33,41,11],[61,34,41,4,"options"],[61,41,41,11],[62,4,43,2],[62,8,43,8,"onPress"],[62,15,43,15],[62,18,43,18,"e"],[62,19,43,19],[62,23,43,23],[63,6,44,4],[63,10,44,8,"shouldHandle"],[63,22,44,20],[63,25,44,23],[63,30,44,28],[64,6,45,4],[64,10,45,8,"Platform"],[64,22,45,16],[64,23,45,16,"Platform"],[64,31,45,16],[64,32,45,17,"OS"],[64,34,45,19],[64,39,45,24],[64,44,45,29],[64,48,45,33],[64,49,45,34,"e"],[64,50,45,35],[64,52,45,37],[65,8,46,6,"e"],[65,9,46,7],[65,11,46,9,"preventDefault"],[65,25,46,23],[65,28,46,26],[65,29,46,27],[66,8,47,6,"shouldHandle"],[66,20,47,18],[66,23,47,21],[66,27,47,25],[67,6,48,4],[67,7,48,5],[67,13,48,11],[68,8,49,6],[69,8,50,6],[69,12,50,12,"hasModifierKey"],[69,26,50,26],[69,29,50,29],[69,38,50,38],[69,42,50,42,"e"],[69,43,50,43],[69,47,50,47,"e"],[69,48,50,48],[69,49,50,49,"metaKey"],[69,56,50,56],[69,60,50,60],[69,68,50,68],[69,72,50,72,"e"],[69,73,50,73],[69,77,50,77,"e"],[69,78,50,78],[69,79,50,79,"altKey"],[69,85,50,85],[69,89,50,89],[69,98,50,98],[69,102,50,102,"e"],[69,103,50,103],[69,107,50,107,"e"],[69,108,50,108],[69,109,50,109,"ctrlKey"],[69,116,50,116],[69,120,50,120],[69,130,50,130],[69,134,50,134,"e"],[69,135,50,135],[69,139,50,139,"e"],[69,140,50,140],[69,141,50,141,"shiftKey"],[69,149,50,149],[71,8,52,6],[72,8,53,6],[72,12,53,12,"isLeftClick"],[72,23,53,23],[72,26,53,26],[72,34,53,34],[72,38,53,38,"e"],[72,39,53,39],[72,42,53,42,"e"],[72,43,53,43],[72,44,53,44,"button"],[72,50,53,50],[72,54,53,54],[72,58,53,58],[72,62,53,62,"e"],[72,63,53,63],[72,64,53,64,"button"],[72,70,53,70],[72,75,53,75],[72,76,53,76],[72,79,53,79],[72,83,53,83],[74,8,55,6],[75,8,56,6],[75,12,56,12,"isSelfTarget"],[75,24,56,24],[75,27,56,27,"e"],[75,28,56,28],[75,29,56,29,"currentTarget"],[75,42,56,42],[75,46,56,46],[75,54,56,54],[75,58,56,58,"e"],[75,59,56,59],[75,60,56,60,"currentTarget"],[75,73,56,73],[75,76,56,76],[75,77,56,77,"undefined"],[75,86,56,86],[75,88,56,88],[75,92,56,92],[75,94,56,94],[75,96,56,96],[75,98,56,98],[75,104,56,104],[75,105,56,105],[75,106,56,106,"includes"],[75,114,56,114],[75,115,56,115,"e"],[75,116,56,116],[75,117,56,117,"currentTarget"],[75,130,56,130],[75,131,56,131,"target"],[75,137,56,137],[75,138,56,138],[75,141,56,141],[75,145,56,145],[76,8,57,6],[76,12,57,10],[76,13,57,11,"hasModifierKey"],[76,27,57,25],[76,31,57,29,"isLeftClick"],[76,42,57,40],[76,46,57,44,"isSelfTarget"],[76,58,57,56],[76,60,57,58],[77,10,58,8,"e"],[77,11,58,9],[77,12,58,10,"preventDefault"],[77,26,58,24],[77,29,58,27],[77,30,58,28],[78,10,59,8,"shouldHandle"],[78,22,59,20],[78,25,59,23],[78,29,59,27],[79,8,60,6],[80,6,61,4],[81,6,62,4],[81,10,62,8,"shouldHandle"],[81,22,62,20],[81,24,62,22],[82,8,63,6],[82,12,63,10,"action"],[82,18,63,16],[82,20,63,18],[83,10,64,8],[83,14,64,12,"navigation"],[83,24,64,22],[83,26,64,24],[84,12,65,10,"navigation"],[84,22,65,20],[84,23,65,21,"dispatch"],[84,31,65,29],[84,32,65,30,"action"],[84,38,65,36],[84,39,65,37],[85,10,66,8],[85,11,66,9],[85,17,66,15],[85,21,66,19,"root"],[85,25,66,23],[85,27,66,25],[86,12,67,10,"root"],[86,16,67,14],[86,17,67,15,"dispatch"],[86,25,67,23],[86,26,67,24,"action"],[86,32,67,30],[86,33,67,31],[87,10,68,8],[87,11,68,9],[87,17,68,15],[88,12,69,10],[88,18,69,16],[88,22,69,20,"Error"],[88,27,69,25],[88,28,69,26],[88,110,69,108],[88,111,69,109],[89,10,70,8],[90,8,71,6],[90,9,71,7],[90,15,71,13],[91,10,72,8],[92,10,73,8,"navigation"],[92,20,73,18],[92,22,73,20,"navigate"],[92,30,73,28],[92,31,73,29,"screen"],[92,37,73,35],[92,39,73,37,"params"],[92,45,73,43],[92,46,73,44],[93,8,74,6],[94,6,75,4],[95,4,76,2],[95,5,76,3],[96,4,77,2],[96,8,77,8,"getPathFromStateHelper"],[96,30,77,30],[96,33,77,33,"options"],[96,40,77,40],[96,42,77,42,"getPathFromState"],[96,58,77,58],[96,62,77,62,"getPathFromState"],[96,82,77,78],[96,83,77,78,"getPathFromState"],[96,99,77,78],[97,4,78,2],[97,11,78,9],[98,6,79,4,"href"],[98,10,79,8],[98,12,79,10,"href"],[98,16,79,14],[98,21,79,19,"Platform"],[98,33,79,27],[98,34,79,27,"Platform"],[98,42,79,27],[98,43,79,28,"OS"],[98,45,79,30],[98,50,79,35],[98,55,79,40],[98,59,79,44,"screen"],[98,65,79,50],[98,69,79,54],[98,73,79,58],[98,76,79,61,"getPathFromStateHelper"],[98,98,79,83],[98,99,79,84],[99,8,80,6,"routes"],[99,14,80,12],[99,16,80,14],[99,17,80,15],[100,10,81,8],[101,10,82,8,"name"],[101,14,82,12],[101,16,82,14,"screen"],[101,22,82,20],[102,10,83,8],[103,10,84,8,"params"],[103,16,84,14],[103,18,84,16,"params"],[103,24,84,22],[104,10,85,8],[105,10,86,8,"state"],[105,15,86,13],[105,17,86,15,"getStateFromParams"],[105,35,86,33],[105,36,86,34,"params"],[105,42,86,40],[106,8,87,6],[106,9,87,7],[107,6,88,4],[107,7,88,5],[107,9,88,7,"options"],[107,16,88,14],[107,18,88,16,"config"],[107,24,88,22],[107,25,88,23],[107,28,88,26,"undefined"],[107,37,88,35],[107,38,88,36],[108,6,89,4,"role"],[108,10,89,8],[108,12,89,10],[108,18,89,16],[109,6,90,4,"onPress"],[110,4,91,2],[110,5,91,3],[111,2,92,0],[112,0,92,1],[112,3]],"functionMap":{"names":["<global>","getStateFromParams","useLinkProps","onPress"],"mappings":"AAA;2BCM;CDe;OEU;kBCW;GDiC;CFgB"},"hasCjsExports":false},"type":"js/module"}]}