{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NavigationBuilderContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":73,"index":120}}],"key":"vvb+tbs8cGp9hlTxgL5PZCjRz5E=","exportNames":["*"],"imports":1}},{"name":"./useClientLayoutEffect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":121},"end":{"line":5,"column":67,"index":188}}],"key":"LhoNk5P88pw/w9+MH8FRVAlr+OQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useScheduleUpdate = useScheduleUpdate;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _NavigationBuilderContextJs = require(_dependencyMap[1], \"./NavigationBuilderContext.js\");\n  var _useClientLayoutEffectJs = require(_dependencyMap[2], \"./useClientLayoutEffect.js\");\n  /**\n   * When screen config changes, we want to update the navigator in the same update phase.\n   * However, navigation state is in the root component and React won't let us update it from a child.\n   * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n   * It lets all subsequent updates access the latest state so it stays correct.\n   * Then we call setState during after the component updates.\n   */\n  function useScheduleUpdate(callback) {\n    const {\n      scheduleUpdate,\n      flushUpdates\n    } = React.useContext(_NavigationBuilderContextJs.NavigationBuilderContext);\n\n    // FIXME: This is potentially unsafe\n    // However, since we are using sync store, it might be fine\n    scheduleUpdate(callback);\n    (0, _useClientLayoutEffectJs.useClientLayoutEffect)(flushUpdates);\n  }\n});","lineCount":45,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13],[11,10,1,13,"d"],[11,11,1,13],[11,14,1,13,"Object"],[11,20,1,13],[11,21,1,13,"getOwnPropertyDescriptor"],[11,45,1,13],[11,46,1,13,"e"],[11,47,1,13],[11,49,1,13,"k"],[11,50,1,13],[12,6,1,13,"Object"],[12,12,1,13],[12,13,1,13,"defineProperty"],[12,27,1,13],[12,28,1,13,"n"],[12,29,1,13],[12,31,1,13,"k"],[12,32,1,13],[12,34,1,13,"d"],[12,35,1,13],[12,36,1,13,"get"],[12,39,1,13],[12,42,1,13,"d"],[12,43,1,13],[13,8,1,13,"enumerable"],[13,18,1,13],[14,8,1,13,"get"],[14,11,1,13],[14,22,1,13,"get"],[14,23,1,13],[15,10,1,13],[15,17,1,13,"e"],[15,18,1,13],[15,19,1,13,"k"],[15,20,1,13],[16,8,1,13],[17,6,1,13],[18,4,1,13],[19,4,1,13,"n"],[19,5,1,13],[19,6,1,13,"default"],[19,13,1,13],[19,16,1,13,"e"],[19,17,1,13],[20,4,1,13],[20,11,1,13,"n"],[20,12,1,13],[21,2,1,13],[22,2,14,0,"exports"],[22,9,14,0],[22,10,14,0,"useScheduleUpdate"],[22,27,14,0],[22,30,14,0,"useScheduleUpdate"],[22,47,14,0],[23,2,3,0],[23,6,3,0,"_react"],[23,12,3,0],[23,15,3,0,"require"],[23,22,3,0],[23,23,3,0,"_dependencyMap"],[23,37,3,0],[24,2,3,0],[24,6,3,0,"React"],[24,11,3,0],[24,14,3,0,"_interopNamespace"],[24,31,3,0],[24,32,3,0,"_react"],[24,38,3,0],[25,2,4,0],[25,6,4,0,"_NavigationBuilderContextJs"],[25,33,4,0],[25,36,4,0,"require"],[25,43,4,0],[25,44,4,0,"_dependencyMap"],[25,58,4,0],[26,2,5,0],[26,6,5,0,"_useClientLayoutEffectJs"],[26,30,5,0],[26,33,5,0,"require"],[26,40,5,0],[26,41,5,0,"_dependencyMap"],[26,55,5,0],[27,2,7,0],[28,0,8,0],[29,0,9,0],[30,0,10,0],[31,0,11,0],[32,0,12,0],[33,0,13,0],[34,2,14,7],[34,11,14,16,"useScheduleUpdate"],[34,28,14,33,"useScheduleUpdate"],[34,29,14,34,"callback"],[34,37,14,42],[34,39,14,44],[35,4,15,2],[35,10,15,8],[36,6,16,4,"scheduleUpdate"],[36,20,16,18],[37,6,17,4,"flushUpdates"],[38,4,18,2],[38,5,18,3],[38,8,18,6,"React"],[38,13,18,11],[38,14,18,12,"useContext"],[38,24,18,22],[38,25,18,23,"NavigationBuilderContext"],[38,52,18,47],[38,53,18,47,"NavigationBuilderContext"],[38,77,18,47],[38,78,18,48],[40,4,20,2],[41,4,21,2],[42,4,22,2,"scheduleUpdate"],[42,18,22,16],[42,19,22,17,"callback"],[42,27,22,25],[42,28,22,26],[43,4,23,2],[43,8,23,2,"useClientLayoutEffect"],[43,32,23,23],[43,33,23,23,"useClientLayoutEffect"],[43,54,23,23],[43,56,23,24,"flushUpdates"],[43,68,23,36],[43,69,23,37],[44,2,24,0],[45,0,24,1],[45,3]],"functionMap":{"names":["<global>","useScheduleUpdate"],"mappings":"AAA;OCa;CDU"},"hasCjsExports":false},"type":"js/module"}]}