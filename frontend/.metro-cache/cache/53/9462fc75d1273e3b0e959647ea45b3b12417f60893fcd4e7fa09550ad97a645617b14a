{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.formatProjectFilePath = formatProjectFilePath;\n  exports.getStackFormattedLocation = getStackFormattedLocation;\n  function formatProjectFilePath(projectRoot, file) {\n    if (file == null) {\n      return '<unknown>';\n    }\n    return pathRelativeToPath(file.replace(/\\\\/g, '/'), projectRoot.replace(/\\\\/g, '/')).replace(/\\?.*$/, '');\n  }\n  function pathRelativeToPath(path, relativeTo, sep = '/') {\n    const relativeToParts = relativeTo.split(sep);\n    const pathParts = path.split(sep);\n    let i = 0;\n    while (i < relativeToParts.length && i < pathParts.length) {\n      if (relativeToParts[i] !== pathParts[i]) {\n        break;\n      }\n      i++;\n    }\n    return pathParts.slice(i).join(sep);\n  }\n  function getStackFormattedLocation(projectRoot, frame) {\n    const column = frame.column != null && parseInt(String(frame.column), 10);\n    const location = formatProjectFilePath(projectRoot, frame.file) + (frame.lineNumber != null ? ':' + frame.lineNumber + (column && !isNaN(column) ? ':' + (column + 1) : '') : '');\n    return location;\n  }\n});","lineCount":32,"map":[[7,2,5,0,"exports"],[7,9,5,0],[7,10,5,0,"formatProjectFilePath"],[7,31,5,0],[7,34,5,0,"formatProjectFilePath"],[7,55,5,0],[8,2,29,0,"exports"],[8,9,29,0],[8,10,29,0,"getStackFormattedLocation"],[8,35,29,0],[8,38,29,0,"getStackFormattedLocation"],[8,63,29,0],[9,2,5,7],[9,11,5,16,"formatProjectFilePath"],[9,32,5,37,"formatProjectFilePath"],[9,33,5,38,"projectRoot"],[9,44,5,57],[9,46,5,59,"file"],[9,50,5,79],[9,52,5,89],[10,4,6,2],[10,8,6,6,"file"],[10,12,6,10],[10,16,6,14],[10,20,6,18],[10,22,6,20],[11,6,7,4],[11,13,7,11],[11,24,7,22],[12,4,8,2],[13,4,10,2],[13,11,10,9,"pathRelativeToPath"],[13,29,10,27],[13,30,10,28,"file"],[13,34,10,32],[13,35,10,33,"replace"],[13,42,10,40],[13,43,10,41],[13,48,10,46],[13,50,10,48],[13,53,10,51],[13,54,10,52],[13,56,10,54,"projectRoot"],[13,67,10,65],[13,68,10,66,"replace"],[13,75,10,73],[13,76,10,74],[13,81,10,79],[13,83,10,81],[13,86,10,84],[13,87,10,85],[13,88,10,86],[13,89,10,87,"replace"],[13,96,10,94],[13,97,11,4],[13,104,11,11],[13,106,12,4],[13,108,13,2],[13,109,13,3],[14,2,14,0],[15,2,16,0],[15,11,16,9,"pathRelativeToPath"],[15,29,16,27,"pathRelativeToPath"],[15,30,16,28,"path"],[15,34,16,40],[15,36,16,42,"relativeTo"],[15,46,16,60],[15,48,16,62,"sep"],[15,51,16,65],[15,54,16,68],[15,57,16,71],[15,59,16,73],[16,4,17,2],[16,10,17,8,"relativeToParts"],[16,25,17,23],[16,28,17,26,"relativeTo"],[16,38,17,36],[16,39,17,37,"split"],[16,44,17,42],[16,45,17,43,"sep"],[16,48,17,46],[16,49,17,47],[17,4,18,2],[17,10,18,8,"pathParts"],[17,19,18,17],[17,22,18,20,"path"],[17,26,18,24],[17,27,18,25,"split"],[17,32,18,30],[17,33,18,31,"sep"],[17,36,18,34],[17,37,18,35],[18,4,19,2],[18,8,19,6,"i"],[18,9,19,7],[18,12,19,10],[18,13,19,11],[19,4,20,2],[19,11,20,9,"i"],[19,12,20,10],[19,15,20,13,"relativeToParts"],[19,30,20,28],[19,31,20,29,"length"],[19,37,20,35],[19,41,20,39,"i"],[19,42,20,40],[19,45,20,43,"pathParts"],[19,54,20,52],[19,55,20,53,"length"],[19,61,20,59],[19,63,20,61],[20,6,21,4],[20,10,21,8,"relativeToParts"],[20,25,21,23],[20,26,21,24,"i"],[20,27,21,25],[20,28,21,26],[20,33,21,31,"pathParts"],[20,42,21,40],[20,43,21,41,"i"],[20,44,21,42],[20,45,21,43],[20,47,21,45],[21,8,22,6],[22,6,23,4],[23,6,24,4,"i"],[23,7,24,5],[23,9,24,7],[24,4,25,2],[25,4,26,2],[25,11,26,9,"pathParts"],[25,20,26,18],[25,21,26,19,"slice"],[25,26,26,24],[25,27,26,25,"i"],[25,28,26,26],[25,29,26,27],[25,30,26,28,"join"],[25,34,26,32],[25,35,26,33,"sep"],[25,38,26,36],[25,39,26,37],[26,2,27,0],[27,2,29,7],[27,11,29,16,"getStackFormattedLocation"],[27,36,29,41,"getStackFormattedLocation"],[27,37,29,42,"projectRoot"],[27,48,29,61],[27,50,29,63,"frame"],[27,55,29,85],[27,57,29,87],[28,4,30,2],[28,10,30,8,"column"],[28,16,30,14],[28,19,30,17,"frame"],[28,24,30,22],[28,25,30,23,"column"],[28,31,30,29],[28,35,30,33],[28,39,30,37],[28,43,30,41,"parseInt"],[28,51,30,49],[28,52,30,50,"String"],[28,58,30,56],[28,59,30,57,"frame"],[28,64,30,62],[28,65,30,63,"column"],[28,71,30,69],[28,72,30,70],[28,74,30,72],[28,76,30,74],[28,77,30,75],[29,4,31,2],[29,10,31,8,"location"],[29,18,31,16],[29,21,32,4,"formatProjectFilePath"],[29,42,32,25],[29,43,32,26,"projectRoot"],[29,54,32,37],[29,56,32,39,"frame"],[29,61,32,44],[29,62,32,45,"file"],[29,66,32,49],[29,67,32,50],[29,71,33,5,"frame"],[29,76,33,10],[29,77,33,11,"lineNumber"],[29,87,33,21],[29,91,33,25],[29,95,33,29],[29,98,34,8],[29,101,34,11],[29,104,34,14,"frame"],[29,109,34,19],[29,110,34,20,"lineNumber"],[29,120,34,30],[29,124,34,34,"column"],[29,130,34,40],[29,134,34,44],[29,135,34,45,"isNaN"],[29,140,34,50],[29,141,34,51,"column"],[29,147,34,57],[29,148,34,58],[29,151,34,61],[29,154,34,64],[29,158,34,68,"column"],[29,164,34,74],[29,167,34,77],[29,168,34,78],[29,169,34,79],[29,172,34,82],[29,174,34,84],[29,175,34,85],[29,178,35,8],[29,180,35,10],[29,181,35,11],[30,4,37,2],[30,11,37,9,"location"],[30,19,37,17],[31,2,38,0],[32,0,38,1],[32,3]],"functionMap":{"names":["<global>","formatProjectFilePath","pathRelativeToPath","getStackFormattedLocation"],"mappings":"AAA;OCI;CDS;AEE;CFW;OGE;CHS"},"hasCjsExports":false},"type":"js/module"}]}