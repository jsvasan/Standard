{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":199},"end":{"line":10,"column":31,"index":230}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../mergeRefs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":231},"end":{"line":11,"column":37,"index":268}}],"key":"i+GmHg+UO5diLxu/OBImkphmzQw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useMergeRefs;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _mergeRefs = require(_dependencyMap[1], \"../mergeRefs\");\n  var mergeRefs = _interopDefault(_mergeRefs);\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  function useMergeRefs() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return React.useMemo(() => (0, mergeRefs.default)(...args),\n    // eslint-disable-next-line\n    [...args]);\n  }\n});","lineCount":54,"map":[[27,2,12,15,"Object"],[27,8,12,15],[27,9,12,15,"defineProperty"],[27,23,12,15],[27,24,12,15,"exports"],[27,31,12,15],[28,4,12,15,"enumerable"],[28,14,12,15],[29,4,12,15,"get"],[29,7,12,15],[29,18,12,15,"get"],[29,19,12,15],[30,6,12,15],[30,13,12,15,"useMergeRefs"],[30,25,12,15],[31,4,12,15],[32,2,12,15],[33,2,10,0],[33,6,10,0,"_react"],[33,12,10,0],[33,15,10,0,"require"],[33,22,10,0],[33,23,10,0,"_dependencyMap"],[33,37,10,0],[34,2,10,0],[34,6,10,0,"React"],[34,11,10,0],[34,14,10,0,"_interopNamespace"],[34,31,10,0],[34,32,10,0,"_react"],[34,38,10,0],[35,2,11,0],[35,6,11,0,"_mergeRefs"],[35,16,11,0],[35,19,11,0,"require"],[35,26,11,0],[35,27,11,0,"_dependencyMap"],[35,41,11,0],[36,2,11,0],[36,6,11,0,"mergeRefs"],[36,15,11,0],[36,18,11,0,"_interopDefault"],[36,33,11,0],[36,34,11,0,"_mergeRefs"],[36,44,11,0],[37,2,1,0],[38,0,2,0],[39,0,3,0],[40,0,4,0],[41,0,5,0],[42,0,6,0],[43,0,7,0],[44,0,8,0],[46,2,12,15],[46,11,12,24,"useMergeRefs"],[46,23,12,36,"useMergeRefs"],[46,24,12,36],[46,26,12,39],[47,4,13,2],[47,9,13,7],[47,13,13,11,"_len"],[47,17,13,15],[47,20,13,18,"arguments"],[47,29,13,27],[47,30,13,28,"length"],[47,36,13,34],[47,38,13,36,"args"],[47,42,13,40],[47,45,13,43],[47,49,13,47,"Array"],[47,54,13,52],[47,55,13,53,"_len"],[47,59,13,57],[47,60,13,58],[47,62,13,60,"_key"],[47,66,13,64],[47,69,13,67],[47,70,13,68],[47,72,13,70,"_key"],[47,76,13,74],[47,79,13,77,"_len"],[47,83,13,81],[47,85,13,83,"_key"],[47,89,13,87],[47,91,13,89],[47,93,13,91],[48,6,14,4,"args"],[48,10,14,8],[48,11,14,9,"_key"],[48,15,14,13],[48,16,14,14],[48,19,14,17,"arguments"],[48,28,14,26],[48,29,14,27,"_key"],[48,33,14,31],[48,34,14,32],[49,4,15,2],[50,4,16,2],[50,11,16,9,"React"],[50,16,16,14],[50,17,16,15,"useMemo"],[50,24,16,22],[50,25,16,23],[50,31,16,29],[50,35,16,29,"mergeRefs"],[50,44,16,38],[50,45,16,38,"default"],[50,52,16,38],[50,54,16,39],[50,57,16,42,"args"],[50,61,16,46],[50,62,16,47],[51,4,17,2],[52,4,18,2],[52,5,18,3],[52,8,18,6,"args"],[52,12,18,10],[52,13,18,11],[52,14,18,12],[53,2,19,0],[54,0,19,1],[54,3]],"functionMap":{"names":["<global>","useMergeRefs","React.useMemo$argument_0"],"mappings":"AAA;eCW;uBCI,wBD"},"hasCjsExports":false},"type":"js/module"}]}