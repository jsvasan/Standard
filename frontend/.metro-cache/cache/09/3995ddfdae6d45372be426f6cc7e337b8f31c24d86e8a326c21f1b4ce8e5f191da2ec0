{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SharedRef = exports.SharedObject = exports.NativeModule = exports.EventEmitter = void 0;\n  class EventEmitter {\n    addListener(eventName, listener) {\n      if (!this.listeners) {\n        this.listeners = new Map();\n      }\n      if (!this.listeners?.has(eventName)) {\n        this.listeners?.set(eventName, new Set());\n      }\n      const previousListenerCount = this.listenerCount(eventName);\n      this.listeners?.get(eventName)?.add(listener);\n      if (previousListenerCount === 0 && this.listenerCount(eventName) === 1) {\n        this.startObserving(eventName);\n      }\n      return {\n        remove: () => {\n          this.removeListener(eventName, listener);\n        }\n      };\n    }\n    removeListener(eventName, listener) {\n      const hasRemovedListener = this.listeners?.get(eventName)?.delete(listener);\n      if (this.listenerCount(eventName) === 0 && hasRemovedListener) {\n        this.stopObserving(eventName);\n      }\n    }\n    removeAllListeners(eventName) {\n      const previousListenerCount = this.listenerCount(eventName);\n      this.listeners?.get(eventName)?.clear();\n      if (previousListenerCount > 0) {\n        this.stopObserving(eventName);\n      }\n    }\n    emit(eventName, ...args) {\n      const listeners = new Set(this.listeners?.get(eventName));\n      listeners.forEach(listener => {\n        // When the listener throws an error, don't stop the execution of subsequent listeners and\n        // don't propagate the error to the `emit` function. The motivation behind this is that\n        // errors thrown from a module or user's code shouldn't affect other modules' behavior.\n        try {\n          listener(...args);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n    }\n    listenerCount(eventName) {\n      return this.listeners?.get(eventName)?.size ?? 0;\n    }\n    startObserving(eventName) {}\n    stopObserving(eventName) {}\n  }\n  exports.EventEmitter = EventEmitter;\n  class NativeModule extends EventEmitter {}\n  exports.NativeModule = NativeModule;\n  class SharedObject extends EventEmitter {\n    release() {\n      // no-op on Web, but subclasses can override it if needed.\n    }\n  }\n  exports.SharedObject = SharedObject;\n  class SharedRef extends SharedObject {\n    nativeRefType = 'unknown';\n  }\n  exports.SharedRef = SharedRef;\n});","lineCount":70,"map":[[6,2,10,7],[6,8,10,13,"EventEmitter"],[6,20,10,25],[6,21,10,84],[7,4,13,2,"addListener"],[7,15,13,13,"addListener"],[7,16,14,4,"eventName"],[7,25,14,24],[7,27,15,4,"listener"],[7,35,15,35],[7,37,16,23],[8,6,17,4],[8,10,17,8],[8,11,17,9],[8,15,17,13],[8,16,17,14,"listeners"],[8,25,17,23],[8,27,17,25],[9,8,18,6],[9,12,18,10],[9,13,18,11,"listeners"],[9,22,18,20],[9,25,18,23],[9,29,18,27,"Map"],[9,32,18,30],[9,33,18,31],[9,34,18,32],[10,6,19,4],[11,6,20,4],[11,10,20,8],[11,11,20,9],[11,15,20,13],[11,16,20,14,"listeners"],[11,25,20,23],[11,27,20,25,"has"],[11,30,20,28],[11,31,20,29,"eventName"],[11,40,20,38],[11,41,20,39],[11,43,20,41],[12,8,21,6],[12,12,21,10],[12,13,21,11,"listeners"],[12,22,21,20],[12,24,21,22,"set"],[12,27,21,25],[12,28,21,26,"eventName"],[12,37,21,35],[12,39,21,37],[12,43,21,41,"Set"],[12,46,21,44],[12,47,21,45],[12,48,21,46],[12,49,21,47],[13,6,22,4],[14,6,24,4],[14,12,24,10,"previousListenerCount"],[14,33,24,31],[14,36,24,34],[14,40,24,38],[14,41,24,39,"listenerCount"],[14,54,24,52],[14,55,24,53,"eventName"],[14,64,24,62],[14,65,24,63],[15,6,26,4],[15,10,26,8],[15,11,26,9,"listeners"],[15,20,26,18],[15,22,26,20,"get"],[15,25,26,23],[15,26,26,24,"eventName"],[15,35,26,33],[15,36,26,34],[15,38,26,36,"add"],[15,41,26,39],[15,42,26,40,"listener"],[15,50,26,48],[15,51,26,49],[16,6,28,4],[16,10,28,8,"previousListenerCount"],[16,31,28,29],[16,36,28,34],[16,37,28,35],[16,41,28,39],[16,45,28,43],[16,46,28,44,"listenerCount"],[16,59,28,57],[16,60,28,58,"eventName"],[16,69,28,67],[16,70,28,68],[16,75,28,73],[16,76,28,74],[16,78,28,76],[17,8,29,6],[17,12,29,10],[17,13,29,11,"startObserving"],[17,27,29,25],[17,28,29,26,"eventName"],[17,37,29,35],[17,38,29,36],[18,6,30,4],[19,6,32,4],[19,13,32,11],[20,8,33,6,"remove"],[20,14,33,12],[20,16,33,14,"remove"],[20,17,33,14],[20,22,33,20],[21,10,34,8],[21,14,34,12],[21,15,34,13,"removeListener"],[21,29,34,27],[21,30,34,28,"eventName"],[21,39,34,37],[21,41,34,39,"listener"],[21,49,34,47],[21,50,34,48],[22,8,35,6],[23,6,36,4],[23,7,36,5],[24,4,37,2],[25,4,39,2,"removeListener"],[25,18,39,16,"removeListener"],[25,19,40,4,"eventName"],[25,28,40,24],[25,30,41,4,"listener"],[25,38,41,35],[25,40,42,10],[26,6,43,4],[26,12,43,10,"hasRemovedListener"],[26,30,43,28],[26,33,43,31],[26,37,43,35],[26,38,43,36,"listeners"],[26,47,43,45],[26,49,43,47,"get"],[26,52,43,50],[26,53,43,51,"eventName"],[26,62,43,60],[26,63,43,61],[26,65,43,63,"delete"],[26,71,43,69],[26,72,43,70,"listener"],[26,80,43,78],[26,81,43,79],[27,6,44,4],[27,10,44,8],[27,14,44,12],[27,15,44,13,"listenerCount"],[27,28,44,26],[27,29,44,27,"eventName"],[27,38,44,36],[27,39,44,37],[27,44,44,42],[27,45,44,43],[27,49,44,47,"hasRemovedListener"],[27,67,44,65],[27,69,44,67],[28,8,45,6],[28,12,45,10],[28,13,45,11,"stopObserving"],[28,26,45,24],[28,27,45,25,"eventName"],[28,36,45,34],[28,37,45,35],[29,6,46,4],[30,4,47,2],[31,4,49,2,"removeAllListeners"],[31,22,49,20,"removeAllListeners"],[31,23,49,57,"eventName"],[31,32,49,77],[31,34,49,85],[32,6,50,4],[32,12,50,10,"previousListenerCount"],[32,33,50,31],[32,36,50,34],[32,40,50,38],[32,41,50,39,"listenerCount"],[32,54,50,52],[32,55,50,53,"eventName"],[32,64,50,62],[32,65,50,63],[33,6,51,4],[33,10,51,8],[33,11,51,9,"listeners"],[33,20,51,18],[33,22,51,20,"get"],[33,25,51,23],[33,26,51,24,"eventName"],[33,35,51,33],[33,36,51,34],[33,38,51,36,"clear"],[33,43,51,41],[33,44,51,42],[33,45,51,43],[34,6,52,4],[34,10,52,8,"previousListenerCount"],[34,31,52,29],[34,34,52,32],[34,35,52,33],[34,37,52,35],[35,8,53,6],[35,12,53,10],[35,13,53,11,"stopObserving"],[35,26,53,24],[35,27,53,25,"eventName"],[35,36,53,34],[35,37,53,35],[36,6,54,4],[37,4,55,2],[38,4,57,2,"emit"],[38,8,57,6,"emit"],[38,9,58,4,"eventName"],[38,18,58,24],[38,20,59,4],[38,23,59,7,"args"],[38,27,59,46],[38,29,60,10],[39,6,61,4],[39,12,61,10,"listeners"],[39,21,61,19],[39,24,61,22],[39,28,61,26,"Set"],[39,31,61,29],[39,32,61,30],[39,36,61,34],[39,37,61,35,"listeners"],[39,46,61,44],[39,48,61,46,"get"],[39,51,61,49],[39,52,61,50,"eventName"],[39,61,61,59],[39,62,61,60],[39,63,61,61],[40,6,63,4,"listeners"],[40,15,63,13],[40,16,63,14,"forEach"],[40,23,63,21],[40,24,63,23,"listener"],[40,32,63,31],[40,36,63,36],[41,8,64,6],[42,8,65,6],[43,8,66,6],[44,8,67,6],[44,12,67,10],[45,10,68,8,"listener"],[45,18,68,16],[45,19,68,17],[45,22,68,20,"args"],[45,26,68,24],[45,27,68,25],[46,8,69,6],[46,9,69,7],[46,10,69,8],[46,17,69,15,"error"],[46,22,69,20],[46,24,69,22],[47,10,70,8,"console"],[47,17,70,15],[47,18,70,16,"error"],[47,23,70,21],[47,24,70,22,"error"],[47,29,70,27],[47,30,70,28],[48,8,71,6],[49,6,72,4],[49,7,72,5],[49,8,72,6],[50,4,73,2],[51,4,75,2,"listenerCount"],[51,17,75,15,"listenerCount"],[51,18,75,52,"eventName"],[51,27,75,72],[51,29,75,82],[52,6,76,4],[52,13,76,11],[52,17,76,15],[52,18,76,16,"listeners"],[52,27,76,25],[52,29,76,27,"get"],[52,32,76,30],[52,33,76,31,"eventName"],[52,42,76,40],[52,43,76,41],[52,45,76,43,"size"],[52,49,76,47],[52,53,76,51],[52,54,76,52],[53,4,77,2],[54,4,79,2,"startObserving"],[54,18,79,16,"startObserving"],[54,19,79,53,"eventName"],[54,28,79,73],[54,30,79,81],[54,31,79,82],[55,4,81,2,"stopObserving"],[55,17,81,15,"stopObserving"],[55,18,81,52,"eventName"],[55,27,81,72],[55,29,81,80],[55,30,81,81],[56,2,82,0],[57,2,82,1,"exports"],[57,9,82,1],[57,10,82,1,"EventEmitter"],[57,22,82,1],[57,25,82,1,"EventEmitter"],[57,37,82,1],[58,2,84,7],[58,8,84,13,"NativeModule"],[58,20,84,25],[58,29,85,10,"EventEmitter"],[58,41,85,22],[58,42,87,0],[59,2,91,1,"exports"],[59,9,91,1],[59,10,91,1,"NativeModule"],[59,22,91,1],[59,25,91,1,"NativeModule"],[59,37,91,1],[60,2,93,7],[60,8,93,13,"SharedObject"],[60,20,93,25],[60,29,94,10,"EventEmitter"],[60,41,94,22],[60,42,96,0],[61,4,97,2,"release"],[61,11,97,9,"release"],[61,12,97,9],[61,14,97,18],[62,6,98,4],[63,4,98,4],[64,2,100,0],[65,2,100,1,"exports"],[65,9,100,1],[65,10,100,1,"SharedObject"],[65,22,100,1],[65,25,100,1,"SharedObject"],[65,37,100,1],[66,2,102,7],[66,8,102,13,"SharedRef"],[66,17,102,22],[66,26,106,10,"SharedObject"],[66,38,106,22],[66,39,108,0],[67,4,109,2,"nativeRefType"],[67,17,109,15],[67,20,109,26],[67,29,109,35],[68,2,110,0],[69,2,110,1,"exports"],[69,9,110,1],[69,10,110,1,"SharedRef"],[69,19,110,1],[69,22,110,1,"SharedRef"],[69,31,110,1],[70,0,110,1],[70,3]],"functionMap":{"names":["<global>","EventEmitter","EventEmitter#addListener","remove","EventEmitter#removeListener","EventEmitter#removeAllListeners","EventEmitter#emit","listeners.forEach$argument_0","EventEmitter#listenerCount","EventEmitter#startObserving","EventEmitter#stopObserving","NativeModule","SharedObject","SharedObject#release","SharedRef"],"mappings":"AAA;OCS;ECG;cCoB;ODE;GDE;EGE;GHQ;EIE;GJM;EKE;sBCM;KDS;GLC;EOE;GPE;EQE,iFR;ESE,gFT;CDC;OWE;CXO;OYE;ECI;GDE;CZC;OcE;CdQ"}},"type":"js/module"}]}