{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":199},"end":{"line":10,"column":31,"index":230}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return mergeRefs;\n    }\n  });\n  require(_dependencyMap[0], \"react\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  function mergeRefs() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return function forwardRef(node) {\n      args.forEach(ref => {\n        if (ref == null) {\n          return;\n        }\n        if (typeof ref === 'function') {\n          ref(node);\n          return;\n        }\n        if (typeof ref === 'object') {\n          ref.current = node;\n          return;\n        }\n        console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n      });\n    };\n  }\n});","lineCount":44,"map":[[7,2,11,15,"Object"],[7,8,11,15],[7,9,11,15,"defineProperty"],[7,23,11,15],[7,24,11,15,"exports"],[7,31,11,15],[8,4,11,15,"enumerable"],[8,14,11,15],[9,4,11,15,"get"],[9,7,11,15],[9,18,11,15,"get"],[9,19,11,15],[10,6,11,15],[10,13,11,15,"mergeRefs"],[10,22,11,15],[11,4,11,15],[12,2,11,15],[13,2,10,0,"require"],[13,9,10,0],[13,10,10,0,"_dependencyMap"],[13,24,10,0],[14,2,1,0],[15,0,2,0],[16,0,3,0],[17,0,4,0],[18,0,5,0],[19,0,6,0],[20,0,7,0],[21,0,8,0],[23,2,11,15],[23,11,11,24,"mergeRefs"],[23,20,11,33,"mergeRefs"],[23,21,11,33],[23,23,11,36],[24,4,12,2],[24,9,12,7],[24,13,12,11,"_len"],[24,17,12,15],[24,20,12,18,"arguments"],[24,29,12,27],[24,30,12,28,"length"],[24,36,12,34],[24,38,12,36,"args"],[24,42,12,40],[24,45,12,43],[24,49,12,47,"Array"],[24,54,12,52],[24,55,12,53,"_len"],[24,59,12,57],[24,60,12,58],[24,62,12,60,"_key"],[24,66,12,64],[24,69,12,67],[24,70,12,68],[24,72,12,70,"_key"],[24,76,12,74],[24,79,12,77,"_len"],[24,83,12,81],[24,85,12,83,"_key"],[24,89,12,87],[24,91,12,89],[24,93,12,91],[25,6,13,4,"args"],[25,10,13,8],[25,11,13,9,"_key"],[25,15,13,13],[25,16,13,14],[25,19,13,17,"arguments"],[25,28,13,26],[25,29,13,27,"_key"],[25,33,13,31],[25,34,13,32],[26,4,14,2],[27,4,15,2],[27,11,15,9],[27,20,15,18,"forwardRef"],[27,30,15,28,"forwardRef"],[27,31,15,29,"node"],[27,35,15,33],[27,37,15,35],[28,6,16,4,"args"],[28,10,16,8],[28,11,16,9,"forEach"],[28,18,16,16],[28,19,16,17,"ref"],[28,22,16,20],[28,26,16,24],[29,8,17,6],[29,12,17,10,"ref"],[29,15,17,13],[29,19,17,17],[29,23,17,21],[29,25,17,23],[30,10,18,8],[31,8,19,6],[32,8,20,6],[32,12,20,10],[32,19,20,17,"ref"],[32,22,20,20],[32,27,20,25],[32,37,20,35],[32,39,20,37],[33,10,21,8,"ref"],[33,13,21,11],[33,14,21,12,"node"],[33,18,21,16],[33,19,21,17],[34,10,22,8],[35,8,23,6],[36,8,24,6],[36,12,24,10],[36,19,24,17,"ref"],[36,22,24,20],[36,27,24,25],[36,35,24,33],[36,37,24,35],[37,10,25,8,"ref"],[37,13,25,11],[37,14,25,12,"current"],[37,21,25,19],[37,24,25,22,"node"],[37,28,25,26],[38,10,26,8],[39,8,27,6],[40,8,28,6,"console"],[40,15,28,13],[40,16,28,14,"error"],[40,21,28,19],[40,22,28,20],[40,101,28,99],[40,104,28,102,"String"],[40,110,28,108],[40,111,28,109,"ref"],[40,114,28,112],[40,115,28,113],[40,116,28,114],[41,6,29,4],[41,7,29,5],[41,8,29,6],[42,4,30,2],[42,5,30,3],[43,2,31,0],[44,0,31,1],[44,3]],"functionMap":{"names":["<global>","mergeRefs","forwardRef","args.forEach$argument_0"],"mappings":"AAA;eCU;SCI;iBCC;KDa;GDC"},"hasCjsExports":false},"type":"js/module"}]}