{"dependencies":[{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var invariant = require(_dependencyMap[0], \"invariant\");\n  function processAspectRatio(aspectRatio) {\n    if (typeof aspectRatio === 'number') {\n      return aspectRatio;\n    }\n    if (typeof aspectRatio !== 'string') {\n      if (__DEV__) {\n        invariant(!aspectRatio, 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var matches = aspectRatio.split('/').map(s => s.trim());\n    if (matches.includes('auto')) {\n      if (__DEV__) {\n        invariant(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n    if (__DEV__) {\n      invariant(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n    }\n    if (hasNonNumericValues) {\n      return;\n    }\n    if (matches.length === 2) {\n      return Number(matches[0]) / Number(matches[1]);\n    }\n    return Number(matches[0]);\n  }\n  var _default = exports.default = processAspectRatio;\n});","lineCount":39,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13,"exports"],[7,9,11,13],[7,10,11,13,"default"],[7,17,11,13],[8,2,13,0],[8,6,13,6,"invariant"],[8,15,13,15],[8,18,13,18,"require"],[8,25,13,25],[8,26,13,25,"_dependencyMap"],[8,40,13,25],[8,56,13,37],[8,57,13,38],[9,2,15,0],[9,11,15,9,"processAspectRatio"],[9,29,15,27,"processAspectRatio"],[9,30,15,28,"aspectRatio"],[9,41,15,57],[9,43,15,68],[10,4,16,2],[10,8,16,6],[10,15,16,13,"aspectRatio"],[10,26,16,24],[10,31,16,29],[10,39,16,37],[10,41,16,39],[11,6,17,4],[11,13,17,11,"aspectRatio"],[11,24,17,22],[12,4,18,2],[13,4,19,2],[13,8,19,6],[13,15,19,13,"aspectRatio"],[13,26,19,24],[13,31,19,29],[13,39,19,37],[13,41,19,39],[14,6,20,4],[14,10,20,8,"__DEV__"],[14,17,20,15],[14,19,20,17],[15,8,21,6,"invariant"],[15,17,21,15],[15,18,22,8],[15,19,22,9,"aspectRatio"],[15,30,22,20],[15,32,23,8],[15,111,23,87],[15,113,24,8,"aspectRatio"],[15,124,25,6],[15,125,25,7],[16,6,26,4],[17,6,27,4],[18,4,28,2],[19,4,30,2],[19,8,30,8,"matches"],[19,15,30,15],[19,18,30,18,"aspectRatio"],[19,29,30,29],[19,30,30,30,"split"],[19,35,30,35],[19,36,30,36],[19,39,30,39],[19,40,30,40],[19,41,30,41,"map"],[19,44,30,44],[19,45,30,45,"s"],[19,46,30,46],[19,50,30,50,"s"],[19,51,30,51],[19,52,30,52,"trim"],[19,56,30,56],[19,57,30,57],[19,58,30,58],[19,59,30,59],[20,4,32,2],[20,8,32,6,"matches"],[20,15,32,13],[20,16,32,14,"includes"],[20,24,32,22],[20,25,32,23],[20,31,32,29],[20,32,32,30],[20,34,32,32],[21,6,33,4],[21,10,33,8,"__DEV__"],[21,17,33,15],[21,19,33,17],[22,8,34,6,"invariant"],[22,17,34,15],[22,18,35,8,"matches"],[22,25,35,15],[22,26,35,16,"length"],[22,32,35,22],[22,34,36,8],[22,95,36,69],[22,97,37,8,"aspectRatio"],[22,108,38,6],[22,109,38,7],[23,6,39,4],[24,6,40,4],[25,4,41,2],[26,4,43,2],[26,8,43,8,"hasNonNumericValues"],[26,27,43,27],[26,30,43,30,"matches"],[26,37,43,37],[26,38,43,38,"some"],[26,42,43,42],[26,43,43,43,"n"],[26,44,43,44],[26,48,43,48,"Number"],[26,54,43,54],[26,55,43,55,"isNaN"],[26,60,43,60],[26,61,43,61,"Number"],[26,67,43,67],[26,68,43,68,"n"],[26,69,43,69],[26,70,43,70],[26,71,43,71],[26,72,43,72],[27,4,44,2],[27,8,44,6,"__DEV__"],[27,15,44,13],[27,17,44,15],[28,6,45,4,"invariant"],[28,15,45,13],[28,16,46,6],[28,17,46,7,"hasNonNumericValues"],[28,36,46,26],[28,41,46,31,"matches"],[28,48,46,38],[28,49,46,39,"length"],[28,55,46,45],[28,60,46,50],[28,61,46,51],[28,65,46,55,"matches"],[28,72,46,62],[28,73,46,63,"length"],[28,79,46,69],[28,84,46,74],[28,85,46,75],[28,86,46,76],[28,88,47,6],[28,167,47,85],[28,169,48,6,"aspectRatio"],[28,180,49,4],[28,181,49,5],[29,4,50,2],[30,4,52,2],[30,8,52,6,"hasNonNumericValues"],[30,27,52,25],[30,29,52,27],[31,6,53,4],[32,4,54,2],[33,4,56,2],[33,8,56,6,"matches"],[33,15,56,13],[33,16,56,14,"length"],[33,22,56,20],[33,27,56,25],[33,28,56,26],[33,30,56,28],[34,6,57,4],[34,13,57,11,"Number"],[34,19,57,17],[34,20,57,18,"matches"],[34,27,57,25],[34,28,57,26],[34,29,57,27],[34,30,57,28],[34,31,57,29],[34,34,57,32,"Number"],[34,40,57,38],[34,41,57,39,"matches"],[34,48,57,46],[34,49,57,47],[34,50,57,48],[34,51,57,49],[34,52,57,50],[35,4,58,2],[36,4,60,2],[36,11,60,9,"Number"],[36,17,60,15],[36,18,60,16,"matches"],[36,25,60,23],[36,26,60,24],[36,27,60,25],[36,28,60,26],[36,29,60,27],[37,2,61,0],[38,2,61,1],[38,6,61,1,"_default"],[38,14,61,1],[38,17,61,1,"exports"],[38,24,61,1],[38,25,61,1,"default"],[38,32,61,1],[38,35,63,15,"processAspectRatio"],[38,53,63,33],[39,0,63,33],[39,3]],"functionMap":{"names":["<global>","processAspectRatio","aspectRatio.split.map$argument_0","matches.some$argument_0"],"mappings":"AAA;ACc;6CCe,aD;2CEa,4BF;CDkB"}},"type":"js/module"}]}