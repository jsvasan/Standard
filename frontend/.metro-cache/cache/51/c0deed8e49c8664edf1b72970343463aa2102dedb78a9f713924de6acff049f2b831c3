{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"./VirtualizeUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":70}}],"key":"WkNMKgqK4aOdBxtaLg+KYSUiZ0s=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _VirtualizeUtils = require(_dependencyMap[3], \"./VirtualizeUtils\");\n  var _invariant = _interopRequireDefault(require(_dependencyMap[4], \"invariant\"));\n  var ListMetricsAggregator = exports.default = /*#__PURE__*/function () {\n    function ListMetricsAggregator() {\n      (0, _classCallCheck2.default)(this, ListMetricsAggregator);\n      this._averageCellLength = 0;\n      this._cellMetrics = new Map();\n      this._highestMeasuredCellIndex = 0;\n      this._measuredCellsLength = 0;\n      this._measuredCellsCount = 0;\n      this._orientation = {\n        horizontal: false,\n        rtl: false\n      };\n    }\n    return (0, _createClass2.default)(ListMetricsAggregator, [{\n      key: \"notifyCellLayout\",\n      value: function notifyCellLayout(_ref) {\n        var cellIndex = _ref.cellIndex,\n          cellKey = _ref.cellKey,\n          orientation = _ref.orientation,\n          layout = _ref.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        var next = {\n          index: cellIndex,\n          length: this._selectLength(layout),\n          isMounted: true,\n          offset: this.flowRelativeOffset(layout)\n        };\n        var curr = this._cellMetrics.get(cellKey);\n        if (!curr || next.offset !== curr.offset || next.length !== curr.length) {\n          if (curr) {\n            var dLength = next.length - curr.length;\n            this._measuredCellsLength += dLength;\n          } else {\n            this._measuredCellsLength += next.length;\n            this._measuredCellsCount += 1;\n          }\n          this._averageCellLength = this._measuredCellsLength / this._measuredCellsCount;\n          this._cellMetrics.set(cellKey, next);\n          this._highestMeasuredCellIndex = Math.max(this._highestMeasuredCellIndex, cellIndex);\n          return true;\n        } else {\n          curr.isMounted = true;\n          return false;\n        }\n      }\n    }, {\n      key: \"notifyCellUnmounted\",\n      value: function notifyCellUnmounted(cellKey) {\n        var curr = this._cellMetrics.get(cellKey);\n        if (curr) {\n          curr.isMounted = false;\n        }\n      }\n    }, {\n      key: \"notifyListContentLayout\",\n      value: function notifyListContentLayout(_ref2) {\n        var orientation = _ref2.orientation,\n          layout = _ref2.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        this._contentLength = this._selectLength(layout);\n      }\n    }, {\n      key: \"getAverageCellLength\",\n      value: function getAverageCellLength() {\n        return this._averageCellLength;\n      }\n    }, {\n      key: \"getHighestMeasuredCellIndex\",\n      value: function getHighestMeasuredCellIndex() {\n        return this._highestMeasuredCellIndex;\n      }\n    }, {\n      key: \"getCellMetricsApprox\",\n      value: function getCellMetricsApprox(index, props) {\n        var frame = this.getCellMetrics(index, props);\n        if (frame && frame.index === index) {\n          return frame;\n        } else {\n          var offset;\n          var highestMeasuredCellIndex = this.getHighestMeasuredCellIndex();\n          if (highestMeasuredCellIndex < index) {\n            var highestMeasuredCellFrame = this.getCellMetrics(highestMeasuredCellIndex, props);\n            if (highestMeasuredCellFrame) {\n              offset = highestMeasuredCellFrame.offset + highestMeasuredCellFrame.length + this._averageCellLength * (index - highestMeasuredCellIndex - 1);\n            }\n          }\n          if (offset == null) {\n            offset = this._averageCellLength * index;\n          }\n          var data = props.data,\n            getItemCount = props.getItemCount;\n          (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n          return {\n            length: this._averageCellLength,\n            offset,\n            index,\n            isMounted: false\n          };\n        }\n      }\n    }, {\n      key: \"getCellMetrics\",\n      value: function getCellMetrics(index, props) {\n        var data = props.data,\n          getItem = props.getItem,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get metrics for out of range cell index ' + index);\n        var keyExtractor = props.keyExtractor ?? _VirtualizeUtils.keyExtractor;\n        var frame = this._cellMetrics.get(keyExtractor(getItem(data, index), index));\n        if (frame && frame.index === index) {\n          return frame;\n        }\n        if (getItemLayout) {\n          var _getItemLayout = getItemLayout(data, index),\n            length = _getItemLayout.length,\n            offset = _getItemLayout.offset;\n          return {\n            index,\n            length,\n            offset,\n            isMounted: true\n          };\n        }\n        return null;\n      }\n    }, {\n      key: \"getCellOffsetApprox\",\n      value: function getCellOffsetApprox(index, props) {\n        if (Number.isInteger(index)) {\n          return this.getCellMetricsApprox(index, props).offset;\n        } else {\n          var frameMetrics = this.getCellMetricsApprox(Math.floor(index), props);\n          var remainder = index - Math.floor(index);\n          return frameMetrics.offset + remainder * frameMetrics.length;\n        }\n      }\n    }, {\n      key: \"getContentLength\",\n      value: function getContentLength() {\n        return this._contentLength ?? 0;\n      }\n    }, {\n      key: \"hasContentLength\",\n      value: function hasContentLength() {\n        return this._contentLength != null;\n      }\n    }, {\n      key: \"flowRelativeOffset\",\n      value: function flowRelativeOffset(layout, referenceContentLength) {\n        var _this$_orientation = this._orientation,\n          horizontal = _this$_orientation.horizontal,\n          rtl = _this$_orientation.rtl;\n        if (horizontal && rtl) {\n          var contentLength = referenceContentLength ?? this._contentLength;\n          (0, _invariant.default)(contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return contentLength - (this._selectOffset(layout) + this._selectLength(layout));\n        } else {\n          return this._selectOffset(layout);\n        }\n      }\n    }, {\n      key: \"cartesianOffset\",\n      value: function cartesianOffset(flowRelativeOffset) {\n        var _this$_orientation2 = this._orientation,\n          horizontal = _this$_orientation2.horizontal,\n          rtl = _this$_orientation2.rtl;\n        if (horizontal && rtl) {\n          (0, _invariant.default)(this._contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return this._contentLength - flowRelativeOffset;\n        } else {\n          return flowRelativeOffset;\n        }\n      }\n    }, {\n      key: \"_invalidateIfOrientationChanged\",\n      value: function _invalidateIfOrientationChanged(orientation) {\n        if (orientation.rtl !== this._orientation.rtl) {\n          this._cellMetrics.clear();\n        }\n        if (orientation.horizontal !== this._orientation.horizontal) {\n          this._averageCellLength = 0;\n          this._highestMeasuredCellIndex = 0;\n          this._measuredCellsLength = 0;\n          this._measuredCellsCount = 0;\n        }\n        this._orientation = orientation;\n      }\n    }, {\n      key: \"_selectLength\",\n      value: function _selectLength(_ref3) {\n        var width = _ref3.width,\n          height = _ref3.height;\n        return this._orientation.horizontal ? width : height;\n      }\n    }, {\n      key: \"_selectOffset\",\n      value: function _selectOffset(_ref4) {\n        var x = _ref4.x,\n          y = _ref4.y;\n        return this._orientation.horizontal ? x : y;\n      }\n    }]);\n  }();\n});","lineCount":215,"map":[[9,2,14,0],[9,6,14,0,"_VirtualizeUtils"],[9,22,14,0],[9,25,14,0,"require"],[9,32,14,0],[9,33,14,0,"_dependencyMap"],[9,47,14,0],[10,2,15,0],[10,6,15,0,"_invariant"],[10,16,15,0],[10,19,15,0,"_interopRequireDefault"],[10,41,15,0],[10,42,15,0,"require"],[10,49,15,0],[10,50,15,0,"_dependencyMap"],[10,64,15,0],[11,2,15,34],[11,6,59,21,"ListMetricsAggregator"],[11,27,59,42],[11,30,59,42,"exports"],[11,37,59,42],[11,38,59,42,"default"],[11,45,59,42],[12,4,59,42],[12,13,59,42,"ListMetricsAggregator"],[12,35,59,42],[13,6,59,42],[13,10,59,42,"_classCallCheck2"],[13,26,59,42],[13,27,59,42,"default"],[13,34,59,42],[13,42,59,42,"ListMetricsAggregator"],[13,63,59,42],[14,6,59,42],[14,11,60,2,"_averageCellLength"],[14,29,60,20],[14,32,60,23],[14,33,60,24],[15,6,60,24],[15,11,61,2,"_cellMetrics"],[15,23,61,14],[15,26,61,43],[15,30,61,47,"Map"],[15,33,61,50],[15,34,61,51],[15,35,61,52],[16,6,61,52],[16,11,63,2,"_highestMeasuredCellIndex"],[16,36,63,27],[16,39,63,30],[16,40,63,31],[17,6,63,31],[17,11,64,2,"_measuredCellsLength"],[17,31,64,22],[17,34,64,25],[17,35,64,26],[18,6,64,26],[18,11,65,2,"_measuredCellsCount"],[18,30,65,21],[18,33,65,24],[18,34,65,25],[19,6,65,25],[19,11,66,2,"_orientation"],[19,23,66,14],[19,26,66,34],[20,8,67,4,"horizontal"],[20,18,67,14],[20,20,67,16],[20,25,67,21],[21,8,68,4,"rtl"],[21,11,68,7],[21,13,68,9],[22,6,69,2],[22,7,69,3],[23,4,69,3],[24,4,69,3],[24,15,69,3,"_createClass2"],[24,28,69,3],[24,29,69,3,"default"],[24,36,69,3],[24,38,69,3,"ListMetricsAggregator"],[24,59,69,3],[25,6,69,3,"key"],[25,9,69,3],[26,6,69,3,"value"],[26,11,69,3],[26,13,76,2],[26,22,76,2,"notifyCellLayout"],[26,38,76,18,"notifyCellLayout"],[26,39,76,18,"_ref"],[26,43,76,18],[26,45,86,14],[27,8,86,14],[27,12,77,4,"cellIndex"],[27,21,77,13],[27,24,77,13,"_ref"],[27,28,77,13],[27,29,77,4,"cellIndex"],[27,38,77,13],[28,10,78,4,"cellKey"],[28,17,78,11],[28,20,78,11,"_ref"],[28,24,78,11],[28,25,78,4,"cellKey"],[28,32,78,11],[29,10,79,4,"orientation"],[29,21,79,15],[29,24,79,15,"_ref"],[29,28,79,15],[29,29,79,4,"orientation"],[29,40,79,15],[30,10,80,4,"layout"],[30,16,80,10],[30,19,80,10,"_ref"],[30,23,80,10],[30,24,80,4,"layout"],[30,30,80,10],[31,8,87,4],[31,12,87,8],[31,13,87,9,"_invalidateIfOrientationChanged"],[31,44,87,40],[31,45,87,41,"orientation"],[31,56,87,52],[31,57,87,53],[32,8,89,4],[32,12,89,10,"next"],[32,16,89,27],[32,19,89,30],[33,10,90,6,"index"],[33,15,90,11],[33,17,90,13,"cellIndex"],[33,26,90,22],[34,10,91,6,"length"],[34,16,91,12],[34,18,91,14],[34,22,91,18],[34,23,91,19,"_selectLength"],[34,36,91,32],[34,37,91,33,"layout"],[34,43,91,39],[34,44,91,40],[35,10,92,6,"isMounted"],[35,19,92,15],[35,21,92,17],[35,25,92,21],[36,10,93,6,"offset"],[36,16,93,12],[36,18,93,14],[36,22,93,18],[36,23,93,19,"flowRelativeOffset"],[36,41,93,37],[36,42,93,38,"layout"],[36,48,93,44],[37,8,94,4],[37,9,94,5],[38,8,95,4],[38,12,95,10,"curr"],[38,16,95,14],[38,19,95,17],[38,23,95,21],[38,24,95,22,"_cellMetrics"],[38,36,95,34],[38,37,95,35,"get"],[38,40,95,38],[38,41,95,39,"cellKey"],[38,48,95,46],[38,49,95,47],[39,8,97,4],[39,12,97,8],[39,13,97,9,"curr"],[39,17,97,13],[39,21,97,17,"next"],[39,25,97,21],[39,26,97,22,"offset"],[39,32,97,28],[39,37,97,33,"curr"],[39,41,97,37],[39,42,97,38,"offset"],[39,48,97,44],[39,52,97,48,"next"],[39,56,97,52],[39,57,97,53,"length"],[39,63,97,59],[39,68,97,64,"curr"],[39,72,97,68],[39,73,97,69,"length"],[39,79,97,75],[39,81,97,77],[40,10,98,6],[40,14,98,10,"curr"],[40,18,98,14],[40,20,98,16],[41,12,99,8],[41,16,99,14,"dLength"],[41,23,99,21],[41,26,99,24,"next"],[41,30,99,28],[41,31,99,29,"length"],[41,37,99,35],[41,40,99,38,"curr"],[41,44,99,42],[41,45,99,43,"length"],[41,51,99,49],[42,12,100,8],[42,16,100,12],[42,17,100,13,"_measuredCellsLength"],[42,37,100,33],[42,41,100,37,"dLength"],[42,48,100,44],[43,10,101,6],[43,11,101,7],[43,17,101,13],[44,12,102,8],[44,16,102,12],[44,17,102,13,"_measuredCellsLength"],[44,37,102,33],[44,41,102,37,"next"],[44,45,102,41],[44,46,102,42,"length"],[44,52,102,48],[45,12,103,8],[45,16,103,12],[45,17,103,13,"_measuredCellsCount"],[45,36,103,32],[45,40,103,36],[45,41,103,37],[46,10,104,6],[47,10,106,6],[47,14,106,10],[47,15,106,11,"_averageCellLength"],[47,33,106,29],[47,36,107,8],[47,40,107,12],[47,41,107,13,"_measuredCellsLength"],[47,61,107,33],[47,64,107,36],[47,68,107,40],[47,69,107,41,"_measuredCellsCount"],[47,88,107,60],[48,10,108,6],[48,14,108,10],[48,15,108,11,"_cellMetrics"],[48,27,108,23],[48,28,108,24,"set"],[48,31,108,27],[48,32,108,28,"cellKey"],[48,39,108,35],[48,41,108,37,"next"],[48,45,108,41],[48,46,108,42],[49,10,109,6],[49,14,109,10],[49,15,109,11,"_highestMeasuredCellIndex"],[49,40,109,36],[49,43,109,39,"Math"],[49,47,109,43],[49,48,109,44,"max"],[49,51,109,47],[49,52,110,8],[49,56,110,12],[49,57,110,13,"_highestMeasuredCellIndex"],[49,82,110,38],[49,84,111,8,"cellIndex"],[49,93,112,6],[49,94,112,7],[50,10,113,6],[50,17,113,13],[50,21,113,17],[51,8,114,4],[51,9,114,5],[51,15,114,11],[52,10,115,6,"curr"],[52,14,115,10],[52,15,115,11,"isMounted"],[52,24,115,20],[52,27,115,23],[52,31,115,27],[53,10,116,6],[53,17,116,13],[53,22,116,18],[54,8,117,4],[55,6,118,2],[56,4,118,3],[57,6,118,3,"key"],[57,9,118,3],[58,6,118,3,"value"],[58,11,118,3],[58,13,123,2],[58,22,123,2,"notifyCellUnmounted"],[58,41,123,21,"notifyCellUnmounted"],[58,42,123,22,"cellKey"],[58,49,123,37],[58,51,123,45],[59,8,124,4],[59,12,124,10,"curr"],[59,16,124,14],[59,19,124,17],[59,23,124,21],[59,24,124,22,"_cellMetrics"],[59,36,124,34],[59,37,124,35,"get"],[59,40,124,38],[59,41,124,39,"cellKey"],[59,48,124,46],[59,49,124,47],[60,8,125,4],[60,12,125,8,"curr"],[60,16,125,12],[60,18,125,14],[61,10,126,6,"curr"],[61,14,126,10],[61,15,126,11,"isMounted"],[61,24,126,20],[61,27,126,23],[61,32,126,28],[62,8,127,4],[63,6,128,2],[64,4,128,3],[65,6,128,3,"key"],[65,9,128,3],[66,6,128,3,"value"],[66,11,128,3],[66,13,133,2],[66,22,133,2,"notifyListContentLayout"],[66,45,133,25,"notifyListContentLayout"],[66,46,133,25,"_ref2"],[66,51,133,25],[66,53,139,11],[67,8,139,11],[67,12,134,4,"orientation"],[67,23,134,15],[67,26,134,15,"_ref2"],[67,31,134,15],[67,32,134,4,"orientation"],[67,43,134,15],[68,10,135,4,"layout"],[68,16,135,10],[68,19,135,10,"_ref2"],[68,24,135,10],[68,25,135,4,"layout"],[68,31,135,10],[69,8,140,4],[69,12,140,8],[69,13,140,9,"_invalidateIfOrientationChanged"],[69,44,140,40],[69,45,140,41,"orientation"],[69,56,140,52],[69,57,140,53],[70,8,141,4],[70,12,141,8],[70,13,141,9,"_contentLength"],[70,27,141,23],[70,30,141,26],[70,34,141,30],[70,35,141,31,"_selectLength"],[70,48,141,44],[70,49,141,45,"layout"],[70,55,141,51],[70,56,141,52],[71,6,142,2],[72,4,142,3],[73,6,142,3,"key"],[73,9,142,3],[74,6,142,3,"value"],[74,11,142,3],[74,13,147,2],[74,22,147,2,"getAverageCellLength"],[74,42,147,22,"getAverageCellLength"],[74,43,147,22],[74,45,147,33],[75,8,148,4],[75,15,148,11],[75,19,148,15],[75,20,148,16,"_averageCellLength"],[75,38,148,34],[76,6,149,2],[77,4,149,3],[78,6,149,3,"key"],[78,9,149,3],[79,6,149,3,"value"],[79,11,149,3],[79,13,155,2],[79,22,155,2,"getHighestMeasuredCellIndex"],[79,49,155,29,"getHighestMeasuredCellIndex"],[79,50,155,29],[79,52,155,40],[80,8,156,4],[80,15,156,11],[80,19,156,15],[80,20,156,16,"_highestMeasuredCellIndex"],[80,45,156,41],[81,6,157,2],[82,4,157,3],[83,6,157,3,"key"],[83,9,157,3],[84,6,157,3,"value"],[84,11,157,3],[84,13,164,2],[84,22,164,2,"getCellMetricsApprox"],[84,42,164,22,"getCellMetricsApprox"],[84,43,164,23,"index"],[84,48,164,36],[84,50,164,38,"props"],[84,55,164,60],[84,57,164,75],[85,8,165,4],[85,12,165,10,"frame"],[85,17,165,15],[85,20,165,18],[85,24,165,22],[85,25,165,23,"getCellMetrics"],[85,39,165,37],[85,40,165,38,"index"],[85,45,165,43],[85,47,165,45,"props"],[85,52,165,50],[85,53,165,51],[86,8,166,4],[86,12,166,8,"frame"],[86,17,166,13],[86,21,166,17,"frame"],[86,26,166,22],[86,27,166,23,"index"],[86,32,166,28],[86,37,166,33,"index"],[86,42,166,38],[86,44,166,40],[87,10,168,6],[87,17,168,13,"frame"],[87,22,168,18],[88,8,169,4],[88,9,169,5],[88,15,169,11],[89,10,170,6],[89,14,170,10,"offset"],[89,20,170,16],[90,10,172,6],[90,14,172,12,"highestMeasuredCellIndex"],[90,38,172,36],[90,41,172,39],[90,45,172,43],[90,46,172,44,"getHighestMeasuredCellIndex"],[90,73,172,71],[90,74,172,72],[90,75,172,73],[91,10,173,6],[91,14,173,10,"highestMeasuredCellIndex"],[91,38,173,34],[91,41,173,37,"index"],[91,46,173,42],[91,48,173,44],[92,12,178,8],[92,16,178,14,"highestMeasuredCellFrame"],[92,40,178,38],[92,43,178,41],[92,47,178,45],[92,48,178,46,"getCellMetrics"],[92,62,178,60],[92,63,179,10,"highestMeasuredCellIndex"],[92,87,179,34],[92,89,180,10,"props"],[92,94,181,8],[92,95,181,9],[93,12,182,8],[93,16,182,12,"highestMeasuredCellFrame"],[93,40,182,36],[93,42,182,38],[94,14,183,10,"offset"],[94,20,183,16],[94,23,184,12,"highestMeasuredCellFrame"],[94,47,184,36],[94,48,184,37,"offset"],[94,54,184,43],[94,57,185,12,"highestMeasuredCellFrame"],[94,81,185,36],[94,82,185,37,"length"],[94,88,185,43],[94,91,186,12],[94,95,186,16],[94,96,186,17,"_averageCellLength"],[94,114,186,35],[94,118,186,39,"index"],[94,123,186,44],[94,126,186,47,"highestMeasuredCellIndex"],[94,150,186,71],[94,153,186,74],[94,154,186,75],[94,155,186,76],[95,12,187,8],[96,10,188,6],[97,10,190,6],[97,14,190,10,"offset"],[97,20,190,16],[97,24,190,20],[97,28,190,24],[97,30,190,26],[98,12,191,8,"offset"],[98,18,191,14],[98,21,191,17],[98,25,191,21],[98,26,191,22,"_averageCellLength"],[98,44,191,40],[98,47,191,43,"index"],[98,52,191,48],[99,10,192,6],[100,10,194,6],[100,14,194,13,"data"],[100,18,194,17],[100,21,194,35,"props"],[100,26,194,40],[100,27,194,13,"data"],[100,31,194,17],[101,12,194,19,"getItemCount"],[101,24,194,31],[101,27,194,35,"props"],[101,32,194,40],[101,33,194,19,"getItemCount"],[101,45,194,31],[102,10,195,6],[102,14,195,6,"invariant"],[102,32,195,15],[102,34,196,8,"index"],[102,39,196,13],[102,43,196,17],[102,44,196,18],[102,48,196,22,"index"],[102,53,196,27],[102,56,196,30,"getItemCount"],[102,68,196,42],[102,69,196,43,"data"],[102,73,196,47],[102,74,196,48],[102,76,197,8],[102,120,197,52],[102,123,197,55,"index"],[102,128,198,6],[102,129,198,7],[103,10,199,6],[103,17,199,13],[104,12,200,8,"length"],[104,18,200,14],[104,20,200,16],[104,24,200,20],[104,25,200,21,"_averageCellLength"],[104,43,200,39],[105,12,201,8,"offset"],[105,18,201,14],[106,12,202,8,"index"],[106,17,202,13],[107,12,203,8,"isMounted"],[107,21,203,17],[107,23,203,19],[108,10,204,6],[108,11,204,7],[109,8,205,4],[110,6,206,2],[111,4,206,3],[112,6,206,3,"key"],[112,9,206,3],[113,6,206,3,"value"],[113,11,206,3],[113,13,211,2],[113,22,211,2,"getCellMetrics"],[113,36,211,16,"getCellMetrics"],[113,37,211,17,"index"],[113,42,211,30],[113,44,211,32,"props"],[113,49,211,54],[113,51,211,70],[114,8,212,4],[114,12,212,11,"data"],[114,16,212,15],[114,19,212,57,"props"],[114,24,212,62],[114,25,212,11,"data"],[114,29,212,15],[115,10,212,17,"getItem"],[115,17,212,24],[115,20,212,57,"props"],[115,25,212,62],[115,26,212,17,"getItem"],[115,33,212,24],[116,10,212,26,"getItemCount"],[116,22,212,38],[116,25,212,57,"props"],[116,30,212,62],[116,31,212,26,"getItemCount"],[116,43,212,38],[117,10,212,40,"getItemLayout"],[117,23,212,53],[117,26,212,57,"props"],[117,31,212,62],[117,32,212,40,"getItemLayout"],[117,45,212,53],[118,8,213,4],[118,12,213,4,"invariant"],[118,30,213,13],[118,32,214,6,"index"],[118,37,214,11],[118,41,214,15],[118,42,214,16],[118,46,214,20,"index"],[118,51,214,25],[118,54,214,28,"getItemCount"],[118,66,214,40],[118,67,214,41,"data"],[118,71,214,45],[118,72,214,46],[118,74,215,6],[118,125,215,57],[118,128,215,60,"index"],[118,133,216,4],[118,134,216,5],[119,8,217,4],[119,12,217,10,"keyExtractor"],[119,24,217,22],[119,27,217,25,"props"],[119,32,217,30],[119,33,217,31,"keyExtractor"],[119,45,217,43],[119,49,217,47,"defaultKeyExtractor"],[119,78,217,66],[120,8,218,4],[120,12,218,10,"frame"],[120,17,218,15],[120,20,218,18],[120,24,218,22],[120,25,218,23,"_cellMetrics"],[120,37,218,35],[120,38,218,36,"get"],[120,41,218,39],[120,42,219,6,"keyExtractor"],[120,54,219,18],[120,55,219,19,"getItem"],[120,62,219,26],[120,63,219,27,"data"],[120,67,219,31],[120,69,219,33,"index"],[120,74,219,38],[120,75,219,39],[120,77,219,41,"index"],[120,82,219,46],[120,83,220,4],[120,84,220,5],[121,8,221,4],[121,12,221,8,"frame"],[121,17,221,13],[121,21,221,17,"frame"],[121,26,221,22],[121,27,221,23,"index"],[121,32,221,28],[121,37,221,33,"index"],[121,42,221,38],[121,44,221,40],[122,10,222,6],[122,17,222,13,"frame"],[122,22,222,18],[123,8,223,4],[124,8,225,4],[124,12,225,8,"getItemLayout"],[124,25,225,21],[124,27,225,23],[125,10,226,6],[125,14,226,6,"_getItemLayout"],[125,28,226,6],[125,31,226,31,"getItemLayout"],[125,44,226,44],[125,45,226,45,"data"],[125,49,226,49],[125,51,226,51,"index"],[125,56,226,56],[125,57,226,57],[126,12,226,13,"length"],[126,18,226,19],[126,21,226,19,"_getItemLayout"],[126,35,226,19],[126,36,226,13,"length"],[126,42,226,19],[127,12,226,21,"offset"],[127,18,226,27],[127,21,226,27,"_getItemLayout"],[127,35,226,27],[127,36,226,21,"offset"],[127,42,226,27],[128,10,229,6],[128,17,229,13],[129,12,229,14,"index"],[129,17,229,19],[130,12,229,21,"length"],[130,18,229,27],[131,12,229,29,"offset"],[131,18,229,35],[132,12,229,37,"isMounted"],[132,21,229,46],[132,23,229,48],[133,10,229,52],[133,11,229,53],[134,8,230,4],[135,8,232,4],[135,15,232,11],[135,19,232,15],[136,6,233,2],[137,4,233,3],[138,6,233,3,"key"],[138,9,233,3],[139,6,233,3,"value"],[139,11,233,3],[139,13,239,2],[139,22,239,2,"getCellOffsetApprox"],[139,41,239,21,"getCellOffsetApprox"],[139,42,239,22,"index"],[139,47,239,35],[139,49,239,37,"props"],[139,54,239,59],[139,56,239,69],[140,8,240,4],[140,12,240,8,"Number"],[140,18,240,14],[140,19,240,15,"isInteger"],[140,28,240,24],[140,29,240,25,"index"],[140,34,240,30],[140,35,240,31],[140,37,240,33],[141,10,241,6],[141,17,241,13],[141,21,241,17],[141,22,241,18,"getCellMetricsApprox"],[141,42,241,38],[141,43,241,39,"index"],[141,48,241,44],[141,50,241,46,"props"],[141,55,241,51],[141,56,241,52],[141,57,241,53,"offset"],[141,63,241,59],[142,8,242,4],[142,9,242,5],[142,15,242,11],[143,10,243,6],[143,14,243,12,"frameMetrics"],[143,26,243,24],[143,29,243,27],[143,33,243,31],[143,34,243,32,"getCellMetricsApprox"],[143,54,243,52],[143,55,243,53,"Math"],[143,59,243,57],[143,60,243,58,"floor"],[143,65,243,63],[143,66,243,64,"index"],[143,71,243,69],[143,72,243,70],[143,74,243,72,"props"],[143,79,243,77],[143,80,243,78],[144,10,244,6],[144,14,244,12,"remainder"],[144,23,244,21],[144,26,244,24,"index"],[144,31,244,29],[144,34,244,32,"Math"],[144,38,244,36],[144,39,244,37,"floor"],[144,44,244,42],[144,45,244,43,"index"],[144,50,244,48],[144,51,244,49],[145,10,245,6],[145,17,245,13,"frameMetrics"],[145,29,245,25],[145,30,245,26,"offset"],[145,36,245,32],[145,39,245,35,"remainder"],[145,48,245,44],[145,51,245,47,"frameMetrics"],[145,63,245,59],[145,64,245,60,"length"],[145,70,245,66],[146,8,246,4],[147,6,247,2],[148,4,247,3],[149,6,247,3,"key"],[149,9,247,3],[150,6,247,3,"value"],[150,11,247,3],[150,13,252,2],[150,22,252,2,"getContentLength"],[150,38,252,18,"getContentLength"],[150,39,252,18],[150,41,252,29],[151,8,253,4],[151,15,253,11],[151,19,253,15],[151,20,253,16,"_contentLength"],[151,34,253,30],[151,38,253,34],[151,39,253,35],[152,6,254,2],[153,4,254,3],[154,6,254,3,"key"],[154,9,254,3],[155,6,254,3,"value"],[155,11,254,3],[155,13,259,2],[155,22,259,2,"hasContentLength"],[155,38,259,18,"hasContentLength"],[155,39,259,18],[155,41,259,30],[156,8,260,4],[156,15,260,11],[156,19,260,15],[156,20,260,16,"_contentLength"],[156,34,260,30],[156,38,260,34],[156,42,260,38],[157,6,261,2],[158,4,261,3],[159,6,261,3,"key"],[159,9,261,3],[160,6,261,3,"value"],[160,11,261,3],[160,13,267,2],[160,22,267,2,"flowRelativeOffset"],[160,40,267,20,"flowRelativeOffset"],[160,41,268,4,"layout"],[160,47,268,27],[160,49,269,4,"referenceContentLength"],[160,71,269,36],[160,73,270,12],[161,8,271,4],[161,12,271,4,"_this$_orientation"],[161,30,271,4],[161,33,271,30],[161,37,271,34],[161,38,271,35,"_orientation"],[161,50,271,47],[162,10,271,11,"horizontal"],[162,20,271,21],[162,23,271,21,"_this$_orientation"],[162,41,271,21],[162,42,271,11,"horizontal"],[162,52,271,21],[163,10,271,23,"rtl"],[163,13,271,26],[163,16,271,26,"_this$_orientation"],[163,34,271,26],[163,35,271,23,"rtl"],[163,38,271,26],[164,8,273,4],[164,12,273,8,"horizontal"],[164,22,273,18],[164,26,273,22,"rtl"],[164,29,273,25],[164,31,273,27],[165,10,274,6],[165,14,274,12,"contentLength"],[165,27,274,25],[165,30,274,28,"referenceContentLength"],[165,52,274,50],[165,56,274,54],[165,60,274,58],[165,61,274,59,"_contentLength"],[165,75,274,73],[166,10,275,6],[166,14,275,6,"invariant"],[166,32,275,15],[166,34,276,8,"contentLength"],[166,47,276,21],[166,51,276,25],[166,55,276,29],[166,57,277,8],[166,145,278,6],[166,146,278,7],[167,10,279,6],[167,17,280,8,"contentLength"],[167,30,280,21],[167,34,281,9],[167,38,281,13],[167,39,281,14,"_selectOffset"],[167,52,281,27],[167,53,281,28,"layout"],[167,59,281,34],[167,60,281,35],[167,63,281,38],[167,67,281,42],[167,68,281,43,"_selectLength"],[167,81,281,56],[167,82,281,57,"layout"],[167,88,281,63],[167,89,281,64],[167,90,281,65],[168,8,283,4],[168,9,283,5],[168,15,283,11],[169,10,284,6],[169,17,284,13],[169,21,284,17],[169,22,284,18,"_selectOffset"],[169,35,284,31],[169,36,284,32,"layout"],[169,42,284,38],[169,43,284,39],[170,8,285,4],[171,6,286,2],[172,4,286,3],[173,6,286,3,"key"],[173,9,286,3],[174,6,286,3,"value"],[174,11,286,3],[174,13,291,2],[174,22,291,2,"cartesianOffset"],[174,37,291,17,"cartesianOffset"],[174,38,291,18,"flowRelativeOffset"],[174,56,291,44],[174,58,291,54],[175,8,292,4],[175,12,292,4,"_this$_orientation2"],[175,31,292,4],[175,34,292,30],[175,38,292,34],[175,39,292,35,"_orientation"],[175,51,292,47],[176,10,292,11,"horizontal"],[176,20,292,21],[176,23,292,21,"_this$_orientation2"],[176,42,292,21],[176,43,292,11,"horizontal"],[176,53,292,21],[177,10,292,23,"rtl"],[177,13,292,26],[177,16,292,26,"_this$_orientation2"],[177,35,292,26],[177,36,292,23,"rtl"],[177,39,292,26],[178,8,294,4],[178,12,294,8,"horizontal"],[178,22,294,18],[178,26,294,22,"rtl"],[178,29,294,25],[178,31,294,27],[179,10,295,6],[179,14,295,6,"invariant"],[179,32,295,15],[179,34,296,8],[179,38,296,12],[179,39,296,13,"_contentLength"],[179,53,296,27],[179,57,296,31],[179,61,296,35],[179,63,297,8],[179,151,298,6],[179,152,298,7],[180,10,299,6],[180,17,299,13],[180,21,299,17],[180,22,299,18,"_contentLength"],[180,36,299,32],[180,39,299,35,"flowRelativeOffset"],[180,57,299,53],[181,8,300,4],[181,9,300,5],[181,15,300,11],[182,10,301,6],[182,17,301,13,"flowRelativeOffset"],[182,35,301,31],[183,8,302,4],[184,6,303,2],[185,4,303,3],[186,6,303,3,"key"],[186,9,303,3],[187,6,303,3,"value"],[187,11,303,3],[187,13,305,2],[187,22,305,2,"_invalidateIfOrientationChanged"],[187,53,305,33,"_invalidateIfOrientationChanged"],[187,54,305,34,"orientation"],[187,65,305,62],[187,67,305,70],[188,8,306,4],[188,12,306,8,"orientation"],[188,23,306,19],[188,24,306,20,"rtl"],[188,27,306,23],[188,32,306,28],[188,36,306,32],[188,37,306,33,"_orientation"],[188,49,306,45],[188,50,306,46,"rtl"],[188,53,306,49],[188,55,306,51],[189,10,307,6],[189,14,307,10],[189,15,307,11,"_cellMetrics"],[189,27,307,23],[189,28,307,24,"clear"],[189,33,307,29],[189,34,307,30],[189,35,307,31],[190,8,308,4],[191,8,310,4],[191,12,310,8,"orientation"],[191,23,310,19],[191,24,310,20,"horizontal"],[191,34,310,30],[191,39,310,35],[191,43,310,39],[191,44,310,40,"_orientation"],[191,56,310,52],[191,57,310,53,"horizontal"],[191,67,310,63],[191,69,310,65],[192,10,311,6],[192,14,311,10],[192,15,311,11,"_averageCellLength"],[192,33,311,29],[192,36,311,32],[192,37,311,33],[193,10,312,6],[193,14,312,10],[193,15,312,11,"_highestMeasuredCellIndex"],[193,40,312,36],[193,43,312,39],[193,44,312,40],[194,10,313,6],[194,14,313,10],[194,15,313,11,"_measuredCellsLength"],[194,35,313,31],[194,38,313,34],[194,39,313,35],[195,10,314,6],[195,14,314,10],[195,15,314,11,"_measuredCellsCount"],[195,34,314,30],[195,37,314,33],[195,38,314,34],[196,8,315,4],[197,8,317,4],[197,12,317,8],[197,13,317,9,"_orientation"],[197,25,317,21],[197,28,317,24,"orientation"],[197,39,317,35],[198,6,318,2],[199,4,318,3],[200,6,318,3,"key"],[200,9,318,3],[201,6,318,3,"value"],[201,11,318,3],[201,13,320,2],[201,22,320,2,"_selectLength"],[201,35,320,15,"_selectLength"],[201,36,320,15,"_ref3"],[201,41,320,15],[201,43,323,62],[202,8,323,62],[202,12,321,4,"width"],[202,17,321,9],[202,20,321,9,"_ref3"],[202,25,321,9],[202,26,321,4,"width"],[202,31,321,9],[203,10,322,4,"height"],[203,16,322,10],[203,19,322,10,"_ref3"],[203,24,322,10],[203,25,322,4,"height"],[203,31,322,10],[204,8,324,4],[204,15,324,11],[204,19,324,15],[204,20,324,16,"_orientation"],[204,32,324,28],[204,33,324,29,"horizontal"],[204,43,324,39],[204,46,324,42,"width"],[204,51,324,47],[204,54,324,50,"height"],[204,60,324,56],[205,6,325,2],[206,4,325,3],[207,6,325,3,"key"],[207,9,325,3],[208,6,325,3,"value"],[208,11,325,3],[208,13,327,2],[208,22,327,2,"_selectOffset"],[208,35,327,15,"_selectOffset"],[208,36,327,15,"_ref4"],[208,41,327,15],[208,43,327,72],[209,8,327,72],[209,12,327,17,"x"],[209,13,327,18],[209,16,327,18,"_ref4"],[209,21,327,18],[209,22,327,17,"x"],[209,23,327,18],[210,10,327,20,"y"],[210,11,327,21],[210,14,327,21,"_ref4"],[210,19,327,21],[210,20,327,20,"y"],[210,21,327,21],[211,8,328,4],[211,15,328,11],[211,19,328,15],[211,20,328,16,"_orientation"],[211,32,328,28],[211,33,328,29,"horizontal"],[211,43,328,39],[211,46,328,42,"x"],[211,47,328,43],[211,50,328,46,"y"],[211,51,328,47],[212,6,329,2],[213,4,329,3],[214,2,329,3],[215,0,329,3],[215,3]],"functionMap":{"names":["<global>","ListMetricsAggregator","notifyCellLayout","notifyCellUnmounted","notifyListContentLayout","getAverageCellLength","getHighestMeasuredCellIndex","getCellMetricsApprox","getCellMetrics","getCellOffsetApprox","getContentLength","hasContentLength","flowRelativeOffset","cartesianOffset","_invalidateIfOrientationChanged","_selectLength","_selectOffset"],"mappings":"AAA;eC0D;ECiB;GD0C;EEK;GFK;EGK;GHS;EIK;GJE;EKM;GLE;EMO;GN0C;EOK;GPsB;EQM;GRQ;ESK;GTE;EUK;GVE;EWM;GXmB;EYK;GZY;EaE;Gba;EcE;GdK;EeE;GfE"}},"type":"js/module"}]}