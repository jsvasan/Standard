{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  'use strict';\n\n  /**\n   * Use invariant() to assert state which your program assumes to be true.\n   *\n   * Provide sprintf-style format (only %s is supported) and arguments\n   * to provide information about what broke and what you were\n   * expecting.\n   *\n   * The invariant message will be stripped in production, but the invariant\n   * will remain to ensure logic does not differ in production.\n   */\n  var invariant = function (condition, format, a, b, c, d, e, f) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (format === undefined) {\n        throw new Error('invariant requires an error message argument');\n      }\n    }\n    if (!condition) {\n      var error;\n      if (format === undefined) {\n        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n      } else {\n        var args = [a, b, c, d, e, f];\n        var argIndex = 0;\n        error = new Error(format.replace(/%s/g, function () {\n          return args[argIndex++];\n        }));\n        error.name = 'Invariant Violation';\n      }\n      error.framesToPop = 1; // we don't care about invariant's own frame\n      throw error;\n    }\n  };\n  module.exports = invariant;\n});","lineCount":44,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[9,2,8,0],[9,14,8,12],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,2,21,0],[21,6,21,4,"invariant"],[21,15,21,13],[21,18,21,16],[21,27,21,16,"invariant"],[21,28,21,25,"condition"],[21,37,21,34],[21,39,21,36,"format"],[21,45,21,42],[21,47,21,44,"a"],[21,48,21,45],[21,50,21,47,"b"],[21,51,21,48],[21,53,21,50,"c"],[21,54,21,51],[21,56,21,53,"d"],[21,57,21,54],[21,59,21,56,"e"],[21,60,21,57],[21,62,21,59,"f"],[21,63,21,60],[21,65,21,62],[22,4,22,2],[22,8,22,6,"process"],[22,15,22,13],[22,16,22,14,"env"],[22,19,22,17],[22,20,22,18,"NODE_ENV"],[22,28,22,26],[22,33,22,31],[22,45,22,43],[22,47,22,45],[23,6,23,4],[23,10,23,8,"format"],[23,16,23,14],[23,21,23,19,"undefined"],[23,30,23,28],[23,32,23,30],[24,8,24,6],[24,14,24,12],[24,18,24,16,"Error"],[24,23,24,21],[24,24,24,22],[24,70,24,68],[24,71,24,69],[25,6,25,4],[26,4,26,2],[27,4,28,2],[27,8,28,6],[27,9,28,7,"condition"],[27,18,28,16],[27,20,28,18],[28,6,29,4],[28,10,29,8,"error"],[28,15,29,13],[29,6,30,4],[29,10,30,8,"format"],[29,16,30,14],[29,21,30,19,"undefined"],[29,30,30,28],[29,32,30,30],[30,8,31,6,"error"],[30,13,31,11],[30,16,31,14],[30,20,31,18,"Error"],[30,25,31,23],[30,26,32,8],[30,94,32,76],[30,97,33,8],[30,158,34,6],[30,159,34,7],[31,6,35,4],[31,7,35,5],[31,13,35,11],[32,8,36,6],[32,12,36,10,"args"],[32,16,36,14],[32,19,36,17],[32,20,36,18,"a"],[32,21,36,19],[32,23,36,21,"b"],[32,24,36,22],[32,26,36,24,"c"],[32,27,36,25],[32,29,36,27,"d"],[32,30,36,28],[32,32,36,30,"e"],[32,33,36,31],[32,35,36,33,"f"],[32,36,36,34],[32,37,36,35],[33,8,37,6],[33,12,37,10,"argIndex"],[33,20,37,18],[33,23,37,21],[33,24,37,22],[34,8,38,6,"error"],[34,13,38,11],[34,16,38,14],[34,20,38,18,"Error"],[34,25,38,23],[34,26,39,8,"format"],[34,32,39,14],[34,33,39,15,"replace"],[34,40,39,22],[34,41,39,23],[34,46,39,28],[34,48,39,30],[34,60,39,41],[35,10,39,43],[35,17,39,50,"args"],[35,21,39,54],[35,22,39,55,"argIndex"],[35,30,39,63],[35,32,39,65],[35,33,39,66],[36,8,39,68],[36,9,39,69],[36,10,40,6],[36,11,40,7],[37,8,41,6,"error"],[37,13,41,11],[37,14,41,12,"name"],[37,18,41,16],[37,21,41,19],[37,42,41,40],[38,6,42,4],[39,6,44,4,"error"],[39,11,44,9],[39,12,44,10,"framesToPop"],[39,23,44,21],[39,26,44,24],[39,27,44,25],[39,28,44,26],[39,29,44,27],[40,6,45,4],[40,12,45,10,"error"],[40,17,45,15],[41,4,46,2],[42,2,47,0],[42,3,47,1],[43,2,49,0,"module"],[43,8,49,6],[43,9,49,7,"exports"],[43,16,49,14],[43,19,49,17,"invariant"],[43,28,49,26],[44,0,49,27],[44,3]],"functionMap":{"names":["<global>","invariant","format.replace$argument_1"],"mappings":"AAA;gBCoB;8BCkB,uCD;CDQ"}},"type":"js/module"}]}