{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getFilename = getFilename;\n  exports.getFileExtension = getFileExtension;\n  exports.getManifestBaseUrl = getManifestBaseUrl;\n  function getFilename(url) {\n    var _URL = new URL(url, 'https://e'),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams;\n    // When attached to a dev server, we use `unstable_path` to represent the file path. This ensures\n    // the file name is not canonicalized by the browser.\n    // NOTE(EvanBacon): This is technically not tied to `__DEV__` as it's possible to use this while bundling in production\n    // mode.\n    if (__DEV__) {\n      if (searchParams.has('unstable_path')) {\n        var encodedFilePath = decodeURIComponent(searchParams.get('unstable_path'));\n        return getBasename(encodedFilePath);\n      }\n    }\n    return getBasename(pathname);\n  }\n  function getBasename(pathname) {\n    return pathname.substring(pathname.lastIndexOf('/') + 1);\n  }\n  function getFileExtension(url) {\n    var filename = getFilename(url);\n    var dotIndex = filename.lastIndexOf('.');\n    // Ignore leading dots for hidden files\n    return dotIndex > 0 ? filename.substring(dotIndex) : '';\n  }\n  /**\n   * Returns the base URL from a manifest's URL. For example, given a manifest hosted at\n   * https://example.com/app/manifest.json, the base URL would be https://example.com/app/. Query\n   * parameters and fragments also are removed.\n   *\n   * For an Expo-hosted project with a manifest hosted at https://exp.host/@user/project/index.exp, the\n   * base URL would be https://exp.host/@user/project.\n   *\n   * We also normalize the \"exp\" protocol to \"http\" to handle internal URLs with the Expo schemes used\n   * to tell the OS to open the URLs in the the Expo client.\n   */\n  function getManifestBaseUrl(manifestUrl) {\n    var urlObject = new URL(manifestUrl);\n    var nextProtocol = urlObject.protocol;\n    // Change the scheme to http(s) if it is exp(s)\n    if (nextProtocol === 'exp:') {\n      nextProtocol = 'http:';\n    } else if (nextProtocol === 'exps:') {\n      nextProtocol = 'https:';\n    }\n    urlObject.protocol = nextProtocol;\n    // Trim filename, query parameters, and fragment, if any\n    var directory = urlObject.pathname.substring(0, urlObject.pathname.lastIndexOf('/') + 1);\n    urlObject.pathname = directory;\n    urlObject.search = '';\n    urlObject.hash = '';\n    // The URL spec doesn't allow for changing the protocol to `http` or `https`\n    // without a port set so instead, we'll just swap the protocol manually.\n    return urlObject.protocol !== nextProtocol ? urlObject.href.replace(urlObject.protocol, nextProtocol) : urlObject.href;\n  }\n});","lineCount":65,"map":[[7,2,1,0,"exports"],[7,9,1,0],[7,10,1,0,"getFilename"],[7,21,1,0],[7,24,1,0,"getFilename"],[7,35,1,0],[8,2,18,0,"exports"],[8,9,18,0],[8,10,18,0,"getFileExtension"],[8,26,18,0],[8,29,18,0,"getFileExtension"],[8,45,18,0],[9,2,35,0,"exports"],[9,9,35,0],[9,10,35,0,"getManifestBaseUrl"],[9,28,35,0],[9,31,35,0,"getManifestBaseUrl"],[9,49,35,0],[10,2,1,7],[10,11,1,16,"getFilename"],[10,22,1,27,"getFilename"],[10,23,1,28,"url"],[10,26,1,31],[10,28,1,33],[11,4,2,4],[11,8,2,4,"_URL"],[11,12,2,4],[11,15,2,39],[11,19,2,43,"URL"],[11,22,2,46],[11,23,2,47,"url"],[11,26,2,50],[11,28,2,52],[11,39,2,63],[11,40,2,64],[12,6,2,12,"pathname"],[12,14,2,20],[12,17,2,20,"_URL"],[12,21,2,20],[12,22,2,12,"pathname"],[12,30,2,20],[13,6,2,22,"searchParams"],[13,18,2,34],[13,21,2,34,"_URL"],[13,25,2,34],[13,26,2,22,"searchParams"],[13,38,2,34],[14,4,3,4],[15,4,4,4],[16,4,5,4],[17,4,6,4],[18,4,7,4],[18,8,7,8,"__DEV__"],[18,15,7,15],[18,17,7,17],[19,6,8,8],[19,10,8,12,"searchParams"],[19,22,8,24],[19,23,8,25,"has"],[19,26,8,28],[19,27,8,29],[19,42,8,44],[19,43,8,45],[19,45,8,47],[20,8,9,12],[20,12,9,18,"encodedFilePath"],[20,27,9,33],[20,30,9,36,"decodeURIComponent"],[20,48,9,54],[20,49,9,55,"searchParams"],[20,61,9,67],[20,62,9,68,"get"],[20,65,9,71],[20,66,9,72],[20,81,9,87],[20,82,9,88],[20,83,9,89],[21,8,10,12],[21,15,10,19,"getBasename"],[21,26,10,30],[21,27,10,31,"encodedFilePath"],[21,42,10,46],[21,43,10,47],[22,6,11,8],[23,4,12,4],[24,4,13,4],[24,11,13,11,"getBasename"],[24,22,13,22],[24,23,13,23,"pathname"],[24,31,13,31],[24,32,13,32],[25,2,14,0],[26,2,15,0],[26,11,15,9,"getBasename"],[26,22,15,20,"getBasename"],[26,23,15,21,"pathname"],[26,31,15,29],[26,33,15,31],[27,4,16,4],[27,11,16,11,"pathname"],[27,19,16,19],[27,20,16,20,"substring"],[27,29,16,29],[27,30,16,30,"pathname"],[27,38,16,38],[27,39,16,39,"lastIndexOf"],[27,50,16,50],[27,51,16,51],[27,54,16,54],[27,55,16,55],[27,58,16,58],[27,59,16,59],[27,60,16,60],[28,2,17,0],[29,2,18,7],[29,11,18,16,"getFileExtension"],[29,27,18,32,"getFileExtension"],[29,28,18,33,"url"],[29,31,18,36],[29,33,18,38],[30,4,19,4],[30,8,19,10,"filename"],[30,16,19,18],[30,19,19,21,"getFilename"],[30,30,19,32],[30,31,19,33,"url"],[30,34,19,36],[30,35,19,37],[31,4,20,4],[31,8,20,10,"dotIndex"],[31,16,20,18],[31,19,20,21,"filename"],[31,27,20,29],[31,28,20,30,"lastIndexOf"],[31,39,20,41],[31,40,20,42],[31,43,20,45],[31,44,20,46],[32,4,21,4],[33,4,22,4],[33,11,22,11,"dotIndex"],[33,19,22,19],[33,22,22,22],[33,23,22,23],[33,26,22,26,"filename"],[33,34,22,34],[33,35,22,35,"substring"],[33,44,22,44],[33,45,22,45,"dotIndex"],[33,53,22,53],[33,54,22,54],[33,57,22,57],[33,59,22,59],[34,2,23,0],[35,2,24,0],[36,0,25,0],[37,0,26,0],[38,0,27,0],[39,0,28,0],[40,0,29,0],[41,0,30,0],[42,0,31,0],[43,0,32,0],[44,0,33,0],[45,0,34,0],[46,2,35,7],[46,11,35,16,"getManifestBaseUrl"],[46,29,35,34,"getManifestBaseUrl"],[46,30,35,35,"manifestUrl"],[46,41,35,46],[46,43,35,48],[47,4,36,4],[47,8,36,10,"urlObject"],[47,17,36,19],[47,20,36,22],[47,24,36,26,"URL"],[47,27,36,29],[47,28,36,30,"manifestUrl"],[47,39,36,41],[47,40,36,42],[48,4,37,4],[48,8,37,8,"nextProtocol"],[48,20,37,20],[48,23,37,23,"urlObject"],[48,32,37,32],[48,33,37,33,"protocol"],[48,41,37,41],[49,4,38,4],[50,4,39,4],[50,8,39,8,"nextProtocol"],[50,20,39,20],[50,25,39,25],[50,31,39,31],[50,33,39,33],[51,6,40,8,"nextProtocol"],[51,18,40,20],[51,21,40,23],[51,28,40,30],[52,4,41,4],[52,5,41,5],[52,11,42,9],[52,15,42,13,"nextProtocol"],[52,27,42,25],[52,32,42,30],[52,39,42,37],[52,41,42,39],[53,6,43,8,"nextProtocol"],[53,18,43,20],[53,21,43,23],[53,29,43,31],[54,4,44,4],[55,4,45,4,"urlObject"],[55,13,45,13],[55,14,45,14,"protocol"],[55,22,45,22],[55,25,45,25,"nextProtocol"],[55,37,45,37],[56,4,46,4],[57,4,47,4],[57,8,47,10,"directory"],[57,17,47,19],[57,20,47,22,"urlObject"],[57,29,47,31],[57,30,47,32,"pathname"],[57,38,47,40],[57,39,47,41,"substring"],[57,48,47,50],[57,49,47,51],[57,50,47,52],[57,52,47,54,"urlObject"],[57,61,47,63],[57,62,47,64,"pathname"],[57,70,47,72],[57,71,47,73,"lastIndexOf"],[57,82,47,84],[57,83,47,85],[57,86,47,88],[57,87,47,89],[57,90,47,92],[57,91,47,93],[57,92,47,94],[58,4,48,4,"urlObject"],[58,13,48,13],[58,14,48,14,"pathname"],[58,22,48,22],[58,25,48,25,"directory"],[58,34,48,34],[59,4,49,4,"urlObject"],[59,13,49,13],[59,14,49,14,"search"],[59,20,49,20],[59,23,49,23],[59,25,49,25],[60,4,50,4,"urlObject"],[60,13,50,13],[60,14,50,14,"hash"],[60,18,50,18],[60,21,50,21],[60,23,50,23],[61,4,51,4],[62,4,52,4],[63,4,53,4],[63,11,53,11,"urlObject"],[63,20,53,20],[63,21,53,21,"protocol"],[63,29,53,29],[63,34,53,34,"nextProtocol"],[63,46,53,46],[63,49,54,10,"urlObject"],[63,58,54,19],[63,59,54,20,"href"],[63,63,54,24],[63,64,54,25,"replace"],[63,71,54,32],[63,72,54,33,"urlObject"],[63,81,54,42],[63,82,54,43,"protocol"],[63,90,54,51],[63,92,54,53,"nextProtocol"],[63,104,54,65],[63,105,54,66],[63,108,55,10,"urlObject"],[63,117,55,19],[63,118,55,20,"href"],[63,122,55,24],[64,2,56,0],[65,0,56,1],[65,3]],"functionMap":{"names":["<global>","getFilename","getBasename","getFileExtension","getManifestBaseUrl"],"mappings":"AAA,OC;CDa;AEC;CFE;OGC;CHK;OIY;CJqB"},"hasCjsExports":false},"type":"js/module"}]}