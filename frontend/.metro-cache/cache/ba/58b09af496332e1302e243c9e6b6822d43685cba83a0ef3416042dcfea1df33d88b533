{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"CodedError\", {\n    enumerable: true,\n    get: function () {\n      return CodedError;\n    }\n  });\n  /**\n   * A general error class that should be used for all errors in Expo modules.\n   * Guarantees a `code` field that can be used to differentiate between different\n   * types of errors without further subclassing Error.\n   */\n  class CodedError extends Error {\n    constructor(code, message) {\n      super(message);\n      this.code = code;\n    }\n  }\n});","lineCount":24,"map":[[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"CodedError"],[10,23,6,0],[11,4,6,0],[12,2,6,0],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,2,6,7],[18,8,6,13,"CodedError"],[18,18,6,23],[18,27,6,32,"Error"],[18,32,6,37],[18,33,6,38],[19,4,10,2,"constructor"],[19,15,10,13,"constructor"],[19,16,10,14,"code"],[19,20,10,26],[19,22,10,28,"message"],[19,29,10,43],[19,31,10,45],[20,6,11,4],[20,11,11,9],[20,12,11,10,"message"],[20,19,11,17],[20,20,11,18],[21,6,12,4],[21,10,12,8],[21,11,12,9,"code"],[21,15,12,13],[21,18,12,16,"code"],[21,22,12,20],[22,4,13,2],[23,2,14,0],[24,0,14,1],[24,3]],"functionMap":{"names":["<global>","CodedError","constructor"],"mappings":"AAA;OCK;ECI;GDG;CDC"},"hasCjsExports":false},"type":"js/module"}]}