{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./processColor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":21},"end":{"line":16,"column":46}}],"key":"x3M7MCYAfAbRBHXsfUrvU5X7AMk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return processBackgroundImage;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var processColor = require(_dependencyMap[1], \"./processColor\").default;\n  var DIRECTION_KEYWORD_REGEX = /^to\\s+(?:top|bottom|left|right)(?:\\s+(?:top|bottom|left|right))?/i;\n  var ANGLE_UNIT_REGEX = /^([+-]?\\d*\\.?\\d+)(deg|grad|rad|turn)$/i;\n  var DEFAULT_DIRECTION = {\n    type: 'angle',\n    value: 180\n  };\n  function processBackgroundImage(backgroundImage) {\n    var result = [];\n    if (backgroundImage == null) {\n      return result;\n    }\n    if (typeof backgroundImage === 'string') {\n      result = parseCSSLinearGradient(backgroundImage.replace(/\\n/g, ' '));\n    } else if (Array.isArray(backgroundImage)) {\n      for (var bgImage of backgroundImage) {\n        var processedColorStops = [];\n        for (var index = 0; index < bgImage.colorStops.length; index++) {\n          var colorStop = bgImage.colorStops[index];\n          var positions = colorStop.positions;\n          if (colorStop.color == null && Array.isArray(positions) && positions.length === 1) {\n            var position = positions[0];\n            if (typeof position === 'number' || typeof position === 'string' && position.endsWith('%')) {\n              processedColorStops.push({\n                color: null,\n                position\n              });\n            } else {\n              return [];\n            }\n          } else {\n            var processedColor = processColor(colorStop.color);\n            if (processedColor == null) {\n              return [];\n            }\n            if (positions != null && positions.length > 0) {\n              for (var _position of positions) {\n                if (typeof _position === 'number' || typeof _position === 'string' && _position.endsWith('%')) {\n                  processedColorStops.push({\n                    color: processedColor,\n                    position: _position\n                  });\n                } else {\n                  return [];\n                }\n              }\n            } else {\n              processedColorStops.push({\n                color: processedColor,\n                position: null\n              });\n            }\n          }\n        }\n        var direction = DEFAULT_DIRECTION;\n        var bgDirection = bgImage.direction != null ? bgImage.direction.toLowerCase() : null;\n        if (bgDirection != null) {\n          if (ANGLE_UNIT_REGEX.test(bgDirection)) {\n            var parsedAngle = getAngleInDegrees(bgDirection);\n            if (parsedAngle != null) {\n              direction = {\n                type: 'angle',\n                value: parsedAngle\n              };\n            } else {\n              return [];\n            }\n          } else if (DIRECTION_KEYWORD_REGEX.test(bgDirection)) {\n            var parsedDirection = getDirectionForKeyword(bgDirection);\n            if (parsedDirection != null) {\n              direction = parsedDirection;\n            } else {\n              return [];\n            }\n          } else {\n            return [];\n          }\n        }\n        result = result.concat({\n          type: 'linearGradient',\n          direction,\n          colorStops: processedColorStops\n        });\n      }\n    }\n    return result;\n  }\n  function parseCSSLinearGradient(cssString) {\n    var gradients = [];\n    var match;\n    var linearGradientRegex = /linear-gradient\\s*\\(((?:\\([^)]*\\)|[^())])*)\\)/gi;\n    while (match = linearGradientRegex.exec(cssString)) {\n      var gradientContent = match[1];\n      var parts = gradientContent.split(',');\n      var direction = DEFAULT_DIRECTION;\n      var trimmedDirection = parts[0].trim().toLowerCase();\n      if (ANGLE_UNIT_REGEX.test(trimmedDirection)) {\n        var parsedAngle = getAngleInDegrees(trimmedDirection);\n        if (parsedAngle != null) {\n          direction = {\n            type: 'angle',\n            value: parsedAngle\n          };\n          parts.shift();\n        } else {\n          return [];\n        }\n      } else if (DIRECTION_KEYWORD_REGEX.test(trimmedDirection)) {\n        var parsedDirection = getDirectionForKeyword(trimmedDirection);\n        if (parsedDirection != null) {\n          direction = parsedDirection;\n          parts.shift();\n        } else {\n          return [];\n        }\n      }\n      var colorStopsString = parts.join(',');\n      var colorStops = [];\n      var stops = colorStopsString.split(/,(?![^(]*\\))/);\n      var prevStop = null;\n      for (var i = 0; i < stops.length; i++) {\n        var stop = stops[i];\n        var trimmedStop = stop.trim().toLowerCase();\n        var colorStopParts = trimmedStop.match(/\\S+\\([^)]*\\)|\\S+/g);\n        if (colorStopParts == null) {\n          return [];\n        }\n        if (colorStopParts.length === 3) {\n          var color = colorStopParts[0];\n          var position1 = getPositionFromCSSValue(colorStopParts[1]);\n          var position2 = getPositionFromCSSValue(colorStopParts[2]);\n          var processedColor = processColor(color);\n          if (processedColor == null) {\n            return [];\n          }\n          if (position1 == null || position2 == null) {\n            return [];\n          }\n          colorStops.push({\n            color: processedColor,\n            position: position1\n          });\n          colorStops.push({\n            color: processedColor,\n            position: position2\n          });\n        } else if (colorStopParts.length === 2) {\n          var _color = colorStopParts[0];\n          var position = getPositionFromCSSValue(colorStopParts[1]);\n          var _processedColor = processColor(_color);\n          if (_processedColor == null) {\n            return [];\n          }\n          if (position == null) {\n            return [];\n          }\n          colorStops.push({\n            color: _processedColor,\n            position\n          });\n        } else if (colorStopParts.length === 1) {\n          var _position2 = getPositionFromCSSValue(colorStopParts[0]);\n          if (_position2 != null) {\n            if (prevStop != null && prevStop.length === 1 && getPositionFromCSSValue(prevStop[0]) != null || i === stops.length - 1 || i === 0) {\n              return [];\n            }\n            colorStops.push({\n              color: null,\n              position: _position2\n            });\n          } else {\n            var _processedColor2 = processColor(colorStopParts[0]);\n            if (_processedColor2 == null) {\n              return [];\n            }\n            colorStops.push({\n              color: _processedColor2,\n              position: null\n            });\n          }\n        } else {\n          return [];\n        }\n        prevStop = colorStopParts;\n      }\n      gradients.push({\n        type: 'linearGradient',\n        direction,\n        colorStops\n      });\n    }\n    return gradients;\n  }\n  function getDirectionForKeyword(direction) {\n    if (direction == null) {\n      return null;\n    }\n    var normalized = direction.replace(/\\s+/g, ' ').toLowerCase();\n    switch (normalized) {\n      case 'to top':\n        return {\n          type: 'angle',\n          value: 0\n        };\n      case 'to right':\n        return {\n          type: 'angle',\n          value: 90\n        };\n      case 'to bottom':\n        return {\n          type: 'angle',\n          value: 180\n        };\n      case 'to left':\n        return {\n          type: 'angle',\n          value: 270\n        };\n      case 'to top right':\n      case 'to right top':\n        return {\n          type: 'keyword',\n          value: 'to top right'\n        };\n      case 'to bottom right':\n      case 'to right bottom':\n        return {\n          type: 'keyword',\n          value: 'to bottom right'\n        };\n      case 'to top left':\n      case 'to left top':\n        return {\n          type: 'keyword',\n          value: 'to top left'\n        };\n      case 'to bottom left':\n      case 'to left bottom':\n        return {\n          type: 'keyword',\n          value: 'to bottom left'\n        };\n      default:\n        return null;\n    }\n  }\n  function getAngleInDegrees(angle) {\n    if (angle == null) {\n      return null;\n    }\n    var match = angle.match(ANGLE_UNIT_REGEX);\n    if (!match) {\n      return null;\n    }\n    var _match = (0, _slicedToArray.default)(match, 3),\n      value = _match[1],\n      unit = _match[2];\n    var numericValue = parseFloat(value);\n    switch (unit) {\n      case 'deg':\n        return numericValue;\n      case 'grad':\n        return numericValue * 0.9;\n      case 'rad':\n        return numericValue * 180 / Math.PI;\n      case 'turn':\n        return numericValue * 360;\n      default:\n        return null;\n    }\n  }\n  function getPositionFromCSSValue(position) {\n    if (position.endsWith('px')) {\n      return parseFloat(position);\n    }\n    if (position.endsWith('%')) {\n      return position;\n    }\n  }\n});","lineCount":300,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13],[7,11,11,13,"_interopDefault"],[7,27,11,13,"e"],[7,28,11,13],[8,4,11,13],[8,11,11,13,"e"],[8,12,11,13],[8,16,11,13,"e"],[8,17,11,13],[8,18,11,13,"__esModule"],[8,28,11,13],[8,31,11,13,"e"],[8,32,11,13],[9,6,11,13,"default"],[9,13,11,13],[9,15,11,13,"e"],[10,4,11,13],[11,2,11,13],[12,2,44,15,"Object"],[12,8,44,15],[12,9,44,15,"defineProperty"],[12,23,44,15],[12,24,44,15,"exports"],[12,31,44,15],[13,4,44,15,"enumerable"],[13,14,44,15],[14,4,44,15,"get"],[14,7,44,15],[14,18,44,15,"get"],[14,19,44,15],[15,6,44,15],[15,13,44,15,"processBackgroundImage"],[15,35,44,15],[16,4,44,15],[17,2,44,15],[18,2,151,1],[18,6,151,1,"_babelRuntimeHelpersSlicedToArray"],[18,39,151,1],[18,42,151,1,"require"],[18,49,151,1],[18,50,151,1,"_dependencyMap"],[18,64,151,1],[19,2,151,1],[19,6,151,1,"_slicedToArray"],[19,20,151,1],[19,23,151,1,"_interopDefault"],[19,38,151,1],[19,39,151,1,"_babelRuntimeHelpersSlicedToArray"],[19,72,151,1],[20,2,16,0],[20,6,16,6,"processColor"],[20,18,16,18],[20,21,16,21,"require"],[20,28,16,28],[20,29,16,28,"_dependencyMap"],[20,43,16,28],[20,64,16,45],[20,65,16,46],[20,66,16,47,"default"],[20,73,16,54],[21,2,17,0],[21,6,17,6,"DIRECTION_KEYWORD_REGEX"],[21,29,17,29],[21,32,18,2],[21,99,18,69],[22,2,19,0],[22,6,19,6,"ANGLE_UNIT_REGEX"],[22,22,19,22],[22,25,19,25],[22,65,19,65],[23,2,39,0],[23,6,39,6,"DEFAULT_DIRECTION"],[23,23,39,48],[23,26,39,51],[24,4,40,2,"type"],[24,8,40,6],[24,10,40,8],[24,17,40,15],[25,4,41,2,"value"],[25,9,41,7],[25,11,41,9],[26,2,42,0],[26,3,42,1],[27,2,44,15],[27,11,44,24,"processBackgroundImage"],[27,33,44,46,"processBackgroundImage"],[27,34,45,2,"backgroundImage"],[27,49,45,60],[27,51,46,39],[28,4,47,2],[28,8,47,6,"result"],[28,14,47,49],[28,17,47,52],[28,19,47,54],[29,4,48,2],[29,8,48,6,"backgroundImage"],[29,23,48,21],[29,27,48,25],[29,31,48,29],[29,33,48,31],[30,6,49,4],[30,13,49,11,"result"],[30,19,49,17],[31,4,50,2],[32,4,52,2],[32,8,52,6],[32,15,52,13,"backgroundImage"],[32,30,52,28],[32,35,52,33],[32,43,52,41],[32,45,52,43],[33,6,53,4,"result"],[33,12,53,10],[33,15,53,13,"parseCSSLinearGradient"],[33,37,53,35],[33,38,53,36,"backgroundImage"],[33,53,53,51],[33,54,53,52,"replace"],[33,61,53,59],[33,62,53,60],[33,67,53,65],[33,69,53,67],[33,72,53,70],[33,73,53,71],[33,74,53,72],[34,4,54,2],[34,5,54,3],[34,11,54,9],[34,15,54,13,"Array"],[34,20,54,18],[34,21,54,19,"isArray"],[34,28,54,26],[34,29,54,27,"backgroundImage"],[34,44,54,42],[34,45,54,43],[34,47,54,45],[35,6,55,4],[35,11,55,9],[35,15,55,15,"bgImage"],[35,22,55,22],[35,26,55,26,"backgroundImage"],[35,41,55,41],[35,43,55,43],[36,8,56,6],[36,12,56,12,"processedColorStops"],[36,31,59,8],[36,34,59,11],[36,36,59,13],[37,8,60,6],[37,13,60,11],[37,17,60,15,"index"],[37,22,60,20],[37,25,60,23],[37,26,60,24],[37,28,60,26,"index"],[37,33,60,31],[37,36,60,34,"bgImage"],[37,43,60,41],[37,44,60,42,"colorStops"],[37,54,60,52],[37,55,60,53,"length"],[37,61,60,59],[37,63,60,61,"index"],[37,68,60,66],[37,70,60,68],[37,72,60,70],[38,10,61,8],[38,14,61,14,"colorStop"],[38,23,61,23],[38,26,61,26,"bgImage"],[38,33,61,33],[38,34,61,34,"colorStops"],[38,44,61,44],[38,45,61,45,"index"],[38,50,61,50],[38,51,61,51],[39,10,62,8],[39,14,62,14,"positions"],[39,23,62,23],[39,26,62,26,"colorStop"],[39,35,62,35],[39,36,62,36,"positions"],[39,45,62,45],[40,10,64,8],[40,14,65,10,"colorStop"],[40,23,65,19],[40,24,65,20,"color"],[40,29,65,25],[40,33,65,29],[40,37,65,33],[40,41,66,10,"Array"],[40,46,66,15],[40,47,66,16,"isArray"],[40,54,66,23],[40,55,66,24,"positions"],[40,64,66,33],[40,65,66,34],[40,69,67,10,"positions"],[40,78,67,19],[40,79,67,20,"length"],[40,85,67,26],[40,90,67,31],[40,91,67,32],[40,93,68,10],[41,12,69,10],[41,16,69,16,"position"],[41,24,69,24],[41,27,69,27,"positions"],[41,36,69,36],[41,37,69,37],[41,38,69,38],[41,39,69,39],[42,12,70,10],[42,16,71,12],[42,23,71,19,"position"],[42,31,71,27],[42,36,71,32],[42,44,71,40],[42,48,72,13],[42,55,72,20,"position"],[42,63,72,28],[42,68,72,33],[42,76,72,41],[42,80,72,45,"position"],[42,88,72,53],[42,89,72,54,"endsWith"],[42,97,72,62],[42,98,72,63],[42,101,72,66],[42,102,72,68],[42,104,73,12],[43,14,74,12,"processedColorStops"],[43,33,74,31],[43,34,74,32,"push"],[43,38,74,36],[43,39,74,37],[44,16,75,14,"color"],[44,21,75,19],[44,23,75,21],[44,27,75,25],[45,16,76,14,"position"],[46,14,77,12],[46,15,77,13],[46,16,77,14],[47,12,78,10],[47,13,78,11],[47,19,78,17],[48,14,80,12],[48,21,80,19],[48,23,80,21],[49,12,81,10],[50,10,82,8],[50,11,82,9],[50,17,82,15],[51,12,83,10],[51,16,83,16,"processedColor"],[51,30,83,30],[51,33,83,33,"processColor"],[51,45,83,45],[51,46,83,46,"colorStop"],[51,55,83,55],[51,56,83,56,"color"],[51,61,83,61],[51,62,83,62],[52,12,84,10],[52,16,84,14,"processedColor"],[52,30,84,28],[52,34,84,32],[52,38,84,36],[52,40,84,38],[53,14,86,12],[53,21,86,19],[53,23,86,21],[54,12,87,10],[55,12,88,10],[55,16,88,14,"positions"],[55,25,88,23],[55,29,88,27],[55,33,88,31],[55,37,88,35,"positions"],[55,46,88,44],[55,47,88,45,"length"],[55,53,88,51],[55,56,88,54],[55,57,88,55],[55,59,88,57],[56,14,89,12],[56,19,89,17],[56,23,89,23,"position"],[56,32,89,31],[56,36,89,35,"positions"],[56,45,89,44],[56,47,89,46],[57,16,90,14],[57,20,91,16],[57,27,91,23,"position"],[57,36,91,31],[57,41,91,36],[57,49,91,44],[57,53,92,17],[57,60,92,24,"position"],[57,69,92,32],[57,74,92,37],[57,82,92,45],[57,86,92,49,"position"],[57,95,92,57],[57,96,92,58,"endsWith"],[57,104,92,66],[57,105,92,67],[57,108,92,70],[57,109,92,72],[57,111,93,16],[58,18,94,16,"processedColorStops"],[58,37,94,35],[58,38,94,36,"push"],[58,42,94,40],[58,43,94,41],[59,20,95,18,"color"],[59,25,95,23],[59,27,95,25,"processedColor"],[59,41,95,39],[60,20,96,18,"position"],[60,28,96,26],[60,30,96,18,"position"],[61,18,97,16],[61,19,97,17],[61,20,97,18],[62,16,98,14],[62,17,98,15],[62,23,98,21],[63,18,100,16],[63,25,100,23],[63,27,100,25],[64,16,101,14],[65,14,102,12],[66,12,103,10],[66,13,103,11],[66,19,103,17],[67,14,104,12,"processedColorStops"],[67,33,104,31],[67,34,104,32,"push"],[67,38,104,36],[67,39,104,37],[68,16,105,14,"color"],[68,21,105,19],[68,23,105,21,"processedColor"],[68,37,105,35],[69,16,106,14,"position"],[69,24,106,22],[69,26,106,24],[70,14,107,12],[70,15,107,13],[70,16,107,14],[71,12,108,10],[72,10,109,8],[73,8,110,6],[74,8,112,6],[74,12,112,10,"direction"],[74,21,112,44],[74,24,112,47,"DEFAULT_DIRECTION"],[74,41,112,64],[75,8,113,6],[75,12,113,12,"bgDirection"],[75,23,113,23],[75,26,114,8,"bgImage"],[75,33,114,15],[75,34,114,16,"direction"],[75,43,114,25],[75,47,114,29],[75,51,114,33],[75,54,114,36,"bgImage"],[75,61,114,43],[75,62,114,44,"direction"],[75,71,114,53],[75,72,114,54,"toLowerCase"],[75,83,114,65],[75,84,114,66],[75,85,114,67],[75,88,114,70],[75,92,114,74],[76,8,116,6],[76,12,116,10,"bgDirection"],[76,23,116,21],[76,27,116,25],[76,31,116,29],[76,33,116,31],[77,10,117,8],[77,14,117,12,"ANGLE_UNIT_REGEX"],[77,30,117,28],[77,31,117,29,"test"],[77,35,117,33],[77,36,117,34,"bgDirection"],[77,47,117,45],[77,48,117,46],[77,50,117,48],[78,12,118,10],[78,16,118,16,"parsedAngle"],[78,27,118,27],[78,30,118,30,"getAngleInDegrees"],[78,47,118,47],[78,48,118,48,"bgDirection"],[78,59,118,59],[78,60,118,60],[79,12,119,10],[79,16,119,14,"parsedAngle"],[79,27,119,25],[79,31,119,29],[79,35,119,33],[79,37,119,35],[80,14,120,12,"direction"],[80,23,120,21],[80,26,120,24],[81,16,121,14,"type"],[81,20,121,18],[81,22,121,20],[81,29,121,27],[82,16,122,14,"value"],[82,21,122,19],[82,23,122,21,"parsedAngle"],[83,14,123,12],[83,15,123,13],[84,12,124,10],[84,13,124,11],[84,19,124,17],[85,14,126,12],[85,21,126,19],[85,23,126,21],[86,12,127,10],[87,10,128,8],[87,11,128,9],[87,17,128,15],[87,21,128,19,"DIRECTION_KEYWORD_REGEX"],[87,44,128,42],[87,45,128,43,"test"],[87,49,128,47],[87,50,128,48,"bgDirection"],[87,61,128,59],[87,62,128,60],[87,64,128,62],[88,12,129,10],[88,16,129,16,"parsedDirection"],[88,31,129,31],[88,34,129,34,"getDirectionForKeyword"],[88,56,129,56],[88,57,129,57,"bgDirection"],[88,68,129,68],[88,69,129,69],[89,12,130,10],[89,16,130,14,"parsedDirection"],[89,31,130,29],[89,35,130,33],[89,39,130,37],[89,41,130,39],[90,14,131,12,"direction"],[90,23,131,21],[90,26,131,24,"parsedDirection"],[90,41,131,39],[91,12,132,10],[91,13,132,11],[91,19,132,17],[92,14,134,12],[92,21,134,19],[92,23,134,21],[93,12,135,10],[94,10,136,8],[94,11,136,9],[94,17,136,15],[95,12,138,10],[95,19,138,17],[95,21,138,19],[96,10,139,8],[97,8,140,6],[98,8,142,6,"result"],[98,14,142,12],[98,17,142,15,"result"],[98,23,142,21],[98,24,142,22,"concat"],[98,30,142,28],[98,31,142,29],[99,10,143,8,"type"],[99,14,143,12],[99,16,143,14],[99,32,143,30],[100,10,144,8,"direction"],[100,19,144,17],[101,10,145,8,"colorStops"],[101,20,145,18],[101,22,145,20,"processedColorStops"],[102,8,146,6],[102,9,146,7],[102,10,146,8],[103,6,147,4],[104,4,148,2],[105,4,150,2],[105,11,150,9,"result"],[105,17,150,15],[106,2,151,0],[107,2,153,0],[107,11,153,9,"parseCSSLinearGradient"],[107,33,153,31,"parseCSSLinearGradient"],[107,34,154,2,"cssString"],[107,43,154,19],[107,45,155,39],[108,4,156,2],[108,8,156,8,"gradients"],[108,17,156,17],[108,20,156,20],[108,22,156,22],[109,4,157,2],[109,8,157,6,"match"],[109,13,157,11],[110,4,160,2],[110,8,160,8,"linearGradientRegex"],[110,27,160,27],[110,30,160,30],[110,79,160,79],[111,4,162,2],[111,11,162,10,"match"],[111,16,162,15],[111,19,162,18,"linearGradientRegex"],[111,38,162,37],[111,39,162,38,"exec"],[111,43,162,42],[111,44,162,43,"cssString"],[111,53,162,52],[111,54,162,53],[111,56,162,56],[112,6,163,4],[112,10,163,10,"gradientContent"],[112,25,163,25],[112,28,163,28,"match"],[112,33,163,33],[112,34,163,34],[112,35,163,35],[112,36,163,36],[113,6,164,4],[113,10,164,10,"parts"],[113,15,164,15],[113,18,164,18,"gradientContent"],[113,33,164,33],[113,34,164,34,"split"],[113,39,164,39],[113,40,164,40],[113,43,164,43],[113,44,164,44],[114,6,165,4],[114,10,165,8,"direction"],[114,19,165,42],[114,22,165,45,"DEFAULT_DIRECTION"],[114,39,165,62],[115,6,166,4],[115,10,166,10,"trimmedDirection"],[115,26,166,26],[115,29,166,29,"parts"],[115,34,166,34],[115,35,166,35],[115,36,166,36],[115,37,166,37],[115,38,166,38,"trim"],[115,42,166,42],[115,43,166,43],[115,44,166,44],[115,45,166,45,"toLowerCase"],[115,56,166,56],[115,57,166,57],[115,58,166,58],[116,6,168,4],[116,10,168,8,"ANGLE_UNIT_REGEX"],[116,26,168,24],[116,27,168,25,"test"],[116,31,168,29],[116,32,168,30,"trimmedDirection"],[116,48,168,46],[116,49,168,47],[116,51,168,49],[117,8,169,6],[117,12,169,12,"parsedAngle"],[117,23,169,23],[117,26,169,26,"getAngleInDegrees"],[117,43,169,43],[117,44,169,44,"trimmedDirection"],[117,60,169,60],[117,61,169,61],[118,8,170,6],[118,12,170,10,"parsedAngle"],[118,23,170,21],[118,27,170,25],[118,31,170,29],[118,33,170,31],[119,10,171,8,"direction"],[119,19,171,17],[119,22,171,20],[120,12,172,10,"type"],[120,16,172,14],[120,18,172,16],[120,25,172,23],[121,12,173,10,"value"],[121,17,173,15],[121,19,173,17,"parsedAngle"],[122,10,174,8],[122,11,174,9],[123,10,175,8,"parts"],[123,15,175,13],[123,16,175,14,"shift"],[123,21,175,19],[123,22,175,20],[123,23,175,21],[124,8,176,6],[124,9,176,7],[124,15,176,13],[125,10,178,8],[125,17,178,15],[125,19,178,17],[126,8,179,6],[127,6,180,4],[127,7,180,5],[127,13,180,11],[127,17,180,15,"DIRECTION_KEYWORD_REGEX"],[127,40,180,38],[127,41,180,39,"test"],[127,45,180,43],[127,46,180,44,"trimmedDirection"],[127,62,180,60],[127,63,180,61],[127,65,180,63],[128,8,181,6],[128,12,181,12,"parsedDirection"],[128,27,181,27],[128,30,181,30,"getDirectionForKeyword"],[128,52,181,52],[128,53,181,53,"trimmedDirection"],[128,69,181,69],[128,70,181,70],[129,8,182,6],[129,12,182,10,"parsedDirection"],[129,27,182,25],[129,31,182,29],[129,35,182,33],[129,37,182,35],[130,10,183,8,"direction"],[130,19,183,17],[130,22,183,20,"parsedDirection"],[130,37,183,35],[131,10,184,8,"parts"],[131,15,184,13],[131,16,184,14,"shift"],[131,21,184,19],[131,22,184,20],[131,23,184,21],[132,8,185,6],[132,9,185,7],[132,15,185,13],[133,10,187,8],[133,17,187,15],[133,19,187,17],[134,8,188,6],[135,6,189,4],[136,6,191,4],[136,10,191,10,"colorStopsString"],[136,26,191,26],[136,29,191,29,"parts"],[136,34,191,34],[136,35,191,35,"join"],[136,39,191,39],[136,40,191,40],[136,43,191,43],[136,44,191,44],[137,6,192,4],[137,10,192,10,"colorStops"],[137,20,192,20],[137,23,192,23],[137,25,192,25],[138,6,194,4],[138,10,194,10,"stops"],[138,15,194,15],[138,18,194,18,"colorStopsString"],[138,34,194,34],[138,35,194,35,"split"],[138,40,194,40],[138,41,194,41],[138,55,194,55],[138,56,194,56],[139,6,195,4],[139,10,195,8,"prevStop"],[139,18,195,16],[139,21,195,19],[139,25,195,23],[140,6,196,4],[140,11,196,9],[140,15,196,13,"i"],[140,16,196,14],[140,19,196,17],[140,20,196,18],[140,22,196,20,"i"],[140,23,196,21],[140,26,196,24,"stops"],[140,31,196,29],[140,32,196,30,"length"],[140,38,196,36],[140,40,196,38,"i"],[140,41,196,39],[140,43,196,41],[140,45,196,43],[141,8,197,6],[141,12,197,12,"stop"],[141,16,197,16],[141,19,197,19,"stops"],[141,24,197,24],[141,25,197,25,"i"],[141,26,197,26],[141,27,197,27],[142,8,198,6],[142,12,198,12,"trimmedStop"],[142,23,198,23],[142,26,198,26,"stop"],[142,30,198,30],[142,31,198,31,"trim"],[142,35,198,35],[142,36,198,36],[142,37,198,37],[142,38,198,38,"toLowerCase"],[142,49,198,49],[142,50,198,50],[142,51,198,51],[143,8,200,6],[143,12,200,12,"colorStopParts"],[143,26,200,26],[143,29,200,29,"trimmedStop"],[143,40,200,40],[143,41,200,41,"match"],[143,46,200,46],[143,47,200,47],[143,66,200,66],[143,67,200,67],[144,8,201,6],[144,12,201,10,"colorStopParts"],[144,26,201,24],[144,30,201,28],[144,34,201,32],[144,36,201,34],[145,10,203,8],[145,17,203,15],[145,19,203,17],[146,8,204,6],[147,8,206,6],[147,12,206,10,"colorStopParts"],[147,26,206,24],[147,27,206,25,"length"],[147,33,206,31],[147,38,206,36],[147,39,206,37],[147,41,206,39],[148,10,207,8],[148,14,207,14,"color"],[148,19,207,19],[148,22,207,22,"colorStopParts"],[148,36,207,36],[148,37,207,37],[148,38,207,38],[148,39,207,39],[149,10,208,8],[149,14,208,14,"position1"],[149,23,208,23],[149,26,208,26,"getPositionFromCSSValue"],[149,49,208,49],[149,50,208,50,"colorStopParts"],[149,64,208,64],[149,65,208,65],[149,66,208,66],[149,67,208,67],[149,68,208,68],[150,10,209,8],[150,14,209,14,"position2"],[150,23,209,23],[150,26,209,26,"getPositionFromCSSValue"],[150,49,209,49],[150,50,209,50,"colorStopParts"],[150,64,209,64],[150,65,209,65],[150,66,209,66],[150,67,209,67],[150,68,209,68],[151,10,210,8],[151,14,210,14,"processedColor"],[151,28,210,28],[151,31,210,31,"processColor"],[151,43,210,43],[151,44,210,44,"color"],[151,49,210,49],[151,50,210,50],[152,10,211,8],[152,14,211,12,"processedColor"],[152,28,211,26],[152,32,211,30],[152,36,211,34],[152,38,211,36],[153,12,213,10],[153,19,213,17],[153,21,213,19],[154,10,214,8],[155,10,216,8],[155,14,216,12,"position1"],[155,23,216,21],[155,27,216,25],[155,31,216,29],[155,35,216,33,"position2"],[155,44,216,42],[155,48,216,46],[155,52,216,50],[155,54,216,52],[156,12,218,10],[156,19,218,17],[156,21,218,19],[157,10,219,8],[158,10,221,8,"colorStops"],[158,20,221,18],[158,21,221,19,"push"],[158,25,221,23],[158,26,221,24],[159,12,222,10,"color"],[159,17,222,15],[159,19,222,17,"processedColor"],[159,33,222,31],[160,12,223,10,"position"],[160,20,223,18],[160,22,223,20,"position1"],[161,10,224,8],[161,11,224,9],[161,12,224,10],[162,10,225,8,"colorStops"],[162,20,225,18],[162,21,225,19,"push"],[162,25,225,23],[162,26,225,24],[163,12,226,10,"color"],[163,17,226,15],[163,19,226,17,"processedColor"],[163,33,226,31],[164,12,227,10,"position"],[164,20,227,18],[164,22,227,20,"position2"],[165,10,228,8],[165,11,228,9],[165,12,228,10],[166,8,229,6],[166,9,229,7],[166,15,231,11],[166,19,231,15,"colorStopParts"],[166,33,231,29],[166,34,231,30,"length"],[166,40,231,36],[166,45,231,41],[166,46,231,42],[166,48,231,44],[167,10,232,8],[167,14,232,14,"color"],[167,20,232,19],[167,23,232,22,"colorStopParts"],[167,37,232,36],[167,38,232,37],[167,39,232,38],[167,40,232,39],[168,10,233,8],[168,14,233,14,"position"],[168,22,233,22],[168,25,233,25,"getPositionFromCSSValue"],[168,48,233,48],[168,49,233,49,"colorStopParts"],[168,63,233,63],[168,64,233,64],[168,65,233,65],[168,66,233,66],[168,67,233,67],[169,10,234,8],[169,14,234,14,"processedColor"],[169,29,234,28],[169,32,234,31,"processColor"],[169,44,234,43],[169,45,234,44,"color"],[169,51,234,49],[169,52,234,50],[170,10,235,8],[170,14,235,12,"processedColor"],[170,29,235,26],[170,33,235,30],[170,37,235,34],[170,39,235,36],[171,12,237,10],[171,19,237,17],[171,21,237,19],[172,10,238,8],[173,10,239,8],[173,14,239,12,"position"],[173,22,239,20],[173,26,239,24],[173,30,239,28],[173,32,239,30],[174,12,241,10],[174,19,241,17],[174,21,241,19],[175,10,242,8],[176,10,243,8,"colorStops"],[176,20,243,18],[176,21,243,19,"push"],[176,25,243,23],[176,26,243,24],[177,12,244,10,"color"],[177,17,244,15],[177,19,244,17,"processedColor"],[177,34,244,31],[178,12,245,10,"position"],[179,10,246,8],[179,11,246,9],[179,12,246,10],[180,8,247,6],[180,9,247,7],[180,15,250,11],[180,19,250,15,"colorStopParts"],[180,33,250,29],[180,34,250,30,"length"],[180,40,250,36],[180,45,250,41],[180,46,250,42],[180,48,250,44],[181,10,251,8],[181,14,251,14,"position"],[181,24,251,22],[181,27,251,25,"getPositionFromCSSValue"],[181,50,251,48],[181,51,251,49,"colorStopParts"],[181,65,251,63],[181,66,251,64],[181,67,251,65],[181,68,251,66],[181,69,251,67],[182,10,252,8],[182,14,252,12,"position"],[182,24,252,20],[182,28,252,24],[182,32,252,28],[182,34,252,30],[183,12,254,10],[183,16,255,13,"prevStop"],[183,24,255,21],[183,28,255,25],[183,32,255,29],[183,36,256,14,"prevStop"],[183,44,256,22],[183,45,256,23,"length"],[183,51,256,29],[183,56,256,34],[183,57,256,35],[183,61,257,14,"getPositionFromCSSValue"],[183,84,257,37],[183,85,257,38,"prevStop"],[183,93,257,46],[183,94,257,47],[183,95,257,48],[183,96,257,49],[183,97,257,50],[183,101,257,54],[183,105,257,58],[183,109,258,12,"i"],[183,110,258,13],[183,115,258,18,"stops"],[183,120,258,23],[183,121,258,24,"length"],[183,127,258,30],[183,130,258,33],[183,131,258,34],[183,135,259,12,"i"],[183,136,259,13],[183,141,259,18],[183,142,259,19],[183,144,260,12],[184,14,262,12],[184,21,262,19],[184,23,262,21],[185,12,263,10],[186,12,264,10,"colorStops"],[186,22,264,20],[186,23,264,21,"push"],[186,27,264,25],[186,28,264,26],[187,14,265,12,"color"],[187,19,265,17],[187,21,265,19],[187,25,265,23],[188,14,266,12,"position"],[188,22,266,20],[188,24,266,12,"position"],[189,12,267,10],[189,13,267,11],[189,14,267,12],[190,10,268,8],[190,11,268,9],[190,17,268,15],[191,12,269,10],[191,16,269,16,"processedColor"],[191,32,269,30],[191,35,269,33,"processColor"],[191,47,269,45],[191,48,269,46,"colorStopParts"],[191,62,269,60],[191,63,269,61],[191,64,269,62],[191,65,269,63],[191,66,269,64],[192,12,270,10],[192,16,270,14,"processedColor"],[192,32,270,28],[192,36,270,32],[192,40,270,36],[192,42,270,38],[193,14,272,12],[193,21,272,19],[193,23,272,21],[194,12,273,10],[195,12,274,10,"colorStops"],[195,22,274,20],[195,23,274,21,"push"],[195,27,274,25],[195,28,274,26],[196,14,275,12,"color"],[196,19,275,17],[196,21,275,19,"processedColor"],[196,37,275,33],[197,14,276,12,"position"],[197,22,276,20],[197,24,276,22],[198,12,277,10],[198,13,277,11],[198,14,277,12],[199,10,278,8],[200,8,279,6],[200,9,279,7],[200,15,279,13],[201,10,281,8],[201,17,281,15],[201,19,281,17],[202,8,282,6],[203,8,283,6,"prevStop"],[203,16,283,14],[203,19,283,17,"colorStopParts"],[203,33,283,31],[204,6,284,4],[205,6,286,4,"gradients"],[205,15,286,13],[205,16,286,14,"push"],[205,20,286,18],[205,21,286,19],[206,8,287,6,"type"],[206,12,287,10],[206,14,287,12],[206,30,287,28],[207,8,288,6,"direction"],[207,17,288,15],[208,8,289,6,"colorStops"],[209,6,290,4],[209,7,290,5],[209,8,290,6],[210,4,291,2],[211,4,293,2],[211,11,293,9,"gradients"],[211,20,293,18],[212,2,294,0],[213,2,296,0],[213,11,296,9,"getDirectionForKeyword"],[213,33,296,31,"getDirectionForKeyword"],[213,34,296,32,"direction"],[213,43,296,50],[213,45,296,78],[214,4,297,2],[214,8,297,6,"direction"],[214,17,297,15],[214,21,297,19],[214,25,297,23],[214,27,297,25],[215,6,298,4],[215,13,298,11],[215,17,298,15],[216,4,299,2],[217,4,301,2],[217,8,301,8,"normalized"],[217,18,301,18],[217,21,301,21,"direction"],[217,30,301,30],[217,31,301,31,"replace"],[217,38,301,38],[217,39,301,39],[217,45,301,45],[217,47,301,47],[217,50,301,50],[217,51,301,51],[217,52,301,52,"toLowerCase"],[217,63,301,63],[217,64,301,64],[217,65,301,65],[218,4,303,2],[218,12,303,10,"normalized"],[218,22,303,20],[219,6,304,4],[219,11,304,9],[219,19,304,17],[220,8,305,6],[220,15,305,13],[221,10,305,14,"type"],[221,14,305,18],[221,16,305,20],[221,23,305,27],[222,10,305,29,"value"],[222,15,305,34],[222,17,305,36],[223,8,305,37],[223,9,305,38],[224,6,306,4],[224,11,306,9],[224,21,306,19],[225,8,307,6],[225,15,307,13],[226,10,307,14,"type"],[226,14,307,18],[226,16,307,20],[226,23,307,27],[227,10,307,29,"value"],[227,15,307,34],[227,17,307,36],[228,8,307,38],[228,9,307,39],[229,6,308,4],[229,11,308,9],[229,22,308,20],[230,8,309,6],[230,15,309,13],[231,10,309,14,"type"],[231,14,309,18],[231,16,309,20],[231,23,309,27],[232,10,309,29,"value"],[232,15,309,34],[232,17,309,36],[233,8,309,39],[233,9,309,40],[234,6,310,4],[234,11,310,9],[234,20,310,18],[235,8,311,6],[235,15,311,13],[236,10,311,14,"type"],[236,14,311,18],[236,16,311,20],[236,23,311,27],[237,10,311,29,"value"],[237,15,311,34],[237,17,311,36],[238,8,311,39],[238,9,311,40],[239,6,312,4],[239,11,312,9],[239,25,312,23],[240,6,313,4],[240,11,313,9],[240,25,313,23],[241,8,314,6],[241,15,314,13],[242,10,314,14,"type"],[242,14,314,18],[242,16,314,20],[242,25,314,29],[243,10,314,31,"value"],[243,15,314,36],[243,17,314,38],[244,8,314,52],[244,9,314,53],[245,6,315,4],[245,11,315,9],[245,28,315,26],[246,6,316,4],[246,11,316,9],[246,28,316,26],[247,8,317,6],[247,15,317,13],[248,10,317,14,"type"],[248,14,317,18],[248,16,317,20],[248,25,317,29],[249,10,317,31,"value"],[249,15,317,36],[249,17,317,38],[250,8,317,55],[250,9,317,56],[251,6,318,4],[251,11,318,9],[251,24,318,22],[252,6,319,4],[252,11,319,9],[252,24,319,22],[253,8,320,6],[253,15,320,13],[254,10,320,14,"type"],[254,14,320,18],[254,16,320,20],[254,25,320,29],[255,10,320,31,"value"],[255,15,320,36],[255,17,320,38],[256,8,320,51],[256,9,320,52],[257,6,321,4],[257,11,321,9],[257,27,321,25],[258,6,322,4],[258,11,322,9],[258,27,322,25],[259,8,323,6],[259,15,323,13],[260,10,323,14,"type"],[260,14,323,18],[260,16,323,20],[260,25,323,29],[261,10,323,31,"value"],[261,15,323,36],[261,17,323,38],[262,8,323,54],[262,9,323,55],[263,6,324,4],[264,8,325,6],[264,15,325,13],[264,19,325,17],[265,4,326,2],[266,2,327,0],[267,2,329,0],[267,11,329,9,"getAngleInDegrees"],[267,28,329,26,"getAngleInDegrees"],[267,29,329,27,"angle"],[267,34,329,41],[267,36,329,52],[268,4,330,2],[268,8,330,6,"angle"],[268,13,330,11],[268,17,330,15],[268,21,330,19],[268,23,330,21],[269,6,331,4],[269,13,331,11],[269,17,331,15],[270,4,332,2],[271,4,333,2],[271,8,333,8,"match"],[271,13,333,13],[271,16,333,16,"angle"],[271,21,333,21],[271,22,333,22,"match"],[271,27,333,27],[271,28,333,28,"ANGLE_UNIT_REGEX"],[271,44,333,44],[271,45,333,45],[272,4,334,2],[272,8,334,6],[272,9,334,7,"match"],[272,14,334,12],[272,16,334,14],[273,6,335,4],[273,13,335,11],[273,17,335,15],[274,4,336,2],[275,4,338,2],[275,8,338,2,"_match"],[275,14,338,2],[275,21,338,2,"_slicedToArray"],[275,35,338,2],[275,36,338,2,"default"],[275,43,338,2],[275,45,338,26,"match"],[275,50,338,31],[276,6,338,11,"value"],[276,11,338,16],[276,14,338,16,"_match"],[276,20,338,16],[277,6,338,18,"unit"],[277,10,338,22],[277,13,338,22,"_match"],[277,19,338,22],[278,4,340,2],[278,8,340,8,"numericValue"],[278,20,340,20],[278,23,340,23,"parseFloat"],[278,33,340,33],[278,34,340,34,"value"],[278,39,340,39],[278,40,340,40],[279,4,341,2],[279,12,341,10,"unit"],[279,16,341,14],[280,6,342,4],[280,11,342,9],[280,16,342,14],[281,8,343,6],[281,15,343,13,"numericValue"],[281,27,343,25],[282,6,344,4],[282,11,344,9],[282,17,344,15],[283,8,345,6],[283,15,345,13,"numericValue"],[283,27,345,25],[283,30,345,28],[283,33,345,31],[284,6,346,4],[284,11,346,9],[284,16,346,14],[285,8,347,6],[285,15,347,14,"numericValue"],[285,27,347,26],[285,30,347,29],[285,33,347,32],[285,36,347,36,"Math"],[285,40,347,40],[285,41,347,41,"PI"],[285,43,347,43],[286,6,348,4],[286,11,348,9],[286,17,348,15],[287,8,349,6],[287,15,349,13,"numericValue"],[287,27,349,25],[287,30,349,28],[287,33,349,31],[288,6,350,4],[289,8,351,6],[289,15,351,13],[289,19,351,17],[290,4,352,2],[291,2,353,0],[292,2,355,0],[292,11,355,9,"getPositionFromCSSValue"],[292,34,355,32,"getPositionFromCSSValue"],[292,35,355,33,"position"],[292,43,355,49],[292,45,355,51],[293,4,356,2],[293,8,356,6,"position"],[293,16,356,14],[293,17,356,15,"endsWith"],[293,25,356,23],[293,26,356,24],[293,30,356,28],[293,31,356,29],[293,33,356,31],[294,6,357,4],[294,13,357,11,"parseFloat"],[294,23,357,21],[294,24,357,22,"position"],[294,32,357,30],[294,33,357,31],[295,4,358,2],[296,4,360,2],[296,8,360,6,"position"],[296,16,360,14],[296,17,360,15,"endsWith"],[296,25,360,23],[296,26,360,24],[296,29,360,27],[296,30,360,28],[296,32,360,30],[297,6,361,4],[297,13,361,11,"position"],[297,21,361,19],[298,4,362,2],[299,2,363,0],[300,0,363,1],[300,3]],"functionMap":{"names":["<global>","processBackgroundImage","parseCSSLinearGradient","getDirectionForKeyword","getAngleInDegrees","getPositionFromCSSValue"],"mappings":"AAA;eC2C;CD2G;AEE;CF6I;AGE;CH+B;AIE;CJwB;AKE"},"hasCjsExports":false},"type":"js/module"}]}