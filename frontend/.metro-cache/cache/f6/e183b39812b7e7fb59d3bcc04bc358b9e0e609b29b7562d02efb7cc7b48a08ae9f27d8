{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"2ER/r3Agt+5SFwaFR8HXg24Rpu4=","exportNames":["*"]}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"rNxrvQaXjK4/vUvPksJpbMJ5u+4=","exportNames":["*"]}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"81XLedmR1ugWwxXMAacEe45V43M=","exportNames":["*"]}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"]}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"E5lU3h554k94C0V5puhR219BWnU=","exportNames":["*"]}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"UPnefzBCahUrTRoOWw51hXJ7z+A=","exportNames":["*"]}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"AWXnpGNA5UkH1qQUM7hLv2L9KzI=","exportNames":["*"]}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"vPXNy6i2DuFIp7nHtHgSOvNmS+U=","exportNames":["*"]}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"A/nq9Y/xSFBE06OzxjBtNMD9uQU=","exportNames":["*"]}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"YbGte4vf40k4Yjb9DRJvUiBpPUk=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"+uLQCjZF6jwjpLbZFDGLy8MVJhc=","exportNames":["*"]}},{"name":"./useClientLayoutEffect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":67,"index":885}}],"key":"LhoNk5P88pw/w9+MH8FRVAlr+OQ=","exportNames":["*"]}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":886},"end":{"line":19,"column":49,"index":935}}],"key":"b66LKsk9Jf3uaP2v5j6OCNwoJlU=","exportNames":["*"]}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":936},"end":{"line":20,"column":57,"index":993}}],"key":"McuG59KD5h0BHxEULOXCoLs/e2E=","exportNames":["*"]}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":994},"end":{"line":21,"column":53,"index":1047}}],"key":"G1CfJySCSkhPC7rH5rQhaqLaTI0=","exportNames":["*"]}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1048},"end":{"line":22,"column":55,"index":1103}}],"key":"f/gs/fnvuaPtRHedK9bCgn238kE=","exportNames":["*"]}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1104},"end":{"line":23,"column":93,"index":1197}}],"key":"OygHMRn4bEenld73jIuOxQ+gu9U=","exportNames":["*"]}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1198},"end":{"line":24,"column":53,"index":1251}}],"key":"8zqWYqMNSd/k9LIqrmfq1M3LrQU=","exportNames":["*"]}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1252},"end":{"line":25,"column":69,"index":1321}}],"key":"uvEgxGYPcoeW+RryvJ51Glj8+aw=","exportNames":["*"]}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1322},"end":{"line":26,"column":49,"index":1371}}],"key":"4aMiFZmnD/ZJbzJTaYI7ECYTV2s=","exportNames":["*"]}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1372},"end":{"line":27,"column":65,"index":1437}}],"key":"c9g7geoBBHpEed2xjMQ2EV7DCFE=","exportNames":["*"]}},{"name":"./useNavigationState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":1438},"end":{"line":28,"column":74,"index":1512}}],"key":"YLzO6pWqOUYOyLCSKhbq1BFmhy0=","exportNames":["*"]}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":1513},"end":{"line":29,"column":47,"index":1560}}],"key":"oVCZ93YyJFpAvJlQLQH3T1CuCCk=","exportNames":["*"]}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":1561},"end":{"line":30,"column":51,"index":1612}}],"key":"/XMjJjmKD4ejBJNDiIDjXKDJRFk=","exportNames":["*"]}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1613},"end":{"line":31,"column":55,"index":1668}}],"key":"5V4g0kBeeaIrUwTen4o2q6oj60U=","exportNames":["*"]}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":1669},"end":{"line":32,"column":65,"index":1734}}],"key":"KZzTt58Kkr/mzgiCdvRDRowLya8=","exportNames":["*"]}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":1735},"end":{"line":33,"column":59,"index":1794}}],"key":"FnFZL3NH40gExc7dikLfREzDCec=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1910},"end":{"line":37,"column":48,"index":1958}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _routers = require(_dependencyMap[1], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _reactIs = require(_dependencyMap[3], \"react-is\");\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[4], \"use-latest-callback\"));\n  var _deepFreeze = require(_dependencyMap[5], \"./deepFreeze.js\");\n  var _Group = require(_dependencyMap[6], \"./Group.js\");\n  var _isArrayEqual = require(_dependencyMap[7], \"./isArrayEqual.js\");\n  var _isRecordEqual = require(_dependencyMap[8], \"./isRecordEqual.js\");\n  var _NavigationHelpersContext = require(_dependencyMap[9], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContext = require(_dependencyMap[10], \"./NavigationRouteContext.js\");\n  var _NavigationStateContext = require(_dependencyMap[11], \"./NavigationStateContext.js\");\n  var _PreventRemoveProvider = require(_dependencyMap[12], \"./PreventRemoveProvider.js\");\n  var _Screen = require(_dependencyMap[13], \"./Screen.js\");\n  var _types = require(_dependencyMap[14], \"./types.js\");\n  var _useChildListeners = require(_dependencyMap[15], \"./useChildListeners.js\");\n  var _useClientLayoutEffect = require(_dependencyMap[16], \"./useClientLayoutEffect.js\");\n  var _useComponent = require(_dependencyMap[17], \"./useComponent.js\");\n  var _useCurrentRender = require(_dependencyMap[18], \"./useCurrentRender.js\");\n  var _useDescriptors = require(_dependencyMap[19], \"./useDescriptors.js\");\n  var _useEventEmitter = require(_dependencyMap[20], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapter = require(_dependencyMap[21], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEvents = require(_dependencyMap[22], \"./useFocusEvents.js\");\n  var _useKeyedChildListeners = require(_dependencyMap[23], \"./useKeyedChildListeners.js\");\n  var _useLazyValue = require(_dependencyMap[24], \"./useLazyValue.js\");\n  var _useNavigationHelpers = require(_dependencyMap[25], \"./useNavigationHelpers.js\");\n  var _useNavigationState = require(_dependencyMap[26], \"./useNavigationState.js\");\n  var _useOnAction = require(_dependencyMap[27], \"./useOnAction.js\");\n  var _useOnGetState = require(_dependencyMap[28], \"./useOnGetState.js\");\n  var _useOnRouteFocus = require(_dependencyMap[29], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigator = require(_dependencyMap[30], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdate = require(_dependencyMap[31], \"./useScheduleUpdate.js\");\n  var _jsxRuntime = require(_dependencyMap[32], \"react/jsx-runtime\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n  _types.PrivateValueStore;\n  const isScreen = child => {\n    return child.type === _Screen.Screen;\n  };\n  const isGroup = child => {\n    return child.type === React.Fragment || child.type === _Group.Group;\n  };\n  const isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  const getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    const configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _Group.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        const {\n          name,\n          children,\n          component,\n          getComponent\n        } = config.props;\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    const navigatorKey = (0, _useRegisterNavigator.useRegisterNavigator)();\n    const route = React.useContext(_NavigationRouteContext.NavigationRouteContext);\n    const {\n      children,\n      layout,\n      screenOptions,\n      screenLayout,\n      screenListeners,\n      UNSTABLE_router,\n      ...rest\n    } = options;\n    const routeConfigs = getRouteConfigsFromChildren(children);\n    const router = (0, _useLazyValue.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      const original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        const overrides = UNSTABLE_router(original);\n        return {\n          ...original,\n          ...overrides\n        };\n      }\n      return original;\n    });\n    const screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    const routeNames = routeConfigs.map(config => config.props.name);\n    const routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    const routeParamList = routeNames.reduce((acc, curr) => {\n      const {\n        initialParams\n      } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    const {\n      state: currentState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      setKey,\n      getKey,\n      getIsInitial\n    } = React.useContext(_NavigationStateContext.NavigationStateContext);\n    const stateCleanedUp = React.useRef(false);\n    const setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n      const initialRouteParamList = routeNames.reduce((acc, curr) => {\n        const {\n          initialParams\n        } = screens[curr].props;\n        const initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n        acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n          ...initialParams,\n          ...initialParamsFromParams\n        } : undefined;\n        return acc;\n      }, {});\n\n      // If the current state isn't initialized on first render, we initialize it\n      // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n      // Otherwise assume that the state was provided as initial state\n      // So we need to rehydrate it to make it usable\n      if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n        return [router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), true];\n      } else {\n        let stateFromParams;\n        if (route?.params?.state != null) {\n          stateFromParams = route.params.state;\n        } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n          stateFromParams = {\n            index: 0,\n            routes: [{\n              name: route.params.screen,\n              params: route.params.params,\n              path: route.params.path\n            }]\n          };\n        }\n        return [router.getRehydratedState(stateFromParams ?? currentState, {\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), false];\n      }\n      // We explicitly don't include routeNames, route.params etc. in the dep list\n      // below. We want to avoid forcing a new state to be calculated in those cases\n      // Instead, we handle changes to these in the nextState code below. Note\n      // that some changes to routeConfigs are explicitly ignored, such as changes\n      // to initialParams\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentState, router, isStateValid]);\n    const previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    const previousRouteKeyList = previousRouteKeyListRef.current;\n    let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    let nextState = state;\n    if (!(0, _isArrayEqual.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqual.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    const previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      const previousParams = previousNestedParamsRef.current;\n      let action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          merge: route.params.merge,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      const updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    const shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    const stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useClientLayoutEffect.useClientLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    const getState = (0, _useLatestCallback.default)(() => {\n      const currentState = getCurrentState();\n      return (0, _deepFreeze.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    const emitter = (0, _useEventEmitter.useEventEmitter)(e => {\n      const routeNames = [];\n      let route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      const navigation = descriptors[route.key].navigation;\n      const listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        const {\n          listeners\n        } = screens[name].props;\n        return listeners;\n      })].map(listeners => {\n        const map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEvents.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    const {\n      listeners: childListeners,\n      addListener\n    } = (0, _useChildListeners.useChildListeners)();\n    const {\n      keyedListeners,\n      addKeyedListener\n    } = (0, _useKeyedChildListeners.useKeyedChildListeners)();\n    const onAction = (0, _useOnAction.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    const onRouteFocus = (0, _useOnRouteFocus.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    const navigation = (0, _useNavigationHelpers.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    const {\n      describe,\n      descriptors\n    } = (0, _useDescriptors.useDescriptors)({\n      state,\n      screens,\n      navigation,\n      screenOptions,\n      screenLayout,\n      onAction,\n      getState,\n      setState,\n      onRouteFocus,\n      addListener,\n      addKeyedListener,\n      router,\n      // @ts-expect-error: this should have both core and custom events, but too much work right now\n      emitter\n    });\n    (0, _useCurrentRender.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    const NavigationContent = (0, _useComponent.useComponent)(children => {\n      const element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_useNavigationState.NavigationStateListenerProvider, {\n          state: state,\n          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider, {\n            children: element\n          })\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":513,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationBuilder"],[8,30,1,13],[8,33,1,13,"useNavigationBuilder"],[8,53,1,13],[9,2,3,0],[9,6,3,0,"_routers"],[9,14,3,0],[9,17,3,0,"require"],[9,24,3,0],[9,25,3,0,"_dependencyMap"],[9,39,3,0],[10,2,4,0],[10,6,4,0,"React"],[10,11,4,0],[10,14,4,0,"_interopRequireWildcard"],[10,37,4,0],[10,38,4,0,"require"],[10,45,4,0],[10,46,4,0,"_dependencyMap"],[10,60,4,0],[11,2,5,0],[11,6,5,0,"_reactIs"],[11,14,5,0],[11,17,5,0,"require"],[11,24,5,0],[11,25,5,0,"_dependencyMap"],[11,39,5,0],[12,2,6,0],[12,6,6,0,"_useLatestCallback"],[12,24,6,0],[12,27,6,0,"_interopRequireDefault"],[12,49,6,0],[12,50,6,0,"require"],[12,57,6,0],[12,58,6,0,"_dependencyMap"],[12,72,6,0],[13,2,7,0],[13,6,7,0,"_deepFreeze"],[13,17,7,0],[13,20,7,0,"require"],[13,27,7,0],[13,28,7,0,"_dependencyMap"],[13,42,7,0],[14,2,8,0],[14,6,8,0,"_Group"],[14,12,8,0],[14,15,8,0,"require"],[14,22,8,0],[14,23,8,0,"_dependencyMap"],[14,37,8,0],[15,2,9,0],[15,6,9,0,"_isArrayEqual"],[15,19,9,0],[15,22,9,0,"require"],[15,29,9,0],[15,30,9,0,"_dependencyMap"],[15,44,9,0],[16,2,10,0],[16,6,10,0,"_isRecordEqual"],[16,20,10,0],[16,23,10,0,"require"],[16,30,10,0],[16,31,10,0,"_dependencyMap"],[16,45,10,0],[17,2,11,0],[17,6,11,0,"_NavigationHelpersContext"],[17,31,11,0],[17,34,11,0,"require"],[17,41,11,0],[17,42,11,0,"_dependencyMap"],[17,56,11,0],[18,2,12,0],[18,6,12,0,"_NavigationRouteContext"],[18,29,12,0],[18,32,12,0,"require"],[18,39,12,0],[18,40,12,0,"_dependencyMap"],[18,54,12,0],[19,2,13,0],[19,6,13,0,"_NavigationStateContext"],[19,29,13,0],[19,32,13,0,"require"],[19,39,13,0],[19,40,13,0,"_dependencyMap"],[19,54,13,0],[20,2,14,0],[20,6,14,0,"_PreventRemoveProvider"],[20,28,14,0],[20,31,14,0,"require"],[20,38,14,0],[20,39,14,0,"_dependencyMap"],[20,53,14,0],[21,2,15,0],[21,6,15,0,"_Screen"],[21,13,15,0],[21,16,15,0,"require"],[21,23,15,0],[21,24,15,0,"_dependencyMap"],[21,38,15,0],[22,2,16,0],[22,6,16,0,"_types"],[22,12,16,0],[22,15,16,0,"require"],[22,22,16,0],[22,23,16,0,"_dependencyMap"],[22,37,16,0],[23,2,17,0],[23,6,17,0,"_useChildListeners"],[23,24,17,0],[23,27,17,0,"require"],[23,34,17,0],[23,35,17,0,"_dependencyMap"],[23,49,17,0],[24,2,18,0],[24,6,18,0,"_useClientLayoutEffect"],[24,28,18,0],[24,31,18,0,"require"],[24,38,18,0],[24,39,18,0,"_dependencyMap"],[24,53,18,0],[25,2,19,0],[25,6,19,0,"_useComponent"],[25,19,19,0],[25,22,19,0,"require"],[25,29,19,0],[25,30,19,0,"_dependencyMap"],[25,44,19,0],[26,2,20,0],[26,6,20,0,"_useCurrentRender"],[26,23,20,0],[26,26,20,0,"require"],[26,33,20,0],[26,34,20,0,"_dependencyMap"],[26,48,20,0],[27,2,21,0],[27,6,21,0,"_useDescriptors"],[27,21,21,0],[27,24,21,0,"require"],[27,31,21,0],[27,32,21,0,"_dependencyMap"],[27,46,21,0],[28,2,22,0],[28,6,22,0,"_useEventEmitter"],[28,22,22,0],[28,25,22,0,"require"],[28,32,22,0],[28,33,22,0,"_dependencyMap"],[28,47,22,0],[29,2,23,0],[29,6,23,0,"_useFocusedListenersChildrenAdapter"],[29,41,23,0],[29,44,23,0,"require"],[29,51,23,0],[29,52,23,0,"_dependencyMap"],[29,66,23,0],[30,2,24,0],[30,6,24,0,"_useFocusEvents"],[30,21,24,0],[30,24,24,0,"require"],[30,31,24,0],[30,32,24,0,"_dependencyMap"],[30,46,24,0],[31,2,25,0],[31,6,25,0,"_useKeyedChildListeners"],[31,29,25,0],[31,32,25,0,"require"],[31,39,25,0],[31,40,25,0,"_dependencyMap"],[31,54,25,0],[32,2,26,0],[32,6,26,0,"_useLazyValue"],[32,19,26,0],[32,22,26,0,"require"],[32,29,26,0],[32,30,26,0,"_dependencyMap"],[32,44,26,0],[33,2,27,0],[33,6,27,0,"_useNavigationHelpers"],[33,27,27,0],[33,30,27,0,"require"],[33,37,27,0],[33,38,27,0,"_dependencyMap"],[33,52,27,0],[34,2,28,0],[34,6,28,0,"_useNavigationState"],[34,25,28,0],[34,28,28,0,"require"],[34,35,28,0],[34,36,28,0,"_dependencyMap"],[34,50,28,0],[35,2,29,0],[35,6,29,0,"_useOnAction"],[35,18,29,0],[35,21,29,0,"require"],[35,28,29,0],[35,29,29,0,"_dependencyMap"],[35,43,29,0],[36,2,30,0],[36,6,30,0,"_useOnGetState"],[36,20,30,0],[36,23,30,0,"require"],[36,30,30,0],[36,31,30,0,"_dependencyMap"],[36,45,30,0],[37,2,31,0],[37,6,31,0,"_useOnRouteFocus"],[37,22,31,0],[37,25,31,0,"require"],[37,32,31,0],[37,33,31,0,"_dependencyMap"],[37,47,31,0],[38,2,32,0],[38,6,32,0,"_useRegisterNavigator"],[38,27,32,0],[38,30,32,0,"require"],[38,37,32,0],[38,38,32,0,"_dependencyMap"],[38,52,32,0],[39,2,33,0],[39,6,33,0,"_useScheduleUpdate"],[39,24,33,0],[39,27,33,0,"require"],[39,34,33,0],[39,35,33,0,"_dependencyMap"],[39,49,33,0],[40,2,37,0],[40,6,37,0,"_jsxRuntime"],[40,17,37,0],[40,20,37,0,"require"],[40,27,37,0],[40,28,37,0,"_dependencyMap"],[40,42,37,0],[41,2,37,48],[41,11,37,48,"_interopRequireWildcard"],[41,35,37,48,"e"],[41,36,37,48],[41,38,37,48,"t"],[41,39,37,48],[41,68,37,48,"WeakMap"],[41,75,37,48],[41,81,37,48,"r"],[41,82,37,48],[41,89,37,48,"WeakMap"],[41,96,37,48],[41,100,37,48,"n"],[41,101,37,48],[41,108,37,48,"WeakMap"],[41,115,37,48],[41,127,37,48,"_interopRequireWildcard"],[41,150,37,48],[41,162,37,48,"_interopRequireWildcard"],[41,163,37,48,"e"],[41,164,37,48],[41,166,37,48,"t"],[41,167,37,48],[41,176,37,48,"t"],[41,177,37,48],[41,181,37,48,"e"],[41,182,37,48],[41,186,37,48,"e"],[41,187,37,48],[41,188,37,48,"__esModule"],[41,198,37,48],[41,207,37,48,"e"],[41,208,37,48],[41,214,37,48,"o"],[41,215,37,48],[41,217,37,48,"i"],[41,218,37,48],[41,220,37,48,"f"],[41,221,37,48],[41,226,37,48,"__proto__"],[41,235,37,48],[41,243,37,48,"default"],[41,250,37,48],[41,252,37,48,"e"],[41,253,37,48],[41,270,37,48,"e"],[41,271,37,48],[41,294,37,48,"e"],[41,295,37,48],[41,320,37,48,"e"],[41,321,37,48],[41,330,37,48,"f"],[41,331,37,48],[41,337,37,48,"o"],[41,338,37,48],[41,341,37,48,"t"],[41,342,37,48],[41,345,37,48,"n"],[41,346,37,48],[41,349,37,48,"r"],[41,350,37,48],[41,358,37,48,"o"],[41,359,37,48],[41,360,37,48,"has"],[41,363,37,48],[41,364,37,48,"e"],[41,365,37,48],[41,375,37,48,"o"],[41,376,37,48],[41,377,37,48,"get"],[41,380,37,48],[41,381,37,48,"e"],[41,382,37,48],[41,385,37,48,"o"],[41,386,37,48],[41,387,37,48,"set"],[41,390,37,48],[41,391,37,48,"e"],[41,392,37,48],[41,394,37,48,"f"],[41,395,37,48],[41,411,37,48,"t"],[41,412,37,48],[41,416,37,48,"e"],[41,417,37,48],[41,433,37,48,"t"],[41,434,37,48],[41,441,37,48,"hasOwnProperty"],[41,455,37,48],[41,456,37,48,"call"],[41,460,37,48],[41,461,37,48,"e"],[41,462,37,48],[41,464,37,48,"t"],[41,465,37,48],[41,472,37,48,"i"],[41,473,37,48],[41,477,37,48,"o"],[41,478,37,48],[41,481,37,48,"Object"],[41,487,37,48],[41,488,37,48,"defineProperty"],[41,502,37,48],[41,507,37,48,"Object"],[41,513,37,48],[41,514,37,48,"getOwnPropertyDescriptor"],[41,538,37,48],[41,539,37,48,"e"],[41,540,37,48],[41,542,37,48,"t"],[41,543,37,48],[41,550,37,48,"i"],[41,551,37,48],[41,552,37,48,"get"],[41,555,37,48],[41,559,37,48,"i"],[41,560,37,48],[41,561,37,48,"set"],[41,564,37,48],[41,568,37,48,"o"],[41,569,37,48],[41,570,37,48,"f"],[41,571,37,48],[41,573,37,48,"t"],[41,574,37,48],[41,576,37,48,"i"],[41,577,37,48],[41,581,37,48,"f"],[41,582,37,48],[41,583,37,48,"t"],[41,584,37,48],[41,588,37,48,"e"],[41,589,37,48],[41,590,37,48,"t"],[41,591,37,48],[41,602,37,48,"f"],[41,603,37,48],[41,608,37,48,"e"],[41,609,37,48],[41,611,37,48,"t"],[41,612,37,48],[42,2,35,0],[43,2,36,0],[45,2,38,0,"PrivateValueStore"],[45,26,38,17],[46,2,39,0],[46,8,39,6,"isScreen"],[46,16,39,14],[46,19,39,17,"child"],[46,24,39,22],[46,28,39,26],[47,4,40,2],[47,11,40,9,"child"],[47,16,40,14],[47,17,40,15,"type"],[47,21,40,19],[47,26,40,24,"Screen"],[47,40,40,30],[48,2,41,0],[48,3,41,1],[49,2,42,0],[49,8,42,6,"isGroup"],[49,15,42,13],[49,18,42,16,"child"],[49,23,42,21],[49,27,42,25],[50,4,43,2],[50,11,43,9,"child"],[50,16,43,14],[50,17,43,15,"type"],[50,21,43,19],[50,26,43,24,"React"],[50,31,43,29],[50,32,43,30,"Fragment"],[50,40,43,38],[50,44,43,42,"child"],[50,49,43,47],[50,50,43,48,"type"],[50,54,43,52],[50,59,43,57,"Group"],[50,71,43,62],[51,2,44,0],[51,3,44,1],[52,2,45,0],[52,8,45,6,"isValidKey"],[52,18,45,16],[52,21,45,19,"key"],[52,24,45,22],[52,28,45,26,"key"],[52,31,45,29],[52,36,45,34,"undefined"],[52,45,45,43],[52,49,45,47],[52,56,45,54,"key"],[52,59,45,57],[52,64,45,62],[52,72,45,70],[52,76,45,74,"key"],[52,79,45,77],[52,84,45,82],[52,86,45,84],[54,2,47,0],[55,0,48,0],[56,0,49,0],[57,0,50,0],[58,0,51,0],[59,2,52,0],[59,8,52,6,"getRouteConfigsFromChildren"],[59,35,52,33],[59,38,52,36,"getRouteConfigsFromChildren"],[59,39,52,37,"children"],[59,47,52,45],[59,49,52,47,"groupKey"],[59,57,52,55],[59,59,52,57,"groupOptions"],[59,71,52,69],[59,73,52,71,"groupLayout"],[59,84,52,82],[59,89,52,87],[60,4,53,2],[60,10,53,8,"configs"],[60,17,53,15],[60,20,53,18,"React"],[60,25,53,23],[60,26,53,24,"Children"],[60,34,53,32],[60,35,53,33,"toArray"],[60,42,53,40],[60,43,53,41,"children"],[60,51,53,49],[60,52,53,50],[60,53,53,51,"reduce"],[60,59,53,57],[60,60,53,58],[60,61,53,59,"acc"],[60,64,53,62],[60,66,53,64,"child"],[60,71,53,69],[60,76,53,74],[61,6,54,4],[61,10,54,8],[61,23,54,21,"React"],[61,28,54,26],[61,29,54,27,"isValidElement"],[61,43,54,41],[61,44,54,42,"child"],[61,49,54,47],[61,50,54,48],[61,52,54,50],[62,8,55,6],[62,12,55,10,"isScreen"],[62,20,55,18],[62,21,55,19,"child"],[62,26,55,24],[62,27,55,25],[62,29,55,27],[63,10,56,8],[64,10,57,8],[66,10,59,8],[66,14,59,12],[66,21,59,19,"child"],[66,26,59,24],[66,27,59,25,"props"],[66,32,59,30],[66,37,59,35],[66,45,59,43],[66,49,59,47,"child"],[66,54,59,52],[66,55,59,53,"props"],[66,60,59,58],[66,65,59,63],[66,69,59,67],[66,71,59,69],[67,12,60,10],[67,18,60,16],[67,22,60,20,"Error"],[67,27,60,25],[67,28,60,26],[67,64,60,62],[67,65,60,63],[68,10,61,8],[69,10,62,8],[69,14,62,12],[69,21,62,19,"child"],[69,26,62,24],[69,27,62,25,"props"],[69,32,62,30],[69,33,62,31,"name"],[69,37,62,35],[69,42,62,40],[69,50,62,48],[69,54,62,52,"child"],[69,59,62,57],[69,60,62,58,"props"],[69,65,62,63],[69,66,62,64,"name"],[69,70,62,68],[69,75,62,73],[69,77,62,75],[69,79,62,77],[70,12,63,10],[70,18,63,16],[70,22,63,20,"Error"],[70,27,63,25],[70,28,63,26],[70,52,63,50,"JSON"],[70,56,63,54],[70,57,63,55,"stringify"],[70,66,63,64],[70,67,63,65,"child"],[70,72,63,70],[70,73,63,71,"props"],[70,78,63,76],[70,79,63,77,"name"],[70,83,63,81],[70,84,63,82],[70,134,63,132],[70,135,63,133],[71,10,64,8],[72,10,65,8],[72,14,65,12,"child"],[72,19,65,17],[72,20,65,18,"props"],[72,25,65,23],[72,26,65,24,"navigationKey"],[72,39,65,37],[72,44,65,42,"undefined"],[72,53,65,51],[72,58,65,56],[72,65,65,63,"child"],[72,70,65,68],[72,71,65,69,"props"],[72,76,65,74],[72,77,65,75,"navigationKey"],[72,90,65,88],[72,95,65,93],[72,103,65,101],[72,107,65,105,"child"],[72,112,65,110],[72,113,65,111,"props"],[72,118,65,116],[72,119,65,117,"navigationKey"],[72,132,65,130],[72,137,65,135],[72,139,65,137],[72,140,65,138],[72,142,65,140],[73,12,66,10],[73,18,66,16],[73,22,66,20,"Error"],[73,27,66,25],[73,28,66,26],[73,68,66,66,"JSON"],[73,72,66,70],[73,73,66,71,"stringify"],[73,82,66,80],[73,83,66,81,"child"],[73,88,66,86],[73,89,66,87,"props"],[73,94,66,92],[73,95,66,93,"navigationKey"],[73,108,66,106],[73,109,66,107],[73,130,66,128,"child"],[73,135,66,133],[73,136,66,134,"props"],[73,141,66,139],[73,142,66,140,"name"],[73,146,66,144],[73,196,66,194],[73,197,66,195],[74,10,67,8],[75,10,68,8,"acc"],[75,13,68,11],[75,14,68,12,"push"],[75,18,68,16],[75,19,68,17],[76,12,69,10,"keys"],[76,16,69,14],[76,18,69,16],[76,19,69,17,"groupKey"],[76,27,69,25],[76,29,69,27,"child"],[76,34,69,32],[76,35,69,33,"props"],[76,40,69,38],[76,41,69,39,"navigationKey"],[76,54,69,52],[76,55,69,53],[77,12,70,10,"options"],[77,19,70,17],[77,21,70,19,"groupOptions"],[77,33,70,31],[78,12,71,10,"layout"],[78,18,71,16],[78,20,71,18,"groupLayout"],[78,31,71,29],[79,12,72,10,"props"],[79,17,72,15],[79,19,72,17,"child"],[79,24,72,22],[79,25,72,23,"props"],[80,10,73,8],[80,11,73,9],[80,12,73,10],[81,10,74,8],[81,17,74,15,"acc"],[81,20,74,18],[82,8,75,6],[83,8,76,6],[83,12,76,10,"isGroup"],[83,19,76,17],[83,20,76,18,"child"],[83,25,76,23],[83,26,76,24],[83,28,76,26],[84,10,77,8],[84,14,77,12],[84,15,77,13,"isValidKey"],[84,25,77,23],[84,26,77,24,"child"],[84,31,77,29],[84,32,77,30,"props"],[84,37,77,35],[84,38,77,36,"navigationKey"],[84,51,77,49],[84,52,77,50],[84,54,77,52],[85,12,78,10],[85,18,78,16],[85,22,78,20,"Error"],[85,27,78,25],[85,28,78,26],[85,68,78,66,"JSON"],[85,72,78,70],[85,73,78,71,"stringify"],[85,82,78,80],[85,83,78,81,"child"],[85,88,78,86],[85,89,78,87,"props"],[85,94,78,92],[85,95,78,93,"navigationKey"],[85,108,78,106],[85,109,78,107],[85,173,78,171],[85,174,78,172],[86,10,79,8],[88,10,81,8],[89,10,82,8],[90,10,83,8,"acc"],[90,13,83,11],[90,14,83,12,"push"],[90,18,83,16],[90,19,83,17],[90,22,83,20,"getRouteConfigsFromChildren"],[90,49,83,47],[90,50,83,48,"child"],[90,55,83,53],[90,56,83,54,"props"],[90,61,83,59],[90,62,83,60,"children"],[90,70,83,68],[90,72,83,70,"child"],[90,77,83,75],[90,78,83,76,"props"],[90,83,83,81],[90,84,83,82,"navigationKey"],[90,97,83,95],[91,10,84,8],[92,10,85,8],[93,10,86,8,"child"],[93,15,86,13],[93,16,86,14,"type"],[93,20,86,18],[93,25,86,23,"Group"],[93,37,86,28],[93,40,86,31,"groupOptions"],[93,52,86,43],[93,55,86,46,"groupOptions"],[93,67,86,58],[93,71,86,62],[93,75,86,66],[93,78,86,69],[93,79,86,70],[93,82,86,73,"groupOptions"],[93,94,86,85],[93,96,86,87,"child"],[93,101,86,92],[93,102,86,93,"props"],[93,107,86,98],[93,108,86,99,"screenOptions"],[93,121,86,112],[93,122,86,113],[93,125,86,116],[93,126,86,117,"child"],[93,131,86,122],[93,132,86,123,"props"],[93,137,86,128],[93,138,86,129,"screenOptions"],[93,151,86,142],[93,152,86,143],[93,154,86,145],[93,161,86,152,"child"],[93,166,86,157],[93,167,86,158,"props"],[93,172,86,163],[93,173,86,164,"screenLayout"],[93,185,86,176],[93,190,86,181],[93,200,86,191],[93,203,86,194,"child"],[93,208,86,199],[93,209,86,200,"props"],[93,214,86,205],[93,215,86,206,"screenLayout"],[93,227,86,218],[93,230,86,221,"groupLayout"],[93,241,86,232],[93,242,86,233],[93,243,86,234],[94,10,87,8],[94,17,87,15,"acc"],[94,20,87,18],[95,8,88,6],[96,6,89,4],[97,6,90,4],[97,12,90,10],[97,16,90,14,"Error"],[97,21,90,19],[97,22,90,20],[97,122,90,120],[97,135,90,133],[97,149,90,133,"React"],[97,154,90,138],[97,155,90,139,"isValidElement"],[97,169,90,153],[97,170,90,154,"child"],[97,175,90,159],[97,176,90,160],[97,179,90,163],[97,183,90,167],[97,190,90,174,"child"],[97,195,90,179],[97,196,90,180,"type"],[97,200,90,184],[97,205,90,189],[97,213,90,197],[97,216,90,200,"child"],[97,221,90,205],[97,222,90,206,"type"],[97,226,90,210],[97,229,90,213,"child"],[97,234,90,218],[97,235,90,219,"type"],[97,239,90,223],[97,241,90,225,"name"],[97,245,90,229],[97,249,90,233,"child"],[97,254,90,238],[97,255,90,239,"props"],[97,260,90,244],[97,264,90,248],[97,268,90,252],[97,272,90,256],[97,279,90,263,"child"],[97,284,90,268],[97,285,90,269,"props"],[97,290,90,274],[97,295,90,279],[97,303,90,287],[97,307,90,291],[97,313,90,297],[97,317,90,301,"child"],[97,322,90,306],[97,323,90,307,"props"],[97,328,90,312],[97,332,90,316,"child"],[97,337,90,321],[97,338,90,322,"props"],[97,343,90,327],[97,345,90,329,"name"],[97,349,90,333],[97,352,90,336],[97,372,90,356,"child"],[97,377,90,361],[97,378,90,362,"props"],[97,383,90,367],[97,384,90,368,"name"],[97,388,90,372],[97,391,90,375],[97,394,90,378],[97,396,90,380],[97,398,90,382],[97,401,90,385],[97,408,90,392,"child"],[97,413,90,397],[97,418,90,402],[97,426,90,410],[97,429,90,413,"JSON"],[97,433,90,417],[97,434,90,418,"stringify"],[97,443,90,427],[97,444,90,428,"child"],[97,449,90,433],[97,450,90,434],[97,453,90,437],[97,457,90,441,"String"],[97,463,90,447],[97,464,90,448,"child"],[97,469,90,453],[97,470,90,454],[97,473,90,457],[97,565,90,549],[97,566,90,550],[98,4,91,2],[98,5,91,3],[98,7,91,5],[98,9,91,7],[98,10,91,8],[99,4,92,2],[99,8,92,6,"process"],[99,15,92,13],[99,16,92,14,"env"],[99,19,92,17],[99,20,92,18,"NODE_ENV"],[99,28,92,26],[99,33,92,31],[99,45,92,43],[99,47,92,45],[100,6,93,4,"configs"],[100,13,93,11],[100,14,93,12,"forEach"],[100,21,93,19],[100,22,93,20,"config"],[100,28,93,26],[100,32,93,30],[101,8,94,6],[101,14,94,12],[102,10,95,8,"name"],[102,14,95,12],[103,10,96,8,"children"],[103,18,96,16],[104,10,97,8,"component"],[104,19,97,17],[105,10,98,8,"getComponent"],[106,8,99,6],[106,9,99,7],[106,12,99,10,"config"],[106,18,99,16],[106,19,99,17,"props"],[106,24,99,22],[107,8,100,6],[107,12,100,10,"children"],[107,20,100,18],[107,24,100,22],[107,28,100,26],[107,32,100,30,"component"],[107,41,100,39],[107,46,100,44,"undefined"],[107,55,100,53],[107,59,100,57,"getComponent"],[107,71,100,69],[107,76,100,74,"undefined"],[107,85,100,83],[107,87,100,85],[108,10,101,8],[108,14,101,12,"children"],[108,22,101,20],[108,26,101,24],[108,30,101,28],[108,34,101,32,"component"],[108,43,101,41],[108,48,101,46,"undefined"],[108,57,101,55],[108,59,101,57],[109,12,102,10],[109,18,102,16],[109,22,102,20,"Error"],[109,27,102,25],[109,28,102,26],[109,89,102,87,"name"],[109,93,102,91],[109,129,102,127],[109,130,102,128],[110,10,103,8],[111,10,104,8],[111,14,104,12,"children"],[111,22,104,20],[111,26,104,24],[111,30,104,28],[111,34,104,32,"getComponent"],[111,46,104,44],[111,51,104,49,"undefined"],[111,60,104,58],[111,62,104,60],[112,12,105,10],[112,18,105,16],[112,22,105,20,"Error"],[112,27,105,25],[112,28,105,26],[112,92,105,90,"name"],[112,96,105,94],[112,132,105,130],[112,133,105,131],[113,10,106,8],[114,10,107,8],[114,14,107,12,"component"],[114,23,107,21],[114,28,107,26,"undefined"],[114,37,107,35],[114,41,107,39,"getComponent"],[114,53,107,51],[114,58,107,56,"undefined"],[114,67,107,65],[114,69,107,67],[115,12,108,10],[115,18,108,16],[115,22,108,20,"Error"],[115,27,108,25],[115,28,108,26],[115,93,108,91,"name"],[115,97,108,95],[115,133,108,131],[115,134,108,132],[116,10,109,8],[117,10,110,8],[117,14,110,12,"children"],[117,22,110,20],[117,26,110,24],[117,30,110,28],[117,34,110,32],[117,41,110,39,"children"],[117,49,110,47],[117,54,110,52],[117,64,110,62],[117,66,110,64],[118,12,111,10],[118,18,111,16],[118,22,111,20,"Error"],[118,27,111,25],[118,28,111,26],[118,88,111,86,"name"],[118,92,111,90],[118,145,111,143],[118,146,111,144],[119,10,112,8],[120,10,113,8],[120,14,113,12,"component"],[120,23,113,21],[120,28,113,26,"undefined"],[120,37,113,35],[120,41,113,39],[120,42,113,40],[120,46,113,40,"isValidElementType"],[120,73,113,58],[120,75,113,59,"component"],[120,84,113,68],[120,85,113,69],[120,87,113,71],[121,12,114,10],[121,18,114,16],[121,22,114,20,"Error"],[121,27,114,25],[121,28,114,26],[121,89,114,87,"name"],[121,93,114,91],[121,133,114,131],[121,134,114,132],[122,10,115,8],[123,10,116,8],[123,14,116,12,"getComponent"],[123,26,116,24],[123,31,116,29,"undefined"],[123,40,116,38],[123,44,116,42],[123,51,116,49,"getComponent"],[123,63,116,61],[123,68,116,66],[123,78,116,76],[123,80,116,78],[124,12,117,10],[124,18,117,16],[124,22,117,20,"Error"],[124,27,117,25],[124,28,117,26],[124,92,117,90,"name"],[124,96,117,94],[124,151,117,149],[124,152,117,150],[125,10,118,8],[126,10,119,8],[126,14,119,12],[126,21,119,19,"component"],[126,30,119,28],[126,35,119,33],[126,45,119,43],[126,47,119,45],[127,12,120,10],[127,16,120,14,"component"],[127,25,120,23],[127,26,120,24,"name"],[127,30,120,28],[127,35,120,33],[127,46,120,44],[127,48,120,46],[128,14,121,12],[129,14,122,12],[130,14,123,12],[131,14,124,12,"console"],[131,21,124,19],[131,22,124,20,"warn"],[131,26,124,24],[131,27,124,25],[131,112,124,110,"name"],[131,116,124,114],[131,395,124,393],[131,396,124,394],[132,12,125,10],[132,13,125,11],[132,19,125,17],[132,23,125,21],[132,31,125,29],[132,32,125,30,"test"],[132,36,125,34],[132,37,125,35,"component"],[132,46,125,44],[132,47,125,45,"name"],[132,51,125,49],[132,52,125,50],[132,54,125,52],[133,14,126,12,"console"],[133,21,126,19],[133,22,126,20,"warn"],[133,26,126,24],[133,27,126,25],[133,61,126,59,"component"],[133,70,126,68],[133,71,126,69,"name"],[133,75,126,73],[133,96,126,94,"name"],[133,100,126,98],[133,301,126,299],[133,302,126,300],[134,12,127,10],[135,10,128,8],[136,8,129,6],[136,9,129,7],[136,15,129,13],[137,10,130,8],[137,16,130,14],[137,20,130,18,"Error"],[137,25,130,23],[137,26,130,24],[137,108,130,106,"name"],[137,112,130,110],[137,293,130,291],[137,294,130,292],[138,8,131,6],[139,6,132,4],[139,7,132,5],[139,8,132,6],[140,4,133,2],[141,4,134,2],[141,11,134,9,"configs"],[141,18,134,16],[142,2,135,0],[142,3,135,1],[144,2,137,0],[145,0,138,0],[146,0,139,0],[147,0,140,0],[148,0,141,0],[149,0,142,0],[150,0,143,0],[151,2,144,7],[151,11,144,16,"useNavigationBuilder"],[151,31,144,36,"useNavigationBuilder"],[151,32,144,37,"createRouter"],[151,44,144,49],[151,46,144,51,"options"],[151,53,144,58],[151,55,144,60],[152,4,145,2],[152,10,145,8,"navigatorKey"],[152,22,145,20],[152,25,145,23],[152,29,145,23,"useRegisterNavigator"],[152,71,145,43],[152,73,145,44],[152,74,145,45],[153,4,146,2],[153,10,146,8,"route"],[153,15,146,13],[153,18,146,16,"React"],[153,23,146,21],[153,24,146,22,"useContext"],[153,34,146,32],[153,35,146,33,"NavigationRouteContext"],[153,81,146,55],[153,82,146,56],[154,4,147,2],[154,10,147,8],[155,6,148,4,"children"],[155,14,148,12],[156,6,149,4,"layout"],[156,12,149,10],[157,6,150,4,"screenOptions"],[157,19,150,17],[158,6,151,4,"screenLayout"],[158,18,151,16],[159,6,152,4,"screenListeners"],[159,21,152,19],[160,6,153,4,"UNSTABLE_router"],[160,21,153,19],[161,6,154,4],[161,9,154,7,"rest"],[162,4,155,2],[162,5,155,3],[162,8,155,6,"options"],[162,15,155,13],[163,4,156,2],[163,10,156,8,"routeConfigs"],[163,22,156,20],[163,25,156,23,"getRouteConfigsFromChildren"],[163,52,156,50],[163,53,156,51,"children"],[163,61,156,59],[163,62,156,60],[164,4,157,2],[164,10,157,8,"router"],[164,16,157,14],[164,19,157,17],[164,23,157,17,"useLazyValue"],[164,49,157,29],[164,51,157,30],[164,57,157,36],[165,6,158,4],[165,10,158,8,"rest"],[165,14,158,12],[165,15,158,13,"initialRouteName"],[165,31,158,29],[165,35,158,33],[165,39,158,37],[165,43,158,41,"routeConfigs"],[165,55,158,53],[165,56,158,54,"every"],[165,61,158,59],[165,62,158,60,"config"],[165,68,158,66],[165,72,158,70,"config"],[165,78,158,76],[165,79,158,77,"props"],[165,84,158,82],[165,85,158,83,"name"],[165,89,158,87],[165,94,158,92,"rest"],[165,98,158,96],[165,99,158,97,"initialRouteName"],[165,115,158,113],[165,116,158,114],[165,118,158,116],[166,8,159,6],[166,14,159,12],[166,18,159,16,"Error"],[166,23,159,21],[166,24,159,22],[166,57,159,55,"rest"],[166,61,159,59],[166,62,159,60,"initialRouteName"],[166,78,159,76],[166,111,159,109],[166,112,159,110],[167,6,160,4],[168,6,161,4],[168,12,161,10,"original"],[168,20,161,18],[168,23,161,21,"createRouter"],[168,35,161,33],[168,36,161,34,"rest"],[168,40,161,38],[168,41,161,39],[169,6,162,4],[169,10,162,8,"UNSTABLE_router"],[169,25,162,23],[169,29,162,27],[169,33,162,31],[169,35,162,33],[170,8,163,6],[170,14,163,12,"overrides"],[170,23,163,21],[170,26,163,24,"UNSTABLE_router"],[170,41,163,39],[170,42,163,40,"original"],[170,50,163,48],[170,51,163,49],[171,8,164,6],[171,15,164,13],[172,10,165,8],[172,13,165,11,"original"],[172,21,165,19],[173,10,166,8],[173,13,166,11,"overrides"],[174,8,167,6],[174,9,167,7],[175,6,168,4],[176,6,169,4],[176,13,169,11,"original"],[176,21,169,19],[177,4,170,2],[177,5,170,3],[177,6,170,4],[178,4,171,2],[178,10,171,8,"screens"],[178,17,171,15],[178,20,171,18,"routeConfigs"],[178,32,171,30],[178,33,171,31,"reduce"],[178,39,171,37],[178,40,171,38],[178,41,171,39,"acc"],[178,44,171,42],[178,46,171,44,"config"],[178,52,171,50],[178,57,171,55],[179,6,172,4],[179,10,172,8,"config"],[179,16,172,14],[179,17,172,15,"props"],[179,22,172,20],[179,23,172,21,"name"],[179,27,172,25],[179,31,172,29,"acc"],[179,34,172,32],[179,36,172,34],[180,8,173,6],[180,14,173,12],[180,18,173,16,"Error"],[180,23,173,21],[180,24,173,22],[180,133,173,131,"config"],[180,139,173,137],[180,140,173,138,"props"],[180,145,173,143],[180,146,173,144,"name"],[180,150,173,148],[180,154,173,152],[180,155,173,153],[181,6,174,4],[182,6,175,4,"acc"],[182,9,175,7],[182,10,175,8,"config"],[182,16,175,14],[182,17,175,15,"props"],[182,22,175,20],[182,23,175,21,"name"],[182,27,175,25],[182,28,175,26],[182,31,175,29,"config"],[182,37,175,35],[183,6,176,4],[183,13,176,11,"acc"],[183,16,176,14],[184,4,177,2],[184,5,177,3],[184,7,177,5],[184,8,177,6],[184,9,177,7],[184,10,177,8],[185,4,178,2],[185,10,178,8,"routeNames"],[185,20,178,18],[185,23,178,21,"routeConfigs"],[185,35,178,33],[185,36,178,34,"map"],[185,39,178,37],[185,40,178,38,"config"],[185,46,178,44],[185,50,178,48,"config"],[185,56,178,54],[185,57,178,55,"props"],[185,62,178,60],[185,63,178,61,"name"],[185,67,178,65],[185,68,178,66],[186,4,179,2],[186,10,179,8,"routeKeyList"],[186,22,179,20],[186,25,179,23,"routeNames"],[186,35,179,33],[186,36,179,34,"reduce"],[186,42,179,40],[186,43,179,41],[186,44,179,42,"acc"],[186,47,179,45],[186,49,179,47,"curr"],[186,53,179,51],[186,58,179,56],[187,6,180,4,"acc"],[187,9,180,7],[187,10,180,8,"curr"],[187,14,180,12],[187,15,180,13],[187,18,180,16,"screens"],[187,25,180,23],[187,26,180,24,"curr"],[187,30,180,28],[187,31,180,29],[187,32,180,30,"keys"],[187,36,180,34],[187,37,180,35,"map"],[187,40,180,38],[187,41,180,39,"key"],[187,44,180,42],[187,48,180,46,"key"],[187,51,180,49],[187,55,180,53],[187,57,180,55],[187,58,180,56],[187,59,180,57,"join"],[187,63,180,61],[187,64,180,62],[187,67,180,65],[187,68,180,66],[188,6,181,4],[188,13,181,11,"acc"],[188,16,181,14],[189,4,182,2],[189,5,182,3],[189,7,182,5],[189,8,182,6],[189,9,182,7],[189,10,182,8],[190,4,183,2],[190,10,183,8,"routeParamList"],[190,24,183,22],[190,27,183,25,"routeNames"],[190,37,183,35],[190,38,183,36,"reduce"],[190,44,183,42],[190,45,183,43],[190,46,183,44,"acc"],[190,49,183,47],[190,51,183,49,"curr"],[190,55,183,53],[190,60,183,58],[191,6,184,4],[191,12,184,10],[192,8,185,6,"initialParams"],[193,6,186,4],[193,7,186,5],[193,10,186,8,"screens"],[193,17,186,15],[193,18,186,16,"curr"],[193,22,186,20],[193,23,186,21],[193,24,186,22,"props"],[193,29,186,27],[194,6,187,4,"acc"],[194,9,187,7],[194,10,187,8,"curr"],[194,14,187,12],[194,15,187,13],[194,18,187,16,"initialParams"],[194,31,187,29],[195,6,188,4],[195,13,188,11,"acc"],[195,16,188,14],[196,4,189,2],[196,5,189,3],[196,7,189,5],[196,8,189,6],[196,9,189,7],[196,10,189,8],[197,4,190,2],[197,10,190,8,"routeGetIdList"],[197,24,190,22],[197,27,190,25,"routeNames"],[197,37,190,35],[197,38,190,36,"reduce"],[197,44,190,42],[197,45,190,43],[197,46,190,44,"acc"],[197,49,190,47],[197,51,190,49,"curr"],[197,55,190,53],[197,60,190,58,"Object"],[197,66,190,64],[197,67,190,65,"assign"],[197,73,190,71],[197,74,190,72,"acc"],[197,77,190,75],[197,79,190,77],[198,6,191,4],[198,7,191,5,"curr"],[198,11,191,9],[198,14,191,12,"screens"],[198,21,191,19],[198,22,191,20,"curr"],[198,26,191,24],[198,27,191,25],[198,28,191,26,"props"],[198,33,191,31],[198,34,191,32,"getId"],[199,4,192,2],[199,5,192,3],[199,6,192,4],[199,8,192,6],[199,9,192,7],[199,10,192,8],[199,11,192,9],[200,4,193,2],[200,8,193,6],[200,9,193,7,"routeNames"],[200,19,193,17],[200,20,193,18,"length"],[200,26,193,24],[200,28,193,26],[201,6,194,4],[201,12,194,10],[201,16,194,14,"Error"],[201,21,194,19],[201,22,194,20],[201,114,194,112],[201,115,194,113],[202,4,195,2],[203,4,196,2],[203,10,196,8,"isStateValid"],[203,22,196,20],[203,25,196,23,"React"],[203,30,196,28],[203,31,196,29,"useCallback"],[203,42,196,40],[203,43,196,41,"state"],[203,48,196,46],[203,52,196,50,"state"],[203,57,196,55],[203,58,196,56,"type"],[203,62,196,60],[203,67,196,65,"undefined"],[203,76,196,74],[203,80,196,78,"state"],[203,85,196,83],[203,86,196,84,"type"],[203,90,196,88],[203,95,196,93,"router"],[203,101,196,99],[203,102,196,100,"type"],[203,106,196,104],[203,108,196,106],[203,109,196,107,"router"],[203,115,196,113],[203,116,196,114,"type"],[203,120,196,118],[203,121,196,119],[203,122,196,120],[204,4,197,2],[204,10,197,8,"isStateInitialized"],[204,28,197,26],[204,31,197,29,"React"],[204,36,197,34],[204,37,197,35,"useCallback"],[204,48,197,46],[204,49,197,47,"state"],[204,54,197,52],[204,58,197,56,"state"],[204,63,197,61],[204,68,197,66,"undefined"],[204,77,197,75],[204,81,197,79,"state"],[204,86,197,84],[204,87,197,85,"stale"],[204,92,197,90],[204,97,197,95],[204,102,197,100],[204,106,197,104,"isStateValid"],[204,118,197,116],[204,119,197,117,"state"],[204,124,197,122],[204,125,197,123],[204,127,197,125],[204,128,197,126,"isStateValid"],[204,140,197,138],[204,141,197,139],[204,142,197,140],[205,4,198,2],[205,10,198,8],[206,6,199,4,"state"],[206,11,199,9],[206,13,199,11,"currentState"],[206,25,199,23],[207,6,200,4,"getState"],[207,14,200,12],[207,16,200,14,"getCurrentState"],[207,31,200,29],[208,6,201,4,"setState"],[208,14,201,12],[208,16,201,14,"setCurrentState"],[208,31,201,29],[209,6,202,4,"setKey"],[209,12,202,10],[210,6,203,4,"getKey"],[210,12,203,10],[211,6,204,4,"getIsInitial"],[212,4,205,2],[212,5,205,3],[212,8,205,6,"React"],[212,13,205,11],[212,14,205,12,"useContext"],[212,24,205,22],[212,25,205,23,"NavigationStateContext"],[212,71,205,45],[212,72,205,46],[213,4,206,2],[213,10,206,8,"stateCleanedUp"],[213,24,206,22],[213,27,206,25,"React"],[213,32,206,30],[213,33,206,31,"useRef"],[213,39,206,37],[213,40,206,38],[213,45,206,43],[213,46,206,44],[214,4,207,2],[214,10,207,8,"setState"],[214,18,207,16],[214,21,207,19],[214,25,207,19,"useLatestCallback"],[214,51,207,36],[214,53,207,37,"state"],[214,58,207,42],[214,62,207,46],[215,6,208,4],[215,10,208,8,"stateCleanedUp"],[215,24,208,22],[215,25,208,23,"current"],[215,32,208,30],[215,34,208,32],[216,8,209,6],[217,8,210,6],[218,8,211,6],[219,8,212,6],[220,6,213,4],[221,6,214,4,"setCurrentState"],[221,21,214,19],[221,22,214,20,"state"],[221,27,214,25],[221,28,214,26],[222,4,215,2],[222,5,215,3],[222,6,215,4],[223,4,216,2],[223,10,216,8],[223,11,216,9,"initializedState"],[223,27,216,25],[223,29,216,27,"isFirstStateInitialization"],[223,55,216,53],[223,56,216,54],[223,59,216,57,"React"],[223,64,216,62],[223,65,216,63,"useMemo"],[223,72,216,70],[223,73,216,71],[223,79,216,77],[224,6,217,4],[224,12,217,10,"initialRouteParamList"],[224,33,217,31],[224,36,217,34,"routeNames"],[224,46,217,44],[224,47,217,45,"reduce"],[224,53,217,51],[224,54,217,52],[224,55,217,53,"acc"],[224,58,217,56],[224,60,217,58,"curr"],[224,64,217,62],[224,69,217,67],[225,8,218,6],[225,14,218,12],[226,10,219,8,"initialParams"],[227,8,220,6],[227,9,220,7],[227,12,220,10,"screens"],[227,19,220,17],[227,20,220,18,"curr"],[227,24,220,22],[227,25,220,23],[227,26,220,24,"props"],[227,31,220,29],[228,8,221,6],[228,14,221,12,"initialParamsFromParams"],[228,37,221,35],[228,40,221,38,"route"],[228,45,221,43],[228,47,221,45,"params"],[228,53,221,51],[228,55,221,53,"state"],[228,60,221,58],[228,64,221,62],[228,68,221,66],[228,72,221,70,"route"],[228,77,221,75],[228,79,221,77,"params"],[228,85,221,83],[228,87,221,85,"initial"],[228,94,221,92],[228,99,221,97],[228,104,221,102],[228,108,221,106,"route"],[228,113,221,111],[228,115,221,113,"params"],[228,121,221,119],[228,123,221,121,"screen"],[228,129,221,127],[228,134,221,132,"curr"],[228,138,221,136],[228,141,221,139,"route"],[228,146,221,144],[228,147,221,145,"params"],[228,153,221,151],[228,154,221,152,"params"],[228,160,221,158],[228,163,221,161,"undefined"],[228,172,221,170],[229,8,222,6,"acc"],[229,11,222,9],[229,12,222,10,"curr"],[229,16,222,14],[229,17,222,15],[229,20,222,18,"initialParams"],[229,33,222,31],[229,38,222,36,"undefined"],[229,47,222,45],[229,51,222,49,"initialParamsFromParams"],[229,74,222,72],[229,79,222,77,"undefined"],[229,88,222,86],[229,91,222,89],[230,10,223,8],[230,13,223,11,"initialParams"],[230,26,223,24],[231,10,224,8],[231,13,224,11,"initialParamsFromParams"],[232,8,225,6],[232,9,225,7],[232,12,225,10,"undefined"],[232,21,225,19],[233,8,226,6],[233,15,226,13,"acc"],[233,18,226,16],[234,6,227,4],[234,7,227,5],[234,9,227,7],[234,10,227,8],[234,11,227,9],[234,12,227,10],[236,6,229,4],[237,6,230,4],[238,6,231,4],[239,6,232,4],[240,6,233,4],[240,10,233,8],[240,11,233,9,"currentState"],[240,23,233,21],[240,28,233,26,"undefined"],[240,37,233,35],[240,41,233,39],[240,42,233,40,"isStateValid"],[240,54,233,52],[240,55,233,53,"currentState"],[240,67,233,65],[240,68,233,66],[240,73,233,71,"route"],[240,78,233,76],[240,80,233,78,"params"],[240,86,233,84],[240,88,233,86,"state"],[240,93,233,91],[240,97,233,95],[240,101,233,99],[240,105,233,103],[240,107,233,105],[240,114,233,112,"route"],[240,119,233,117],[240,121,233,119,"params"],[240,127,233,125],[240,129,233,127,"screen"],[240,135,233,133],[240,140,233,138],[240,148,233,146],[240,152,233,150,"route"],[240,157,233,155],[240,159,233,157,"params"],[240,165,233,163],[240,167,233,165,"initial"],[240,174,233,172],[240,179,233,177],[240,184,233,182],[240,185,233,183],[240,187,233,185],[241,8,234,6],[241,15,234,13],[241,16,234,14,"router"],[241,22,234,20],[241,23,234,21,"getInitialState"],[241,38,234,36],[241,39,234,37],[242,10,235,8,"routeNames"],[242,20,235,18],[243,10,236,8,"routeParamList"],[243,24,236,22],[243,26,236,24,"initialRouteParamList"],[243,47,236,45],[244,10,237,8,"routeGetIdList"],[245,8,238,6],[245,9,238,7],[245,10,238,8],[245,12,238,10],[245,16,238,14],[245,17,238,15],[246,6,239,4],[246,7,239,5],[246,13,239,11],[247,8,240,6],[247,12,240,10,"stateFromParams"],[247,27,240,25],[248,8,241,6],[248,12,241,10,"route"],[248,17,241,15],[248,19,241,17,"params"],[248,25,241,23],[248,27,241,25,"state"],[248,32,241,30],[248,36,241,34],[248,40,241,38],[248,42,241,40],[249,10,242,8,"stateFromParams"],[249,25,242,23],[249,28,242,26,"route"],[249,33,242,31],[249,34,242,32,"params"],[249,40,242,38],[249,41,242,39,"state"],[249,46,242,44],[250,8,243,6],[250,9,243,7],[250,15,243,13],[250,19,243,17],[250,26,243,24,"route"],[250,31,243,29],[250,33,243,31,"params"],[250,39,243,37],[250,41,243,39,"screen"],[250,47,243,45],[250,52,243,50],[250,60,243,58],[250,64,243,62,"route"],[250,69,243,67],[250,71,243,69,"params"],[250,77,243,75],[250,79,243,77,"initial"],[250,86,243,84],[250,91,243,89],[250,96,243,94],[250,98,243,96],[251,10,244,8,"stateFromParams"],[251,25,244,23],[251,28,244,26],[252,12,245,10,"index"],[252,17,245,15],[252,19,245,17],[252,20,245,18],[253,12,246,10,"routes"],[253,18,246,16],[253,20,246,18],[253,21,246,19],[254,14,247,12,"name"],[254,18,247,16],[254,20,247,18,"route"],[254,25,247,23],[254,26,247,24,"params"],[254,32,247,30],[254,33,247,31,"screen"],[254,39,247,37],[255,14,248,12,"params"],[255,20,248,18],[255,22,248,20,"route"],[255,27,248,25],[255,28,248,26,"params"],[255,34,248,32],[255,35,248,33,"params"],[255,41,248,39],[256,14,249,12,"path"],[256,18,249,16],[256,20,249,18,"route"],[256,25,249,23],[256,26,249,24,"params"],[256,32,249,30],[256,33,249,31,"path"],[257,12,250,10],[257,13,250,11],[258,10,251,8],[258,11,251,9],[259,8,252,6],[260,8,253,6],[260,15,253,13],[260,16,253,14,"router"],[260,22,253,20],[260,23,253,21,"getRehydratedState"],[260,41,253,39],[260,42,253,40,"stateFromParams"],[260,57,253,55],[260,61,253,59,"currentState"],[260,73,253,71],[260,75,253,73],[261,10,254,8,"routeNames"],[261,20,254,18],[262,10,255,8,"routeParamList"],[262,24,255,22],[262,26,255,24,"initialRouteParamList"],[262,47,255,45],[263,10,256,8,"routeGetIdList"],[264,8,257,6],[264,9,257,7],[264,10,257,8],[264,12,257,10],[264,17,257,15],[264,18,257,16],[265,6,258,4],[266,6,259,4],[267,6,260,4],[268,6,261,4],[269,6,262,4],[270,6,263,4],[271,6,264,4],[272,4,265,2],[272,5,265,3],[272,7,265,5],[272,8,265,6,"currentState"],[272,20,265,18],[272,22,265,20,"router"],[272,28,265,26],[272,30,265,28,"isStateValid"],[272,42,265,40],[272,43,265,41],[272,44,265,42],[273,4,266,2],[273,10,266,8,"previousRouteKeyListRef"],[273,33,266,31],[273,36,266,34,"React"],[273,41,266,39],[273,42,266,40,"useRef"],[273,48,266,46],[273,49,266,47,"routeKeyList"],[273,61,266,59],[273,62,266,60],[274,4,267,2,"React"],[274,9,267,7],[274,10,267,8,"useEffect"],[274,19,267,17],[274,20,267,18],[274,26,267,24],[275,6,268,4,"previousRouteKeyListRef"],[275,29,268,27],[275,30,268,28,"current"],[275,37,268,35],[275,40,268,38,"routeKeyList"],[275,52,268,50],[276,4,269,2],[276,5,269,3],[276,6,269,4],[277,4,270,2],[277,10,270,8,"previousRouteKeyList"],[277,30,270,28],[277,33,270,31,"previousRouteKeyListRef"],[277,56,270,54],[277,57,270,55,"current"],[277,64,270,62],[278,4,271,2],[278,8,271,6,"state"],[278,13,271,11],[279,4,272,2],[280,4,273,2],[281,4,274,2],[282,4,275,2,"isStateInitialized"],[282,22,275,20],[282,23,275,21,"currentState"],[282,35,275,33],[282,36,275,34],[282,39,275,37,"currentState"],[282,51,275,49],[282,54,275,52,"initializedState"],[282,70,275,68],[283,4,276,2],[283,8,276,6,"nextState"],[283,17,276,15],[283,20,276,18,"state"],[283,25,276,23],[284,4,277,2],[284,8,277,6],[284,9,277,7],[284,13,277,7,"isArrayEqual"],[284,39,277,19],[284,41,277,20,"state"],[284,46,277,25],[284,47,277,26,"routeNames"],[284,57,277,36],[284,59,277,38,"routeNames"],[284,69,277,48],[284,70,277,49],[284,74,277,53],[284,75,277,54],[284,79,277,54,"isRecordEqual"],[284,107,277,67],[284,109,277,68,"routeKeyList"],[284,121,277,80],[284,123,277,82,"previousRouteKeyList"],[284,143,277,102],[284,144,277,103],[284,146,277,105],[285,6,278,4],[286,6,279,4,"nextState"],[286,15,279,13],[286,18,279,16,"router"],[286,24,279,22],[286,25,279,23,"getStateForRouteNamesChange"],[286,52,279,50],[286,53,279,51,"state"],[286,58,279,56],[286,60,279,58],[287,8,280,6,"routeNames"],[287,18,280,16],[288,8,281,6,"routeParamList"],[288,22,281,20],[289,8,282,6,"routeGetIdList"],[289,22,282,20],[290,8,283,6,"routeKeyChanges"],[290,23,283,21],[290,25,283,23,"Object"],[290,31,283,29],[290,32,283,30,"keys"],[290,36,283,34],[290,37,283,35,"routeKeyList"],[290,49,283,47],[290,50,283,48],[290,51,283,49,"filter"],[290,57,283,55],[290,58,283,56,"name"],[290,62,283,60],[290,66,283,64,"name"],[290,70,283,68],[290,74,283,72,"previousRouteKeyList"],[290,94,283,92],[290,98,283,96,"routeKeyList"],[290,110,283,108],[290,111,283,109,"name"],[290,115,283,113],[290,116,283,114],[290,121,283,119,"previousRouteKeyList"],[290,141,283,139],[290,142,283,140,"name"],[290,146,283,144],[290,147,283,145],[291,6,284,4],[291,7,284,5],[291,8,284,6],[292,4,285,2],[293,4,286,2],[293,10,286,8,"previousNestedParamsRef"],[293,33,286,31],[293,36,286,34,"React"],[293,41,286,39],[293,42,286,40,"useRef"],[293,48,286,46],[293,49,286,47,"route"],[293,54,286,52],[293,56,286,54,"params"],[293,62,286,60],[293,63,286,61],[294,4,287,2,"React"],[294,9,287,7],[294,10,287,8,"useEffect"],[294,19,287,17],[294,20,287,18],[294,26,287,24],[295,6,288,4,"previousNestedParamsRef"],[295,29,288,27],[295,30,288,28,"current"],[295,37,288,35],[295,40,288,38,"route"],[295,45,288,43],[295,47,288,45,"params"],[295,53,288,51],[296,4,289,2],[296,5,289,3],[296,7,289,5],[296,8,289,6,"route"],[296,13,289,11],[296,15,289,13,"params"],[296,21,289,19],[296,22,289,20],[296,23,289,21],[297,4,290,2],[297,8,290,6,"route"],[297,13,290,11],[297,15,290,13,"params"],[297,21,290,19],[297,23,290,21],[298,6,291,4],[298,12,291,10,"previousParams"],[298,26,291,24],[298,29,291,27,"previousNestedParamsRef"],[298,52,291,50],[298,53,291,51,"current"],[298,60,291,58],[299,6,292,4],[299,10,292,8,"action"],[299,16,292,14],[300,6,293,4],[300,10,293,8],[300,17,293,15,"route"],[300,22,293,20],[300,23,293,21,"params"],[300,29,293,27],[300,30,293,28,"state"],[300,35,293,33],[300,40,293,38],[300,48,293,46],[300,52,293,50,"route"],[300,57,293,55],[300,58,293,56,"params"],[300,64,293,62],[300,65,293,63,"state"],[300,70,293,68],[300,74,293,72],[300,78,293,76],[300,82,293,80,"route"],[300,87,293,85],[300,88,293,86,"params"],[300,94,293,92],[300,99,293,97,"previousParams"],[300,113,293,111],[300,115,293,113],[301,8,294,6],[302,8,295,6,"action"],[302,14,295,12],[302,17,295,15,"CommonActions"],[302,39,295,28],[302,40,295,29,"reset"],[302,45,295,34],[302,46,295,35,"route"],[302,51,295,40],[302,52,295,41,"params"],[302,58,295,47],[302,59,295,48,"state"],[302,64,295,53],[302,65,295,54],[303,6,296,4],[303,7,296,5],[303,13,296,11],[303,17,296,15],[303,24,296,22,"route"],[303,29,296,27],[303,30,296,28,"params"],[303,36,296,34],[303,37,296,35,"screen"],[303,43,296,41],[303,48,296,46],[303,56,296,54],[303,61,296,59,"route"],[303,66,296,64],[303,67,296,65,"params"],[303,73,296,71],[303,74,296,72,"initial"],[303,81,296,79],[303,86,296,84],[303,91,296,89],[303,95,296,93,"isFirstStateInitialization"],[303,121,296,119],[303,125,296,123,"route"],[303,130,296,128],[303,131,296,129,"params"],[303,137,296,135],[303,142,296,140,"previousParams"],[303,156,296,154],[303,157,296,155],[303,159,296,157],[304,8,297,6],[305,8,298,6,"action"],[305,14,298,12],[305,17,298,15,"CommonActions"],[305,39,298,28],[305,40,298,29,"navigate"],[305,48,298,37],[305,49,298,38],[306,10,299,8,"name"],[306,14,299,12],[306,16,299,14,"route"],[306,21,299,19],[306,22,299,20,"params"],[306,28,299,26],[306,29,299,27,"screen"],[306,35,299,33],[307,10,300,8,"params"],[307,16,300,14],[307,18,300,16,"route"],[307,23,300,21],[307,24,300,22,"params"],[307,30,300,28],[307,31,300,29,"params"],[307,37,300,35],[308,10,301,8,"path"],[308,14,301,12],[308,16,301,14,"route"],[308,21,301,19],[308,22,301,20,"params"],[308,28,301,26],[308,29,301,27,"path"],[308,33,301,31],[309,10,302,8,"merge"],[309,15,302,13],[309,17,302,15,"route"],[309,22,302,20],[309,23,302,21,"params"],[309,29,302,27],[309,30,302,28,"merge"],[309,35,302,33],[310,10,303,8,"pop"],[310,13,303,11],[310,15,303,13,"route"],[310,20,303,18],[310,21,303,19,"params"],[310,27,303,25],[310,28,303,26,"pop"],[311,8,304,6],[311,9,304,7],[311,10,304,8],[312,6,305,4],[314,6,307,4],[315,6,308,4],[315,12,308,10,"updatedState"],[315,24,308,22],[315,27,308,25,"action"],[315,33,308,31],[315,36,308,34,"router"],[315,42,308,40],[315,43,308,41,"getStateForAction"],[315,60,308,58],[315,61,308,59,"nextState"],[315,70,308,68],[315,72,308,70,"action"],[315,78,308,76],[315,80,308,78],[316,8,309,6,"routeNames"],[316,18,309,16],[317,8,310,6,"routeParamList"],[317,22,310,20],[318,8,311,6,"routeGetIdList"],[319,6,312,4],[319,7,312,5],[319,8,312,6],[319,11,312,9],[319,15,312,13],[320,6,313,4,"nextState"],[320,15,313,13],[320,18,313,16,"updatedState"],[320,30,313,28],[320,35,313,33],[320,39,313,37],[320,42,313,40,"router"],[320,48,313,46],[320,49,313,47,"getRehydratedState"],[320,67,313,65],[320,68,313,66,"updatedState"],[320,80,313,78],[320,82,313,80],[321,8,314,6,"routeNames"],[321,18,314,16],[322,8,315,6,"routeParamList"],[322,22,315,20],[323,8,316,6,"routeGetIdList"],[324,6,317,4],[324,7,317,5],[324,8,317,6],[324,11,317,9,"nextState"],[324,20,317,18],[325,4,318,2],[326,4,319,2],[326,10,319,8,"shouldUpdate"],[326,22,319,20],[326,25,319,23,"state"],[326,30,319,28],[326,35,319,33,"nextState"],[326,44,319,42],[327,4,320,2],[327,8,320,2,"useScheduleUpdate"],[327,44,320,19],[327,46,320,20],[327,52,320,26],[328,6,321,4],[328,10,321,8,"shouldUpdate"],[328,22,321,20],[328,24,321,22],[329,8,322,6],[330,8,323,6,"setState"],[330,16,323,14],[330,17,323,15,"nextState"],[330,26,323,24],[330,27,323,25],[331,6,324,4],[332,4,325,2],[332,5,325,3],[332,6,325,4],[334,4,327,2],[335,4,328,2],[336,4,329,2],[337,4,330,2,"state"],[337,9,330,7],[337,12,330,10,"nextState"],[337,21,330,19],[338,4,331,2,"React"],[338,9,331,7],[338,10,331,8,"useEffect"],[338,19,331,17],[338,20,331,18],[338,26,331,24],[339,6,332,4],[340,6,333,4],[341,6,334,4,"stateCleanedUp"],[341,20,334,18],[341,21,334,19,"current"],[341,28,334,26],[341,31,334,29],[341,36,334,34],[342,6,335,4,"setKey"],[342,12,335,10],[342,13,335,11,"navigatorKey"],[342,25,335,23],[342,26,335,24],[343,6,336,4],[343,10,336,8],[343,11,336,9,"getIsInitial"],[343,23,336,21],[343,24,336,22],[343,25,336,23],[343,27,336,25],[344,8,337,6],[345,8,338,6],[346,8,339,6],[347,8,340,6,"setState"],[347,16,340,14],[347,17,340,15,"nextState"],[347,26,340,24],[347,27,340,25],[348,6,341,4],[349,6,342,4],[349,13,342,11],[349,19,342,17],[350,8,343,6],[351,8,344,6],[351,12,344,10,"getCurrentState"],[351,27,344,25],[351,28,344,26],[351,29,344,27],[351,34,344,32,"undefined"],[351,43,344,41],[351,47,344,45,"getKey"],[351,53,344,51],[351,54,344,52],[351,55,344,53],[351,60,344,58,"navigatorKey"],[351,72,344,70],[351,74,344,72],[352,10,345,8,"setCurrentState"],[352,25,345,23],[352,26,345,24,"undefined"],[352,35,345,33],[352,36,345,34],[353,10,346,8,"stateCleanedUp"],[353,24,346,22],[353,25,346,23,"current"],[353,32,346,30],[353,35,346,33],[353,39,346,37],[354,8,347,6],[355,6,348,4],[355,7,348,5],[356,6,349,4],[357,4,350,2],[357,5,350,3],[357,7,350,5],[357,9,350,7],[357,10,350,8],[359,4,352,2],[360,4,353,2],[361,4,354,2],[362,4,355,2],[363,4,356,2],[364,4,357,2],[364,10,357,8,"stateRef"],[364,18,357,16],[364,21,357,19,"React"],[364,26,357,24],[364,27,357,25,"useRef"],[364,33,357,31],[364,34,357,32,"state"],[364,39,357,37],[364,40,357,38],[365,4,358,2,"stateRef"],[365,12,358,10],[365,13,358,11,"current"],[365,20,358,18],[365,23,358,21,"state"],[365,28,358,26],[366,4,359,2],[366,8,359,2,"useClientLayoutEffect"],[366,52,359,23],[366,54,359,24],[366,60,359,30],[367,6,360,4,"stateRef"],[367,14,360,12],[367,15,360,13,"current"],[367,22,360,20],[367,25,360,23],[367,29,360,27],[368,4,361,2],[368,5,361,3],[368,6,361,4],[369,4,362,2],[369,10,362,8,"getState"],[369,18,362,16],[369,21,362,19],[369,25,362,19,"useLatestCallback"],[369,51,362,36],[369,53,362,37],[369,59,362,43],[370,6,363,4],[370,12,363,10,"currentState"],[370,24,363,22],[370,27,363,25,"getCurrentState"],[370,42,363,40],[370,43,363,41],[370,44,363,42],[371,6,364,4],[371,13,364,11],[371,17,364,11,"deepFreeze"],[371,39,364,21],[371,41,364,22,"isStateInitialized"],[371,59,364,40],[371,60,364,41,"currentState"],[371,72,364,53],[371,73,364,54],[371,76,364,57,"currentState"],[371,88,364,69],[371,91,364,72,"initializedState"],[371,107,364,88],[371,108,364,89],[372,4,365,2],[372,5,365,3],[372,6,365,4],[373,4,366,2],[373,10,366,8,"emitter"],[373,17,366,15],[373,20,366,18],[373,24,366,18,"useEventEmitter"],[373,56,366,33],[373,58,366,34,"e"],[373,59,366,35],[373,63,366,39],[374,6,367,4],[374,12,367,10,"routeNames"],[374,22,367,20],[374,25,367,23],[374,27,367,25],[375,6,368,4],[375,10,368,8,"route"],[375,15,368,13],[376,6,369,4],[376,10,369,8,"e"],[376,11,369,9],[376,12,369,10,"target"],[376,18,369,16],[376,20,369,18],[377,8,370,6,"route"],[377,13,370,11],[377,16,370,14,"state"],[377,21,370,19],[377,22,370,20,"routes"],[377,28,370,26],[377,29,370,27,"find"],[377,33,370,31],[377,34,370,32,"route"],[377,39,370,37],[377,43,370,41,"route"],[377,48,370,46],[377,49,370,47,"key"],[377,52,370,50],[377,57,370,55,"e"],[377,58,370,56],[377,59,370,57,"target"],[377,65,370,63],[377,66,370,64],[378,8,371,6],[378,12,371,10,"route"],[378,17,371,15],[378,19,371,17,"name"],[378,23,371,21],[378,25,371,23],[379,10,372,8,"routeNames"],[379,20,372,18],[379,21,372,19,"push"],[379,25,372,23],[379,26,372,24,"route"],[379,31,372,29],[379,32,372,30,"name"],[379,36,372,34],[379,37,372,35],[380,8,373,6],[381,6,374,4],[381,7,374,5],[381,13,374,11],[382,8,375,6,"route"],[382,13,375,11],[382,16,375,14,"state"],[382,21,375,19],[382,22,375,20,"routes"],[382,28,375,26],[382,29,375,27,"state"],[382,34,375,32],[382,35,375,33,"index"],[382,40,375,38],[382,41,375,39],[383,8,376,6,"routeNames"],[383,18,376,16],[383,19,376,17,"push"],[383,23,376,21],[383,24,376,22],[383,27,376,25,"Object"],[383,33,376,31],[383,34,376,32,"keys"],[383,38,376,36],[383,39,376,37,"screens"],[383,46,376,44],[383,47,376,45],[383,48,376,46,"filter"],[383,54,376,52],[383,55,376,53,"name"],[383,59,376,57],[383,63,376,61,"route"],[383,68,376,66],[383,70,376,68,"name"],[383,74,376,72],[383,79,376,77,"name"],[383,83,376,81],[383,84,376,82],[383,85,376,83],[384,6,377,4],[385,6,378,4],[385,10,378,8,"route"],[385,15,378,13],[385,19,378,17],[385,23,378,21],[385,25,378,23],[386,8,379,6],[387,6,380,4],[388,6,381,4],[388,12,381,10,"navigation"],[388,22,381,20],[388,25,381,23,"descriptors"],[388,36,381,34],[388,37,381,35,"route"],[388,42,381,40],[388,43,381,41,"key"],[388,46,381,44],[388,47,381,45],[388,48,381,46,"navigation"],[388,58,381,56],[389,6,382,4],[389,12,382,10,"listeners"],[389,21,382,19],[389,24,382,22],[389,26,382,24],[389,27,382,25,"concat"],[389,33,382,31],[390,6,383,4],[391,6,384,4],[391,9,384,7],[391,10,384,8,"screenListeners"],[391,25,384,23],[391,27,384,25],[391,30,384,28,"routeNames"],[391,40,384,38],[391,41,384,39,"map"],[391,44,384,42],[391,45,384,43,"name"],[391,49,384,47],[391,53,384,51],[392,8,385,6],[392,14,385,12],[393,10,386,8,"listeners"],[394,8,387,6],[394,9,387,7],[394,12,387,10,"screens"],[394,19,387,17],[394,20,387,18,"name"],[394,24,387,22],[394,25,387,23],[394,26,387,24,"props"],[394,31,387,29],[395,8,388,6],[395,15,388,13,"listeners"],[395,24,388,22],[396,6,389,4],[396,7,389,5],[396,8,389,6],[396,9,389,7],[396,10,389,8,"map"],[396,13,389,11],[396,14,389,12,"listeners"],[396,23,389,21],[396,27,389,25],[397,8,390,6],[397,14,390,12,"map"],[397,17,390,15],[397,20,390,18],[397,27,390,25,"listeners"],[397,36,390,34],[397,41,390,39],[397,51,390,49],[397,54,390,52,"listeners"],[397,63,390,61],[397,64,390,62],[398,10,391,8,"route"],[398,15,391,13],[398,17,391,15,"route"],[398,22,391,20],[399,10,392,8,"navigation"],[400,8,393,6],[400,9,393,7],[400,10,393,8],[400,13,393,11,"listeners"],[400,22,393,20],[401,8,394,6],[401,15,394,13,"map"],[401,18,394,16],[401,21,394,19,"Object"],[401,27,394,25],[401,28,394,26,"keys"],[401,32,394,30],[401,33,394,31,"map"],[401,36,394,34],[401,37,394,35],[401,38,394,36,"filter"],[401,44,394,42],[401,45,394,43,"type"],[401,49,394,47],[401,53,394,51,"type"],[401,57,394,55],[401,62,394,60,"e"],[401,63,394,61],[401,64,394,62,"type"],[401,68,394,66],[401,69,394,67],[401,70,394,68,"map"],[401,73,394,71],[401,74,394,72,"type"],[401,78,394,76],[401,82,394,80,"map"],[401,85,394,83],[401,88,394,86,"type"],[401,92,394,90],[401,93,394,91],[401,94,394,92],[401,97,394,95,"undefined"],[401,106,394,104],[402,6,395,4],[402,7,395,5],[402,8,395,6],[403,6,396,4],[404,6,397,4],[405,6,397,4],[405,7,398,5,"filter"],[405,13,398,11],[405,14,398,12],[405,15,398,13,"cb"],[405,17,398,15],[405,19,398,17,"i"],[405,20,398,18],[405,22,398,20,"self"],[405,26,398,24],[405,31,398,29,"cb"],[405,33,398,31],[405,37,398,35,"self"],[405,41,398,39],[405,42,398,40,"lastIndexOf"],[405,53,398,51],[405,54,398,52,"cb"],[405,56,398,54],[405,57,398,55],[405,62,398,60,"i"],[405,63,398,61],[405,64,398,62],[406,6,399,4,"listeners"],[406,15,399,13],[406,16,399,14,"forEach"],[406,23,399,21],[406,24,399,22,"listener"],[406,32,399,30],[406,36,399,34,"listener"],[406,44,399,42],[406,47,399,45,"e"],[406,48,399,46],[406,49,399,47],[406,50,399,48],[407,4,400,2],[407,5,400,3],[407,6,400,4],[408,4,401,2],[408,8,401,2,"useFocusEvents"],[408,38,401,16],[408,40,401,17],[409,6,402,4,"state"],[409,11,402,9],[410,6,403,4,"emitter"],[411,4,404,2],[411,5,404,3],[411,6,404,4],[412,4,405,2,"React"],[412,9,405,7],[412,10,405,8,"useEffect"],[412,19,405,17],[412,20,405,18],[412,26,405,24],[413,6,406,4,"emitter"],[413,13,406,11],[413,14,406,12,"emit"],[413,18,406,16],[413,19,406,17],[414,8,407,6,"type"],[414,12,407,10],[414,14,407,12],[414,21,407,19],[415,8,408,6,"data"],[415,12,408,10],[415,14,408,12],[416,10,409,8,"state"],[417,8,410,6],[418,6,411,4],[418,7,411,5],[418,8,411,6],[419,4,412,2],[419,5,412,3],[419,7,412,5],[419,8,412,6,"emitter"],[419,15,412,13],[419,17,412,15,"state"],[419,22,412,20],[419,23,412,21],[419,24,412,22],[420,4,413,2],[420,10,413,8],[421,6,414,4,"listeners"],[421,15,414,13],[421,17,414,15,"childListeners"],[421,31,414,29],[422,6,415,4,"addListener"],[423,4,416,2],[423,5,416,3],[423,8,416,6],[423,12,416,6,"useChildListeners"],[423,48,416,23],[423,50,416,24],[423,51,416,25],[424,4,417,2],[424,10,417,8],[425,6,418,4,"keyedListeners"],[425,20,418,18],[426,6,419,4,"addKeyedListener"],[427,4,420,2],[427,5,420,3],[427,8,420,6],[427,12,420,6,"useKeyedChildListeners"],[427,58,420,28],[427,60,420,29],[427,61,420,30],[428,4,421,2],[428,10,421,8,"onAction"],[428,18,421,16],[428,21,421,19],[428,25,421,19,"useOnAction"],[428,49,421,30],[428,51,421,31],[429,6,422,4,"router"],[429,12,422,10],[430,6,423,4,"getState"],[430,14,423,12],[431,6,424,4,"setState"],[431,14,424,12],[432,6,425,4,"key"],[432,9,425,7],[432,11,425,9,"route"],[432,16,425,14],[432,18,425,16,"key"],[432,21,425,19],[433,6,426,4,"actionListeners"],[433,21,426,19],[433,23,426,21,"childListeners"],[433,37,426,35],[433,38,426,36,"action"],[433,44,426,42],[434,6,427,4,"beforeRemoveListeners"],[434,27,427,25],[434,29,427,27,"keyedListeners"],[434,43,427,41],[434,44,427,42,"beforeRemove"],[434,56,427,54],[435,6,428,4,"routerConfigOptions"],[435,25,428,23],[435,27,428,25],[436,8,429,6,"routeNames"],[436,18,429,16],[437,8,430,6,"routeParamList"],[437,22,430,20],[438,8,431,6,"routeGetIdList"],[439,6,432,4],[439,7,432,5],[440,6,433,4,"emitter"],[441,4,434,2],[441,5,434,3],[441,6,434,4],[442,4,435,2],[442,10,435,8,"onRouteFocus"],[442,22,435,20],[442,25,435,23],[442,29,435,23,"useOnRouteFocus"],[442,61,435,38],[442,63,435,39],[443,6,436,4,"router"],[443,12,436,10],[444,6,437,4,"key"],[444,9,437,7],[444,11,437,9,"route"],[444,16,437,14],[444,18,437,16,"key"],[444,21,437,19],[445,6,438,4,"getState"],[445,14,438,12],[446,6,439,4,"setState"],[447,4,440,2],[447,5,440,3],[447,6,440,4],[448,4,441,2],[448,10,441,8,"navigation"],[448,20,441,18],[448,23,441,21],[448,27,441,21,"useNavigationHelpers"],[448,69,441,41],[448,71,441,42],[449,6,442,4,"id"],[449,8,442,6],[449,10,442,8,"options"],[449,17,442,15],[449,18,442,16,"id"],[449,20,442,18],[450,6,443,4,"onAction"],[450,14,443,12],[451,6,444,4,"getState"],[451,14,444,12],[452,6,445,4,"emitter"],[452,13,445,11],[453,6,446,4,"router"],[453,12,446,10],[454,6,447,4,"stateRef"],[455,4,448,2],[455,5,448,3],[455,6,448,4],[456,4,449,2],[456,8,449,2,"useFocusedListenersChildrenAdapter"],[456,78,449,36],[456,80,449,37],[457,6,450,4,"navigation"],[457,16,450,14],[458,6,451,4,"focusedListeners"],[458,22,451,20],[458,24,451,22,"childListeners"],[458,38,451,36],[458,39,451,37,"focus"],[459,4,452,2],[459,5,452,3],[459,6,452,4],[460,4,453,2],[460,8,453,2,"useOnGetState"],[460,36,453,15],[460,38,453,16],[461,6,454,4,"getState"],[461,14,454,12],[462,6,455,4,"getStateListeners"],[462,23,455,21],[462,25,455,23,"keyedListeners"],[462,39,455,37],[462,40,455,38,"getState"],[463,4,456,2],[463,5,456,3],[463,6,456,4],[464,4,457,2],[464,10,457,8],[465,6,458,4,"describe"],[465,14,458,12],[466,6,459,4,"descriptors"],[467,4,460,2],[467,5,460,3],[467,8,460,6],[467,12,460,6,"useDescriptors"],[467,42,460,20],[467,44,460,21],[468,6,461,4,"state"],[468,11,461,9],[469,6,462,4,"screens"],[469,13,462,11],[470,6,463,4,"navigation"],[470,16,463,14],[471,6,464,4,"screenOptions"],[471,19,464,17],[472,6,465,4,"screenLayout"],[472,18,465,16],[473,6,466,4,"onAction"],[473,14,466,12],[474,6,467,4,"getState"],[474,14,467,12],[475,6,468,4,"setState"],[475,14,468,12],[476,6,469,4,"onRouteFocus"],[476,18,469,16],[477,6,470,4,"addListener"],[477,17,470,15],[478,6,471,4,"addKeyedListener"],[478,22,471,20],[479,6,472,4,"router"],[479,12,472,10],[480,6,473,4],[481,6,474,4,"emitter"],[482,4,475,2],[482,5,475,3],[482,6,475,4],[483,4,476,2],[483,8,476,2,"useCurrentRender"],[483,42,476,18],[483,44,476,19],[484,6,477,4,"state"],[484,11,477,9],[485,6,478,4,"navigation"],[485,16,478,14],[486,6,479,4,"descriptors"],[487,4,480,2],[487,5,480,3],[487,6,480,4],[488,4,481,2],[488,10,481,8,"NavigationContent"],[488,27,481,25],[488,30,481,28],[488,34,481,28,"useComponent"],[488,60,481,40],[488,62,481,41,"children"],[488,70,481,49],[488,74,481,53],[489,6,482,4],[489,12,482,10,"element"],[489,19,482,17],[489,22,482,20,"layout"],[489,28,482,26],[489,32,482,30],[489,36,482,34],[489,39,482,37,"layout"],[489,45,482,43],[489,46,482,44],[490,8,483,6,"state"],[490,13,483,11],[491,8,484,6,"descriptors"],[491,19,484,17],[492,8,485,6,"navigation"],[492,18,485,16],[493,8,486,6,"children"],[494,6,487,4],[494,7,487,5],[494,8,487,6],[494,11,487,9,"children"],[494,19,487,17],[495,6,488,4],[495,13,488,11],[495,26,488,24],[495,30,488,24,"_jsx"],[495,45,488,28],[495,47,488,29,"NavigationHelpersContext"],[495,97,488,53],[495,98,488,54,"Provider"],[495,106,488,62],[495,108,488,64],[496,8,489,6,"value"],[496,13,489,11],[496,15,489,13,"navigation"],[496,25,489,23],[497,8,490,6,"children"],[497,16,490,14],[497,18,490,16],[497,31,490,29],[497,35,490,29,"_jsx"],[497,50,490,33],[497,52,490,34,"NavigationStateListenerProvider"],[497,103,490,65],[497,105,490,67],[498,10,491,8,"state"],[498,15,491,13],[498,17,491,15,"state"],[498,22,491,20],[499,10,492,8,"children"],[499,18,492,16],[499,20,492,18],[499,33,492,31],[499,37,492,31,"_jsx"],[499,52,492,35],[499,54,492,36,"PreventRemoveProvider"],[499,98,492,57],[499,100,492,59],[500,12,493,10,"children"],[500,20,493,18],[500,22,493,20,"element"],[501,10,494,8],[501,11,494,9],[502,8,495,6],[502,9,495,7],[503,6,496,4],[503,7,496,5],[503,8,496,6],[504,4,497,2],[504,5,497,3],[504,6,497,4],[505,4,498,2],[505,11,498,9],[506,6,499,4,"state"],[506,11,499,9],[507,6,500,4,"navigation"],[507,16,500,14],[508,6,501,4,"describe"],[508,14,501,12],[509,6,502,4,"descriptors"],[509,17,502,15],[510,6,503,4,"NavigationContent"],[511,4,504,2],[511,5,504,3],[512,2,505,0],[513,0,505,1],[513,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useClientLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCsC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;OOS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYc,yFZ;kBWI;GXE;oBa+B;GbK;kBWM;WGW;KHM;GXE;wBeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBgB;CPQ"}},"type":"js/module"}]}