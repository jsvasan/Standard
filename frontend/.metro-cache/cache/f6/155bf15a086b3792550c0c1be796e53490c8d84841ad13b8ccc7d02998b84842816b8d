{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  /*\n   * @returns {bool} true if different, false if equal\n   */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var deepDiffer = function deepDiffer(one, two, maxDepth) {\n    if (maxDepth === void 0) {\n      maxDepth = -1;\n    }\n    if (maxDepth === 0) {\n      return true;\n    }\n    if (one === two) {\n      // Short circuit on identical object references instead of traversing them.\n      return false;\n    }\n    if (typeof one === 'function' && typeof two === 'function') {\n      // We consider all functions equal\n      return false;\n    }\n    if (typeof one !== 'object' || one === null) {\n      // Primitives can be directly compared\n      return one !== two;\n    }\n    if (typeof two !== 'object' || two === null) {\n      // We know they are different because the previous case would have triggered\n      // otherwise.\n      return true;\n    }\n    if (one.constructor !== two.constructor) {\n      return true;\n    }\n    if (Array.isArray(one)) {\n      // We know two is also an array because the constructors are equal\n      var len = one.length;\n      if (two.length !== len) {\n        return true;\n      }\n      for (var ii = 0; ii < len; ii++) {\n        if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n          return true;\n        }\n      }\n    } else {\n      for (var key in one) {\n        if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n          return true;\n        }\n      }\n      for (var twoKey in two) {\n        // The only case we haven't checked yet is keys that are in two but aren't\n        // in one, which means they are different.\n        if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  var _default = deepDiffer;\n});","lineCount":81,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[15,0,14,0],[16,0,15,0],[17,2,13,0,"Object"],[17,8,13,0],[17,9,13,0,"defineProperty"],[17,23,13,0],[17,24,13,0,"exports"],[17,31,13,0],[18,4,13,0,"value"],[18,9,13,0],[19,2,13,0],[20,2,70,0,"Object"],[20,8,70,0],[20,9,70,0,"defineProperty"],[20,23,70,0],[20,24,70,0,"exports"],[20,31,70,0],[21,4,70,0,"enumerable"],[21,14,70,0],[22,4,70,0,"get"],[22,7,70,0],[22,18,70,0,"get"],[22,19,70,0],[23,6,70,0],[23,13,70,0,"_default"],[23,21,70,0],[24,4,70,0],[25,2,70,0],[26,2,16,0],[26,6,16,4,"deepDiffer"],[26,16,16,14],[26,19,16,17],[26,28,16,26,"deepDiffer"],[26,38,16,36,"deepDiffer"],[26,39,16,37,"one"],[26,42,16,40],[26,44,16,42,"two"],[26,47,16,45],[26,49,16,47,"maxDepth"],[26,57,16,55],[26,59,16,57],[27,4,17,2],[27,8,17,6,"maxDepth"],[27,16,17,14],[27,21,17,19],[27,26,17,24],[27,27,17,25],[27,29,17,27],[28,6,18,4,"maxDepth"],[28,14,18,12],[28,17,18,15],[28,18,18,16],[28,19,18,17],[29,4,19,2],[30,4,20,2],[30,8,20,6,"maxDepth"],[30,16,20,14],[30,21,20,19],[30,22,20,20],[30,24,20,22],[31,6,21,4],[31,13,21,11],[31,17,21,15],[32,4,22,2],[33,4,23,2],[33,8,23,6,"one"],[33,11,23,9],[33,16,23,14,"two"],[33,19,23,17],[33,21,23,19],[34,6,24,4],[35,6,25,4],[35,13,25,11],[35,18,25,16],[36,4,26,2],[37,4,27,2],[37,8,27,6],[37,15,27,13,"one"],[37,18,27,16],[37,23,27,21],[37,33,27,31],[37,37,27,35],[37,44,27,42,"two"],[37,47,27,45],[37,52,27,50],[37,62,27,60],[37,64,27,62],[38,6,28,4],[39,6,29,4],[39,13,29,11],[39,18,29,16],[40,4,30,2],[41,4,31,2],[41,8,31,6],[41,15,31,13,"one"],[41,18,31,16],[41,23,31,21],[41,31,31,29],[41,35,31,33,"one"],[41,38,31,36],[41,43,31,41],[41,47,31,45],[41,49,31,47],[42,6,32,4],[43,6,33,4],[43,13,33,11,"one"],[43,16,33,14],[43,21,33,19,"two"],[43,24,33,22],[44,4,34,2],[45,4,35,2],[45,8,35,6],[45,15,35,13,"two"],[45,18,35,16],[45,23,35,21],[45,31,35,29],[45,35,35,33,"two"],[45,38,35,36],[45,43,35,41],[45,47,35,45],[45,49,35,47],[46,6,36,4],[47,6,37,4],[48,6,38,4],[48,13,38,11],[48,17,38,15],[49,4,39,2],[50,4,40,2],[50,8,40,6,"one"],[50,11,40,9],[50,12,40,10,"constructor"],[50,23,40,21],[50,28,40,26,"two"],[50,31,40,29],[50,32,40,30,"constructor"],[50,43,40,41],[50,45,40,43],[51,6,41,4],[51,13,41,11],[51,17,41,15],[52,4,42,2],[53,4,43,2],[53,8,43,6,"Array"],[53,13,43,11],[53,14,43,12,"isArray"],[53,21,43,19],[53,22,43,20,"one"],[53,25,43,23],[53,26,43,24],[53,28,43,26],[54,6,44,4],[55,6,45,4],[55,10,45,8,"len"],[55,13,45,11],[55,16,45,14,"one"],[55,19,45,17],[55,20,45,18,"length"],[55,26,45,24],[56,6,46,4],[56,10,46,8,"two"],[56,13,46,11],[56,14,46,12,"length"],[56,20,46,18],[56,25,46,23,"len"],[56,28,46,26],[56,30,46,28],[57,8,47,6],[57,15,47,13],[57,19,47,17],[58,6,48,4],[59,6,49,4],[59,11,49,9],[59,15,49,13,"ii"],[59,17,49,15],[59,20,49,18],[59,21,49,19],[59,23,49,21,"ii"],[59,25,49,23],[59,28,49,26,"len"],[59,31,49,29],[59,33,49,31,"ii"],[59,35,49,33],[59,37,49,35],[59,39,49,37],[60,8,50,6],[60,12,50,10,"deepDiffer"],[60,22,50,20],[60,23,50,21,"one"],[60,26,50,24],[60,27,50,25,"ii"],[60,29,50,27],[60,30,50,28],[60,32,50,30,"two"],[60,35,50,33],[60,36,50,34,"ii"],[60,38,50,36],[60,39,50,37],[60,41,50,39,"maxDepth"],[60,49,50,47],[60,52,50,50],[60,53,50,51],[60,54,50,52],[60,56,50,54],[61,10,51,8],[61,17,51,15],[61,21,51,19],[62,8,52,6],[63,6,53,4],[64,4,54,2],[64,5,54,3],[64,11,54,9],[65,6,55,4],[65,11,55,9],[65,15,55,13,"key"],[65,18,55,16],[65,22,55,20,"one"],[65,25,55,23],[65,27,55,25],[66,8,56,6],[66,12,56,10,"deepDiffer"],[66,22,56,20],[66,23,56,21,"one"],[66,26,56,24],[66,27,56,25,"key"],[66,30,56,28],[66,31,56,29],[66,33,56,31,"two"],[66,36,56,34],[66,37,56,35,"key"],[66,40,56,38],[66,41,56,39],[66,43,56,41,"maxDepth"],[66,51,56,49],[66,54,56,52],[66,55,56,53],[66,56,56,54],[66,58,56,56],[67,10,57,8],[67,17,57,15],[67,21,57,19],[68,8,58,6],[69,6,59,4],[70,6,60,4],[70,11,60,9],[70,15,60,13,"twoKey"],[70,21,60,19],[70,25,60,23,"two"],[70,28,60,26],[70,30,60,28],[71,8,61,6],[72,8,62,6],[73,8,63,6],[73,12,63,10,"one"],[73,15,63,13],[73,16,63,14,"twoKey"],[73,22,63,20],[73,23,63,21],[73,28,63,26,"undefined"],[73,37,63,35],[73,41,63,39,"two"],[73,44,63,42],[73,45,63,43,"twoKey"],[73,51,63,49],[73,52,63,50],[73,57,63,55,"undefined"],[73,66,63,64],[73,68,63,66],[74,10,64,8],[74,17,64,15],[74,21,64,19],[75,8,65,6],[76,6,66,4],[77,4,67,2],[78,4,68,2],[78,11,68,9],[78,16,68,14],[79,2,69,0],[79,3,69,1],[80,2,70,0],[80,6,70,0,"_default"],[80,14,70,0],[80,17,70,15,"deepDiffer"],[80,27,70,25],[81,0,70,26],[81,3]],"functionMap":{"names":["<global>","deepDiffer"],"mappings":"AAA;iBCe;CDqD"},"hasCjsExports":false},"type":"js/module"}]}