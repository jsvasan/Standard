{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":240},"end":{"line":11,"column":31,"index":271}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/NativeEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"eTF52IbKshB2LvkGjXImGpuTZc0=","exportNames":["*"],"imports":1}},{"name":"./LogBoxLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":324},"end":{"line":14,"column":51,"index":375}}],"key":"RwknKpSLDy9ayXhlPxw1CmbUPgg=","exportNames":["*"],"imports":1}},{"name":"./LogContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":421},"end":{"line":16,"column":42,"index":463}}],"key":"08zCGMU0YDPffrVErZBYDWsetf4=","exportNames":["*"],"imports":1}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":464},"end":{"line":17,"column":56,"index":520}}],"key":"jpYn6rgG/TatMWMr3MolKhrm4tY=","exportNames":["*"],"imports":1}},{"name":"../modules/NativeLogBox","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":619},"end":{"line":19,"column":51,"index":670}}],"key":"p3b5WMmEyWxm6gOiGn9fL7Jt3qU=","exportNames":["*"],"imports":1}},{"name":"../modules/parseErrorStack","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":671},"end":{"line":20,"column":57,"index":728}}],"key":"mfxaFYAQGgcp6uWAwEF5cgtcAXk=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}},{"name":"../modules/ExceptionsManager","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":85,"column":28,"index":2199},"end":{"line":85,"column":67,"index":2238}}],"key":"O+gFX/law9ujkyw2t64+bdXM/Ng=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  'use client';\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/node_modules/@expo/metro-runtime/src/error-overlay/Data/LogBoxData.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.reportUnexpectedLogBoxError = reportUnexpectedLogBoxError;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.addLog = addLog;\n  exports.addException = addException;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.clear = clear;\n  exports.setSelectedLog = setSelectedLog;\n  exports.clearWarnings = clearWarnings;\n  exports.clearErrors = clearErrors;\n  exports.dismiss = dismiss;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.setDisabled = setDisabled;\n  exports.isDisabled = isDisabled;\n  exports.observe = observe;\n  exports.withSubscription = withSubscription;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsNativeEventEmitter = require(_dependencyMap[1], \"react-native-web/dist/exports/NativeEventEmitter\");\n  var NativeEventEmitter = _interopDefault(_reactNativeWebDistExportsNativeEventEmitter);\n  var _LogBoxLog = require(_dependencyMap[2], \"./LogBoxLog\");\n  var _LogContext = require(_dependencyMap[3], \"./LogContext\");\n  var _parseLogBoxLog = require(_dependencyMap[4], \"./parseLogBoxLog\");\n  var _modulesNativeLogBox = require(_dependencyMap[5], \"../modules/NativeLogBox\");\n  var NativeLogBox = _interopDefault(_modulesNativeLogBox);\n  var _modulesParseErrorStack = require(_dependencyMap[6], \"../modules/parseErrorStack\");\n  var parseErrorStack = _interopDefault(_modulesParseErrorStack);\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  const observers = new Set();\n  const ignorePatterns = new Set();\n  let logs = new Set();\n  let updateTimeout = null;\n  let _isDisabled = false;\n  let _selectedIndex = -1;\n  const LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    const ExceptionsManager = require(_dependencyMap[8], \"../modules/ExceptionsManager\").default;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error);\n  }\n  function reportUnexpectedLogBoxError(error, componentStack) {\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    return reportLogBoxError(error, componentStack);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (const pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setTimeout(() => {\n        updateTimeout = null;\n        const nextState = getNextState();\n        observers.forEach(({\n          observer\n        }) => observer(nextState));\n      }, 0);\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    const lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      const OPTIMISTIC_WAIT_TIME = 1000;\n      let addPendingLog = () => {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        addPendingLog = null;\n      };\n      const optimisticTimeout = setTimeout(() => {\n        if (addPendingLog) {\n          addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n\n      // TODO: HANDLE THIS\n      newLog.symbolicate('component');\n      newLog.symbolicate('stack', status => {\n        if (addPendingLog && status !== 'PENDING') {\n          addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    const errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setTimeout(() => {\n      try {\n        const stack = (0, parseErrorStack.default)(errorForStackTrace?.stack);\n        appendNewLog(new _LogBoxLog.LogBoxLog({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportUnexpectedLogBoxError(error);\n      }\n    }, 0);\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setTimeout(() => {\n      try {\n        appendNewLog(new _LogBoxLog.LogBoxLog((0, _parseLogBoxLog.parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportUnexpectedLogBoxError(loggingError);\n      }\n    }, 0);\n  }\n  function symbolicateLogNow(type, log) {\n    log.symbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(type, log) {\n    log.retrySymbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(type, log) {\n    log.symbolicate(type);\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    const oldIndex = _selectedIndex;\n    let newIndex = proposedNewIndex;\n    const logArray = Array.from(logs);\n    let index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (NativeLogBox.default) {\n      setTimeout(() => {\n        if (oldIndex < 0 && newIndex >= 0) {\n          NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    const newLogs = Array.from(logs).filter(log => log.level !== 'warn');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    const newLogs = Array.from(logs).filter(log => log.level !== 'error' && log.level !== 'fatal');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    const existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(pattern => {\n      if (pattern instanceof RegExp) {\n        for (const existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(log => !isMessageIgnored(log.message.content)));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    const subscription = {\n      observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  const emitter = new NativeEventEmitter.default({\n    addListener() {},\n    removeListeners() {}\n  });\n  function withSubscription(WrappedComponent) {\n    class LogBoxStateSubscription extends React.Component {\n      static getDerivedStateFromError() {\n        return {\n          hasError: true\n        };\n      }\n      constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'development') {\n          emitter.addListener('devLoadingView:hide', () => {\n            if (this.state.hasError) {\n              this.retry();\n            }\n          });\n        }\n      }\n      componentDidCatch(err, errorInfo) {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        reportLogBoxError(err, errorInfo.componentStack);\n      }\n      state = {\n        logs: new Set(),\n        isDisabled: false,\n        hasError: false,\n        selectedLogIndex: -1\n      };\n      retry = () => {\n        return new Promise(resolve => {\n          this.setState({\n            hasError: false\n          }, () => {\n            resolve();\n          });\n        });\n      };\n      render() {\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_LogContext.LogContext.Provider, {\n          value: {\n            selectedLogIndex: this.state.selectedLogIndex,\n            isDisabled: this.state.isDisabled,\n            logs: Array.from(this.state.logs)\n          },\n          children: [this.state.hasError ? null : this.props.children, /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(WrappedComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }, this);\n      }\n      componentDidMount() {\n        this._subscription = observe(data => {\n          // Ignore the initial empty log\n          if (data.selectedLogIndex === -1) return;\n          React.startTransition(() => {\n            this.setState(data);\n          });\n        });\n      }\n      componentWillUnmount() {\n        if (this._subscription != null) {\n          this._subscription.unsubscribe();\n        }\n      }\n      _handleDismiss = () => {\n        // Here we handle the cases when the log is dismissed and it\n        // was either the last log, or when the current index\n        // is now outside the bounds of the log array.\n        const {\n          selectedLogIndex,\n          logs: stateLogs\n        } = this.state;\n        const logsArray = Array.from(stateLogs);\n        if (selectedLogIndex != null) {\n          if (logsArray.length - 1 <= 0) {\n            setSelectedLog(-1);\n          } else if (selectedLogIndex >= logsArray.length - 1) {\n            setSelectedLog(selectedLogIndex - 1);\n          }\n          dismiss(logsArray[selectedLogIndex]);\n        }\n      };\n      _handleMinimize = () => {\n        setSelectedLog(-1);\n      };\n      _handleSetSelectedLog = index => {\n        setSelectedLog(index);\n      };\n    }\n\n    // @ts-expect-error\n    return LogBoxStateSubscription;\n  }\n});","lineCount":420,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[10,2,9,0],[10,14,9,12],[11,2,9,13],[13,2,9,13],[13,6,9,13,"_jsxFileName"],[13,18,9,13],[14,2,9,13,"Object"],[14,8,9,13],[14,9,9,13,"defineProperty"],[14,23,9,13],[14,24,9,13,"exports"],[14,31,9,13],[15,4,9,13,"value"],[15,9,9,13],[16,2,9,13],[17,2,9,13],[17,11,9,13,"_interopNamespace"],[17,29,9,13,"e"],[17,30,9,13],[18,4,9,13],[18,8,9,13,"e"],[18,9,9,13],[18,13,9,13,"e"],[18,14,9,13],[18,15,9,13,"__esModule"],[18,25,9,13],[18,34,9,13,"e"],[18,35,9,13],[19,4,9,13],[19,8,9,13,"n"],[19,9,9,13],[20,4,9,13],[20,8,9,13,"e"],[20,9,9,13],[20,11,9,13,"Object"],[20,17,9,13],[20,18,9,13,"keys"],[20,22,9,13],[20,23,9,13,"e"],[20,24,9,13],[20,26,9,13,"forEach"],[20,33,9,13],[20,44,9,13,"k"],[20,45,9,13],[21,6,9,13],[21,10,9,13,"d"],[21,11,9,13],[21,14,9,13,"Object"],[21,20,9,13],[21,21,9,13,"getOwnPropertyDescriptor"],[21,45,9,13],[21,46,9,13,"e"],[21,47,9,13],[21,49,9,13,"k"],[21,50,9,13],[22,6,9,13,"Object"],[22,12,9,13],[22,13,9,13,"defineProperty"],[22,27,9,13],[22,28,9,13,"n"],[22,29,9,13],[22,31,9,13,"k"],[22,32,9,13],[22,34,9,13,"d"],[22,35,9,13],[22,36,9,13,"get"],[22,39,9,13],[22,42,9,13,"d"],[22,43,9,13],[23,8,9,13,"enumerable"],[23,18,9,13],[24,8,9,13,"get"],[24,11,9,13],[24,22,9,13,"get"],[24,23,9,13],[25,10,9,13],[25,17,9,13,"e"],[25,18,9,13],[25,19,9,13,"k"],[25,20,9,13],[26,8,9,13],[27,6,9,13],[28,4,9,13],[29,4,9,13,"n"],[29,5,9,13],[29,6,9,13,"default"],[29,13,9,13],[29,16,9,13,"e"],[29,17,9,13],[30,4,9,13],[30,11,9,13,"n"],[30,12,9,13],[31,2,9,13],[32,2,9,13],[32,11,9,13,"_interopDefault"],[32,27,9,13,"e"],[32,28,9,13],[33,4,9,13],[33,11,9,13,"e"],[33,12,9,13],[33,16,9,13,"e"],[33,17,9,13],[33,18,9,13,"__esModule"],[33,28,9,13],[33,31,9,13,"e"],[33,32,9,13],[34,6,9,13,"default"],[34,13,9,13],[34,15,9,13,"e"],[35,4,9,13],[36,2,9,13],[37,2,84,0,"exports"],[37,9,84,0],[37,10,84,0,"reportLogBoxError"],[37,27,84,0],[37,30,84,0,"reportLogBoxError"],[37,47,84,0],[38,2,93,0,"exports"],[38,9,93,0],[38,10,93,0,"reportUnexpectedLogBoxError"],[38,37,93,0],[38,40,93,0,"reportUnexpectedLogBoxError"],[38,67,93,0],[39,2,98,0,"exports"],[39,9,98,0],[39,10,98,0,"isLogBoxErrorMessage"],[39,30,98,0],[39,33,98,0,"isLogBoxErrorMessage"],[39,53,98,0],[40,2,102,0,"exports"],[40,9,102,0],[40,10,102,0,"isMessageIgnored"],[40,26,102,0],[40,29,102,0,"isMessageIgnored"],[40,45,102,0],[41,2,184,0,"exports"],[41,9,184,0],[41,10,184,0,"addLog"],[41,16,184,0],[41,19,184,0,"addLog"],[41,25,184,0],[42,2,209,0,"exports"],[42,9,209,0],[42,10,209,0,"addException"],[42,22,209,0],[42,25,209,0,"addException"],[42,37,209,0],[43,2,221,0,"exports"],[43,9,221,0],[43,10,221,0,"symbolicateLogNow"],[43,27,221,0],[43,30,221,0,"symbolicateLogNow"],[43,47,221,0],[44,2,227,0,"exports"],[44,9,227,0],[44,10,227,0,"retrySymbolicateLogNow"],[44,32,227,0],[44,35,227,0,"retrySymbolicateLogNow"],[44,57,227,0],[45,2,233,0,"exports"],[45,9,233,0],[45,10,233,0,"symbolicateLogLazy"],[45,28,233,0],[45,31,233,0,"symbolicateLogLazy"],[45,49,233,0],[46,2,237,0,"exports"],[46,9,237,0],[46,10,237,0,"clear"],[46,15,237,0],[46,18,237,0,"clear"],[46,23,237,0],[47,2,244,0,"exports"],[47,9,244,0],[47,10,244,0,"setSelectedLog"],[47,24,244,0],[47,27,244,0,"setSelectedLog"],[47,41,244,0],[48,2,271,0,"exports"],[48,9,271,0],[48,10,271,0,"clearWarnings"],[48,23,271,0],[48,26,271,0,"clearWarnings"],[48,39,271,0],[49,2,280,0,"exports"],[49,9,280,0],[49,10,280,0,"clearErrors"],[49,21,280,0],[49,24,280,0,"clearErrors"],[49,35,280,0],[50,2,288,0,"exports"],[50,9,288,0],[50,10,288,0,"dismiss"],[50,17,288,0],[50,20,288,0,"dismiss"],[50,27,288,0],[51,2,295,0,"exports"],[51,9,295,0],[51,10,295,0,"getIgnorePatterns"],[51,27,295,0],[51,30,295,0,"getIgnorePatterns"],[51,47,295,0],[52,2,299,0,"exports"],[52,9,299,0],[52,10,299,0,"addIgnorePatterns"],[52,27,299,0],[52,30,299,0,"addIgnorePatterns"],[52,47,299,0],[53,2,328,0,"exports"],[53,9,328,0],[53,10,328,0,"setDisabled"],[53,21,328,0],[53,24,328,0,"setDisabled"],[53,35,328,0],[54,2,336,0,"exports"],[54,9,336,0],[54,10,336,0,"isDisabled"],[54,20,336,0],[54,23,336,0,"isDisabled"],[54,33,336,0],[55,2,340,0,"exports"],[55,9,340,0],[55,10,340,0,"observe"],[55,17,340,0],[55,20,340,0,"observe"],[55,27,340,0],[56,2,358,0,"exports"],[56,9,358,0],[56,10,358,0,"withSubscription"],[56,26,358,0],[56,29,358,0,"withSubscription"],[56,45,358,0],[57,2,11,0],[57,6,11,0,"_react"],[57,12,11,0],[57,15,11,0,"require"],[57,22,11,0],[57,23,11,0,"_dependencyMap"],[57,37,11,0],[58,2,11,0],[58,6,11,0,"React"],[58,11,11,0],[58,14,11,0,"_interopNamespace"],[58,31,11,0],[58,32,11,0,"_react"],[58,38,11,0],[59,2,11,31],[59,6,11,31,"_reactNativeWebDistExportsNativeEventEmitter"],[59,50,11,31],[59,53,11,31,"require"],[59,60,11,31],[59,61,11,31,"_dependencyMap"],[59,75,11,31],[60,2,11,31],[60,6,11,31,"NativeEventEmitter"],[60,24,11,31],[60,27,11,31,"_interopDefault"],[60,42,11,31],[60,43,11,31,"_reactNativeWebDistExportsNativeEventEmitter"],[60,87,11,31],[61,2,14,0],[61,6,14,0,"_LogBoxLog"],[61,16,14,0],[61,19,14,0,"require"],[61,26,14,0],[61,27,14,0,"_dependencyMap"],[61,41,14,0],[62,2,16,0],[62,6,16,0,"_LogContext"],[62,17,16,0],[62,20,16,0,"require"],[62,27,16,0],[62,28,16,0,"_dependencyMap"],[62,42,16,0],[63,2,17,0],[63,6,17,0,"_parseLogBoxLog"],[63,21,17,0],[63,24,17,0,"require"],[63,31,17,0],[63,32,17,0,"_dependencyMap"],[63,46,17,0],[64,2,19,0],[64,6,19,0,"_modulesNativeLogBox"],[64,26,19,0],[64,29,19,0,"require"],[64,36,19,0],[64,37,19,0,"_dependencyMap"],[64,51,19,0],[65,2,19,0],[65,6,19,0,"NativeLogBox"],[65,18,19,0],[65,21,19,0,"_interopDefault"],[65,36,19,0],[65,37,19,0,"_modulesNativeLogBox"],[65,57,19,0],[66,2,20,0],[66,6,20,0,"_modulesParseErrorStack"],[66,29,20,0],[66,32,20,0,"require"],[66,39,20,0],[66,40,20,0,"_dependencyMap"],[66,54,20,0],[67,2,20,0],[67,6,20,0,"parseErrorStack"],[67,21,20,0],[67,24,20,0,"_interopDefault"],[67,39,20,0],[67,40,20,0,"_modulesParseErrorStack"],[67,63,20,0],[68,2,20,57],[68,6,20,57,"_reactJsxDevRuntime"],[68,25,20,57],[68,28,20,57,"require"],[68,35,20,57],[68,36,20,57,"_dependencyMap"],[68,50,20,57],[69,2,66,0],[69,8,66,6,"observers"],[69,17,66,50],[69,20,66,53],[69,24,66,57,"Set"],[69,27,66,60],[69,28,66,61],[69,29,66,62],[70,2,67,0],[70,8,67,6,"ignorePatterns"],[70,22,67,40],[70,25,67,43],[70,29,67,47,"Set"],[70,32,67,50],[70,33,67,51],[70,34,67,52],[71,2,68,0],[71,6,68,4,"logs"],[71,10,68,20],[71,13,68,23],[71,17,68,27,"Set"],[71,20,68,30],[71,21,68,31],[71,22,68,32],[72,2,69,0],[72,6,69,4,"updateTimeout"],[72,19,69,55],[72,22,69,58],[72,26,69,62],[73,2,70,0],[73,6,70,4,"_isDisabled"],[73,17,70,15],[73,20,70,18],[73,25,70,23],[74,2,71,0],[74,6,71,4,"_selectedIndex"],[74,20,71,18],[74,23,71,21],[74,24,71,22],[74,25,71,23],[75,2,73,0],[75,8,73,6,"LOGBOX_ERROR_MESSAGE"],[75,28,73,26],[75,31,74,2],[75,103,74,74],[76,2,76,0],[76,11,76,9,"getNextState"],[76,23,76,21,"getNextState"],[76,24,76,21],[76,26,76,24],[77,4,77,2],[77,11,77,9],[78,6,78,4,"logs"],[78,10,78,8],[79,6,79,4,"isDisabled"],[79,16,79,14],[79,18,79,16,"_isDisabled"],[79,29,79,27],[80,6,80,4,"selectedLogIndex"],[80,22,80,20],[80,24,80,22,"_selectedIndex"],[81,4,81,2],[81,5,81,3],[82,2,82,0],[83,2,84,7],[83,11,84,16,"reportLogBoxError"],[83,28,84,33,"reportLogBoxError"],[83,29,84,34,"error"],[83,34,84,54],[83,36,84,56,"componentStack"],[83,50,84,79],[83,52,84,87],[84,4,85,2],[84,10,85,8,"ExceptionsManager"],[84,27,85,25],[84,30,85,28,"require"],[84,37,85,35],[84,38,85,35,"_dependencyMap"],[84,52,85,35],[84,87,85,66],[84,88,85,67],[84,89,85,68,"default"],[84,96,85,75],[85,4,87,2],[85,8,87,6,"componentStack"],[85,22,87,20],[85,26,87,24],[85,30,87,28],[85,32,87,30],[86,6,88,4,"error"],[86,11,88,9],[86,12,88,10,"componentStack"],[86,26,88,24],[86,29,88,27,"componentStack"],[86,43,88,41],[87,4,89,2],[88,4,90,2,"ExceptionsManager"],[88,21,90,19],[88,22,90,20,"handleException"],[88,37,90,35],[88,38,90,36,"error"],[88,43,90,41],[88,44,90,42],[89,2,91,0],[90,2,93,7],[90,11,93,16,"reportUnexpectedLogBoxError"],[90,38,93,43,"reportUnexpectedLogBoxError"],[90,39,93,44,"error"],[90,44,93,64],[90,46,93,66,"componentStack"],[90,60,93,89],[90,62,93,97],[91,4,94,2,"error"],[91,9,94,7],[91,10,94,8,"message"],[91,17,94,15],[91,20,94,18],[91,23,94,21,"LOGBOX_ERROR_MESSAGE"],[91,43,94,41],[91,50,94,48,"error"],[91,55,94,53],[91,56,94,54,"message"],[91,63,94,61],[91,65,94,63],[92,4,95,2],[92,11,95,9,"reportLogBoxError"],[92,28,95,26],[92,29,95,27,"error"],[92,34,95,32],[92,36,95,34,"componentStack"],[92,50,95,48],[92,51,95,49],[93,2,96,0],[94,2,98,7],[94,11,98,16,"isLogBoxErrorMessage"],[94,31,98,36,"isLogBoxErrorMessage"],[94,32,98,37,"message"],[94,39,98,52],[94,41,98,63],[95,4,99,2],[95,11,99,9],[95,18,99,16,"message"],[95,25,99,23],[95,30,99,28],[95,38,99,36],[95,42,99,40,"message"],[95,49,99,47],[95,50,99,48,"includes"],[95,58,99,56],[95,59,99,57,"LOGBOX_ERROR_MESSAGE"],[95,79,99,77],[95,80,99,78],[96,2,100,0],[97,2,102,7],[97,11,102,16,"isMessageIgnored"],[97,27,102,32,"isMessageIgnored"],[97,28,102,33,"message"],[97,35,102,48],[97,37,102,59],[98,4,103,2],[98,9,103,7],[98,15,103,13,"pattern"],[98,22,103,20],[98,26,103,24,"ignorePatterns"],[98,40,103,38],[98,42,103,40],[99,6,104,4],[99,10,105,7,"pattern"],[99,17,105,14],[99,29,105,26,"RegExp"],[99,35,105,32],[99,39,105,36,"pattern"],[99,46,105,43],[99,47,105,44,"test"],[99,51,105,48],[99,52,105,49,"message"],[99,59,105,56],[99,60,105,57],[99,64,106,7],[99,71,106,14,"pattern"],[99,78,106,21],[99,83,106,26],[99,91,106,34],[99,95,106,38,"message"],[99,102,106,45],[99,103,106,46,"includes"],[99,111,106,54],[99,112,106,55,"pattern"],[99,119,106,62],[99,120,106,64],[99,122,107,6],[100,8,108,6],[100,15,108,13],[100,19,108,17],[101,6,109,4],[102,4,110,2],[103,4,111,2],[103,11,111,9],[103,16,111,14],[104,2,112,0],[105,2,114,0],[105,11,114,9,"handleUpdate"],[105,23,114,21,"handleUpdate"],[105,24,114,21],[105,26,114,30],[106,4,115,2],[106,8,115,6,"updateTimeout"],[106,21,115,19],[106,25,115,23],[106,29,115,27],[106,31,115,29],[107,6,116,4,"updateTimeout"],[107,19,116,17],[107,22,116,20,"setTimeout"],[107,32,116,30],[107,33,116,31],[107,39,116,37],[108,8,117,6,"updateTimeout"],[108,21,117,19],[108,24,117,22],[108,28,117,26],[109,8,118,6],[109,14,118,12,"nextState"],[109,23,118,21],[109,26,118,24,"getNextState"],[109,38,118,36],[109,39,118,37],[109,40,118,38],[110,8,119,6,"observers"],[110,17,119,15],[110,18,119,16,"forEach"],[110,25,119,23],[110,26,119,24],[110,27,119,25],[111,10,119,27,"observer"],[112,8,119,36],[112,9,119,37],[112,14,119,42,"observer"],[112,22,119,50],[112,23,119,51,"nextState"],[112,32,119,60],[112,33,119,61],[112,34,119,62],[113,6,120,4],[113,7,120,5],[113,9,120,7],[113,10,120,8],[113,11,120,9],[114,4,121,2],[115,2,122,0],[116,2,124,0],[116,11,124,9,"appendNewLog"],[116,23,124,21,"appendNewLog"],[116,24,124,22,"newLog"],[116,30,124,39],[116,32,124,47],[117,4,125,2],[118,4,126,2],[119,4,127,2],[119,8,127,6,"isMessageIgnored"],[119,24,127,22],[119,25,127,23,"newLog"],[119,31,127,29],[119,32,127,30,"message"],[119,39,127,37],[119,40,127,38,"content"],[119,47,127,45],[119,48,127,46],[119,50,127,48],[120,6,128,4],[121,4,129,2],[123,4,131,2],[124,4,132,2],[125,4,133,2],[126,4,134,2],[126,10,134,8,"lastLog"],[126,17,134,15],[126,20,134,18,"Array"],[126,25,134,23],[126,26,134,24,"from"],[126,30,134,28],[126,31,134,29,"logs"],[126,35,134,33],[126,36,134,34],[126,37,134,35,"pop"],[126,40,134,38],[126,41,134,39],[126,42,134,40],[127,4,135,2],[127,8,135,6,"lastLog"],[127,15,135,13],[127,19,135,17,"lastLog"],[127,26,135,24],[127,27,135,25,"category"],[127,35,135,33],[127,40,135,38,"newLog"],[127,46,135,44],[127,47,135,45,"category"],[127,55,135,53],[127,57,135,55],[128,6,136,4,"lastLog"],[128,13,136,11],[128,14,136,12,"incrementCount"],[128,28,136,26],[128,29,136,27],[128,30,136,28],[129,6,137,4,"handleUpdate"],[129,18,137,16],[129,19,137,17],[129,20,137,18],[130,6,138,4],[131,4,139,2],[132,4,141,2],[132,8,141,6,"newLog"],[132,14,141,12],[132,15,141,13,"level"],[132,20,141,18],[132,25,141,23],[132,32,141,30],[132,34,141,32],[133,6,142,4],[134,6,143,4],[135,6,144,4],[136,6,145,4],[136,12,145,10,"OPTIMISTIC_WAIT_TIME"],[136,32,145,30],[136,35,145,33],[136,39,145,37],[137,6,147,4],[137,10,147,8,"addPendingLog"],[137,23,147,42],[137,26,147,45,"addPendingLog"],[137,27,147,45],[137,32,147,51],[138,8,148,6,"logs"],[138,12,148,10],[138,13,148,11,"add"],[138,16,148,14],[138,17,148,15,"newLog"],[138,23,148,21],[138,24,148,22],[139,8,149,6],[139,12,149,10,"_selectedIndex"],[139,26,149,24],[139,29,149,27],[139,30,149,28],[139,32,149,30],[140,10,150,8,"setSelectedLog"],[140,24,150,22],[140,25,150,23,"logs"],[140,29,150,27],[140,30,150,28,"size"],[140,34,150,32],[140,37,150,35],[140,38,150,36],[140,39,150,37],[141,8,151,6],[141,9,151,7],[141,15,151,13],[142,10,152,8,"handleUpdate"],[142,22,152,20],[142,23,152,21],[142,24,152,22],[143,8,153,6],[144,8,154,6,"addPendingLog"],[144,21,154,19],[144,24,154,22],[144,28,154,26],[145,6,155,4],[145,7,155,5],[146,6,157,4],[146,12,157,10,"optimisticTimeout"],[146,29,157,27],[146,32,157,30,"setTimeout"],[146,42,157,40],[146,43,157,41],[146,49,157,47],[147,8,158,6],[147,12,158,10,"addPendingLog"],[147,25,158,23],[147,27,158,25],[148,10,159,8,"addPendingLog"],[148,23,159,21],[148,24,159,22],[148,25,159,23],[149,8,160,6],[150,6,161,4],[150,7,161,5],[150,9,161,7,"OPTIMISTIC_WAIT_TIME"],[150,29,161,27],[150,30,161,28],[152,6,163,4],[153,6,164,4,"newLog"],[153,12,164,10],[153,13,164,11,"symbolicate"],[153,24,164,22],[153,25,164,23],[153,36,164,34],[153,37,164,35],[154,6,166,4,"newLog"],[154,12,166,10],[154,13,166,11,"symbolicate"],[154,24,166,22],[154,25,166,23],[154,32,166,30],[154,34,166,33,"status"],[154,40,166,39],[154,44,166,44],[155,8,167,6],[155,12,167,10,"addPendingLog"],[155,25,167,23],[155,29,167,27,"status"],[155,35,167,33],[155,40,167,38],[155,49,167,47],[155,51,167,49],[156,10,168,8,"addPendingLog"],[156,23,168,21],[156,24,168,22],[156,25,168,23],[157,10,169,8,"clearTimeout"],[157,22,169,20],[157,23,169,21,"optimisticTimeout"],[157,40,169,38],[157,41,169,39],[158,8,170,6],[158,9,170,7],[158,15,170,13],[158,19,170,17,"status"],[158,25,170,23],[158,30,170,28],[158,39,170,37],[158,41,170,39],[159,10,171,8],[160,10,172,8,"handleUpdate"],[160,22,172,20],[160,23,172,21],[160,24,172,22],[161,8,173,6],[162,6,174,4],[162,7,174,5],[162,8,174,6],[163,4,175,2],[163,5,175,3],[163,11,175,9],[163,15,175,13,"newLog"],[163,21,175,19],[163,22,175,20,"level"],[163,27,175,25],[163,32,175,30],[163,40,175,38],[163,42,175,40],[164,6,176,4,"logs"],[164,10,176,8],[164,11,176,9,"add"],[164,14,176,12],[164,15,176,13,"newLog"],[164,21,176,19],[164,22,176,20],[165,6,177,4,"setSelectedLog"],[165,20,177,18],[165,21,177,19,"logs"],[165,25,177,23],[165,26,177,24,"size"],[165,30,177,28],[165,33,177,31],[165,34,177,32],[165,35,177,33],[166,4,178,2],[166,5,178,3],[166,11,178,9],[167,6,179,4,"logs"],[167,10,179,8],[167,11,179,9,"add"],[167,14,179,12],[167,15,179,13,"newLog"],[167,21,179,19],[167,22,179,20],[168,6,180,4,"handleUpdate"],[168,18,180,16],[168,19,180,17],[168,20,180,18],[169,4,181,2],[170,2,182,0],[171,2,184,7],[171,11,184,16,"addLog"],[171,17,184,22,"addLog"],[171,18,184,23,"log"],[171,21,184,35],[171,23,184,43],[172,4,185,2],[172,10,185,8,"errorForStackTrace"],[172,28,185,26],[172,31,185,29],[172,35,185,33,"Error"],[172,40,185,38],[172,41,185,39],[172,42,185,40],[174,4,187,2],[175,4,188,2],[176,4,189,2,"setTimeout"],[176,14,189,12],[176,15,189,13],[176,21,189,19],[177,6,190,4],[177,10,190,8],[178,8,191,6],[178,14,191,12,"stack"],[178,19,191,17],[178,22,191,20],[178,26,191,20,"parseErrorStack"],[178,41,191,35],[178,42,191,35,"default"],[178,49,191,35],[178,51,191,36,"errorForStackTrace"],[178,69,191,54],[178,71,191,56,"stack"],[178,76,191,61],[178,77,191,62],[179,8,193,6,"appendNewLog"],[179,20,193,18],[179,21,194,8],[179,25,194,12,"LogBoxLog"],[179,35,194,21],[179,36,194,21,"LogBoxLog"],[179,45,194,21],[179,46,194,22],[180,10,195,10,"level"],[180,15,195,15],[180,17,195,17,"log"],[180,20,195,20],[180,21,195,21,"level"],[180,26,195,26],[181,10,196,10,"message"],[181,17,196,17],[181,19,196,19,"log"],[181,22,196,22],[181,23,196,23,"message"],[181,30,196,30],[182,10,197,10,"isComponentError"],[182,26,197,26],[182,28,197,28],[182,33,197,33],[183,10,198,10,"stack"],[183,15,198,15],[184,10,199,10,"category"],[184,18,199,18],[184,20,199,20,"log"],[184,23,199,23],[184,24,199,24,"category"],[184,32,199,32],[185,10,200,10,"componentStack"],[185,24,200,24],[185,26,200,26,"log"],[185,29,200,29],[185,30,200,30,"componentStack"],[186,8,201,8],[186,9,201,9],[186,10,202,6],[186,11,202,7],[187,6,203,4],[187,7,203,5],[187,8,203,6],[187,15,203,13,"error"],[187,20,203,18],[187,22,203,20],[188,8,204,6,"reportUnexpectedLogBoxError"],[188,35,204,33],[188,36,204,34,"error"],[188,41,204,39],[188,42,204,40],[189,6,205,4],[190,4,206,2],[190,5,206,3],[190,7,206,5],[190,8,206,6],[190,9,206,7],[191,2,207,0],[192,2,209,7],[192,11,209,16,"addException"],[192,23,209,28,"addException"],[192,24,209,29,"error"],[192,29,209,57],[192,31,209,65],[193,4,210,2],[194,4,211,2],[195,4,212,2,"setTimeout"],[195,14,212,12],[195,15,212,13],[195,21,212,19],[196,6,213,4],[196,10,213,8],[197,8,214,6,"appendNewLog"],[197,20,214,18],[197,21,214,19],[197,25,214,23,"LogBoxLog"],[197,35,214,32],[197,36,214,32,"LogBoxLog"],[197,45,214,32],[197,46,214,33],[197,50,214,33,"parseLogBoxException"],[197,65,214,53],[197,66,214,53,"parseLogBoxException"],[197,86,214,53],[197,88,214,54,"error"],[197,93,214,59],[197,94,214,60],[197,95,214,61],[197,96,214,62],[198,6,215,4],[198,7,215,5],[198,8,215,6],[198,15,215,13,"loggingError"],[198,27,215,25],[198,29,215,27],[199,8,216,6,"reportUnexpectedLogBoxError"],[199,35,216,33],[199,36,216,34,"loggingError"],[199,48,216,46],[199,49,216,47],[200,6,217,4],[201,4,218,2],[201,5,218,3],[201,7,218,5],[201,8,218,6],[201,9,218,7],[202,2,219,0],[203,2,221,7],[203,11,221,16,"symbolicateLogNow"],[203,28,221,33,"symbolicateLogNow"],[203,29,221,34,"type"],[203,33,221,49],[203,35,221,51,"log"],[203,38,221,65],[203,40,221,67],[204,4,222,2,"log"],[204,7,222,5],[204,8,222,6,"symbolicate"],[204,19,222,17],[204,20,222,18,"type"],[204,24,222,22],[204,26,222,24],[204,32,222,30],[205,6,223,4,"handleUpdate"],[205,18,223,16],[205,19,223,17],[205,20,223,18],[206,4,224,2],[206,5,224,3],[206,6,224,4],[207,2,225,0],[208,2,227,7],[208,11,227,16,"retrySymbolicateLogNow"],[208,33,227,38,"retrySymbolicateLogNow"],[208,34,227,39,"type"],[208,38,227,54],[208,40,227,56,"log"],[208,43,227,70],[208,45,227,72],[209,4,228,2,"log"],[209,7,228,5],[209,8,228,6,"retrySymbolicate"],[209,24,228,22],[209,25,228,23,"type"],[209,29,228,27],[209,31,228,29],[209,37,228,35],[210,6,229,4,"handleUpdate"],[210,18,229,16],[210,19,229,17],[210,20,229,18],[211,4,230,2],[211,5,230,3],[211,6,230,4],[212,2,231,0],[213,2,233,7],[213,11,233,16,"symbolicateLogLazy"],[213,29,233,34,"symbolicateLogLazy"],[213,30,233,35,"type"],[213,34,233,50],[213,36,233,52,"log"],[213,39,233,66],[213,41,233,68],[214,4,234,2,"log"],[214,7,234,5],[214,8,234,6,"symbolicate"],[214,19,234,17],[214,20,234,18,"type"],[214,24,234,22],[214,25,234,23],[215,2,235,0],[216,2,237,7],[216,11,237,16,"clear"],[216,16,237,21,"clear"],[216,17,237,21],[216,19,237,30],[217,4,238,2],[217,8,238,6,"logs"],[217,12,238,10],[217,13,238,11,"size"],[217,17,238,15],[217,20,238,18],[217,21,238,19],[217,23,238,21],[218,6,239,4,"logs"],[218,10,239,8],[218,13,239,11],[218,17,239,15,"Set"],[218,20,239,18],[218,21,239,19],[218,22,239,20],[219,6,240,4,"setSelectedLog"],[219,20,240,18],[219,21,240,19],[219,22,240,20],[219,23,240,21],[219,24,240,22],[220,4,241,2],[221,2,242,0],[222,2,244,7],[222,11,244,16,"setSelectedLog"],[222,25,244,30,"setSelectedLog"],[222,26,244,31,"proposedNewIndex"],[222,42,244,55],[222,44,244,63],[223,4,245,2],[223,10,245,8,"oldIndex"],[223,18,245,16],[223,21,245,19,"_selectedIndex"],[223,35,245,33],[224,4,246,2],[224,8,246,6,"newIndex"],[224,16,246,14],[224,19,246,17,"proposedNewIndex"],[224,35,246,33],[225,4,248,2],[225,10,248,8,"logArray"],[225,18,248,16],[225,21,248,19,"Array"],[225,26,248,24],[225,27,248,25,"from"],[225,31,248,29],[225,32,248,30,"logs"],[225,36,248,34],[225,37,248,35],[226,4,249,2],[226,8,249,6,"index"],[226,13,249,11],[226,16,249,14,"logArray"],[226,24,249,22],[226,25,249,23,"length"],[226,31,249,29],[226,34,249,32],[226,35,249,33],[227,4,250,2],[227,11,250,9,"index"],[227,16,250,14],[227,20,250,18],[227,21,250,19],[227,23,250,21],[228,6,251,4],[229,6,252,4],[229,10,252,8,"logArray"],[229,18,252,16],[229,19,252,17,"index"],[229,24,252,22],[229,25,252,23],[229,26,252,24,"level"],[229,31,252,29],[229,36,252,34],[229,44,252,42],[229,46,252,44],[230,8,253,6,"newIndex"],[230,16,253,14],[230,19,253,17,"index"],[230,24,253,22],[231,8,254,6],[232,6,255,4],[233,6,256,4,"index"],[233,11,256,9],[233,15,256,13],[233,16,256,14],[234,4,257,2],[235,4,258,2,"_selectedIndex"],[235,18,258,16],[235,21,258,19,"newIndex"],[235,29,258,27],[236,4,259,2,"handleUpdate"],[236,16,259,14],[236,17,259,15],[236,18,259,16],[237,4,260,2],[237,8,260,6,"NativeLogBox"],[237,20,260,18],[237,21,260,18,"default"],[237,28,260,18],[237,30,260,20],[238,6,261,4,"setTimeout"],[238,16,261,14],[238,17,261,15],[238,23,261,21],[239,8,262,6],[239,12,262,10,"oldIndex"],[239,20,262,18],[239,23,262,21],[239,24,262,22],[239,28,262,26,"newIndex"],[239,36,262,34],[239,40,262,38],[239,41,262,39],[239,43,262,41],[240,10,263,8,"NativeLogBox"],[240,22,263,20],[240,23,263,20,"default"],[240,30,263,20],[240,31,263,21,"show"],[240,35,263,25],[240,36,263,26],[240,37,263,27],[241,8,264,6],[241,9,264,7],[241,15,264,13],[241,19,264,17,"oldIndex"],[241,27,264,25],[241,31,264,29],[241,32,264,30],[241,36,264,34,"newIndex"],[241,44,264,42],[241,47,264,45],[241,48,264,46],[241,50,264,48],[242,10,265,8,"NativeLogBox"],[242,22,265,20],[242,23,265,20,"default"],[242,30,265,20],[242,31,265,21,"hide"],[242,35,265,25],[242,36,265,26],[242,37,265,27],[243,8,266,6],[244,6,267,4],[244,7,267,5],[244,9,267,7],[244,10,267,8],[244,11,267,9],[245,4,268,2],[246,2,269,0],[247,2,271,7],[247,11,271,16,"clearWarnings"],[247,24,271,29,"clearWarnings"],[247,25,271,29],[247,27,271,38],[248,4,272,2],[248,10,272,8,"newLogs"],[248,17,272,15],[248,20,272,18,"Array"],[248,25,272,23],[248,26,272,24,"from"],[248,30,272,28],[248,31,272,29,"logs"],[248,35,272,33],[248,36,272,34],[248,37,272,35,"filter"],[248,43,272,41],[248,44,272,43,"log"],[248,47,272,46],[248,51,272,51,"log"],[248,54,272,54],[248,55,272,55,"level"],[248,60,272,60],[248,65,272,65],[248,71,272,71],[248,72,272,72],[249,4,273,2],[249,8,273,6,"newLogs"],[249,15,273,13],[249,16,273,14,"length"],[249,22,273,20],[249,27,273,25,"logs"],[249,31,273,29],[249,32,273,30,"size"],[249,36,273,34],[249,38,273,36],[250,6,274,4,"logs"],[250,10,274,8],[250,13,274,11],[250,17,274,15,"Set"],[250,20,274,18],[250,21,274,19,"newLogs"],[250,28,274,26],[250,29,274,27],[251,6,275,4,"setSelectedLog"],[251,20,275,18],[251,21,275,19],[251,22,275,20],[251,23,275,21],[251,24,275,22],[252,6,276,4,"handleUpdate"],[252,18,276,16],[252,19,276,17],[252,20,276,18],[253,4,277,2],[254,2,278,0],[255,2,280,7],[255,11,280,16,"clearErrors"],[255,22,280,27,"clearErrors"],[255,23,280,27],[255,25,280,36],[256,4,281,2],[256,10,281,8,"newLogs"],[256,17,281,15],[256,20,281,18,"Array"],[256,25,281,23],[256,26,281,24,"from"],[256,30,281,28],[256,31,281,29,"logs"],[256,35,281,33],[256,36,281,34],[256,37,281,35,"filter"],[256,43,281,41],[256,44,281,43,"log"],[256,47,281,46],[256,51,281,51,"log"],[256,54,281,54],[256,55,281,55,"level"],[256,60,281,60],[256,65,281,65],[256,72,281,72],[256,76,281,76,"log"],[256,79,281,79],[256,80,281,80,"level"],[256,85,281,85],[256,90,281,90],[256,97,281,97],[256,98,281,98],[257,4,282,2],[257,8,282,6,"newLogs"],[257,15,282,13],[257,16,282,14,"length"],[257,22,282,20],[257,27,282,25,"logs"],[257,31,282,29],[257,32,282,30,"size"],[257,36,282,34],[257,38,282,36],[258,6,283,4,"logs"],[258,10,283,8],[258,13,283,11],[258,17,283,15,"Set"],[258,20,283,18],[258,21,283,19,"newLogs"],[258,28,283,26],[258,29,283,27],[259,6,284,4,"setSelectedLog"],[259,20,284,18],[259,21,284,19],[259,22,284,20],[259,23,284,21],[259,24,284,22],[260,4,285,2],[261,2,286,0],[262,2,288,7],[262,11,288,16,"dismiss"],[262,18,288,23,"dismiss"],[262,19,288,24,"log"],[262,22,288,38],[262,24,288,46],[263,4,289,2],[263,8,289,6,"logs"],[263,12,289,10],[263,13,289,11,"has"],[263,16,289,14],[263,17,289,15,"log"],[263,20,289,18],[263,21,289,19],[263,23,289,21],[264,6,290,4,"logs"],[264,10,290,8],[264,11,290,9,"delete"],[264,17,290,15],[264,18,290,16,"log"],[264,21,290,19],[264,22,290,20],[265,6,291,4,"handleUpdate"],[265,18,291,16],[265,19,291,17],[265,20,291,18],[266,4,292,2],[267,2,293,0],[268,2,295,7],[268,11,295,16,"getIgnorePatterns"],[268,28,295,33,"getIgnorePatterns"],[268,29,295,33],[268,31,295,53],[269,4,296,2],[269,11,296,9,"Array"],[269,16,296,14],[269,17,296,15,"from"],[269,21,296,19],[269,22,296,20,"ignorePatterns"],[269,36,296,34],[269,37,296,35],[270,2,297,0],[271,2,299,7],[271,11,299,16,"addIgnorePatterns"],[271,28,299,33,"addIgnorePatterns"],[271,29,299,34,"patterns"],[271,37,299,59],[271,39,299,67],[272,4,300,2],[272,10,300,8,"existingSize"],[272,22,300,20],[272,25,300,23,"ignorePatterns"],[272,39,300,37],[272,40,300,38,"size"],[272,44,300,42],[273,4,301,2],[274,4,302,2],[275,4,303,2,"patterns"],[275,12,303,10],[275,13,303,11,"forEach"],[275,20,303,18],[275,21,303,20,"pattern"],[275,28,303,42],[275,32,303,47],[276,6,304,4],[276,10,304,8,"pattern"],[276,17,304,15],[276,29,304,27,"RegExp"],[276,35,304,33],[276,37,304,35],[277,8,305,6],[277,13,305,11],[277,19,305,17,"existingPattern"],[277,34,305,32],[277,38,305,36,"ignorePatterns"],[277,52,305,50],[277,54,305,52],[278,10,306,8],[278,14,307,10,"existingPattern"],[278,29,307,25],[278,41,307,37,"RegExp"],[278,47,307,43],[278,51,308,10,"existingPattern"],[278,66,308,25],[278,67,308,26,"toString"],[278,75,308,34],[278,76,308,35],[278,77,308,36],[278,82,308,41,"pattern"],[278,89,308,48],[278,90,308,49,"toString"],[278,98,308,57],[278,99,308,58],[278,100,308,59],[278,102,309,10],[279,12,310,10],[280,10,311,8],[281,8,312,6],[282,8,313,6,"ignorePatterns"],[282,22,313,20],[282,23,313,21,"add"],[282,26,313,24],[282,27,313,25,"pattern"],[282,34,313,32],[282,35,313,33],[283,6,314,4],[284,6,315,4,"ignorePatterns"],[284,20,315,18],[284,21,315,19,"add"],[284,24,315,22],[284,25,315,23,"pattern"],[284,32,315,30],[284,33,315,31],[285,4,316,2],[285,5,316,3],[285,6,316,4],[286,4,317,2],[286,8,317,6,"ignorePatterns"],[286,22,317,20],[286,23,317,21,"size"],[286,27,317,25],[286,32,317,30,"existingSize"],[286,44,317,42],[286,46,317,44],[287,6,318,4],[288,4,319,2],[289,4,320,2],[290,4,321,2],[291,4,322,2],[292,4,323,2],[293,4,324,2,"logs"],[293,8,324,6],[293,11,324,9],[293,15,324,13,"Set"],[293,18,324,16],[293,19,324,17,"Array"],[293,24,324,22],[293,25,324,23,"from"],[293,29,324,27],[293,30,324,28,"logs"],[293,34,324,32],[293,35,324,33],[293,36,324,34,"filter"],[293,42,324,40],[293,43,324,42,"log"],[293,46,324,45],[293,50,324,50],[293,51,324,51,"isMessageIgnored"],[293,67,324,67],[293,68,324,68,"log"],[293,71,324,71],[293,72,324,72,"message"],[293,79,324,79],[293,80,324,80,"content"],[293,87,324,87],[293,88,324,88],[293,89,324,89],[293,90,324,90],[294,4,325,2,"handleUpdate"],[294,16,325,14],[294,17,325,15],[294,18,325,16],[295,2,326,0],[296,2,328,7],[296,11,328,16,"setDisabled"],[296,22,328,27,"setDisabled"],[296,23,328,28,"value"],[296,28,328,42],[296,30,328,50],[297,4,329,2],[297,8,329,6,"value"],[297,13,329,11],[297,18,329,16,"_isDisabled"],[297,29,329,27],[297,31,329,29],[298,6,330,4],[299,4,331,2],[300,4,332,2,"_isDisabled"],[300,15,332,13],[300,18,332,16,"value"],[300,23,332,21],[301,4,333,2,"handleUpdate"],[301,16,333,14],[301,17,333,15],[301,18,333,16],[302,2,334,0],[303,2,336,7],[303,11,336,16,"isDisabled"],[303,21,336,26,"isDisabled"],[303,22,336,26],[303,24,336,38],[304,4,337,2],[304,11,337,9,"_isDisabled"],[304,22,337,20],[305,2,338,0],[306,2,340,7],[306,11,340,16,"observe"],[306,18,340,23,"observe"],[306,19,340,24,"observer"],[306,27,340,42],[306,29,340,58],[307,4,341,2],[307,10,341,8,"subscription"],[307,22,341,20],[307,25,341,23],[308,6,341,25,"observer"],[309,4,341,34],[309,5,341,35],[310,4,342,2,"observers"],[310,13,342,11],[310,14,342,12,"add"],[310,17,342,15],[310,18,342,16,"subscription"],[310,30,342,28],[310,31,342,29],[311,4,344,2,"observer"],[311,12,344,10],[311,13,344,11,"getNextState"],[311,25,344,23],[311,26,344,24],[311,27,344,25],[311,28,344,26],[312,4,346,2],[312,11,346,9],[313,6,347,4,"unsubscribe"],[313,17,347,15,"unsubscribe"],[313,18,347,15],[313,20,347,24],[314,8,348,6,"observers"],[314,17,348,15],[314,18,348,16,"delete"],[314,24,348,22],[314,25,348,23,"subscription"],[314,37,348,35],[314,38,348,36],[315,6,349,4],[316,4,350,2],[316,5,350,3],[317,2,351,0],[318,2,353,0],[318,8,353,6,"emitter"],[318,15,353,13],[318,18,353,16],[318,22,353,20,"NativeEventEmitter"],[318,40,353,38],[318,41,353,38,"default"],[318,48,353,38],[318,49,353,39],[319,4,354,2,"addListener"],[319,15,354,13,"addListener"],[319,16,354,13],[319,18,354,16],[319,19,354,17],[319,20,354,18],[320,4,355,2,"removeListeners"],[320,19,355,17,"removeListeners"],[320,20,355,17],[320,22,355,20],[320,23,355,21],[321,2,356,0],[321,3,356,1],[321,4,356,2],[322,2,358,7],[322,11,358,16,"withSubscription"],[322,27,358,32,"withSubscription"],[322,28,358,33,"WrappedComponent"],[322,44,358,67],[322,46,358,94],[323,4,359,2],[323,10,359,8,"LogBoxStateSubscription"],[323,33,359,31],[323,42,359,40,"React"],[323,47,359,45],[323,48,359,46,"Component"],[323,57,359,55],[323,58,359,95],[324,6,360,4],[324,13,360,11,"getDerivedStateFromError"],[324,37,360,35,"getDerivedStateFromError"],[324,38,360,35],[324,40,360,38],[325,8,361,6],[325,15,361,13],[326,10,361,15,"hasError"],[326,18,361,23],[326,20,361,25],[327,8,361,30],[327,9,361,31],[328,6,362,4],[329,6,364,4,"constructor"],[329,17,364,15,"constructor"],[329,18,364,16,"props"],[329,23,364,29],[329,25,364,31],[330,8,365,6],[330,13,365,11],[330,14,365,12,"props"],[330,19,365,17],[330,20,365,18],[331,8,367,6],[331,12,367,10,"process"],[331,19,367,17],[331,20,367,18,"env"],[331,23,367,21],[331,24,367,22,"NODE_ENV"],[331,32,367,30],[331,37,367,35],[331,50,367,48],[331,52,367,50],[332,10,368,8,"emitter"],[332,17,368,15],[332,18,368,16,"addListener"],[332,29,368,27],[332,30,368,28],[332,51,368,49],[332,53,368,51],[332,59,368,57],[333,12,369,10],[333,16,369,14],[333,20,369,18],[333,21,369,19,"state"],[333,26,369,24],[333,27,369,25,"hasError"],[333,35,369,33],[333,37,369,35],[334,14,370,12],[334,18,370,16],[334,19,370,17,"retry"],[334,24,370,22],[334,25,370,23],[334,26,370,24],[335,12,371,10],[336,10,372,8],[336,11,372,9],[336,12,372,10],[337,8,373,6],[338,6,374,4],[339,6,376,4,"componentDidCatch"],[339,23,376,21,"componentDidCatch"],[339,24,376,22,"err"],[339,27,376,32],[339,29,376,34,"errorInfo"],[339,38,376,77],[339,40,376,79],[340,8,377,6],[341,0,378,0],[342,8,379,6,"reportLogBoxError"],[342,25,379,23],[342,26,379,24,"err"],[342,29,379,27],[342,31,379,29,"errorInfo"],[342,40,379,38],[342,41,379,39,"componentStack"],[342,55,379,53],[342,56,379,54],[343,6,380,4],[344,6,384,4,"state"],[344,11,384,9],[344,14,384,12],[345,8,385,6,"logs"],[345,12,385,10],[345,14,385,12],[345,18,385,16,"Set"],[345,21,385,19],[345,22,385,31],[345,23,385,32],[346,8,386,6,"isDisabled"],[346,18,386,16],[346,20,386,18],[346,25,386,23],[347,8,387,6,"hasError"],[347,16,387,14],[347,18,387,16],[347,23,387,21],[348,8,388,6,"selectedLogIndex"],[348,24,388,22],[348,26,388,24],[348,27,388,25],[349,6,389,4],[349,7,389,5],[350,6,391,4,"retry"],[350,11,391,9],[350,14,391,12,"retry"],[350,15,391,12],[350,20,391,18],[351,8,392,6],[351,15,392,13],[351,19,392,17,"Promise"],[351,26,392,24],[351,27,392,32,"resolve"],[351,34,392,39],[351,38,392,44],[352,10,393,8],[352,14,393,12],[352,15,393,13,"setState"],[352,23,393,21],[352,24,393,22],[353,12,393,24,"hasError"],[353,20,393,32],[353,22,393,34],[354,10,393,40],[354,11,393,41],[354,13,393,43],[354,19,393,49],[355,12,394,10,"resolve"],[355,19,394,17],[355,20,394,18],[355,21,394,19],[356,10,395,8],[356,11,395,9],[356,12,395,10],[357,8,396,6],[357,9,396,7],[357,10,396,8],[358,6,397,4],[358,7,397,5],[359,6,399,4,"render"],[359,12,399,10,"render"],[359,13,399,10],[359,15,399,13],[360,8,400,6],[360,28,401,8],[360,32,401,8,"_reactJsxDevRuntime"],[360,51,401,8],[360,52,401,8,"jsxDEV"],[360,58,401,8],[360,60,401,9,"_LogContext"],[360,71,401,19],[360,72,401,19,"LogContext"],[360,82,401,19],[360,83,401,20,"Provider"],[360,91,401,28],[361,10,402,10,"value"],[361,15,402,15],[361,17,402,17],[362,12,403,12,"selectedLogIndex"],[362,28,403,28],[362,30,403,30],[362,34,403,34],[362,35,403,35,"state"],[362,40,403,40],[362,41,403,41,"selectedLogIndex"],[362,57,403,57],[363,12,404,12,"isDisabled"],[363,22,404,22],[363,24,404,24],[363,28,404,28],[363,29,404,29,"state"],[363,34,404,34],[363,35,404,35,"isDisabled"],[363,45,404,45],[364,12,405,12,"logs"],[364,16,405,16],[364,18,405,18,"Array"],[364,23,405,23],[364,24,405,24,"from"],[364,28,405,28],[364,29,405,29],[364,33,405,33],[364,34,405,34,"state"],[364,39,405,39],[364,40,405,40,"logs"],[364,44,405,44],[365,10,406,10],[365,11,406,12],[366,10,406,12,"children"],[366,18,406,12],[366,21,407,11],[366,25,407,15],[366,26,407,16,"state"],[366,31,407,21],[366,32,407,22,"hasError"],[366,40,407,30],[366,43,407,33],[366,47,407,37],[366,50,407,40],[366,54,407,44],[366,55,407,45,"props"],[366,60,407,50],[366,61,407,51,"children"],[366,69,407,59],[366,84,408,10],[366,88,408,10,"_reactJsxDevRuntime"],[366,107,408,10],[366,108,408,10,"jsxDEV"],[366,114,408,10],[366,116,408,11,"WrappedComponent"],[366,132,408,27],[367,12,408,27,"fileName"],[367,20,408,27],[367,22,408,27,"_jsxFileName"],[367,34,408,27],[368,12,408,27,"lineNumber"],[368,22,408,27],[369,12,408,27,"columnNumber"],[369,24,408,27],[370,10,408,27],[370,17,408,29],[370,18,408,30],[371,8,408,30],[372,10,408,30,"fileName"],[372,18,408,30],[372,20,408,30,"_jsxFileName"],[372,32,408,30],[373,10,408,30,"lineNumber"],[373,20,408,30],[374,10,408,30,"columnNumber"],[374,22,408,30],[375,8,408,30],[375,15,409,29],[375,16,409,30],[376,6,411,4],[377,6,413,4,"componentDidMount"],[377,23,413,21,"componentDidMount"],[377,24,413,21],[377,26,413,30],[378,8,414,6],[378,12,414,10],[378,13,414,11,"_subscription"],[378,26,414,24],[378,29,414,27,"observe"],[378,36,414,34],[378,37,414,36,"data"],[378,41,414,40],[378,45,414,45],[379,10,415,8],[380,10,416,8],[380,14,416,12,"data"],[380,18,416,16],[380,19,416,17,"selectedLogIndex"],[380,35,416,33],[380,40,416,38],[380,41,416,39],[380,42,416,40],[380,44,416,42],[381,10,417,8,"React"],[381,15,417,13],[381,16,417,14,"startTransition"],[381,31,417,29],[381,32,417,30],[381,38,417,36],[382,12,418,10],[382,16,418,14],[382,17,418,15,"setState"],[382,25,418,23],[382,26,418,24,"data"],[382,30,418,28],[382,31,418,29],[383,10,419,8],[383,11,419,9],[383,12,419,10],[384,8,420,6],[384,9,420,7],[384,10,420,8],[385,6,421,4],[386,6,423,4,"componentWillUnmount"],[386,26,423,24,"componentWillUnmount"],[386,27,423,24],[386,29,423,33],[387,8,424,6],[387,12,424,10],[387,16,424,14],[387,17,424,15,"_subscription"],[387,30,424,28],[387,34,424,32],[387,38,424,36],[387,40,424,38],[388,10,425,8],[388,14,425,12],[388,15,425,13,"_subscription"],[388,28,425,26],[388,29,425,27,"unsubscribe"],[388,40,425,38],[388,41,425,39],[388,42,425,40],[389,8,426,6],[390,6,427,4],[391,6,429,4,"_handleDismiss"],[391,20,429,18],[391,23,429,21,"_handleDismiss"],[391,24,429,21],[391,29,429,33],[392,8,430,6],[393,8,431,6],[394,8,432,6],[395,8,433,6],[395,14,433,12],[396,10,433,14,"selectedLogIndex"],[396,26,433,30],[397,10,433,32,"logs"],[397,14,433,36],[397,16,433,38,"stateLogs"],[398,8,433,48],[398,9,433,49],[398,12,433,52],[398,16,433,56],[398,17,433,57,"state"],[398,22,433,62],[399,8,434,6],[399,14,434,12,"logsArray"],[399,23,434,21],[399,26,434,24,"Array"],[399,31,434,29],[399,32,434,30,"from"],[399,36,434,34],[399,37,434,35,"stateLogs"],[399,46,434,44],[399,47,434,45],[400,8,435,6],[400,12,435,10,"selectedLogIndex"],[400,28,435,26],[400,32,435,30],[400,36,435,34],[400,38,435,36],[401,10,436,8],[401,14,436,12,"logsArray"],[401,23,436,21],[401,24,436,22,"length"],[401,30,436,28],[401,33,436,31],[401,34,436,32],[401,38,436,36],[401,39,436,37],[401,41,436,39],[402,12,437,10,"setSelectedLog"],[402,26,437,24],[402,27,437,25],[402,28,437,26],[402,29,437,27],[402,30,437,28],[403,10,438,8],[403,11,438,9],[403,17,438,15],[403,21,438,19,"selectedLogIndex"],[403,37,438,35],[403,41,438,39,"logsArray"],[403,50,438,48],[403,51,438,49,"length"],[403,57,438,55],[403,60,438,58],[403,61,438,59],[403,63,438,61],[404,12,439,10,"setSelectedLog"],[404,26,439,24],[404,27,439,25,"selectedLogIndex"],[404,43,439,41],[404,46,439,44],[404,47,439,45],[404,48,439,46],[405,10,440,8],[406,10,442,8,"dismiss"],[406,17,442,15],[406,18,442,16,"logsArray"],[406,27,442,25],[406,28,442,26,"selectedLogIndex"],[406,44,442,42],[406,45,442,43],[406,46,442,44],[407,8,443,6],[408,6,444,4],[408,7,444,5],[409,6,446,4,"_handleMinimize"],[409,21,446,19],[409,24,446,22,"_handleMinimize"],[409,25,446,22],[409,30,446,34],[410,8,447,6,"setSelectedLog"],[410,22,447,20],[410,23,447,21],[410,24,447,22],[410,25,447,23],[410,26,447,24],[411,6,448,4],[411,7,448,5],[412,6,450,4,"_handleSetSelectedLog"],[412,27,450,25],[412,30,450,29,"index"],[412,35,450,42],[412,39,450,53],[413,8,451,6,"setSelectedLog"],[413,22,451,20],[413,23,451,21,"index"],[413,28,451,26],[413,29,451,27],[414,6,452,4],[414,7,452,5],[415,4,453,2],[417,4,455,2],[418,4,456,2],[418,11,456,9,"LogBoxStateSubscription"],[418,34,456,32],[419,2,457,0],[420,0,457,1],[420,3]],"functionMap":{"names":["<global>","getNextState","reportLogBoxError","reportUnexpectedLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setTimeout$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","newLog.symbolicate$argument_1","addLog","addException","symbolicateLogNow","log.symbolicate$argument_1","retrySymbolicateLogNow","log.retrySymbolicate$argument_1","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","NativeEventEmitter$argument_0.addListener","NativeEventEmitter$argument_0.removeListeners","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#constructor","emitter.addListener$argument_1","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#retry","Promise$argument_0","setState$argument_1","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","React.startTransition$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;AC2E;CDM;OEE;CFO;OGE;CHG;OIE;CJE;OKE;CLU;AME;+BCE;wBCG,qCD;KDC;CNE;ASE;6CCuB;KDQ;yCFE;KEI;gCEK;KFQ;CTQ;OYE;aLK;GKiB;CZC;OaE;aNG;GMM;CbC;OcE;wBCC;GDE;CdC;OgBE;6BCC;GDE;ChBC;OkBE;ClBE;OmBE;CnBK;OoBE;ebiB;KaM;CpBE;OqBE;0CCC,6BD;CrBM;OuBE;0CDC,uDC;CvBK;OwBE;CxBK;OyBE;CzBE;O0BE;mBCI;GDa;yCJQ,+CI;C1BE;O4BE;C5BM;O6BE;C7BE;O8BE;ICO;KDE;C9BE;EgCG,gBhC;EiCC,oBjC;OkCG;ECC;ICC;KDE;IEE;mDCI;SDI;KFE;IIE;KJI;YKW;+BCC;2CCC;SDE;ODC;KLC;IQE;KRY;ISE;mCCC;8BCG;SDE;ODC;KTC;IYE;KZI;qBaE;Kbe;sBcE;KdE;4BeE;KfE;GDC;ClCI"},"hasCjsExports":false},"type":"js/module"}]}