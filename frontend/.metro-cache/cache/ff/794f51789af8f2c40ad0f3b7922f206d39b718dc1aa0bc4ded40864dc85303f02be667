{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parse = parse;\n  var UNKNOWN_FUNCTION = '<unknown>';\n  /**\n   * This parses the different stack traces and puts them into one format\n   * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n   */\n\n  function parse(stackString) {\n    var lines = stackString.split('\\n');\n    return lines.reduce(function (stack, line) {\n      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n      if (parseResult) {\n        stack.push(parseResult);\n      }\n      return stack;\n    }, []);\n  }\n  var chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n  var chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n  function parseChrome(line) {\n    var parts = chromeRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    var submatch = chromeEvalRe.exec(parts[2]);\n    if (isEval && submatch != null) {\n      // throw out eval line/column and use top-most line/column number\n      parts[2] = submatch[1]; // url\n\n      parts[3] = submatch[2]; // line\n\n      parts[4] = submatch[3]; // column\n    }\n    return {\n      file: !isNative ? parts[2] : null,\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: isNative ? [parts[2]] : [],\n      lineNumber: parts[3] ? +parts[3] : null,\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n  var winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  function parseWinjs(line) {\n    var parts = winjsRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[2],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[3],\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n  var geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\n  var geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n  function parseGecko(line) {\n    var parts = geckoRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    var submatch = geckoEvalRe.exec(parts[3]);\n    if (isEval && submatch != null) {\n      // throw out eval line/column and use top-most line number\n      parts[3] = submatch[1];\n      parts[4] = submatch[2];\n      parts[5] = null; // no column when eval\n    }\n    return {\n      file: parts[3],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: parts[2] ? parts[2].split(',') : [],\n      lineNumber: parts[4] ? +parts[4] : null,\n      column: parts[5] ? +parts[5] : null\n    };\n  }\n  var javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n  function parseJSC(line) {\n    var parts = javaScriptCoreRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[3],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[4],\n      column: parts[5] ? +parts[5] : null\n    };\n  }\n  var nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  function parseNode(line) {\n    var parts = nodeRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[2],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[3],\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n});","lineCount":115,"map":[[6,2,1,0],[6,6,1,4,"UNKNOWN_FUNCTION"],[6,22,1,20],[6,25,1,23],[6,36,1,34],[7,2,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[12,2,7,0],[12,11,7,9,"parse"],[12,16,7,14,"parse"],[12,17,7,15,"stackString"],[12,28,7,26],[12,30,7,28],[13,4,8,2],[13,8,8,6,"lines"],[13,13,8,11],[13,16,8,14,"stackString"],[13,27,8,25],[13,28,8,26,"split"],[13,33,8,31],[13,34,8,32],[13,38,8,36],[13,39,8,37],[14,4,9,2],[14,11,9,9,"lines"],[14,16,9,14],[14,17,9,15,"reduce"],[14,23,9,21],[14,24,9,22],[14,34,9,32,"stack"],[14,39,9,37],[14,41,9,39,"line"],[14,45,9,43],[14,47,9,45],[15,6,10,4],[15,10,10,8,"parseResult"],[15,21,10,19],[15,24,10,22,"parseChrome"],[15,35,10,33],[15,36,10,34,"line"],[15,40,10,38],[15,41,10,39],[15,45,10,43,"parseWinjs"],[15,55,10,53],[15,56,10,54,"line"],[15,60,10,58],[15,61,10,59],[15,65,10,63,"parseGecko"],[15,75,10,73],[15,76,10,74,"line"],[15,80,10,78],[15,81,10,79],[15,85,10,83,"parseNode"],[15,94,10,92],[15,95,10,93,"line"],[15,99,10,97],[15,100,10,98],[15,104,10,102,"parseJSC"],[15,112,10,110],[15,113,10,111,"line"],[15,117,10,115],[15,118,10,116],[16,6,12,4],[16,10,12,8,"parseResult"],[16,21,12,19],[16,23,12,21],[17,8,13,6,"stack"],[17,13,13,11],[17,14,13,12,"push"],[17,18,13,16],[17,19,13,17,"parseResult"],[17,30,13,28],[17,31,13,29],[18,6,14,4],[19,6,16,4],[19,13,16,11,"stack"],[19,18,16,16],[20,4,17,2],[20,5,17,3],[20,7,17,5],[20,9,17,7],[20,10,17,8],[21,2,18,0],[22,2,19,0],[22,6,19,4,"chromeRe"],[22,14,19,12],[22,17,19,15],[22,160,19,158],[23,2,20,0],[23,6,20,4,"chromeEvalRe"],[23,18,20,16],[23,21,20,19],[23,52,20,50],[24,2,22,0],[24,11,22,9,"parseChrome"],[24,22,22,20,"parseChrome"],[24,23,22,21,"line"],[24,27,22,25],[24,29,22,27],[25,4,23,2],[25,8,23,6,"parts"],[25,13,23,11],[25,16,23,14,"chromeRe"],[25,24,23,22],[25,25,23,23,"exec"],[25,29,23,27],[25,30,23,28,"line"],[25,34,23,32],[25,35,23,33],[26,4,25,2],[26,8,25,6],[26,9,25,7,"parts"],[26,14,25,12],[26,16,25,14],[27,6,26,4],[27,13,26,11],[27,17,26,15],[28,4,27,2],[29,4,29,2],[29,8,29,6,"isNative"],[29,16,29,14],[29,19,29,17,"parts"],[29,24,29,22],[29,25,29,23],[29,26,29,24],[29,27,29,25],[29,31,29,29,"parts"],[29,36,29,34],[29,37,29,35],[29,38,29,36],[29,39,29,37],[29,40,29,38,"indexOf"],[29,47,29,45],[29,48,29,46],[29,56,29,54],[29,57,29,55],[29,62,29,60],[29,63,29,61],[29,64,29,62],[29,65,29,63],[31,4,31,2],[31,8,31,6,"isEval"],[31,14,31,12],[31,17,31,15,"parts"],[31,22,31,20],[31,23,31,21],[31,24,31,22],[31,25,31,23],[31,29,31,27,"parts"],[31,34,31,32],[31,35,31,33],[31,36,31,34],[31,37,31,35],[31,38,31,36,"indexOf"],[31,45,31,43],[31,46,31,44],[31,52,31,50],[31,53,31,51],[31,58,31,56],[31,59,31,57],[31,60,31,58],[31,61,31,59],[33,4,33,2],[33,8,33,6,"submatch"],[33,16,33,14],[33,19,33,17,"chromeEvalRe"],[33,31,33,29],[33,32,33,30,"exec"],[33,36,33,34],[33,37,33,35,"parts"],[33,42,33,40],[33,43,33,41],[33,44,33,42],[33,45,33,43],[33,46,33,44],[34,4,35,2],[34,8,35,6,"isEval"],[34,14,35,12],[34,18,35,16,"submatch"],[34,26,35,24],[34,30,35,28],[34,34,35,32],[34,36,35,34],[35,6,36,4],[36,6,37,4,"parts"],[36,11,37,9],[36,12,37,10],[36,13,37,11],[36,14,37,12],[36,17,37,15,"submatch"],[36,25,37,23],[36,26,37,24],[36,27,37,25],[36,28,37,26],[36,29,37,27],[36,30,37,28],[38,6,39,4,"parts"],[38,11,39,9],[38,12,39,10],[38,13,39,11],[38,14,39,12],[38,17,39,15,"submatch"],[38,25,39,23],[38,26,39,24],[38,27,39,25],[38,28,39,26],[38,29,39,27],[38,30,39,28],[40,6,41,4,"parts"],[40,11,41,9],[40,12,41,10],[40,13,41,11],[40,14,41,12],[40,17,41,15,"submatch"],[40,25,41,23],[40,26,41,24],[40,27,41,25],[40,28,41,26],[40,29,41,27],[40,30,41,28],[41,4,42,2],[42,4,44,2],[42,11,44,9],[43,6,45,4,"file"],[43,10,45,8],[43,12,45,10],[43,13,45,11,"isNative"],[43,21,45,19],[43,24,45,22,"parts"],[43,29,45,27],[43,30,45,28],[43,31,45,29],[43,32,45,30],[43,35,45,33],[43,39,45,37],[44,6,46,4,"methodName"],[44,16,46,14],[44,18,46,16,"parts"],[44,23,46,21],[44,24,46,22],[44,25,46,23],[44,26,46,24],[44,30,46,28,"UNKNOWN_FUNCTION"],[44,46,46,44],[45,6,47,4,"arguments"],[45,15,47,13],[45,17,47,15,"isNative"],[45,25,47,23],[45,28,47,26],[45,29,47,27,"parts"],[45,34,47,32],[45,35,47,33],[45,36,47,34],[45,37,47,35],[45,38,47,36],[45,41,47,39],[45,43,47,41],[46,6,48,4,"lineNumber"],[46,16,48,14],[46,18,48,16,"parts"],[46,23,48,21],[46,24,48,22],[46,25,48,23],[46,26,48,24],[46,29,48,27],[46,30,48,28,"parts"],[46,35,48,33],[46,36,48,34],[46,37,48,35],[46,38,48,36],[46,41,48,39],[46,45,48,43],[47,6,49,4,"column"],[47,12,49,10],[47,14,49,12,"parts"],[47,19,49,17],[47,20,49,18],[47,21,49,19],[47,22,49,20],[47,25,49,23],[47,26,49,24,"parts"],[47,31,49,29],[47,32,49,30],[47,33,49,31],[47,34,49,32],[47,37,49,35],[48,4,50,2],[48,5,50,3],[49,2,51,0],[50,2,53,0],[50,6,53,4,"winjsRe"],[50,13,53,11],[50,16,53,14],[50,131,53,129],[51,2,55,0],[51,11,55,9,"parseWinjs"],[51,21,55,19,"parseWinjs"],[51,22,55,20,"line"],[51,26,55,24],[51,28,55,26],[52,4,56,2],[52,8,56,6,"parts"],[52,13,56,11],[52,16,56,14,"winjsRe"],[52,23,56,21],[52,24,56,22,"exec"],[52,28,56,26],[52,29,56,27,"line"],[52,33,56,31],[52,34,56,32],[53,4,58,2],[53,8,58,6],[53,9,58,7,"parts"],[53,14,58,12],[53,16,58,14],[54,6,59,4],[54,13,59,11],[54,17,59,15],[55,4,60,2],[56,4,62,2],[56,11,62,9],[57,6,63,4,"file"],[57,10,63,8],[57,12,63,10,"parts"],[57,17,63,15],[57,18,63,16],[57,19,63,17],[57,20,63,18],[58,6,64,4,"methodName"],[58,16,64,14],[58,18,64,16,"parts"],[58,23,64,21],[58,24,64,22],[58,25,64,23],[58,26,64,24],[58,30,64,28,"UNKNOWN_FUNCTION"],[58,46,64,44],[59,6,65,4,"arguments"],[59,15,65,13],[59,17,65,15],[59,19,65,17],[60,6,66,4,"lineNumber"],[60,16,66,14],[60,18,66,16],[60,19,66,17,"parts"],[60,24,66,22],[60,25,66,23],[60,26,66,24],[60,27,66,25],[61,6,67,4,"column"],[61,12,67,10],[61,14,67,12,"parts"],[61,19,67,17],[61,20,67,18],[61,21,67,19],[61,22,67,20],[61,25,67,23],[61,26,67,24,"parts"],[61,31,67,29],[61,32,67,30],[61,33,67,31],[61,34,67,32],[61,37,67,35],[62,4,68,2],[62,5,68,3],[63,2,69,0],[64,2,71,0],[64,6,71,4,"geckoRe"],[64,13,71,11],[64,16,71,14],[64,149,71,147],[65,2,72,0],[65,6,72,4,"geckoEvalRe"],[65,17,72,15],[65,20,72,18],[65,67,72,65],[66,2,74,0],[66,11,74,9,"parseGecko"],[66,21,74,19,"parseGecko"],[66,22,74,20,"line"],[66,26,74,24],[66,28,74,26],[67,4,75,2],[67,8,75,6,"parts"],[67,13,75,11],[67,16,75,14,"geckoRe"],[67,23,75,21],[67,24,75,22,"exec"],[67,28,75,26],[67,29,75,27,"line"],[67,33,75,31],[67,34,75,32],[68,4,77,2],[68,8,77,6],[68,9,77,7,"parts"],[68,14,77,12],[68,16,77,14],[69,6,78,4],[69,13,78,11],[69,17,78,15],[70,4,79,2],[71,4,81,2],[71,8,81,6,"isEval"],[71,14,81,12],[71,17,81,15,"parts"],[71,22,81,20],[71,23,81,21],[71,24,81,22],[71,25,81,23],[71,29,81,27,"parts"],[71,34,81,32],[71,35,81,33],[71,36,81,34],[71,37,81,35],[71,38,81,36,"indexOf"],[71,45,81,43],[71,46,81,44],[71,55,81,53],[71,56,81,54],[71,59,81,57],[71,60,81,58],[71,61,81,59],[72,4,82,2],[72,8,82,6,"submatch"],[72,16,82,14],[72,19,82,17,"geckoEvalRe"],[72,30,82,28],[72,31,82,29,"exec"],[72,35,82,33],[72,36,82,34,"parts"],[72,41,82,39],[72,42,82,40],[72,43,82,41],[72,44,82,42],[72,45,82,43],[73,4,84,2],[73,8,84,6,"isEval"],[73,14,84,12],[73,18,84,16,"submatch"],[73,26,84,24],[73,30,84,28],[73,34,84,32],[73,36,84,34],[74,6,85,4],[75,6,86,4,"parts"],[75,11,86,9],[75,12,86,10],[75,13,86,11],[75,14,86,12],[75,17,86,15,"submatch"],[75,25,86,23],[75,26,86,24],[75,27,86,25],[75,28,86,26],[76,6,87,4,"parts"],[76,11,87,9],[76,12,87,10],[76,13,87,11],[76,14,87,12],[76,17,87,15,"submatch"],[76,25,87,23],[76,26,87,24],[76,27,87,25],[76,28,87,26],[77,6,88,4,"parts"],[77,11,88,9],[77,12,88,10],[77,13,88,11],[77,14,88,12],[77,17,88,15],[77,21,88,19],[77,22,88,20],[77,23,88,21],[78,4,89,2],[79,4,91,2],[79,11,91,9],[80,6,92,4,"file"],[80,10,92,8],[80,12,92,10,"parts"],[80,17,92,15],[80,18,92,16],[80,19,92,17],[80,20,92,18],[81,6,93,4,"methodName"],[81,16,93,14],[81,18,93,16,"parts"],[81,23,93,21],[81,24,93,22],[81,25,93,23],[81,26,93,24],[81,30,93,28,"UNKNOWN_FUNCTION"],[81,46,93,44],[82,6,94,4,"arguments"],[82,15,94,13],[82,17,94,15,"parts"],[82,22,94,20],[82,23,94,21],[82,24,94,22],[82,25,94,23],[82,28,94,26,"parts"],[82,33,94,31],[82,34,94,32],[82,35,94,33],[82,36,94,34],[82,37,94,35,"split"],[82,42,94,40],[82,43,94,41],[82,46,94,44],[82,47,94,45],[82,50,94,48],[82,52,94,50],[83,6,95,4,"lineNumber"],[83,16,95,14],[83,18,95,16,"parts"],[83,23,95,21],[83,24,95,22],[83,25,95,23],[83,26,95,24],[83,29,95,27],[83,30,95,28,"parts"],[83,35,95,33],[83,36,95,34],[83,37,95,35],[83,38,95,36],[83,41,95,39],[83,45,95,43],[84,6,96,4,"column"],[84,12,96,10],[84,14,96,12,"parts"],[84,19,96,17],[84,20,96,18],[84,21,96,19],[84,22,96,20],[84,25,96,23],[84,26,96,24,"parts"],[84,31,96,29],[84,32,96,30],[84,33,96,31],[84,34,96,32],[84,37,96,35],[85,4,97,2],[85,5,97,3],[86,2,98,0],[87,2,100,0],[87,6,100,4,"javaScriptCoreRe"],[87,22,100,20],[87,25,100,23],[87,87,100,85],[88,2,102,0],[88,11,102,9,"parseJSC"],[88,19,102,17,"parseJSC"],[88,20,102,18,"line"],[88,24,102,22],[88,26,102,24],[89,4,103,2],[89,8,103,6,"parts"],[89,13,103,11],[89,16,103,14,"javaScriptCoreRe"],[89,32,103,30],[89,33,103,31,"exec"],[89,37,103,35],[89,38,103,36,"line"],[89,42,103,40],[89,43,103,41],[90,4,105,2],[90,8,105,6],[90,9,105,7,"parts"],[90,14,105,12],[90,16,105,14],[91,6,106,4],[91,13,106,11],[91,17,106,15],[92,4,107,2],[93,4,109,2],[93,11,109,9],[94,6,110,4,"file"],[94,10,110,8],[94,12,110,10,"parts"],[94,17,110,15],[94,18,110,16],[94,19,110,17],[94,20,110,18],[95,6,111,4,"methodName"],[95,16,111,14],[95,18,111,16,"parts"],[95,23,111,21],[95,24,111,22],[95,25,111,23],[95,26,111,24],[95,30,111,28,"UNKNOWN_FUNCTION"],[95,46,111,44],[96,6,112,4,"arguments"],[96,15,112,13],[96,17,112,15],[96,19,112,17],[97,6,113,4,"lineNumber"],[97,16,113,14],[97,18,113,16],[97,19,113,17,"parts"],[97,24,113,22],[97,25,113,23],[97,26,113,24],[97,27,113,25],[98,6,114,4,"column"],[98,12,114,10],[98,14,114,12,"parts"],[98,19,114,17],[98,20,114,18],[98,21,114,19],[98,22,114,20],[98,25,114,23],[98,26,114,24,"parts"],[98,31,114,29],[98,32,114,30],[98,33,114,31],[98,34,114,32],[98,37,114,35],[99,4,115,2],[99,5,115,3],[100,2,116,0],[101,2,118,0],[101,6,118,4,"nodeRe"],[101,12,118,10],[101,15,118,13],[101,110,118,108],[102,2,120,0],[102,11,120,9,"parseNode"],[102,20,120,18,"parseNode"],[102,21,120,19,"line"],[102,25,120,23],[102,27,120,25],[103,4,121,2],[103,8,121,6,"parts"],[103,13,121,11],[103,16,121,14,"nodeRe"],[103,22,121,20],[103,23,121,21,"exec"],[103,27,121,25],[103,28,121,26,"line"],[103,32,121,30],[103,33,121,31],[104,4,123,2],[104,8,123,6],[104,9,123,7,"parts"],[104,14,123,12],[104,16,123,14],[105,6,124,4],[105,13,124,11],[105,17,124,15],[106,4,125,2],[107,4,127,2],[107,11,127,9],[108,6,128,4,"file"],[108,10,128,8],[108,12,128,10,"parts"],[108,17,128,15],[108,18,128,16],[108,19,128,17],[108,20,128,18],[109,6,129,4,"methodName"],[109,16,129,14],[109,18,129,16,"parts"],[109,23,129,21],[109,24,129,22],[109,25,129,23],[109,26,129,24],[109,30,129,28,"UNKNOWN_FUNCTION"],[109,46,129,44],[110,6,130,4,"arguments"],[110,15,130,13],[110,17,130,15],[110,19,130,17],[111,6,131,4,"lineNumber"],[111,16,131,14],[111,18,131,16],[111,19,131,17,"parts"],[111,24,131,22],[111,25,131,23],[111,26,131,24],[111,27,131,25],[112,6,132,4,"column"],[112,12,132,10],[112,14,132,12,"parts"],[112,19,132,17],[112,20,132,18],[112,21,132,19],[112,22,132,20],[112,25,132,23],[112,26,132,24,"parts"],[112,31,132,29],[112,32,132,30],[112,33,132,31],[112,34,132,32],[112,37,132,35],[113,4,133,2],[113,5,133,3],[114,2,134,0],[115,0,134,1],[115,3]],"functionMap":{"names":["<global>","parse","lines.reduce$argument_0","parseChrome","parseWinjs","parseGecko","parseJSC","parseNode"],"mappings":"AAA;ACM;sBCE;GDQ;CDC;AGI;CH6B;AII;CJc;AKK;CLwB;AMI;CNc;AOI;CPc"}},"type":"js/module"}]}