{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":65,"index":65}}],"key":"SfRhzMj3Ex6qA89WTFEUm9Lj49A=","exportNames":["*"]}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":276},"end":{"line":12,"column":43,"index":319}}],"key":"bGUa+dDG2WEhPiIlobT3urS95UE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,e,d){var s=r(d[0]);Object.defineProperty(e,\"__esModule\",{value:!0}),e.CellRenderMask=void 0;var t=s(r(d[1])),i=s(r(d[2]));e.CellRenderMask=class{constructor(s){(0,i.default)(s>=0,'CellRenderMask must contain a non-negative number os cells'),this._numCells=s,this._regions=0===s?[]:[{first:0,last:s-1,isSpacer:!0}]}enumerateRegions(){return this._regions}addCells(s){if((0,i.default)(s.first>=0&&s.first<this._numCells&&s.last>=-1&&s.last<this._numCells&&s.last>=s.first-1,'CellRenderMask.addCells called with invalid cell range'),!(s.last<s.first)){var l=this._findRegion(s.first),n=l[0],f=l[1],o=this._findRegion(s.last),u=o[0],_=o[1];if(f!==_||n.isSpacer){var c=[],h=[],p=(0,t.default)((0,t.default)({},s),{},{isSpacer:!1});n.first<p.first&&(n.isSpacer?c.push({first:n.first,last:p.first-1,isSpacer:!0}):p.first=n.first),u.last>p.last&&(u.isSpacer?h.push({first:p.last+1,last:u.last,isSpacer:!0}):p.last=u.last);var C=[...c,p,...h],v=_-f+1;this._regions.splice(f,v,...C)}}}numCells(){return this._numCells}equals(s){return this._numCells===s._numCells&&this._regions.length===s._regions.length&&this._regions.every((t,i)=>t.first===s._regions[i].first&&t.last===s._regions[i].last&&t.isSpacer===s._regions[i].isSpacer)}_findRegion(s){for(var t=0,l=this._regions.length-1;t<=l;){var n=Math.floor((t+l)/2),f=this._regions[n];if(s>=f.first&&s<=f.last)return[f,n];s<f.first?l=n-1:s>f.last&&(t=n+1)}(0,i.default)(!1,\"A region was not found containing cellIdx \"+s)}}});","lineCount":1,"map":[[1,116,1,0],[1,120,1,0,"_objectSpread2"],[1,122,1,0,"_interopRequireDefault"],[1,124,1,0,"r"],[1,126,1,0,"d"],[1,128,1,0],[1,133,12,0,"_invariant"],[1,135,12,0,"_interopRequireDefault"],[1,137,12,0,"r"],[1,139,12,0,"d"],[1,141,12,0],[1,146,106,1,"e"],[1,148,106,1,"CellRenderMask"],[1,163,13,7],[1,169,14,2,"constructor"],[1,181,14,14,"numCells"],[1,185,15,4],[1,187,15,4,"invariant"],[1,198,15,14,"numCells"],[1,201,15,26],[1,203,15,29],[1,265,16,4,"this"],[1,270,16,9,"_numCells"],[1,280,16,21,"numCells"],[1,282,18,6,"this"],[1,287,18,11,"_regions"],[1,296,17,21],[1,300,17,8,"numCells"],[1,302,18,22],[1,305,20,22],[1,306,20,23],[1,307,21,8,"first"],[1,313,21,15],[1,315,22,8,"last"],[1,320,22,14,"numCells"],[1,322,22,25],[1,324,23,8,"isSpacer"],[1,334,23,18],[1,337,26,2],[1,338,27,2,"enumerateRegions"],[1,357,28,4],[1,364,28,11,"this"],[1,369,28,16,"_regions"],[1,377,29,2],[1,378,30,2,"addCells"],[1,387,30,11,"cells"],[1,390,35,4],[1,394,31,4],[1,396,31,4,"invariant"],[1,407,31,14,"cells"],[1,409,31,20,"first"],[1,416,31,29],[1,419,31,34,"cells"],[1,421,31,40,"first"],[1,427,31,48,"this"],[1,432,31,53,"_numCells"],[1,443,31,66,"cells"],[1,445,31,72,"last"],[1,452,31,76],[1,455,31,86,"cells"],[1,457,31,92,"last"],[1,462,31,99,"this"],[1,467,31,104,"_numCells"],[1,478,31,117,"cells"],[1,480,31,123,"last"],[1,486,31,131,"cells"],[1,488,31,137,"first"],[1,494,31,145],[1,496,31,148],[1,556,35,8,"cells"],[1,558,35,14,"last"],[1,563,35,21,"cells"],[1,565,35,27,"first"],[1,572,35,4],[1,573,38,4],[1,577,38,8,"_this$_findRegion"],[1,579,38,28,"this"],[1,584,38,33,"_findRegion"],[1,596,38,45,"cells"],[1,598,38,51,"first"],[1,605,39,6,"firstIntersect"],[1,607,39,23,"_this$_findRegion"],[1,609,39,41],[1,612,40,6,"firstIntersectIdx"],[1,614,40,26,"_this$_findRegion"],[1,616,40,44],[1,619,41,8,"_this$_findRegion2"],[1,621,41,29,"this"],[1,626,41,34,"_findRegion"],[1,638,41,46,"cells"],[1,640,41,52,"last"],[1,646,42,6,"lastIntersect"],[1,648,42,22,"_this$_findRegion2"],[1,650,42,41],[1,653,43,6,"lastIntersectIdx"],[1,655,43,25,"_this$_findRegion2"],[1,657,43,44],[1,660,47,4],[1,663,47,8,"firstIntersectIdx"],[1,667,47,30,"lastIntersectIdx"],[1,670,47,51,"firstIntersect"],[1,672,47,66,"isSpacer"],[1,681,47,4],[1,682,53,4],[1,686,53,8,"newLeadRegion"],[1,688,53,24],[1,691,54,8,"newTailRegion"],[1,693,54,24],[1,696,55,8,"newMainRegion"],[1,699,55,24],[1,701,55,24,"_objectSpread"],[1,713,55,38],[1,715,55,38,"_objectSpread"],[1,726,55,52],[1,727,55,53],[1,729,55,56,"cells"],[1,732,55,64],[1,733,55,65],[1,735,55,68],[1,736,56,6,"isSpacer"],[1,746,56,16],[1,750,58,8,"firstIntersect"],[1,752,58,23,"first"],[1,758,58,31,"newMainRegion"],[1,760,58,45,"first"],[1,768,59,10,"firstIntersect"],[1,770,59,25,"isSpacer"],[1,779,60,8,"newLeadRegion"],[1,781,60,22,"push"],[1,786,60,27],[1,787,61,10,"first"],[1,793,61,17,"firstIntersect"],[1,795,61,32,"first"],[1,801,62,10,"last"],[1,806,62,16,"newMainRegion"],[1,808,62,30,"first"],[1,814,62,38],[1,816,63,10,"isSpacer"],[1,826,63,20],[1,830,66,8,"newMainRegion"],[1,832,66,22,"first"],[1,838,66,30,"firstIntersect"],[1,840,66,45,"first"],[1,847,69,8,"lastIntersect"],[1,849,69,22,"last"],[1,854,69,29,"newMainRegion"],[1,856,69,43,"last"],[1,863,70,10,"lastIntersect"],[1,865,70,24,"isSpacer"],[1,874,71,8,"newTailRegion"],[1,876,71,22,"push"],[1,881,71,27],[1,882,72,10,"first"],[1,888,72,17,"newMainRegion"],[1,890,72,31,"last"],[1,895,72,38],[1,897,73,10,"last"],[1,902,73,16,"lastIntersect"],[1,904,73,30,"last"],[1,909,74,10,"isSpacer"],[1,919,74,20],[1,923,77,8,"newMainRegion"],[1,925,77,22,"last"],[1,930,77,29,"lastIntersect"],[1,932,77,43,"last"],[1,938,80,4],[1,942,80,8,"replacementRegions"],[1,944,80,29],[1,948,80,33,"newLeadRegion"],[1,950,80,48,"newMainRegion"],[1,955,80,66,"newTailRegion"],[1,958,81,8,"numRegionsToDelete"],[1,960,81,29,"lastIntersectIdx"],[1,962,81,48,"firstIntersectIdx"],[1,964,81,68],[1,966,82,4,"this"],[1,971,82,9,"_regions"],[1,980,82,18,"splice"],[1,987,82,25,"firstIntersectIdx"],[1,989,82,44,"numRegionsToDelete"],[1,994,82,67,"replacementRegions"],[1,996,49,4],[1,997,37,4],[1,998,83,2],[1,999,84,2,"numCells"],[1,1010,85,4],[1,1017,85,11,"this"],[1,1022,85,16,"_numCells"],[1,1031,86,2],[1,1032,87,2,"equals"],[1,1039,87,9,"other"],[1,1042,88,4],[1,1049,88,11,"this"],[1,1054,88,16,"_numCells"],[1,1066,88,30,"other"],[1,1068,88,36,"_numCells"],[1,1079,88,49,"this"],[1,1084,88,54,"_regions"],[1,1093,88,63,"length"],[1,1102,88,74,"other"],[1,1104,88,80,"_regions"],[1,1113,88,89,"length"],[1,1121,88,99,"this"],[1,1126,88,104,"_regions"],[1,1135,88,113,"every"],[1,1141,88,119],[1,1142,88,120,"region"],[1,1144,88,128,"i"],[1,1148,88,134,"region"],[1,1150,88,141,"first"],[1,1158,88,151,"other"],[1,1160,88,157,"_regions"],[1,1169,88,166,"i"],[1,1172,88,169,"first"],[1,1179,88,178,"region"],[1,1181,88,185,"last"],[1,1188,88,194,"other"],[1,1190,88,200,"_regions"],[1,1199,88,209,"i"],[1,1202,88,212,"last"],[1,1208,88,220,"region"],[1,1210,88,227,"isSpacer"],[1,1221,88,240,"other"],[1,1223,88,246,"_regions"],[1,1232,88,255,"i"],[1,1235,88,258,"isSpacer"],[1,1244,89,2],[1,1245,90,2,"_findRegion"],[1,1257,90,14,"cellIdx"],[1,1260,93,4],[1,1264,91,4],[1,1268,91,8,"firstIdx"],[1,1270,91,19],[1,1272,92,8,"lastIdx"],[1,1274,92,18,"this"],[1,1279,92,23,"_regions"],[1,1288,92,32,"length"],[1,1295,92,41],[1,1297,93,11,"firstIdx"],[1,1300,93,23,"lastIdx"],[1,1303,93,32],[1,1304,94,6],[1,1308,94,10,"middleIdx"],[1,1310,94,22,"Math"],[1,1315,94,27,"floor"],[1,1322,94,34,"firstIdx"],[1,1324,94,45,"lastIdx"],[1,1327,94,56],[1,1330,95,10,"middleRegion"],[1,1332,95,25,"this"],[1,1337,95,30,"_regions"],[1,1346,95,39,"middleIdx"],[1,1349,96,6],[1,1352,96,10,"cellIdx"],[1,1355,96,21,"middleRegion"],[1,1357,96,34,"first"],[1,1364,96,43,"cellIdx"],[1,1367,96,54,"middleRegion"],[1,1369,96,67,"last"],[1,1374,97,8],[1,1380,97,15],[1,1381,97,16,"middleRegion"],[1,1383,97,30,"middleIdx"],[1,1386,98,17,"cellIdx"],[1,1388,98,27,"middleRegion"],[1,1390,98,40,"first"],[1,1396,99,8,"lastIdx"],[1,1398,99,18,"middleIdx"],[1,1400,99,30],[1,1402,100,17,"cellIdx"],[1,1404,100,27,"middleRegion"],[1,1406,100,40,"last"],[1,1413,101,8,"firstIdx"],[1,1415,101,19,"middleIdx"],[1,1417,101,31],[1,1419,103,4],[1,1421,104,4],[1,1423,104,4,"invariant"],[1,1435,104,14],[1,1437,104,21],[1,1482,104,68,"cellIdx"],[1,1484,105,2],[1,1486,106,1],[1,1489]],"functionMap":{"names":["<global>","CellRenderMask","constructor","enumerateRegions","addCells","numCells","equals","_regions.every$argument_0","_findRegion"],"mappings":"AAA;OCY;ECC;GDY;EEC;GFE;EGC;GHqD;EIC;GJE;EKC;uHCC,mJD;GLC;EOC;GPe"}},"type":"js/module"}]}