{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react-native/Libraries/Network/RCTNetworking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":243},"end":{"line":10,"column":70,"index":313}}],"key":"dOp43Q3w8Y5aITztIups8zuyrU4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fetchAsync = fetchAsync;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _RCTNetworking = _interopRequireDefault(require(_dependencyMap[2], \"react-native/Libraries/Network/RCTNetworking\"));\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  // @ts-expect-error\n\n  function fetchAsync(url) {\n    var id = null;\n    var statusCode = null;\n    var responseText = null;\n    var headers = {};\n    var dataListener = null;\n    var completeListener = null;\n    var responseListener = null;\n    return new Promise((resolve, reject) => {\n      var addListener = _RCTNetworking.default.addListener.bind(_RCTNetworking.default);\n      dataListener = addListener('didReceiveNetworkData', _ref => {\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n          requestId = _ref2[0],\n          response = _ref2[1];\n        if (requestId === id) {\n          responseText = response;\n        }\n      });\n      responseListener = addListener('didReceiveNetworkResponse', _ref3 => {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 3),\n          requestId = _ref4[0],\n          status = _ref4[1],\n          responseHeaders = _ref4[2];\n        if (requestId === id) {\n          statusCode = status;\n          headers = responseHeaders;\n        }\n      });\n      completeListener = addListener('didCompleteNetworkResponse', _ref5 => {\n        var _ref6 = (0, _slicedToArray2.default)(_ref5, 2),\n          requestId = _ref6[0],\n          error = _ref6[1];\n        if (requestId === id) {\n          if (error) {\n            reject(error);\n          } else {\n            resolve({\n              body: responseText,\n              status: statusCode,\n              headers\n            });\n          }\n        }\n      });\n      _RCTNetworking.default.sendRequest('GET', 'asyncRequest', url, {\n        'expo-platform': \"ios\"\n      }, '', 'text', false, 0, requestId => {\n        id = requestId;\n      }, true);\n    }).finally(() => {\n      dataListener?.remove();\n      completeListener?.remove();\n      responseListener?.remove();\n    });\n  }\n});","lineCount":74,"map":[[8,2,10,0],[8,6,10,0,"_RCTNetworking"],[8,20,10,0],[8,23,10,0,"_interopRequireDefault"],[8,45,10,0],[8,46,10,0,"require"],[8,53,10,0],[8,54,10,0,"_dependencyMap"],[8,68,10,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[17,2,9,0],[19,2,14,7],[19,11,14,16,"fetchAsync"],[19,21,14,26,"fetchAsync"],[19,22,15,2,"url"],[19,25,15,13],[19,27,16,78],[20,4,17,2],[20,8,17,6,"id"],[20,10,17,23],[20,13,17,26],[20,17,17,30],[21,4,18,2],[21,8,18,6,"statusCode"],[21,18,18,31],[21,21,18,34],[21,25,18,38],[22,4,19,2],[22,8,19,6,"responseText"],[22,20,19,33],[22,23,19,36],[22,27,19,40],[23,4,20,2],[23,8,20,6,"headers"],[23,15,20,37],[23,18,20,40],[23,19,20,41],[23,20,20,42],[24,4,21,2],[24,8,21,6,"dataListener"],[24,20,21,37],[24,23,21,40],[24,27,21,44],[25,4,22,2],[25,8,22,6,"completeListener"],[25,24,22,41],[25,27,22,44],[25,31,22,48],[26,4,23,2],[26,8,23,6,"responseListener"],[26,24,23,41],[26,27,23,44],[26,31,23,48],[27,4,24,2],[27,11,24,9],[27,15,24,13,"Promise"],[27,22,24,20],[27,23,25,4],[27,24,25,5,"resolve"],[27,31,25,12],[27,33,25,14,"reject"],[27,39,25,20],[27,44,25,25],[28,6,26,6],[28,10,26,12,"addListener"],[28,21,26,23],[28,24,26,26,"Networking"],[28,46,26,36],[28,47,26,37,"addListener"],[28,58,26,48],[28,59,26,49,"bind"],[28,63,26,53],[28,64,26,54,"Networking"],[28,86,26,64],[28,87,29,21],[29,6,30,6,"dataListener"],[29,18,30,18],[29,21,30,21,"addListener"],[29,32,30,32],[29,33,30,33],[29,56,30,56],[29,58,30,58,"_ref"],[29,62,30,58],[29,66,30,85],[30,8,30,85],[30,12,30,85,"_ref2"],[30,17,30,85],[30,24,30,85,"_slicedToArray2"],[30,39,30,85],[30,40,30,85,"default"],[30,47,30,85],[30,49,30,85,"_ref"],[30,53,30,85],[31,10,30,60,"requestId"],[31,19,30,69],[31,22,30,69,"_ref2"],[31,27,30,69],[32,10,30,71,"response"],[32,18,30,79],[32,21,30,79,"_ref2"],[32,26,30,79],[33,8,31,8],[33,12,31,12,"requestId"],[33,21,31,21],[33,26,31,26,"id"],[33,28,31,28],[33,30,31,30],[34,10,32,10,"responseText"],[34,22,32,22],[34,25,32,25,"response"],[34,33,32,33],[35,8,33,8],[36,6,34,6],[36,7,34,7],[36,8,34,8],[37,6,35,6,"responseListener"],[37,22,35,22],[37,25,35,25,"addListener"],[37,36,35,36],[37,37,36,8],[37,64,36,35],[37,66,37,8,"_ref3"],[37,71,37,8],[37,75,37,50],[38,8,37,50],[38,12,37,50,"_ref4"],[38,17,37,50],[38,24,37,50,"_slicedToArray2"],[38,39,37,50],[38,40,37,50,"default"],[38,47,37,50],[38,49,37,50,"_ref3"],[38,54,37,50],[39,10,37,10,"requestId"],[39,19,37,19],[39,22,37,19,"_ref4"],[39,27,37,19],[40,10,37,21,"status"],[40,16,37,27],[40,19,37,27,"_ref4"],[40,24,37,27],[41,10,37,29,"responseHeaders"],[41,25,37,44],[41,28,37,44,"_ref4"],[41,33,37,44],[42,8,38,10],[42,12,38,14,"requestId"],[42,21,38,23],[42,26,38,28,"id"],[42,28,38,30],[42,30,38,32],[43,10,39,12,"statusCode"],[43,20,39,22],[43,23,39,25,"status"],[43,29,39,31],[44,10,40,12,"headers"],[44,17,40,19],[44,20,40,22,"responseHeaders"],[44,35,40,37],[45,8,41,10],[46,6,42,8],[46,7,43,6],[46,8,43,7],[47,6,44,6,"completeListener"],[47,22,44,22],[47,25,44,25,"addListener"],[47,36,44,36],[47,37,44,37],[47,65,44,65],[47,67,44,67,"_ref5"],[47,72,44,67],[47,76,44,91],[48,8,44,91],[48,12,44,91,"_ref6"],[48,17,44,91],[48,24,44,91,"_slicedToArray2"],[48,39,44,91],[48,40,44,91,"default"],[48,47,44,91],[48,49,44,91,"_ref5"],[48,54,44,91],[49,10,44,69,"requestId"],[49,19,44,78],[49,22,44,78,"_ref6"],[49,27,44,78],[50,10,44,80,"error"],[50,15,44,85],[50,18,44,85,"_ref6"],[50,23,44,85],[51,8,45,8],[51,12,45,12,"requestId"],[51,21,45,21],[51,26,45,26,"id"],[51,28,45,28],[51,30,45,30],[52,10,46,10],[52,14,46,14,"error"],[52,19,46,19],[52,21,46,21],[53,12,47,12,"reject"],[53,18,47,18],[53,19,47,19,"error"],[53,24,47,24],[53,25,47,25],[54,10,48,10],[54,11,48,11],[54,17,48,17],[55,12,49,12,"resolve"],[55,19,49,19],[55,20,49,20],[56,14,49,22,"body"],[56,18,49,26],[56,20,49,28,"responseText"],[56,32,49,41],[57,14,49,43,"status"],[57,20,49,49],[57,22,49,51,"statusCode"],[57,32,49,62],[58,14,49,64,"headers"],[59,12,49,72],[59,13,49,73],[59,14,49,74],[60,10,50,10],[61,8,51,8],[62,6,52,6],[62,7,52,7],[62,8,52,8],[63,6,53,7,"Networking"],[63,28,53,17],[63,29,53,18,"sendRequest"],[63,40,53,29],[63,41,54,8],[63,46,54,13],[63,48,55,8],[63,62,55,22],[63,64,56,8,"url"],[63,67,56,11],[63,69,57,8],[64,8,58,10],[64,23,58,25],[65,6,59,8],[65,7,59,9],[65,9,60,8],[65,11,60,10],[65,13,61,8],[65,19,61,14],[65,21,62,8],[65,26,62,13],[65,28,63,8],[65,29,63,9],[65,31,64,9,"requestId"],[65,40,64,26],[65,44,64,31],[66,8,65,10,"id"],[66,10,65,12],[66,13,65,15,"requestId"],[66,22,65,24],[67,6,66,8],[67,7,66,9],[67,9,67,8],[67,13,68,6],[67,14,68,7],[68,4,69,4],[68,5,70,2],[68,6,70,3],[68,7,70,4,"finally"],[68,14,70,11],[68,15,70,12],[68,21,70,18],[69,6,71,4,"dataListener"],[69,18,71,16],[69,20,71,18,"remove"],[69,26,71,24],[69,27,71,25],[69,28,71,26],[70,6,72,4,"completeListener"],[70,22,72,20],[70,24,72,22,"remove"],[70,30,72,28],[70,31,72,29],[70,32,72,30],[71,6,73,4,"responseListener"],[71,22,73,20],[71,24,73,22,"remove"],[71,30,73,28],[71,31,73,29],[71,32,73,30],[72,4,74,2],[72,5,74,3],[72,6,74,4],[73,2,75,0],[74,0,75,1],[74,3]],"functionMap":{"names":["<global>","fetchAsync","Promise$argument_0","addListener$argument_1","<anonymous>","Promise._finally$argument_0"],"mappings":"AAA;OCa;ICW;0DCK;ODI;QCG;SDK;mECE;ODQ;QEY;SFE;KDG;YIC;GJI;CDC"}},"type":"js/module"}]}