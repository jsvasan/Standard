{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"BaseRouter\", {\n    enumerable: true,\n    get: function () {\n      return BaseRouter;\n    }\n  });\n  var _nanoidNonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  /**\n   * Base router object that can be used when writing custom routers.\n   * This provides few helper methods to handle common actions such as `RESET`.\n   */\n  const BaseRouter = {\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'SET_PARAMS':\n        case 'REPLACE_PARAMS':\n          {\n            const index = action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            return Object.assign({}, state, {\n              routes: state.routes.map((r, i) => i === index ? Object.assign({}, r, {\n                params: action.type === 'REPLACE_PARAMS' ? action.payload.params : Object.assign({}, r.params, action.payload.params)\n              }) : r)\n            });\n          }\n        case 'RESET':\n          {\n            const nextState = action.payload;\n            if (nextState.routes.length === 0 || nextState.routes.some(route => !state.routeNames.includes(route.name))) {\n              return null;\n            }\n            if (nextState.stale === false) {\n              if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(name => !state.routeNames.includes(name))) {\n                return null;\n              }\n              return Object.assign({}, nextState, {\n                routes: nextState.routes.map(route => route.key ? route : Object.assign({}, route, {\n                  key: `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`\n                }))\n              });\n            }\n            return nextState;\n          }\n        default:\n          return null;\n      }\n    },\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\n    }\n  };\n});","lineCount":60,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,8,0,"Object"],[7,8,8,0],[7,9,8,0,"defineProperty"],[7,23,8,0],[7,24,8,0,"exports"],[7,31,8,0],[8,4,8,0,"enumerable"],[8,14,8,0],[9,4,8,0,"get"],[9,7,8,0],[9,18,8,0,"get"],[9,19,8,0],[10,6,8,0],[10,13,8,0,"BaseRouter"],[10,23,8,0],[11,4,8,0],[12,2,8,0],[13,2,3,0],[13,6,3,0,"_nanoidNonSecure"],[13,22,3,0],[13,25,3,0,"require"],[13,32,3,0],[13,33,3,0,"_dependencyMap"],[13,47,3,0],[14,2,4,0],[15,0,5,0],[16,0,6,0],[17,0,7,0],[18,2,8,7],[18,8,8,13,"BaseRouter"],[18,18,8,23],[18,21,8,26],[19,4,9,2,"getStateForAction"],[19,21,9,19,"getStateForAction"],[19,22,9,20,"state"],[19,27,9,25],[19,29,9,27,"action"],[19,35,9,33],[19,37,9,35],[20,6,10,4],[20,14,10,12,"action"],[20,20,10,18],[20,21,10,19,"type"],[20,25,10,23],[21,8,11,6],[21,13,11,11],[21,25,11,23],[22,8,12,6],[22,13,12,11],[22,29,12,27],[23,10,13,8],[24,12,14,10],[24,18,14,16,"index"],[24,23,14,21],[24,26,14,24,"action"],[24,32,14,30],[24,33,14,31,"source"],[24,39,14,37],[24,42,14,40,"state"],[24,47,14,45],[24,48,14,46,"routes"],[24,54,14,52],[24,55,14,53,"findIndex"],[24,64,14,62],[24,65,14,63,"r"],[24,66,14,64],[24,70,14,68,"r"],[24,71,14,69],[24,72,14,70,"key"],[24,75,14,73],[24,80,14,78,"action"],[24,86,14,84],[24,87,14,85,"source"],[24,93,14,91],[24,94,14,92],[24,97,14,95,"state"],[24,102,14,100],[24,103,14,101,"index"],[24,108,14,106],[25,12,15,10],[25,16,15,14,"index"],[25,21,15,19],[25,26,15,24],[25,27,15,25],[25,28,15,26],[25,30,15,28],[26,14,16,12],[26,21,16,19],[26,25,16,23],[27,12,17,10],[28,12,18,10],[28,19,18,10,"Object"],[28,25,18,10],[28,26,18,10,"assign"],[28,32,18,10],[28,37,19,15,"state"],[28,42,19,20],[29,14,20,12,"routes"],[29,20,20,18],[29,22,20,20,"state"],[29,27,20,25],[29,28,20,26,"routes"],[29,34,20,32],[29,35,20,33,"map"],[29,38,20,36],[29,39,20,37],[29,40,20,38,"r"],[29,41,20,39],[29,43,20,41,"i"],[29,44,20,42],[29,49,20,47,"i"],[29,50,20,48],[29,55,20,53,"index"],[29,60,20,58],[29,63,20,58,"Object"],[29,69,20,58],[29,70,20,58,"assign"],[29,76,20,58],[29,81,21,17,"r"],[29,82,21,18],[30,16,22,14,"params"],[30,22,22,20],[30,24,22,22,"action"],[30,30,22,28],[30,31,22,29,"type"],[30,35,22,33],[30,40,22,38],[30,56,22,54],[30,59,22,57,"action"],[30,65,22,63],[30,66,22,64,"payload"],[30,73,22,71],[30,74,22,72,"params"],[30,80,22,78],[30,83,22,78,"Object"],[30,89,22,78],[30,90,22,78,"assign"],[30,96,22,78],[30,101,23,19,"r"],[30,102,23,20],[30,103,23,21,"params"],[30,109,23,27],[30,111,24,19,"action"],[30,117,24,25],[30,118,24,26,"payload"],[30,125,24,33],[30,126,24,34,"params"],[30,132,24,40],[31,14,25,15],[31,19,26,16,"r"],[31,20,26,17],[32,12,26,18],[33,10,28,8],[34,8,29,6],[34,13,29,11],[34,20,29,18],[35,10,30,8],[36,12,31,10],[36,18,31,16,"nextState"],[36,27,31,25],[36,30,31,28,"action"],[36,36,31,34],[36,37,31,35,"payload"],[36,44,31,42],[37,12,32,10],[37,16,32,14,"nextState"],[37,25,32,23],[37,26,32,24,"routes"],[37,32,32,30],[37,33,32,31,"length"],[37,39,32,37],[37,44,32,42],[37,45,32,43],[37,49,32,47,"nextState"],[37,58,32,56],[37,59,32,57,"routes"],[37,65,32,63],[37,66,32,64,"some"],[37,70,32,68],[37,71,32,69,"route"],[37,76,32,74],[37,80,32,78],[37,81,32,79,"state"],[37,86,32,84],[37,87,32,85,"routeNames"],[37,97,32,95],[37,98,32,96,"includes"],[37,106,32,104],[37,107,32,105,"route"],[37,112,32,110],[37,113,32,111,"name"],[37,117,32,115],[37,118,32,116],[37,119,32,117],[37,121,32,119],[38,14,33,12],[38,21,33,19],[38,25,33,23],[39,12,34,10],[40,12,35,10],[40,16,35,14,"nextState"],[40,25,35,23],[40,26,35,24,"stale"],[40,31,35,29],[40,36,35,34],[40,41,35,39],[40,43,35,41],[41,14,36,12],[41,18,36,16,"state"],[41,23,36,21],[41,24,36,22,"routeNames"],[41,34,36,32],[41,35,36,33,"length"],[41,41,36,39],[41,46,36,44,"nextState"],[41,55,36,53],[41,56,36,54,"routeNames"],[41,66,36,64],[41,67,36,65,"length"],[41,73,36,71],[41,77,36,75,"nextState"],[41,86,36,84],[41,87,36,85,"routeNames"],[41,97,36,95],[41,98,36,96,"some"],[41,102,36,100],[41,103,36,101,"name"],[41,107,36,105],[41,111,36,109],[41,112,36,110,"state"],[41,117,36,115],[41,118,36,116,"routeNames"],[41,128,36,126],[41,129,36,127,"includes"],[41,137,36,135],[41,138,36,136,"name"],[41,142,36,140],[41,143,36,141],[41,144,36,142],[41,146,36,144],[42,16,37,14],[42,23,37,21],[42,27,37,25],[43,14,38,12],[44,14,39,12],[44,21,39,12,"Object"],[44,27,39,12],[44,28,39,12,"assign"],[44,34,39,12],[44,39,40,17,"nextState"],[44,48,40,26],[45,16,41,14,"routes"],[45,22,41,20],[45,24,41,22,"nextState"],[45,33,41,31],[45,34,41,32,"routes"],[45,40,41,38],[45,41,41,39,"map"],[45,44,41,42],[45,45,41,43,"route"],[45,50,41,48],[45,54,41,52,"route"],[45,59,41,57],[45,60,41,58,"key"],[45,63,41,61],[45,66,41,64,"route"],[45,71,41,69],[45,74,41,69,"Object"],[45,80,41,69],[45,81,41,69,"assign"],[45,87,41,69],[45,92,42,19,"route"],[45,97,42,24],[46,18,43,16,"key"],[46,21,43,19],[46,23,43,21],[46,26,43,24,"route"],[46,31,43,29],[46,32,43,30,"name"],[46,36,43,34],[46,40,43,38],[46,44,43,38,"nanoid"],[46,60,43,44],[46,61,43,44,"nanoid"],[46,67,43,44],[46,69,43,45],[46,70,43,46],[47,16,43,48],[47,18,44,15],[48,14,44,16],[49,12,46,10],[50,12,47,10],[50,19,47,17,"nextState"],[50,28,47,26],[51,10,48,8],[52,8,49,6],[53,10,50,8],[53,17,50,15],[53,21,50,19],[54,6,51,4],[55,4,52,2],[55,5,52,3],[56,4,53,2,"shouldActionChangeFocus"],[56,27,53,25,"shouldActionChangeFocus"],[56,28,53,26,"action"],[56,34,53,32],[56,36,53,34],[57,6,54,4],[57,13,54,11,"action"],[57,19,54,17],[57,20,54,18,"type"],[57,24,54,22],[57,29,54,27],[57,39,54,37],[57,43,54,41,"action"],[57,49,54,47],[57,50,54,48,"type"],[57,54,54,52],[57,59,54,57],[57,80,54,78],[58,4,55,2],[59,2,56,0],[59,3,56,1],[60,0,56,2],[60,3]],"functionMap":{"names":["<global>","getStateForAction","state.routes.findIndex$argument_0","state.routes.map$argument_0","nextState.routes.some$argument_0","nextState.routeNames.some$argument_0","nextState.routes.map$argument_0","shouldActionChangeFocus"],"mappings":"AAA;ECQ;+DCK,4BD;qCEM;iBFM;qEGM,+CH;qGII,wCJ;2CKK;eLG;GDQ;EOC;GPE"},"hasCjsExports":false},"type":"js/module"}]}