{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":26},"end":{"line":3,"column":31,"index":57}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NativeSafeAreaProvider = NativeSafeAreaProvider;\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _View = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/View\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  /* eslint-env browser */\n\n  /**\n   * TODO:\n   * Currently insets and frame are based on the window and are not\n   * relative to the provider view. This is inconsistent with iOS and Android.\n   * However in most cases if the provider view covers the screen this is not\n   * an issue.\n   */\n\n  const CSSTransitions = {\n    WebkitTransition: 'webkitTransitionEnd',\n    Transition: 'transitionEnd',\n    MozTransition: 'transitionend',\n    MSTransition: 'msTransitionEnd',\n    OTransition: 'oTransitionEnd'\n  };\n  function NativeSafeAreaProvider({\n    children,\n    style,\n    onInsetsChange\n  }) {\n    React.useEffect(() => {\n      // Skip for SSR.\n      if (typeof document === 'undefined') {\n        return;\n      }\n      const element = createContextElement();\n      document.body.appendChild(element);\n      const onEnd = () => {\n        const {\n          paddingTop,\n          paddingBottom,\n          paddingLeft,\n          paddingRight\n        } = window.getComputedStyle(element);\n        const insets = {\n          top: paddingTop ? parseInt(paddingTop, 10) : 0,\n          bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n          left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n          right: paddingRight ? parseInt(paddingRight, 10) : 0\n        };\n        const frame = {\n          x: 0,\n          y: 0,\n          width: document.documentElement.offsetWidth,\n          height: document.documentElement.offsetHeight\n        };\n        // @ts-ignore: missing properties\n        onInsetsChange({\n          nativeEvent: {\n            insets,\n            frame\n          }\n        });\n      };\n      element.addEventListener(getSupportedTransitionEvent(), onEnd);\n      onEnd();\n      return () => {\n        document.body.removeChild(element);\n        element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n      };\n    }, [onInsetsChange]);\n    return /*#__PURE__*/React.createElement(_View.default, {\n      style: style\n    }, children);\n  }\n  let _supportedTransitionEvent = null;\n  function getSupportedTransitionEvent() {\n    if (_supportedTransitionEvent != null) {\n      return _supportedTransitionEvent;\n    }\n    const element = document.createElement('invalidtype');\n    _supportedTransitionEvent = CSSTransitions.Transition;\n    for (const key in CSSTransitions) {\n      if (element.style[key] !== undefined) {\n        _supportedTransitionEvent = CSSTransitions[key];\n        break;\n      }\n    }\n    return _supportedTransitionEvent;\n  }\n  let _supportedEnv = null;\n  function getSupportedEnv() {\n    if (_supportedEnv !== null) {\n      return _supportedEnv;\n    }\n    const {\n      CSS\n    } = window;\n    if (CSS && CSS.supports && CSS.supports('top: constant(safe-area-inset-top)')) {\n      _supportedEnv = 'constant';\n    } else {\n      _supportedEnv = 'env';\n    }\n    return _supportedEnv;\n  }\n  function getInset(side) {\n    return `${getSupportedEnv()}(safe-area-inset-${side})`;\n  }\n  function createContextElement() {\n    const element = document.createElement('div');\n    const {\n      style\n    } = element;\n    style.position = 'fixed';\n    style.left = '0';\n    style.top = '0';\n    style.width = '0';\n    style.height = '0';\n    style.zIndex = '-1';\n    style.overflow = 'hidden';\n    style.visibility = 'hidden';\n    // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n    style.transitionDuration = '0.05s';\n    style.transitionProperty = 'padding';\n    style.transitionDelay = '0s';\n    style.paddingTop = getInset('top');\n    style.paddingBottom = getInset('bottom');\n    style.paddingLeft = getInset('left');\n    style.paddingRight = getInset('right');\n    return element;\n  }\n});","lineCount":133,"map":[[7,2,3,0],[7,6,3,0,"React"],[7,11,3,0],[7,14,3,0,"_interopRequireWildcard"],[7,37,3,0],[7,38,3,0,"require"],[7,45,3,0],[7,46,3,0,"_dependencyMap"],[7,60,3,0],[8,2,3,31],[8,6,3,31,"_View"],[8,11,3,31],[8,14,3,31,"_interopRequireDefault"],[8,36,3,31],[8,37,3,31,"require"],[8,44,3,31],[8,45,3,31,"_dependencyMap"],[8,59,3,31],[9,2,3,31],[9,11,3,31,"_interopRequireWildcard"],[9,35,3,31,"e"],[9,36,3,31],[9,38,3,31,"t"],[9,39,3,31],[9,68,3,31,"WeakMap"],[9,75,3,31],[9,81,3,31,"r"],[9,82,3,31],[9,89,3,31,"WeakMap"],[9,96,3,31],[9,100,3,31,"n"],[9,101,3,31],[9,108,3,31,"WeakMap"],[9,115,3,31],[9,127,3,31,"_interopRequireWildcard"],[9,150,3,31],[9,162,3,31,"_interopRequireWildcard"],[9,163,3,31,"e"],[9,164,3,31],[9,166,3,31,"t"],[9,167,3,31],[9,176,3,31,"t"],[9,177,3,31],[9,181,3,31,"e"],[9,182,3,31],[9,186,3,31,"e"],[9,187,3,31],[9,188,3,31,"__esModule"],[9,198,3,31],[9,207,3,31,"e"],[9,208,3,31],[9,214,3,31,"o"],[9,215,3,31],[9,217,3,31,"i"],[9,218,3,31],[9,220,3,31,"f"],[9,221,3,31],[9,226,3,31,"__proto__"],[9,235,3,31],[9,243,3,31,"default"],[9,250,3,31],[9,252,3,31,"e"],[9,253,3,31],[9,270,3,31,"e"],[9,271,3,31],[9,294,3,31,"e"],[9,295,3,31],[9,320,3,31,"e"],[9,321,3,31],[9,330,3,31,"f"],[9,331,3,31],[9,337,3,31,"o"],[9,338,3,31],[9,341,3,31,"t"],[9,342,3,31],[9,345,3,31,"n"],[9,346,3,31],[9,349,3,31,"r"],[9,350,3,31],[9,358,3,31,"o"],[9,359,3,31],[9,360,3,31,"has"],[9,363,3,31],[9,364,3,31,"e"],[9,365,3,31],[9,375,3,31,"o"],[9,376,3,31],[9,377,3,31,"get"],[9,380,3,31],[9,381,3,31,"e"],[9,382,3,31],[9,385,3,31,"o"],[9,386,3,31],[9,387,3,31,"set"],[9,390,3,31],[9,391,3,31,"e"],[9,392,3,31],[9,394,3,31,"f"],[9,395,3,31],[9,411,3,31,"t"],[9,412,3,31],[9,416,3,31,"e"],[9,417,3,31],[9,433,3,31,"t"],[9,434,3,31],[9,441,3,31,"hasOwnProperty"],[9,455,3,31],[9,456,3,31,"call"],[9,460,3,31],[9,461,3,31,"e"],[9,462,3,31],[9,464,3,31,"t"],[9,465,3,31],[9,472,3,31,"i"],[9,473,3,31],[9,477,3,31,"o"],[9,478,3,31],[9,481,3,31,"Object"],[9,487,3,31],[9,488,3,31,"defineProperty"],[9,502,3,31],[9,507,3,31,"Object"],[9,513,3,31],[9,514,3,31,"getOwnPropertyDescriptor"],[9,538,3,31],[9,539,3,31,"e"],[9,540,3,31],[9,542,3,31,"t"],[9,543,3,31],[9,550,3,31,"i"],[9,551,3,31],[9,552,3,31,"get"],[9,555,3,31],[9,559,3,31,"i"],[9,560,3,31],[9,561,3,31,"set"],[9,564,3,31],[9,568,3,31,"o"],[9,569,3,31],[9,570,3,31,"f"],[9,571,3,31],[9,573,3,31,"t"],[9,574,3,31],[9,576,3,31,"i"],[9,577,3,31],[9,581,3,31,"f"],[9,582,3,31],[9,583,3,31,"t"],[9,584,3,31],[9,588,3,31,"e"],[9,589,3,31],[9,590,3,31,"t"],[9,591,3,31],[9,602,3,31,"f"],[9,603,3,31],[9,608,3,31,"e"],[9,609,3,31],[9,611,3,31,"t"],[9,612,3,31],[10,2,1,0],[12,2,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[20,2,13,0],[20,8,13,6,"CSSTransitions"],[20,22,13,20],[20,25,13,23],[21,4,14,2,"WebkitTransition"],[21,20,14,18],[21,22,14,20],[21,43,14,41],[22,4,15,2,"Transition"],[22,14,15,12],[22,16,15,14],[22,31,15,29],[23,4,16,2,"MozTransition"],[23,17,16,15],[23,19,16,17],[23,34,16,32],[24,4,17,2,"MSTransition"],[24,16,17,14],[24,18,17,16],[24,35,17,33],[25,4,18,2,"OTransition"],[25,15,18,13],[25,17,18,15],[26,2,19,0],[26,3,19,1],[27,2,20,7],[27,11,20,16,"NativeSafeAreaProvider"],[27,33,20,38,"NativeSafeAreaProvider"],[27,34,20,39],[28,4,21,2,"children"],[28,12,21,10],[29,4,22,2,"style"],[29,9,22,7],[30,4,23,2,"onInsetsChange"],[31,2,24,0],[31,3,24,1],[31,5,24,3],[32,4,25,2,"React"],[32,9,25,7],[32,10,25,8,"useEffect"],[32,19,25,17],[32,20,25,18],[32,26,25,24],[33,6,26,4],[34,6,27,4],[34,10,27,8],[34,17,27,15,"document"],[34,25,27,23],[34,30,27,28],[34,41,27,39],[34,43,27,41],[35,8,28,6],[36,6,29,4],[37,6,30,4],[37,12,30,10,"element"],[37,19,30,17],[37,22,30,20,"createContextElement"],[37,42,30,40],[37,43,30,41],[37,44,30,42],[38,6,31,4,"document"],[38,14,31,12],[38,15,31,13,"body"],[38,19,31,17],[38,20,31,18,"appendChild"],[38,31,31,29],[38,32,31,30,"element"],[38,39,31,37],[38,40,31,38],[39,6,32,4],[39,12,32,10,"onEnd"],[39,17,32,15],[39,20,32,18,"onEnd"],[39,21,32,18],[39,26,32,24],[40,8,33,6],[40,14,33,12],[41,10,34,8,"paddingTop"],[41,20,34,18],[42,10,35,8,"paddingBottom"],[42,23,35,21],[43,10,36,8,"paddingLeft"],[43,21,36,19],[44,10,37,8,"paddingRight"],[45,8,38,6],[45,9,38,7],[45,12,38,10,"window"],[45,18,38,16],[45,19,38,17,"getComputedStyle"],[45,35,38,33],[45,36,38,34,"element"],[45,43,38,41],[45,44,38,42],[46,8,39,6],[46,14,39,12,"insets"],[46,20,39,18],[46,23,39,21],[47,10,40,8,"top"],[47,13,40,11],[47,15,40,13,"paddingTop"],[47,25,40,23],[47,28,40,26,"parseInt"],[47,36,40,34],[47,37,40,35,"paddingTop"],[47,47,40,45],[47,49,40,47],[47,51,40,49],[47,52,40,50],[47,55,40,53],[47,56,40,54],[48,10,41,8,"bottom"],[48,16,41,14],[48,18,41,16,"paddingBottom"],[48,31,41,29],[48,34,41,32,"parseInt"],[48,42,41,40],[48,43,41,41,"paddingBottom"],[48,56,41,54],[48,58,41,56],[48,60,41,58],[48,61,41,59],[48,64,41,62],[48,65,41,63],[49,10,42,8,"left"],[49,14,42,12],[49,16,42,14,"paddingLeft"],[49,27,42,25],[49,30,42,28,"parseInt"],[49,38,42,36],[49,39,42,37,"paddingLeft"],[49,50,42,48],[49,52,42,50],[49,54,42,52],[49,55,42,53],[49,58,42,56],[49,59,42,57],[50,10,43,8,"right"],[50,15,43,13],[50,17,43,15,"paddingRight"],[50,29,43,27],[50,32,43,30,"parseInt"],[50,40,43,38],[50,41,43,39,"paddingRight"],[50,53,43,51],[50,55,43,53],[50,57,43,55],[50,58,43,56],[50,61,43,59],[51,8,44,6],[51,9,44,7],[52,8,45,6],[52,14,45,12,"frame"],[52,19,45,17],[52,22,45,20],[53,10,46,8,"x"],[53,11,46,9],[53,13,46,11],[53,14,46,12],[54,10,47,8,"y"],[54,11,47,9],[54,13,47,11],[54,14,47,12],[55,10,48,8,"width"],[55,15,48,13],[55,17,48,15,"document"],[55,25,48,23],[55,26,48,24,"documentElement"],[55,41,48,39],[55,42,48,40,"offsetWidth"],[55,53,48,51],[56,10,49,8,"height"],[56,16,49,14],[56,18,49,16,"document"],[56,26,49,24],[56,27,49,25,"documentElement"],[56,42,49,40],[56,43,49,41,"offsetHeight"],[57,8,50,6],[57,9,50,7],[58,8,51,6],[59,8,52,6,"onInsetsChange"],[59,22,52,20],[59,23,52,21],[60,10,53,8,"nativeEvent"],[60,21,53,19],[60,23,53,21],[61,12,54,10,"insets"],[61,18,54,16],[62,12,55,10,"frame"],[63,10,56,8],[64,8,57,6],[64,9,57,7],[64,10,57,8],[65,6,58,4],[65,7,58,5],[66,6,59,4,"element"],[66,13,59,11],[66,14,59,12,"addEventListener"],[66,30,59,28],[66,31,59,29,"getSupportedTransitionEvent"],[66,58,59,56],[66,59,59,57],[66,60,59,58],[66,62,59,60,"onEnd"],[66,67,59,65],[66,68,59,66],[67,6,60,4,"onEnd"],[67,11,60,9],[67,12,60,10],[67,13,60,11],[68,6,61,4],[68,13,61,11],[68,19,61,17],[69,8,62,6,"document"],[69,16,62,14],[69,17,62,15,"body"],[69,21,62,19],[69,22,62,20,"removeChild"],[69,33,62,31],[69,34,62,32,"element"],[69,41,62,39],[69,42,62,40],[70,8,63,6,"element"],[70,15,63,13],[70,16,63,14,"removeEventListener"],[70,35,63,33],[70,36,63,34,"getSupportedTransitionEvent"],[70,63,63,61],[70,64,63,62],[70,65,63,63],[70,67,63,65,"onEnd"],[70,72,63,70],[70,73,63,71],[71,6,64,4],[71,7,64,5],[72,4,65,2],[72,5,65,3],[72,7,65,5],[72,8,65,6,"onInsetsChange"],[72,22,65,20],[72,23,65,21],[72,24,65,22],[73,4,66,2],[73,11,66,9],[73,24,66,22,"React"],[73,29,66,27],[73,30,66,28,"createElement"],[73,43,66,41],[73,44,66,42,"View"],[73,57,66,46],[73,59,66,48],[74,6,67,4,"style"],[74,11,67,9],[74,13,67,11,"style"],[75,4,68,2],[75,5,68,3],[75,7,68,5,"children"],[75,15,68,13],[75,16,68,14],[76,2,69,0],[77,2,70,0],[77,6,70,4,"_supportedTransitionEvent"],[77,31,70,29],[77,34,70,32],[77,38,70,36],[78,2,71,0],[78,11,71,9,"getSupportedTransitionEvent"],[78,38,71,36,"getSupportedTransitionEvent"],[78,39,71,36],[78,41,71,39],[79,4,72,2],[79,8,72,6,"_supportedTransitionEvent"],[79,33,72,31],[79,37,72,35],[79,41,72,39],[79,43,72,41],[80,6,73,4],[80,13,73,11,"_supportedTransitionEvent"],[80,38,73,36],[81,4,74,2],[82,4,75,2],[82,10,75,8,"element"],[82,17,75,15],[82,20,75,18,"document"],[82,28,75,26],[82,29,75,27,"createElement"],[82,42,75,40],[82,43,75,41],[82,56,75,54],[82,57,75,55],[83,4,76,2,"_supportedTransitionEvent"],[83,29,76,27],[83,32,76,30,"CSSTransitions"],[83,46,76,44],[83,47,76,45,"Transition"],[83,57,76,55],[84,4,77,2],[84,9,77,7],[84,15,77,13,"key"],[84,18,77,16],[84,22,77,20,"CSSTransitions"],[84,36,77,34],[84,38,77,36],[85,6,78,4],[85,10,78,8,"element"],[85,17,78,15],[85,18,78,16,"style"],[85,23,78,21],[85,24,78,22,"key"],[85,27,78,25],[85,28,78,26],[85,33,78,31,"undefined"],[85,42,78,40],[85,44,78,42],[86,8,79,6,"_supportedTransitionEvent"],[86,33,79,31],[86,36,79,34,"CSSTransitions"],[86,50,79,48],[86,51,79,49,"key"],[86,54,79,52],[86,55,79,53],[87,8,80,6],[88,6,81,4],[89,4,82,2],[90,4,83,2],[90,11,83,9,"_supportedTransitionEvent"],[90,36,83,34],[91,2,84,0],[92,2,85,0],[92,6,85,4,"_supportedEnv"],[92,19,85,17],[92,22,85,20],[92,26,85,24],[93,2,86,0],[93,11,86,9,"getSupportedEnv"],[93,26,86,24,"getSupportedEnv"],[93,27,86,24],[93,29,86,27],[94,4,87,2],[94,8,87,6,"_supportedEnv"],[94,21,87,19],[94,26,87,24],[94,30,87,28],[94,32,87,30],[95,6,88,4],[95,13,88,11,"_supportedEnv"],[95,26,88,24],[96,4,89,2],[97,4,90,2],[97,10,90,8],[98,6,91,4,"CSS"],[99,4,92,2],[99,5,92,3],[99,8,92,6,"window"],[99,14,92,12],[100,4,93,2],[100,8,93,6,"CSS"],[100,11,93,9],[100,15,93,13,"CSS"],[100,18,93,16],[100,19,93,17,"supports"],[100,27,93,25],[100,31,93,29,"CSS"],[100,34,93,32],[100,35,93,33,"supports"],[100,43,93,41],[100,44,93,42],[100,80,93,78],[100,81,93,79],[100,83,93,81],[101,6,94,4,"_supportedEnv"],[101,19,94,17],[101,22,94,20],[101,32,94,30],[102,4,95,2],[102,5,95,3],[102,11,95,9],[103,6,96,4,"_supportedEnv"],[103,19,96,17],[103,22,96,20],[103,27,96,25],[104,4,97,2],[105,4,98,2],[105,11,98,9,"_supportedEnv"],[105,24,98,22],[106,2,99,0],[107,2,100,0],[107,11,100,9,"getInset"],[107,19,100,17,"getInset"],[107,20,100,18,"side"],[107,24,100,22],[107,26,100,24],[108,4,101,2],[108,11,101,9],[108,14,101,12,"getSupportedEnv"],[108,29,101,27],[108,30,101,28],[108,31,101,29],[108,51,101,49,"side"],[108,55,101,53],[108,58,101,56],[109,2,102,0],[110,2,103,0],[110,11,103,9,"createContextElement"],[110,31,103,29,"createContextElement"],[110,32,103,29],[110,34,103,32],[111,4,104,2],[111,10,104,8,"element"],[111,17,104,15],[111,20,104,18,"document"],[111,28,104,26],[111,29,104,27,"createElement"],[111,42,104,40],[111,43,104,41],[111,48,104,46],[111,49,104,47],[112,4,105,2],[112,10,105,8],[113,6,106,4,"style"],[114,4,107,2],[114,5,107,3],[114,8,107,6,"element"],[114,15,107,13],[115,4,108,2,"style"],[115,9,108,7],[115,10,108,8,"position"],[115,18,108,16],[115,21,108,19],[115,28,108,26],[116,4,109,2,"style"],[116,9,109,7],[116,10,109,8,"left"],[116,14,109,12],[116,17,109,15],[116,20,109,18],[117,4,110,2,"style"],[117,9,110,7],[117,10,110,8,"top"],[117,13,110,11],[117,16,110,14],[117,19,110,17],[118,4,111,2,"style"],[118,9,111,7],[118,10,111,8,"width"],[118,15,111,13],[118,18,111,16],[118,21,111,19],[119,4,112,2,"style"],[119,9,112,7],[119,10,112,8,"height"],[119,16,112,14],[119,19,112,17],[119,22,112,20],[120,4,113,2,"style"],[120,9,113,7],[120,10,113,8,"zIndex"],[120,16,113,14],[120,19,113,17],[120,23,113,21],[121,4,114,2,"style"],[121,9,114,7],[121,10,114,8,"overflow"],[121,18,114,16],[121,21,114,19],[121,29,114,27],[122,4,115,2,"style"],[122,9,115,7],[122,10,115,8,"visibility"],[122,20,115,18],[122,23,115,21],[122,31,115,29],[123,4,116,2],[124,4,117,2,"style"],[124,9,117,7],[124,10,117,8,"transitionDuration"],[124,28,117,26],[124,31,117,29],[124,38,117,36],[125,4,118,2,"style"],[125,9,118,7],[125,10,118,8,"transitionProperty"],[125,28,118,26],[125,31,118,29],[125,40,118,38],[126,4,119,2,"style"],[126,9,119,7],[126,10,119,8,"transitionDelay"],[126,25,119,23],[126,28,119,26],[126,32,119,30],[127,4,120,2,"style"],[127,9,120,7],[127,10,120,8,"paddingTop"],[127,20,120,18],[127,23,120,21,"getInset"],[127,31,120,29],[127,32,120,30],[127,37,120,35],[127,38,120,36],[128,4,121,2,"style"],[128,9,121,7],[128,10,121,8,"paddingBottom"],[128,23,121,21],[128,26,121,24,"getInset"],[128,34,121,32],[128,35,121,33],[128,43,121,41],[128,44,121,42],[129,4,122,2,"style"],[129,9,122,7],[129,10,122,8,"paddingLeft"],[129,21,122,19],[129,24,122,22,"getInset"],[129,32,122,30],[129,33,122,31],[129,39,122,37],[129,40,122,38],[130,4,123,2,"style"],[130,9,123,7],[130,10,123,8,"paddingRight"],[130,22,123,20],[130,25,123,23,"getInset"],[130,33,123,31],[130,34,123,32],[130,41,123,39],[130,42,123,40],[131,4,124,2],[131,11,124,9,"element"],[131,18,124,16],[132,2,125,0],[133,0,125,1],[133,3]],"functionMap":{"names":["<global>","NativeSafeAreaProvider","React.useEffect$argument_0","onEnd","<anonymous>","getSupportedTransitionEvent","getSupportedEnv","getInset","createContextElement"],"mappings":"AAA;OCmB;kBCK;kBCO;KD0B;WEG;KFG;GDC;CDI;AKE;CLa;AME;CNa;AOC;CPE;AQC;CRsB"}},"type":"js/module"}]}