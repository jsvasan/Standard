{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"parse\", {\n    enumerable: true,\n    get: function () {\n      return parse;\n    }\n  });\n  var UNKNOWN_FUNCTION = '<unknown>';\n  /**\n   * This parses the different stack traces and puts them into one format\n   * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n   */\n\n  function parse(stackString) {\n    var lines = stackString.split('\\n');\n    return lines.reduce(function (stack, line) {\n      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n      if (parseResult) {\n        stack.push(parseResult);\n      }\n      return stack;\n    }, []);\n  }\n  var chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n  var chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n  function parseChrome(line) {\n    var parts = chromeRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    var submatch = chromeEvalRe.exec(parts[2]);\n    if (isEval && submatch != null) {\n      // throw out eval line/column and use top-most line/column number\n      parts[2] = submatch[1]; // url\n\n      parts[3] = submatch[2]; // line\n\n      parts[4] = submatch[3]; // column\n    }\n    return {\n      file: !isNative ? parts[2] : null,\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: isNative ? [parts[2]] : [],\n      lineNumber: parts[3] ? +parts[3] : null,\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n  var winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  function parseWinjs(line) {\n    var parts = winjsRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[2],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[3],\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n  var geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\n  var geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n  function parseGecko(line) {\n    var parts = geckoRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    var submatch = geckoEvalRe.exec(parts[3]);\n    if (isEval && submatch != null) {\n      // throw out eval line/column and use top-most line number\n      parts[3] = submatch[1];\n      parts[4] = submatch[2];\n      parts[5] = null; // no column when eval\n    }\n    return {\n      file: parts[3],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: parts[2] ? parts[2].split(',') : [],\n      lineNumber: parts[4] ? +parts[4] : null,\n      column: parts[5] ? +parts[5] : null\n    };\n  }\n  var javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n  function parseJSC(line) {\n    var parts = javaScriptCoreRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[3],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[4],\n      column: parts[5] ? +parts[5] : null\n    };\n  }\n  var nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  function parseNode(line) {\n    var parts = nodeRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[2],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[3],\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n});","lineCount":122,"map":[[7,2,136,0,"Object"],[7,8,136,0],[7,9,136,0,"defineProperty"],[7,23,136,0],[7,24,136,0,"exports"],[7,31,136,0],[8,4,136,0,"enumerable"],[8,14,136,0],[9,4,136,0,"get"],[9,7,136,0],[9,18,136,0,"get"],[9,19,136,0],[10,6,136,0],[10,13,136,9,"parse"],[10,18,136,14],[11,4,136,14],[12,2,136,14],[13,2,1,0],[13,6,1,4,"UNKNOWN_FUNCTION"],[13,22,1,20],[13,25,1,23],[13,36,1,34],[14,2,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[19,2,7,0],[19,11,7,9,"parse"],[19,16,7,14,"parse"],[19,17,7,15,"stackString"],[19,28,7,26],[19,30,7,28],[20,4,8,2],[20,8,8,6,"lines"],[20,13,8,11],[20,16,8,14,"stackString"],[20,27,8,25],[20,28,8,26,"split"],[20,33,8,31],[20,34,8,32],[20,38,8,36],[20,39,8,37],[21,4,9,2],[21,11,9,9,"lines"],[21,16,9,14],[21,17,9,15,"reduce"],[21,23,9,21],[21,24,9,22],[21,34,9,32,"stack"],[21,39,9,37],[21,41,9,39,"line"],[21,45,9,43],[21,47,9,45],[22,6,10,4],[22,10,10,8,"parseResult"],[22,21,10,19],[22,24,10,22,"parseChrome"],[22,35,10,33],[22,36,10,34,"line"],[22,40,10,38],[22,41,10,39],[22,45,10,43,"parseWinjs"],[22,55,10,53],[22,56,10,54,"line"],[22,60,10,58],[22,61,10,59],[22,65,10,63,"parseGecko"],[22,75,10,73],[22,76,10,74,"line"],[22,80,10,78],[22,81,10,79],[22,85,10,83,"parseNode"],[22,94,10,92],[22,95,10,93,"line"],[22,99,10,97],[22,100,10,98],[22,104,10,102,"parseJSC"],[22,112,10,110],[22,113,10,111,"line"],[22,117,10,115],[22,118,10,116],[23,6,12,4],[23,10,12,8,"parseResult"],[23,21,12,19],[23,23,12,21],[24,8,13,6,"stack"],[24,13,13,11],[24,14,13,12,"push"],[24,18,13,16],[24,19,13,17,"parseResult"],[24,30,13,28],[24,31,13,29],[25,6,14,4],[26,6,16,4],[26,13,16,11,"stack"],[26,18,16,16],[27,4,17,2],[27,5,17,3],[27,7,17,5],[27,9,17,7],[27,10,17,8],[28,2,18,0],[29,2,19,0],[29,6,19,4,"chromeRe"],[29,14,19,12],[29,17,19,15],[29,160,19,158],[30,2,20,0],[30,6,20,4,"chromeEvalRe"],[30,18,20,16],[30,21,20,19],[30,52,20,50],[31,2,22,0],[31,11,22,9,"parseChrome"],[31,22,22,20,"parseChrome"],[31,23,22,21,"line"],[31,27,22,25],[31,29,22,27],[32,4,23,2],[32,8,23,6,"parts"],[32,13,23,11],[32,16,23,14,"chromeRe"],[32,24,23,22],[32,25,23,23,"exec"],[32,29,23,27],[32,30,23,28,"line"],[32,34,23,32],[32,35,23,33],[33,4,25,2],[33,8,25,6],[33,9,25,7,"parts"],[33,14,25,12],[33,16,25,14],[34,6,26,4],[34,13,26,11],[34,17,26,15],[35,4,27,2],[36,4,29,2],[36,8,29,6,"isNative"],[36,16,29,14],[36,19,29,17,"parts"],[36,24,29,22],[36,25,29,23],[36,26,29,24],[36,27,29,25],[36,31,29,29,"parts"],[36,36,29,34],[36,37,29,35],[36,38,29,36],[36,39,29,37],[36,40,29,38,"indexOf"],[36,47,29,45],[36,48,29,46],[36,56,29,54],[36,57,29,55],[36,62,29,60],[36,63,29,61],[36,64,29,62],[36,65,29,63],[38,4,31,2],[38,8,31,6,"isEval"],[38,14,31,12],[38,17,31,15,"parts"],[38,22,31,20],[38,23,31,21],[38,24,31,22],[38,25,31,23],[38,29,31,27,"parts"],[38,34,31,32],[38,35,31,33],[38,36,31,34],[38,37,31,35],[38,38,31,36,"indexOf"],[38,45,31,43],[38,46,31,44],[38,52,31,50],[38,53,31,51],[38,58,31,56],[38,59,31,57],[38,60,31,58],[38,61,31,59],[40,4,33,2],[40,8,33,6,"submatch"],[40,16,33,14],[40,19,33,17,"chromeEvalRe"],[40,31,33,29],[40,32,33,30,"exec"],[40,36,33,34],[40,37,33,35,"parts"],[40,42,33,40],[40,43,33,41],[40,44,33,42],[40,45,33,43],[40,46,33,44],[41,4,35,2],[41,8,35,6,"isEval"],[41,14,35,12],[41,18,35,16,"submatch"],[41,26,35,24],[41,30,35,28],[41,34,35,32],[41,36,35,34],[42,6,36,4],[43,6,37,4,"parts"],[43,11,37,9],[43,12,37,10],[43,13,37,11],[43,14,37,12],[43,17,37,15,"submatch"],[43,25,37,23],[43,26,37,24],[43,27,37,25],[43,28,37,26],[43,29,37,27],[43,30,37,28],[45,6,39,4,"parts"],[45,11,39,9],[45,12,39,10],[45,13,39,11],[45,14,39,12],[45,17,39,15,"submatch"],[45,25,39,23],[45,26,39,24],[45,27,39,25],[45,28,39,26],[45,29,39,27],[45,30,39,28],[47,6,41,4,"parts"],[47,11,41,9],[47,12,41,10],[47,13,41,11],[47,14,41,12],[47,17,41,15,"submatch"],[47,25,41,23],[47,26,41,24],[47,27,41,25],[47,28,41,26],[47,29,41,27],[47,30,41,28],[48,4,42,2],[49,4,44,2],[49,11,44,9],[50,6,45,4,"file"],[50,10,45,8],[50,12,45,10],[50,13,45,11,"isNative"],[50,21,45,19],[50,24,45,22,"parts"],[50,29,45,27],[50,30,45,28],[50,31,45,29],[50,32,45,30],[50,35,45,33],[50,39,45,37],[51,6,46,4,"methodName"],[51,16,46,14],[51,18,46,16,"parts"],[51,23,46,21],[51,24,46,22],[51,25,46,23],[51,26,46,24],[51,30,46,28,"UNKNOWN_FUNCTION"],[51,46,46,44],[52,6,47,4,"arguments"],[52,15,47,13],[52,17,47,15,"isNative"],[52,25,47,23],[52,28,47,26],[52,29,47,27,"parts"],[52,34,47,32],[52,35,47,33],[52,36,47,34],[52,37,47,35],[52,38,47,36],[52,41,47,39],[52,43,47,41],[53,6,48,4,"lineNumber"],[53,16,48,14],[53,18,48,16,"parts"],[53,23,48,21],[53,24,48,22],[53,25,48,23],[53,26,48,24],[53,29,48,27],[53,30,48,28,"parts"],[53,35,48,33],[53,36,48,34],[53,37,48,35],[53,38,48,36],[53,41,48,39],[53,45,48,43],[54,6,49,4,"column"],[54,12,49,10],[54,14,49,12,"parts"],[54,19,49,17],[54,20,49,18],[54,21,49,19],[54,22,49,20],[54,25,49,23],[54,26,49,24,"parts"],[54,31,49,29],[54,32,49,30],[54,33,49,31],[54,34,49,32],[54,37,49,35],[55,4,50,2],[55,5,50,3],[56,2,51,0],[57,2,53,0],[57,6,53,4,"winjsRe"],[57,13,53,11],[57,16,53,14],[57,131,53,129],[58,2,55,0],[58,11,55,9,"parseWinjs"],[58,21,55,19,"parseWinjs"],[58,22,55,20,"line"],[58,26,55,24],[58,28,55,26],[59,4,56,2],[59,8,56,6,"parts"],[59,13,56,11],[59,16,56,14,"winjsRe"],[59,23,56,21],[59,24,56,22,"exec"],[59,28,56,26],[59,29,56,27,"line"],[59,33,56,31],[59,34,56,32],[60,4,58,2],[60,8,58,6],[60,9,58,7,"parts"],[60,14,58,12],[60,16,58,14],[61,6,59,4],[61,13,59,11],[61,17,59,15],[62,4,60,2],[63,4,62,2],[63,11,62,9],[64,6,63,4,"file"],[64,10,63,8],[64,12,63,10,"parts"],[64,17,63,15],[64,18,63,16],[64,19,63,17],[64,20,63,18],[65,6,64,4,"methodName"],[65,16,64,14],[65,18,64,16,"parts"],[65,23,64,21],[65,24,64,22],[65,25,64,23],[65,26,64,24],[65,30,64,28,"UNKNOWN_FUNCTION"],[65,46,64,44],[66,6,65,4,"arguments"],[66,15,65,13],[66,17,65,15],[66,19,65,17],[67,6,66,4,"lineNumber"],[67,16,66,14],[67,18,66,16],[67,19,66,17,"parts"],[67,24,66,22],[67,25,66,23],[67,26,66,24],[67,27,66,25],[68,6,67,4,"column"],[68,12,67,10],[68,14,67,12,"parts"],[68,19,67,17],[68,20,67,18],[68,21,67,19],[68,22,67,20],[68,25,67,23],[68,26,67,24,"parts"],[68,31,67,29],[68,32,67,30],[68,33,67,31],[68,34,67,32],[68,37,67,35],[69,4,68,2],[69,5,68,3],[70,2,69,0],[71,2,71,0],[71,6,71,4,"geckoRe"],[71,13,71,11],[71,16,71,14],[71,149,71,147],[72,2,72,0],[72,6,72,4,"geckoEvalRe"],[72,17,72,15],[72,20,72,18],[72,67,72,65],[73,2,74,0],[73,11,74,9,"parseGecko"],[73,21,74,19,"parseGecko"],[73,22,74,20,"line"],[73,26,74,24],[73,28,74,26],[74,4,75,2],[74,8,75,6,"parts"],[74,13,75,11],[74,16,75,14,"geckoRe"],[74,23,75,21],[74,24,75,22,"exec"],[74,28,75,26],[74,29,75,27,"line"],[74,33,75,31],[74,34,75,32],[75,4,77,2],[75,8,77,6],[75,9,77,7,"parts"],[75,14,77,12],[75,16,77,14],[76,6,78,4],[76,13,78,11],[76,17,78,15],[77,4,79,2],[78,4,81,2],[78,8,81,6,"isEval"],[78,14,81,12],[78,17,81,15,"parts"],[78,22,81,20],[78,23,81,21],[78,24,81,22],[78,25,81,23],[78,29,81,27,"parts"],[78,34,81,32],[78,35,81,33],[78,36,81,34],[78,37,81,35],[78,38,81,36,"indexOf"],[78,45,81,43],[78,46,81,44],[78,55,81,53],[78,56,81,54],[78,59,81,57],[78,60,81,58],[78,61,81,59],[79,4,82,2],[79,8,82,6,"submatch"],[79,16,82,14],[79,19,82,17,"geckoEvalRe"],[79,30,82,28],[79,31,82,29,"exec"],[79,35,82,33],[79,36,82,34,"parts"],[79,41,82,39],[79,42,82,40],[79,43,82,41],[79,44,82,42],[79,45,82,43],[80,4,84,2],[80,8,84,6,"isEval"],[80,14,84,12],[80,18,84,16,"submatch"],[80,26,84,24],[80,30,84,28],[80,34,84,32],[80,36,84,34],[81,6,85,4],[82,6,86,4,"parts"],[82,11,86,9],[82,12,86,10],[82,13,86,11],[82,14,86,12],[82,17,86,15,"submatch"],[82,25,86,23],[82,26,86,24],[82,27,86,25],[82,28,86,26],[83,6,87,4,"parts"],[83,11,87,9],[83,12,87,10],[83,13,87,11],[83,14,87,12],[83,17,87,15,"submatch"],[83,25,87,23],[83,26,87,24],[83,27,87,25],[83,28,87,26],[84,6,88,4,"parts"],[84,11,88,9],[84,12,88,10],[84,13,88,11],[84,14,88,12],[84,17,88,15],[84,21,88,19],[84,22,88,20],[84,23,88,21],[85,4,89,2],[86,4,91,2],[86,11,91,9],[87,6,92,4,"file"],[87,10,92,8],[87,12,92,10,"parts"],[87,17,92,15],[87,18,92,16],[87,19,92,17],[87,20,92,18],[88,6,93,4,"methodName"],[88,16,93,14],[88,18,93,16,"parts"],[88,23,93,21],[88,24,93,22],[88,25,93,23],[88,26,93,24],[88,30,93,28,"UNKNOWN_FUNCTION"],[88,46,93,44],[89,6,94,4,"arguments"],[89,15,94,13],[89,17,94,15,"parts"],[89,22,94,20],[89,23,94,21],[89,24,94,22],[89,25,94,23],[89,28,94,26,"parts"],[89,33,94,31],[89,34,94,32],[89,35,94,33],[89,36,94,34],[89,37,94,35,"split"],[89,42,94,40],[89,43,94,41],[89,46,94,44],[89,47,94,45],[89,50,94,48],[89,52,94,50],[90,6,95,4,"lineNumber"],[90,16,95,14],[90,18,95,16,"parts"],[90,23,95,21],[90,24,95,22],[90,25,95,23],[90,26,95,24],[90,29,95,27],[90,30,95,28,"parts"],[90,35,95,33],[90,36,95,34],[90,37,95,35],[90,38,95,36],[90,41,95,39],[90,45,95,43],[91,6,96,4,"column"],[91,12,96,10],[91,14,96,12,"parts"],[91,19,96,17],[91,20,96,18],[91,21,96,19],[91,22,96,20],[91,25,96,23],[91,26,96,24,"parts"],[91,31,96,29],[91,32,96,30],[91,33,96,31],[91,34,96,32],[91,37,96,35],[92,4,97,2],[92,5,97,3],[93,2,98,0],[94,2,100,0],[94,6,100,4,"javaScriptCoreRe"],[94,22,100,20],[94,25,100,23],[94,87,100,85],[95,2,102,0],[95,11,102,9,"parseJSC"],[95,19,102,17,"parseJSC"],[95,20,102,18,"line"],[95,24,102,22],[95,26,102,24],[96,4,103,2],[96,8,103,6,"parts"],[96,13,103,11],[96,16,103,14,"javaScriptCoreRe"],[96,32,103,30],[96,33,103,31,"exec"],[96,37,103,35],[96,38,103,36,"line"],[96,42,103,40],[96,43,103,41],[97,4,105,2],[97,8,105,6],[97,9,105,7,"parts"],[97,14,105,12],[97,16,105,14],[98,6,106,4],[98,13,106,11],[98,17,106,15],[99,4,107,2],[100,4,109,2],[100,11,109,9],[101,6,110,4,"file"],[101,10,110,8],[101,12,110,10,"parts"],[101,17,110,15],[101,18,110,16],[101,19,110,17],[101,20,110,18],[102,6,111,4,"methodName"],[102,16,111,14],[102,18,111,16,"parts"],[102,23,111,21],[102,24,111,22],[102,25,111,23],[102,26,111,24],[102,30,111,28,"UNKNOWN_FUNCTION"],[102,46,111,44],[103,6,112,4,"arguments"],[103,15,112,13],[103,17,112,15],[103,19,112,17],[104,6,113,4,"lineNumber"],[104,16,113,14],[104,18,113,16],[104,19,113,17,"parts"],[104,24,113,22],[104,25,113,23],[104,26,113,24],[104,27,113,25],[105,6,114,4,"column"],[105,12,114,10],[105,14,114,12,"parts"],[105,19,114,17],[105,20,114,18],[105,21,114,19],[105,22,114,20],[105,25,114,23],[105,26,114,24,"parts"],[105,31,114,29],[105,32,114,30],[105,33,114,31],[105,34,114,32],[105,37,114,35],[106,4,115,2],[106,5,115,3],[107,2,116,0],[108,2,118,0],[108,6,118,4,"nodeRe"],[108,12,118,10],[108,15,118,13],[108,110,118,108],[109,2,120,0],[109,11,120,9,"parseNode"],[109,20,120,18,"parseNode"],[109,21,120,19,"line"],[109,25,120,23],[109,27,120,25],[110,4,121,2],[110,8,121,6,"parts"],[110,13,121,11],[110,16,121,14,"nodeRe"],[110,22,121,20],[110,23,121,21,"exec"],[110,27,121,25],[110,28,121,26,"line"],[110,32,121,30],[110,33,121,31],[111,4,123,2],[111,8,123,6],[111,9,123,7,"parts"],[111,14,123,12],[111,16,123,14],[112,6,124,4],[112,13,124,11],[112,17,124,15],[113,4,125,2],[114,4,127,2],[114,11,127,9],[115,6,128,4,"file"],[115,10,128,8],[115,12,128,10,"parts"],[115,17,128,15],[115,18,128,16],[115,19,128,17],[115,20,128,18],[116,6,129,4,"methodName"],[116,16,129,14],[116,18,129,16,"parts"],[116,23,129,21],[116,24,129,22],[116,25,129,23],[116,26,129,24],[116,30,129,28,"UNKNOWN_FUNCTION"],[116,46,129,44],[117,6,130,4,"arguments"],[117,15,130,13],[117,17,130,15],[117,19,130,17],[118,6,131,4,"lineNumber"],[118,16,131,14],[118,18,131,16],[118,19,131,17,"parts"],[118,24,131,22],[118,25,131,23],[118,26,131,24],[118,27,131,25],[119,6,132,4,"column"],[119,12,132,10],[119,14,132,12,"parts"],[119,19,132,17],[119,20,132,18],[119,21,132,19],[119,22,132,20],[119,25,132,23],[119,26,132,24,"parts"],[119,31,132,29],[119,32,132,30],[119,33,132,31],[119,34,132,32],[119,37,132,35],[120,4,133,2],[120,5,133,3],[121,2,134,0],[122,0,134,1],[122,3]],"functionMap":{"names":["<global>","parse","lines.reduce$argument_0","parseChrome","parseWinjs","parseGecko","parseJSC","parseNode"],"mappings":"AAA;ACM;sBCE;GDQ;CDC;AGI;CH6B;AII;CJc;AKK;CLwB;AMI;CNc;AOI;CPc"},"hasCjsExports":false},"type":"js/module"}]}