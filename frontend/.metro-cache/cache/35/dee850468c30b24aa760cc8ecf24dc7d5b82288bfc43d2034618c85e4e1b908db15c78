{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":46,"index":93}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"],"imports":1}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":94},"end":{"line":5,"column":41,"index":135}}],"key":"099N+Zv4K9pUFNBPk2MtNNMStD8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":808},"end":{"line":30,"column":48,"index":856}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactIs = require(_dependencyMap[1], \"react-is\");\n  var _useRouteJs = require(_dependencyMap[2], \"./useRoute.js\");\n  var _reactJsxRuntime = require(_dependencyMap[3], \"react/jsx-runtime\");\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n\n  /**\n   * Infer the param list from the static navigation config.\n   */\n\n  const MemoizedScreen = /*#__PURE__*/React.memo(({\n    component\n  }) => {\n    const route = (0, _useRouteJs.useRoute)();\n    const children = /*#__PURE__*/React.createElement(component, {\n      route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  const getItemsFromScreens = (Screen, screens) => {\n    return Object.entries(screens).map(([name, item]) => {\n      let component;\n      let props = {};\n      let useIf;\n      let isNavigator = false;\n      if ('screen' in item) {\n        const {\n          screen,\n          if: _if,\n          ...rest\n        } = item;\n        useIf = _if;\n        props = rest;\n        if ((0, _reactIs.isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _reactIs.isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      const element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _reactJsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return () => {\n        const shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Screen, {\n          name: name,\n          ...props,\n          children: () => element\n        }, name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    const {\n      Navigator,\n      Group,\n      Screen,\n      config\n    } = tree;\n    const {\n      screens,\n      groups,\n      ...rest\n    } = config;\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    const items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (const key in config) {\n      if (key === 'screens' && screens) {\n        items.push(...getItemsFromScreens(Screen, screens));\n      }\n      if (key === 'groups' && groups) {\n        items.push(...Object.entries(groups).map(([key, {\n          if: useIf,\n          ...group\n        }]) => {\n          const groupItems = getItemsFromScreens(Screen, group.screens);\n          return () => {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            const children = groupItems.map(item => item());\n            const shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Group, {\n              navigationKey: key,\n              ...group,\n              children: children\n            }, key);\n          };\n        }));\n      }\n    }\n    const NavigatorComponent = () => {\n      const children = items.map(item => item());\n      return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Navigator, {\n        ...rest,\n        children: children\n      });\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    let initialScreenConfig;\n    const createPathConfigForTree = (t, o, skipInitialDetection) => {\n      const createPathConfigForScreens = (screens, initialRouteName) => {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(([a], [b]) => {\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(([key, item]) => {\n          const screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          let screens;\n          const skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection && screenConfig.path === '') {\n                // We encounter a leaf screen with empty path,\n                // Clear the initial screen config as it's not needed anymore\n                initialScreenConfig = undefined;\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(([, screen]) => Object.keys(screen).length > 0));\n      };\n      const screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (const key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, o?.initialRouteName ?? t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(([, group]) => {\n            Object.assign(screens, createPathConfigForScreens(group.screens, o?.initialRouteName ?? t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    const screens = createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":272,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13],[11,10,1,13,"d"],[11,11,1,13],[11,14,1,13,"Object"],[11,20,1,13],[11,21,1,13,"getOwnPropertyDescriptor"],[11,45,1,13],[11,46,1,13,"e"],[11,47,1,13],[11,49,1,13,"k"],[11,50,1,13],[12,6,1,13,"Object"],[12,12,1,13],[12,13,1,13,"defineProperty"],[12,27,1,13],[12,28,1,13,"n"],[12,29,1,13],[12,31,1,13,"k"],[12,32,1,13],[12,34,1,13,"d"],[12,35,1,13],[12,36,1,13,"get"],[12,39,1,13],[12,42,1,13,"d"],[12,43,1,13],[13,8,1,13,"enumerable"],[13,18,1,13],[14,8,1,13,"get"],[14,11,1,13],[14,22,1,13,"get"],[14,23,1,13],[15,10,1,13],[15,17,1,13,"e"],[15,18,1,13],[15,19,1,13,"k"],[15,20,1,13],[16,8,1,13],[17,6,1,13],[18,4,1,13],[19,4,1,13,"n"],[19,5,1,13],[19,6,1,13,"default"],[19,13,1,13],[19,16,1,13,"e"],[19,17,1,13],[20,4,1,13],[20,11,1,13,"n"],[20,12,1,13],[21,2,1,13],[22,2,94,0,"exports"],[22,9,94,0],[22,10,94,0,"createComponentForStaticNavigation"],[22,44,94,0],[22,47,94,0,"createComponentForStaticNavigation"],[22,81,94,0],[23,2,168,0,"exports"],[23,9,168,0],[23,10,168,0,"createPathConfigForStaticNavigation"],[23,45,168,0],[23,48,168,0,"createPathConfigForStaticNavigation"],[23,83,168,0],[24,2,3,0],[24,6,3,0,"_react"],[24,12,3,0],[24,15,3,0,"require"],[24,22,3,0],[24,23,3,0,"_dependencyMap"],[24,37,3,0],[25,2,3,0],[25,6,3,0,"React"],[25,11,3,0],[25,14,3,0,"_interopNamespace"],[25,31,3,0],[25,32,3,0,"_react"],[25,38,3,0],[26,2,4,0],[26,6,4,0,"_reactIs"],[26,14,4,0],[26,17,4,0,"require"],[26,24,4,0],[26,25,4,0,"_dependencyMap"],[26,39,4,0],[27,2,5,0],[27,6,5,0,"_useRouteJs"],[27,17,5,0],[27,20,5,0,"require"],[27,27,5,0],[27,28,5,0,"_dependencyMap"],[27,42,5,0],[28,2,30,0],[28,6,30,0,"_reactJsxRuntime"],[28,22,30,0],[28,25,30,0,"require"],[28,32,30,0],[28,33,30,0,"_dependencyMap"],[28,47,30,0],[29,2,7,0],[30,0,8,0],[31,0,9,0],[32,0,10,0],[34,2,12,0],[35,0,13,0],[36,0,14,0],[37,0,15,0],[39,2,17,0],[40,0,18,0],[41,0,19,0],[42,0,20,0],[44,2,22,0],[45,0,23,0],[46,0,24,0],[47,0,25,0],[49,2,27,0],[50,0,28,0],[51,0,29,0],[53,2,31,0],[53,8,31,6,"MemoizedScreen"],[53,22,31,20],[53,25,31,23],[53,38,31,36,"React"],[53,43,31,41],[53,44,31,42,"memo"],[53,48,31,46],[53,49,31,47],[53,50,31,48],[54,4,32,2,"component"],[55,2,33,0],[55,3,33,1],[55,8,33,6],[56,4,34,2],[56,10,34,8,"route"],[56,15,34,13],[56,18,34,16],[56,22,34,16,"useRoute"],[56,33,34,24],[56,34,34,24,"useRoute"],[56,42,34,24],[56,44,34,25],[56,45,34,26],[57,4,35,2],[57,10,35,8,"children"],[57,18,35,16],[57,21,35,19],[57,34,35,32,"React"],[57,39,35,37],[57,40,35,38,"createElement"],[57,53,35,51],[57,54,35,52,"component"],[57,63,35,61],[57,65,35,63],[58,6,36,4,"route"],[59,4,37,2],[59,5,37,3],[59,6,37,4],[60,4,38,2],[60,11,38,9,"children"],[60,19,38,17],[61,2,39,0],[61,3,39,1],[61,4,39,2],[62,2,40,0,"MemoizedScreen"],[62,16,40,14],[62,17,40,15,"displayName"],[62,28,40,26],[62,31,40,29],[62,45,40,43],[63,2,41,0],[63,8,41,6,"getItemsFromScreens"],[63,27,41,25],[63,30,41,28,"getItemsFromScreens"],[63,31,41,29,"Screen"],[63,37,41,35],[63,39,41,37,"screens"],[63,46,41,44],[63,51,41,49],[64,4,42,2],[64,11,42,9,"Object"],[64,17,42,15],[64,18,42,16,"entries"],[64,25,42,23],[64,26,42,24,"screens"],[64,33,42,31],[64,34,42,32],[64,35,42,33,"map"],[64,38,42,36],[64,39,42,37],[64,40,42,38],[64,41,42,39,"name"],[64,45,42,43],[64,47,42,45,"item"],[64,51,42,49],[64,52,42,50],[64,57,42,55],[65,6,43,4],[65,10,43,8,"component"],[65,19,43,17],[66,6,44,4],[66,10,44,8,"props"],[66,15,44,13],[66,18,44,16],[66,19,44,17],[66,20,44,18],[67,6,45,4],[67,10,45,8,"useIf"],[67,15,45,13],[68,6,46,4],[68,10,46,8,"isNavigator"],[68,21,46,19],[68,24,46,22],[68,29,46,27],[69,6,47,4],[69,10,47,8],[69,18,47,16],[69,22,47,20,"item"],[69,26,47,24],[69,28,47,26],[70,8,48,6],[70,14,48,12],[71,10,49,8,"screen"],[71,16,49,14],[72,10,50,8,"if"],[72,12,50,10],[72,14,50,12,"_if"],[72,17,50,15],[73,10,51,8],[73,13,51,11,"rest"],[74,8,52,6],[74,9,52,7],[74,12,52,10,"item"],[74,16,52,14],[75,8,53,6,"useIf"],[75,13,53,11],[75,16,53,14,"_if"],[75,19,53,17],[76,8,54,6,"props"],[76,13,54,11],[76,16,54,14,"rest"],[76,20,54,18],[77,8,55,6],[77,12,55,10],[77,16,55,10,"isValidElementType"],[77,24,55,28],[77,25,55,28,"isValidElementType"],[77,43,55,28],[77,45,55,29,"screen"],[77,51,55,35],[77,52,55,36],[77,54,55,38],[78,10,56,8,"component"],[78,19,56,17],[78,22,56,20,"screen"],[78,28,56,26],[79,8,57,6],[79,9,57,7],[79,15,57,13],[79,19,57,17],[79,27,57,25],[79,31,57,29,"screen"],[79,37,57,35],[79,39,57,37],[80,10,58,8,"isNavigator"],[80,21,58,19],[80,24,58,22],[80,28,58,26],[81,10,59,8,"component"],[81,19,59,17],[81,22,59,20,"createComponentForStaticNavigation"],[81,56,59,54],[81,57,59,55,"screen"],[81,63,59,61],[81,65,59,63],[81,68,59,66,"name"],[81,72,59,70],[81,83,59,81],[81,84,59,82],[82,8,60,6],[83,6,61,4],[83,7,61,5],[83,13,61,11],[83,17,61,15],[83,21,61,15,"isValidElementType"],[83,29,61,33],[83,30,61,33,"isValidElementType"],[83,48,61,33],[83,50,61,34,"item"],[83,54,61,38],[83,55,61,39],[83,57,61,41],[84,8,62,6,"component"],[84,17,62,15],[84,20,62,18,"item"],[84,24,62,22],[85,6,63,4],[85,7,63,5],[85,13,63,11],[85,17,63,15],[85,25,63,23],[85,29,63,27,"item"],[85,33,63,31],[85,35,63,33],[86,8,64,6,"isNavigator"],[86,19,64,17],[86,22,64,20],[86,26,64,24],[87,8,65,6,"component"],[87,17,65,15],[87,20,65,18,"createComponentForStaticNavigation"],[87,54,65,52],[87,55,65,53,"item"],[87,59,65,57],[87,61,65,59],[87,64,65,62,"name"],[87,68,65,66],[87,79,65,77],[87,80,65,78],[88,6,66,4],[89,6,67,4],[89,10,67,8,"component"],[89,19,67,17],[89,23,67,21],[89,27,67,25],[89,29,67,27],[90,8,68,6],[90,14,68,12],[90,18,68,16,"Error"],[90,23,68,21],[90,24,68,22],[90,77,68,75,"name"],[90,81,68,79],[90,262,68,260],[90,263,68,261],[91,6,69,4],[92,6,70,4],[92,12,70,10,"element"],[92,19,70,17],[92,22,70,20,"isNavigator"],[92,33,70,31],[92,37,70,35],[92,50,70,48,"React"],[92,55,70,53],[92,56,70,54,"createElement"],[92,69,70,67],[92,70,70,68,"component"],[92,79,70,77],[92,81,70,79],[92,82,70,80],[92,83,70,81],[92,84,70,82],[92,88,70,86],[92,101,70,99],[92,105,70,99,"_jsx"],[92,121,70,103],[92,122,70,103,"jsx"],[92,125,70,103],[92,127,70,104,"MemoizedScreen"],[92,141,70,118],[92,143,70,120],[93,8,71,6,"component"],[93,17,71,15],[93,19,71,17,"component"],[94,6,72,4],[94,7,72,5],[94,8,72,6],[95,6,73,4],[95,13,73,11],[95,19,73,17],[96,8,74,6],[96,14,74,12,"shouldRender"],[96,26,74,24],[96,29,74,27,"useIf"],[96,34,74,32],[96,38,74,36],[96,42,74,40],[96,46,74,44,"useIf"],[96,51,74,49],[96,52,74,50],[96,53,74,51],[97,8,75,6],[97,12,75,10],[97,13,75,11,"shouldRender"],[97,25,75,23],[97,27,75,25],[98,10,76,8],[98,17,76,15],[98,21,76,19],[99,8,77,6],[100,8,78,6],[100,15,78,13],[100,28,78,26],[100,32,78,26,"_jsx"],[100,48,78,30],[100,49,78,30,"jsx"],[100,52,78,30],[100,54,78,31,"Screen"],[100,60,78,37],[100,62,78,39],[101,10,79,8,"name"],[101,14,79,12],[101,16,79,14,"name"],[101,20,79,18],[102,10,80,8],[102,13,80,11,"props"],[102,18,80,16],[103,10,81,8,"children"],[103,18,81,16],[103,20,81,18,"children"],[103,21,81,18],[103,26,81,24,"element"],[104,8,82,6],[104,9,82,7],[104,11,82,9,"name"],[104,15,82,13],[104,16,82,14],[105,6,83,4],[105,7,83,5],[106,4,84,2],[106,5,84,3],[106,6,84,4],[107,2,85,0],[107,3,85,1],[109,2,87,0],[110,0,88,0],[111,0,89,0],[112,0,90,0],[113,0,91,0],[114,0,92,0],[115,0,93,0],[116,2,94,7],[116,11,94,16,"createComponentForStaticNavigation"],[116,45,94,50,"createComponentForStaticNavigation"],[116,46,94,51,"tree"],[116,50,94,55],[116,52,94,57,"displayName"],[116,63,94,68],[116,65,94,70],[117,4,95,2],[117,10,95,8],[118,6,96,4,"Navigator"],[118,15,96,13],[119,6,97,4,"Group"],[119,11,97,9],[120,6,98,4,"Screen"],[120,12,98,10],[121,6,99,4,"config"],[122,4,100,2],[122,5,100,3],[122,8,100,6,"tree"],[122,12,100,10],[123,4,101,2],[123,10,101,8],[124,6,102,4,"screens"],[124,13,102,11],[125,6,103,4,"groups"],[125,12,103,10],[126,6,104,4],[126,9,104,7,"rest"],[127,4,105,2],[127,5,105,3],[127,8,105,6,"config"],[127,14,105,12],[128,4,106,2],[128,8,106,6,"screens"],[128,15,106,13],[128,19,106,17],[128,23,106,21],[128,27,106,25,"groups"],[128,33,106,31],[128,37,106,35],[128,41,106,39],[128,43,106,41],[129,6,107,4],[129,12,107,10],[129,16,107,14,"Error"],[129,21,107,19],[129,22,107,20],[129,153,107,151],[129,154,107,152],[130,4,108,2],[131,4,109,2],[131,10,109,8,"items"],[131,15,109,13],[131,18,109,16],[131,20,109,18],[133,4,111,2],[134,4,112,2],[135,4,113,2],[135,9,113,7],[135,15,113,13,"key"],[135,18,113,16],[135,22,113,20,"config"],[135,28,113,26],[135,30,113,28],[136,6,114,4],[136,10,114,8,"key"],[136,13,114,11],[136,18,114,16],[136,27,114,25],[136,31,114,29,"screens"],[136,38,114,36],[136,40,114,38],[137,8,115,6,"items"],[137,13,115,11],[137,14,115,12,"push"],[137,18,115,16],[137,19,115,17],[137,22,115,20,"getItemsFromScreens"],[137,41,115,39],[137,42,115,40,"Screen"],[137,48,115,46],[137,50,115,48,"screens"],[137,57,115,55],[137,58,115,56],[137,59,115,57],[138,6,116,4],[139,6,117,4],[139,10,117,8,"key"],[139,13,117,11],[139,18,117,16],[139,26,117,24],[139,30,117,28,"groups"],[139,36,117,34],[139,38,117,36],[140,8,118,6,"items"],[140,13,118,11],[140,14,118,12,"push"],[140,18,118,16],[140,19,118,17],[140,22,118,20,"Object"],[140,28,118,26],[140,29,118,27,"entries"],[140,36,118,34],[140,37,118,35,"groups"],[140,43,118,41],[140,44,118,42],[140,45,118,43,"map"],[140,48,118,46],[140,49,118,47],[140,50,118,48],[140,51,118,49,"key"],[140,54,118,52],[140,56,118,54],[141,10,119,8,"if"],[141,12,119,10],[141,14,119,12,"useIf"],[141,19,119,17],[142,10,120,8],[142,13,120,11,"group"],[143,8,121,6],[143,9,121,7],[143,10,121,8],[143,15,121,13],[144,10,122,8],[144,16,122,14,"groupItems"],[144,26,122,24],[144,29,122,27,"getItemsFromScreens"],[144,48,122,46],[144,49,122,47,"Screen"],[144,55,122,53],[144,57,122,55,"group"],[144,62,122,60],[144,63,122,61,"screens"],[144,70,122,68],[144,71,122,69],[145,10,123,8],[145,17,123,15],[145,23,123,21],[146,12,124,10],[147,12,125,10],[147,18,125,16,"children"],[147,26,125,24],[147,29,125,27,"groupItems"],[147,39,125,37],[147,40,125,38,"map"],[147,43,125,41],[147,44,125,42,"item"],[147,48,125,46],[147,52,125,50,"item"],[147,56,125,54],[147,57,125,55],[147,58,125,56],[147,59,125,57],[148,12,126,10],[148,18,126,16,"shouldRender"],[148,30,126,28],[148,33,126,31,"useIf"],[148,38,126,36],[148,42,126,40],[148,46,126,44],[148,50,126,48,"useIf"],[148,55,126,53],[148,56,126,54],[148,57,126,55],[149,12,127,10],[149,16,127,14],[149,17,127,15,"shouldRender"],[149,29,127,27],[149,31,127,29],[150,14,128,12],[150,21,128,19],[150,25,128,23],[151,12,129,10],[152,12,130,10],[152,19,130,17],[152,32,130,30],[152,36,130,30,"_jsx"],[152,52,130,34],[152,53,130,34,"jsx"],[152,56,130,34],[152,58,130,35,"Group"],[152,63,130,40],[152,65,130,42],[153,14,131,12,"navigationKey"],[153,27,131,25],[153,29,131,27,"key"],[153,32,131,30],[154,14,132,12],[154,17,132,15,"group"],[154,22,132,20],[155,14,133,12,"children"],[155,22,133,20],[155,24,133,22,"children"],[156,12,134,10],[156,13,134,11],[156,15,134,13,"key"],[156,18,134,16],[156,19,134,17],[157,10,135,8],[157,11,135,9],[158,8,136,6],[158,9,136,7],[158,10,136,8],[158,11,136,9],[159,6,137,4],[160,4,138,2],[161,4,139,2],[161,10,139,8,"NavigatorComponent"],[161,28,139,26],[161,31,139,29,"NavigatorComponent"],[161,32,139,29],[161,37,139,35],[162,6,140,4],[162,12,140,10,"children"],[162,20,140,18],[162,23,140,21,"items"],[162,28,140,26],[162,29,140,27,"map"],[162,32,140,30],[162,33,140,31,"item"],[162,37,140,35],[162,41,140,39,"item"],[162,45,140,43],[162,46,140,44],[162,47,140,45],[162,48,140,46],[163,6,141,4],[163,13,141,11],[163,26,141,24],[163,30,141,24,"_jsx"],[163,46,141,28],[163,47,141,28,"jsx"],[163,50,141,28],[163,52,141,29,"Navigator"],[163,61,141,38],[163,63,141,40],[164,8,142,6],[164,11,142,9,"rest"],[164,15,142,13],[165,8,143,6,"children"],[165,16,143,14],[165,18,143,16,"children"],[166,6,144,4],[166,7,144,5],[166,8,144,6],[167,4,145,2],[167,5,145,3],[168,4,146,2,"NavigatorComponent"],[168,22,146,20],[168,23,146,21,"displayName"],[168,34,146,32],[168,37,146,35,"displayName"],[168,48,146,46],[169,4,147,2],[169,11,147,9,"NavigatorComponent"],[169,29,147,27],[170,2,148,0],[171,2,149,0],[172,0,150,0],[173,0,151,0],[174,0,152,0],[175,0,153,0],[176,0,154,0],[177,0,155,0],[178,0,156,0],[179,0,157,0],[180,0,158,0],[181,0,159,0],[182,0,160,0],[183,0,161,0],[184,0,162,0],[185,0,163,0],[186,0,164,0],[187,0,165,0],[188,0,166,0],[189,0,167,0],[190,2,168,7],[190,11,168,16,"createPathConfigForStaticNavigation"],[190,46,168,51,"createPathConfigForStaticNavigation"],[190,47,168,52,"tree"],[190,51,168,56],[190,53,168,58,"options"],[190,60,168,65],[190,62,168,67,"auto"],[190,66,168,71],[190,68,168,73],[191,4,169,2],[191,8,169,6,"initialScreenConfig"],[191,27,169,25],[192,4,170,2],[192,10,170,8,"createPathConfigForTree"],[192,33,170,31],[192,36,170,34,"createPathConfigForTree"],[192,37,170,35,"t"],[192,38,170,36],[192,40,170,38,"o"],[192,41,170,39],[192,43,170,41,"skipInitialDetection"],[192,63,170,61],[192,68,170,66],[193,6,171,4],[193,12,171,10,"createPathConfigForScreens"],[193,38,171,36],[193,41,171,39,"createPathConfigForScreens"],[193,42,171,40,"screens"],[193,49,171,47],[193,51,171,49,"initialRouteName"],[193,67,171,65],[193,72,171,70],[194,8,172,6],[194,15,172,13,"Object"],[194,21,172,19],[194,22,172,20,"fromEntries"],[194,33,172,31],[194,34,172,32,"Object"],[194,40,172,38],[194,41,172,39,"entries"],[194,48,172,46],[194,49,172,47,"screens"],[194,56,172,54],[195,8,173,6],[196,8,174,6],[197,8,174,6],[197,9,175,7,"sort"],[197,13,175,11],[197,14,175,12],[197,15,175,13],[197,16,175,14,"a"],[197,17,175,15],[197,18,175,16],[197,20,175,18],[197,21,175,19,"b"],[197,22,175,20],[197,23,175,21],[197,28,175,26],[198,10,176,8],[198,14,176,12,"a"],[198,15,176,13],[198,20,176,18,"initialRouteName"],[198,36,176,34],[198,38,176,36],[199,12,177,10],[199,19,177,17],[199,20,177,18],[199,21,177,19],[200,10,178,8],[201,10,179,8],[201,14,179,12,"b"],[201,15,179,13],[201,20,179,18,"initialRouteName"],[201,36,179,34],[201,38,179,36],[202,12,180,10],[202,19,180,17],[202,20,180,18],[203,10,181,8],[204,10,182,8],[204,17,182,15],[204,18,182,16],[205,8,183,6],[205,9,183,7],[205,10,183,8],[205,11,183,9,"map"],[205,14,183,12],[205,15,183,13],[205,16,183,14],[205,17,183,15,"key"],[205,20,183,18],[205,22,183,20,"item"],[205,26,183,24],[205,27,183,25],[205,32,183,30],[206,10,184,8],[206,16,184,14,"screenConfig"],[206,28,184,26],[206,31,184,29],[206,32,184,30],[206,33,184,31],[207,10,185,8],[207,14,185,12],[207,23,185,21],[207,27,185,25,"item"],[207,31,185,29],[207,33,185,31],[208,12,186,10],[208,16,186,14],[208,23,186,21,"item"],[208,27,186,25],[208,28,186,26,"linking"],[208,35,186,33],[208,40,186,38],[208,48,186,46],[208,50,186,48],[209,14,187,12,"screenConfig"],[209,26,187,24],[209,27,187,25,"path"],[209,31,187,29],[209,34,187,32,"item"],[209,38,187,36],[209,39,187,37,"linking"],[209,46,187,44],[210,12,188,10],[210,13,188,11],[210,19,188,17],[211,14,189,12,"Object"],[211,20,189,18],[211,21,189,19,"assign"],[211,27,189,25],[211,28,189,26,"screenConfig"],[211,40,189,38],[211,42,189,40,"item"],[211,46,189,44],[211,47,189,45,"linking"],[211,54,189,52],[211,55,189,53],[212,12,190,10],[213,12,191,10],[213,16,191,14],[213,23,191,21,"screenConfig"],[213,35,191,33],[213,36,191,34,"path"],[213,40,191,38],[213,45,191,43],[213,53,191,51],[213,55,191,53],[214,14,192,12,"screenConfig"],[214,26,192,24],[214,27,192,25,"path"],[214,31,192,29],[214,34,192,32,"screenConfig"],[214,46,192,44],[214,47,192,45,"path"],[214,51,192,49],[214,52,192,50,"replace"],[214,59,192,57],[214,60,192,58],[214,65,192,63],[214,67,192,65],[214,69,192,67],[214,70,192,68],[214,71,192,69],[215,14,192,69],[215,15,193,13,"replace"],[215,22,193,20],[215,23,193,21],[215,28,193,26],[215,30,193,28],[215,32,193,30],[215,33,193,31],[215,34,193,32],[215,35,193,33],[216,12,194,10],[217,10,195,8],[218,10,196,8],[218,14,196,12,"screens"],[218,21,196,19],[219,10,197,8],[219,16,197,14,"skipInitialDetectionInChild"],[219,43,197,41],[219,46,197,44,"skipInitialDetection"],[219,66,197,64],[219,70,197,68,"screenConfig"],[219,82,197,80],[219,83,197,81,"path"],[219,87,197,85],[219,91,197,89],[219,95,197,93],[219,99,197,97,"screenConfig"],[219,111,197,109],[219,112,197,110,"path"],[219,116,197,114],[219,121,197,119],[219,123,197,121],[220,10,198,8],[220,14,198,12],[220,22,198,20],[220,26,198,24,"item"],[220,30,198,28],[220,32,198,30],[221,12,199,10,"screens"],[221,19,199,17],[221,22,199,20,"createPathConfigForTree"],[221,45,199,43],[221,46,199,44,"item"],[221,50,199,48],[221,52,199,50,"undefined"],[221,61,199,59],[221,63,199,61,"skipInitialDetectionInChild"],[221,90,199,88],[221,91,199,89],[222,10,200,8],[222,11,200,9],[222,17,200,15],[222,21,200,19],[222,29,200,27],[222,33,200,31,"item"],[222,37,200,35],[222,41,200,39],[222,49,200,47],[222,53,200,51,"item"],[222,57,200,55],[222,58,200,56,"screen"],[222,64,200,62],[222,69,200,67,"item"],[222,73,200,71],[222,74,200,72,"screen"],[222,80,200,78],[222,81,200,79,"config"],[222,87,200,85],[222,88,200,86,"screens"],[222,95,200,93],[222,99,200,97,"item"],[222,103,200,101],[222,104,200,102,"screen"],[222,110,200,108],[222,111,200,109,"config"],[222,117,200,115],[222,118,200,116,"groups"],[222,124,200,122],[222,125,200,123],[222,127,200,125],[223,12,201,10,"screens"],[223,19,201,17],[223,22,201,20,"createPathConfigForTree"],[223,45,201,43],[223,46,201,44,"item"],[223,50,201,48],[223,51,201,49,"screen"],[223,57,201,55],[223,59,201,57,"undefined"],[223,68,201,66],[223,70,201,68,"skipInitialDetectionInChild"],[223,97,201,95],[223,98,201,96],[224,10,202,8],[225,10,203,8],[225,14,203,12,"screens"],[225,21,203,19],[225,23,203,21],[226,12,204,10,"screenConfig"],[226,24,204,22],[226,25,204,23,"screens"],[226,32,204,30],[226,35,204,33,"screens"],[226,42,204,40],[227,10,205,8],[228,10,206,8],[228,14,206,12,"auto"],[228,18,206,16],[228,22,206,20],[228,23,206,21,"screenConfig"],[228,35,206,33],[228,36,206,34,"screens"],[228,43,206,41],[229,10,207,8],[230,10,208,8],[230,12,208,10],[230,21,208,19],[230,25,208,23,"item"],[230,29,208,27],[230,33,208,31,"item"],[230,37,208,35],[230,38,208,36,"linking"],[230,45,208,43],[230,49,208,47],[230,53,208,51],[230,54,208,52],[230,56,208,54],[231,12,209,10],[231,16,209,14,"screenConfig"],[231,28,209,26],[231,29,209,27,"path"],[231,33,209,31],[231,37,209,35],[231,41,209,39],[231,43,209,41],[232,14,210,12],[232,18,210,16],[232,19,210,17,"skipInitialDetection"],[232,39,210,37],[232,43,210,41,"screenConfig"],[232,55,210,53],[232,56,210,54,"path"],[232,60,210,58],[232,65,210,63],[232,67,210,65],[232,69,210,67],[233,16,211,14],[234,16,212,14],[235,16,213,14,"initialScreenConfig"],[235,35,213,33],[235,38,213,36,"undefined"],[235,47,213,45],[236,14,214,12],[237,12,215,10],[237,13,215,11],[237,19,215,17],[238,14,216,12],[238,18,216,16],[238,19,216,17,"skipInitialDetection"],[238,39,216,37],[238,43,216,41,"initialScreenConfig"],[238,62,216,60],[238,66,216,64],[238,70,216,68],[238,72,216,70],[239,16,217,14,"initialScreenConfig"],[239,35,217,33],[239,38,217,36,"screenConfig"],[239,50,217,48],[240,14,218,12],[241,14,219,12,"screenConfig"],[241,26,219,24],[241,27,219,25,"path"],[241,31,219,29],[241,34,219,32,"key"],[241,37,219,35],[241,38,219,36,"replace"],[241,45,219,43],[241,46,219,44],[241,57,219,55],[241,59,219,57],[241,64,219,62],[241,65,219,63],[241,66,219,64,"replace"],[241,73,219,71],[241,74,219,72],[241,78,219,76],[241,80,219,78],[241,82,219,80],[241,83,219,81],[241,84,219,82,"toLowerCase"],[241,95,219,93],[241,96,219,94],[241,97,219,95],[242,12,220,10],[243,10,221,8],[244,10,222,8],[244,17,222,15],[244,18,222,16,"key"],[244,21,222,19],[244,23,222,21,"screenConfig"],[244,35,222,33],[244,36,222,34],[245,8,223,6],[245,9,223,7],[245,10,223,8],[245,11,223,9,"filter"],[245,17,223,15],[245,18,223,16],[245,19,223,17],[245,22,223,20,"screen"],[245,28,223,26],[245,29,223,27],[245,34,223,32,"Object"],[245,40,223,38],[245,41,223,39,"keys"],[245,45,223,43],[245,46,223,44,"screen"],[245,52,223,50],[245,53,223,51],[245,54,223,52,"length"],[245,60,223,58],[245,63,223,61],[245,64,223,62],[245,65,223,63],[245,66,223,64],[246,6,224,4],[246,7,224,5],[247,6,225,4],[247,12,225,10,"screens"],[247,19,225,17],[247,22,225,20],[247,23,225,21],[247,24,225,22],[249,6,227,4],[250,6,228,4],[251,6,229,4],[251,11,229,9],[251,17,229,15,"key"],[251,20,229,18],[251,24,229,22,"t"],[251,25,229,23],[251,26,229,24,"config"],[251,32,229,30],[251,34,229,32],[252,8,230,6],[252,12,230,10,"key"],[252,15,230,13],[252,20,230,18],[252,29,230,27],[252,33,230,31,"t"],[252,34,230,32],[252,35,230,33,"config"],[252,41,230,39],[252,42,230,40,"screens"],[252,49,230,47],[252,51,230,49],[253,10,231,8,"Object"],[253,16,231,14],[253,17,231,15,"assign"],[253,23,231,21],[253,24,231,22,"screens"],[253,31,231,29],[253,33,231,31,"createPathConfigForScreens"],[253,59,231,57],[253,60,231,58,"t"],[253,61,231,59],[253,62,231,60,"config"],[253,68,231,66],[253,69,231,67,"screens"],[253,76,231,74],[253,78,231,76,"o"],[253,79,231,77],[253,81,231,79,"initialRouteName"],[253,97,231,95],[253,101,231,99,"t"],[253,102,231,100],[253,103,231,101,"config"],[253,109,231,107],[253,110,231,108,"initialRouteName"],[253,126,231,124],[253,127,231,125],[253,128,231,126],[254,8,232,6],[255,8,233,6],[255,12,233,10,"key"],[255,15,233,13],[255,20,233,18],[255,28,233,26],[255,32,233,30,"t"],[255,33,233,31],[255,34,233,32,"config"],[255,40,233,38],[255,41,233,39,"groups"],[255,47,233,45],[255,49,233,47],[256,10,234,8,"Object"],[256,16,234,14],[256,17,234,15,"entries"],[256,24,234,22],[256,25,234,23,"t"],[256,26,234,24],[256,27,234,25,"config"],[256,33,234,31],[256,34,234,32,"groups"],[256,40,234,38],[256,41,234,39],[256,42,234,40,"forEach"],[256,49,234,47],[256,50,234,48],[256,51,234,49],[256,54,234,52,"group"],[256,59,234,57],[256,60,234,58],[256,65,234,63],[257,12,235,10,"Object"],[257,18,235,16],[257,19,235,17,"assign"],[257,25,235,23],[257,26,235,24,"screens"],[257,33,235,31],[257,35,235,33,"createPathConfigForScreens"],[257,61,235,59],[257,62,235,60,"group"],[257,67,235,65],[257,68,235,66,"screens"],[257,75,235,73],[257,77,235,75,"o"],[257,78,235,76],[257,80,235,78,"initialRouteName"],[257,96,235,94],[257,100,235,98,"t"],[257,101,235,99],[257,102,235,100,"config"],[257,108,235,106],[257,109,235,107,"initialRouteName"],[257,125,235,123],[257,126,235,124],[257,127,235,125],[258,10,236,8],[258,11,236,9],[258,12,236,10],[259,8,237,6],[260,6,238,4],[261,6,239,4],[261,10,239,8,"Object"],[261,16,239,14],[261,17,239,15,"keys"],[261,21,239,19],[261,22,239,20,"screens"],[261,29,239,27],[261,30,239,28],[261,31,239,29,"length"],[261,37,239,35],[261,42,239,40],[261,43,239,41],[261,45,239,43],[262,8,240,6],[262,15,240,13,"undefined"],[262,24,240,22],[263,6,241,4],[264,6,242,4],[264,13,242,11,"screens"],[264,20,242,18],[265,4,243,2],[265,5,243,3],[266,4,244,2],[266,10,244,8,"screens"],[266,17,244,15],[266,20,244,18,"createPathConfigForTree"],[266,43,244,41],[266,44,244,42,"tree"],[266,48,244,46],[266,50,244,48,"options"],[266,57,244,55],[266,59,244,57],[266,64,244,62],[266,65,244,63],[267,4,245,2],[267,8,245,6,"auto"],[267,12,245,10],[267,16,245,14,"initialScreenConfig"],[267,35,245,33],[267,37,245,35],[268,6,246,4,"initialScreenConfig"],[268,25,246,23],[268,26,246,24,"path"],[268,30,246,28],[268,33,246,31],[268,35,246,33],[269,4,247,2],[270,4,248,2],[270,11,248,9,"screens"],[270,18,248,16],[271,2,249,0],[272,0,249,1],[272,3]],"functionMap":{"names":["<global>","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","_jsx$argument_1.children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;+CC8B;CDQ;4BEE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CFC;OMS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CNG;OUoB;kCCE;uCCC;YCI;ODQ,ME;OFwC,SG,8CH;KDC;gDKU;SLE;GDO;CVM"},"hasCjsExports":false},"type":"js/module"}]}