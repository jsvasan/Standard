{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return assignStyle;\n    }\n  });\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n  function filterUniqueArray(arr) {\n    return arr.filter(function (val, index) {\n      return arr.lastIndexOf(val) === index;\n    });\n  }\n  function assignStyle(base) {\n    for (var i = 0, len = arguments.length <= 1 ? 0 : arguments.length - 1; i < len; ++i) {\n      var style = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];\n      for (var property in style) {\n        var value = style[property];\n        var baseValue = base[property];\n        if (baseValue && value) {\n          if (Array.isArray(baseValue)) {\n            base[property] = filterUniqueArray(baseValue.concat(value));\n            continue;\n          }\n          if (Array.isArray(value)) {\n            base[property] = filterUniqueArray([baseValue].concat(_toConsumableArray(value)));\n            continue;\n          }\n          if (_typeof(value) === 'object') {\n            base[property] = assignStyle({}, baseValue, value);\n            continue;\n          }\n        }\n        base[property] = value;\n      }\n    }\n    return base;\n  }\n});","lineCount":84,"map":[[7,2,21,15,"Object"],[7,8,21,15],[7,9,21,15,"defineProperty"],[7,23,21,15],[7,24,21,15,"exports"],[7,31,21,15],[8,4,21,15,"enumerable"],[8,14,21,15],[9,4,21,15,"get"],[9,7,21,15],[9,18,21,15,"get"],[9,19,21,15],[10,6,21,15],[10,13,21,15,"assignStyle"],[10,24,21,15],[11,4,21,15],[12,2,21,15],[13,2,1,0],[13,11,1,9,"_typeof"],[13,18,1,16,"_typeof"],[13,19,1,17,"obj"],[13,22,1,20],[13,24,1,22],[14,4,1,24],[14,29,1,49],[16,4,1,51],[16,8,1,55],[16,15,1,62,"Symbol"],[16,21,1,68],[16,26,1,73],[16,36,1,83],[16,40,1,87],[16,47,1,94,"Symbol"],[16,53,1,100],[16,54,1,101,"iterator"],[16,62,1,109],[16,67,1,114],[16,75,1,122],[16,77,1,124],[17,6,1,126,"_typeof"],[17,13,1,133],[17,16,1,136],[17,25,1,145,"_typeof"],[17,32,1,152,"_typeof"],[17,33,1,153,"obj"],[17,36,1,156],[17,38,1,158],[18,8,1,160],[18,15,1,167],[18,22,1,174,"obj"],[18,25,1,177],[19,6,1,179],[19,7,1,180],[20,4,1,182],[20,5,1,183],[20,11,1,189],[21,6,1,191,"_typeof"],[21,13,1,198],[21,16,1,201],[21,25,1,210,"_typeof"],[21,32,1,217,"_typeof"],[21,33,1,218,"obj"],[21,36,1,221],[21,38,1,223],[22,8,1,225],[22,15,1,232,"obj"],[22,18,1,235],[22,22,1,239],[22,29,1,246,"Symbol"],[22,35,1,252],[22,40,1,257],[22,50,1,267],[22,54,1,271,"obj"],[22,57,1,274],[22,58,1,275,"constructor"],[22,69,1,286],[22,74,1,291,"Symbol"],[22,80,1,297],[22,84,1,301,"obj"],[22,87,1,304],[22,92,1,309,"Symbol"],[22,98,1,315],[22,99,1,316,"prototype"],[22,108,1,325],[22,111,1,328],[22,119,1,336],[22,122,1,339],[22,129,1,346,"obj"],[22,132,1,349],[23,6,1,351],[23,7,1,352],[24,4,1,354],[25,4,1,356],[25,11,1,363,"_typeof"],[25,18,1,370],[25,19,1,371,"obj"],[25,22,1,374],[25,23,1,375],[26,2,1,377],[27,2,3,0],[27,11,3,9,"_toConsumableArray"],[27,29,3,27,"_toConsumableArray"],[27,30,3,28,"arr"],[27,33,3,31],[27,35,3,33],[28,4,3,35],[28,11,3,42,"_arrayWithoutHoles"],[28,29,3,60],[28,30,3,61,"arr"],[28,33,3,64],[28,34,3,65],[28,38,3,69,"_iterableToArray"],[28,54,3,85],[28,55,3,86,"arr"],[28,58,3,89],[28,59,3,90],[28,63,3,94,"_unsupportedIterableToArray"],[28,90,3,121],[28,91,3,122,"arr"],[28,94,3,125],[28,95,3,126],[28,99,3,130,"_nonIterableSpread"],[28,117,3,148],[28,118,3,149],[28,119,3,150],[29,2,3,152],[30,2,5,0],[30,11,5,9,"_nonIterableSpread"],[30,29,5,27,"_nonIterableSpread"],[30,30,5,27],[30,32,5,30],[31,4,5,32],[31,10,5,38],[31,14,5,42,"TypeError"],[31,23,5,51],[31,24,5,52],[31,158,5,186],[31,159,5,187],[32,2,5,189],[33,2,7,0],[33,11,7,9,"_unsupportedIterableToArray"],[33,38,7,36,"_unsupportedIterableToArray"],[33,39,7,37,"o"],[33,40,7,38],[33,42,7,40,"minLen"],[33,48,7,46],[33,50,7,48],[34,4,7,50],[34,8,7,54],[34,9,7,55,"o"],[34,10,7,56],[34,12,7,58],[35,4,7,66],[35,8,7,70],[35,15,7,77,"o"],[35,16,7,78],[35,21,7,83],[35,29,7,91],[35,31,7,93],[35,38,7,100,"_arrayLikeToArray"],[35,55,7,117],[35,56,7,118,"o"],[35,57,7,119],[35,59,7,121,"minLen"],[35,65,7,127],[35,66,7,128],[36,4,7,130],[36,8,7,134,"n"],[36,9,7,135],[36,12,7,138,"Object"],[36,18,7,144],[36,19,7,145,"prototype"],[36,28,7,154],[36,29,7,155,"toString"],[36,37,7,163],[36,38,7,164,"call"],[36,42,7,168],[36,43,7,169,"o"],[36,44,7,170],[36,45,7,171],[36,46,7,172,"slice"],[36,51,7,177],[36,52,7,178],[36,53,7,179],[36,55,7,181],[36,56,7,182],[36,57,7,183],[36,58,7,184],[37,4,7,186],[37,8,7,190,"n"],[37,9,7,191],[37,14,7,196],[37,22,7,204],[37,26,7,208,"o"],[37,27,7,209],[37,28,7,210,"constructor"],[37,39,7,221],[37,41,7,223,"n"],[37,42,7,224],[37,45,7,227,"o"],[37,46,7,228],[37,47,7,229,"constructor"],[37,58,7,240],[37,59,7,241,"name"],[37,63,7,245],[38,4,7,247],[38,8,7,251,"n"],[38,9,7,252],[38,14,7,257],[38,19,7,262],[38,23,7,266,"n"],[38,24,7,267],[38,29,7,272],[38,34,7,277],[38,36,7,279],[38,43,7,286,"Array"],[38,48,7,291],[38,49,7,292,"from"],[38,53,7,296],[38,54,7,297,"n"],[38,55,7,298],[38,56,7,299],[39,4,7,301],[39,8,7,305,"n"],[39,9,7,306],[39,14,7,311],[39,25,7,322],[39,29,7,326],[39,71,7,368],[39,72,7,369,"test"],[39,76,7,373],[39,77,7,374,"n"],[39,78,7,375],[39,79,7,376],[39,81,7,378],[39,88,7,385,"_arrayLikeToArray"],[39,105,7,402],[39,106,7,403,"o"],[39,107,7,404],[39,109,7,406,"minLen"],[39,115,7,412],[39,116,7,413],[40,2,7,415],[41,2,9,0],[41,11,9,9,"_iterableToArray"],[41,27,9,25,"_iterableToArray"],[41,28,9,26,"iter"],[41,32,9,30],[41,34,9,32],[42,4,9,34],[42,8,9,38],[42,15,9,45,"Symbol"],[42,21,9,51],[42,26,9,56],[42,37,9,67],[42,41,9,71,"Symbol"],[42,47,9,77],[42,48,9,78,"iterator"],[42,56,9,86],[42,60,9,90,"Object"],[42,66,9,96],[42,67,9,97,"iter"],[42,71,9,101],[42,72,9,102],[42,74,9,104],[42,81,9,111,"Array"],[42,86,9,116],[42,87,9,117,"from"],[42,91,9,121],[42,92,9,122,"iter"],[42,96,9,126],[42,97,9,127],[43,2,9,129],[44,2,11,0],[44,11,11,9,"_arrayWithoutHoles"],[44,29,11,27,"_arrayWithoutHoles"],[44,30,11,28,"arr"],[44,33,11,31],[44,35,11,33],[45,4,11,35],[45,8,11,39,"Array"],[45,13,11,44],[45,14,11,45,"isArray"],[45,21,11,52],[45,22,11,53,"arr"],[45,25,11,56],[45,26,11,57],[45,28,11,59],[45,35,11,66,"_arrayLikeToArray"],[45,52,11,83],[45,53,11,84,"arr"],[45,56,11,87],[45,57,11,88],[46,2,11,90],[47,2,13,0],[47,11,13,9,"_arrayLikeToArray"],[47,28,13,26,"_arrayLikeToArray"],[47,29,13,27,"arr"],[47,32,13,30],[47,34,13,32,"len"],[47,37,13,35],[47,39,13,37],[48,4,13,39],[48,8,13,43,"len"],[48,11,13,46],[48,15,13,50],[48,19,13,54],[48,23,13,58,"len"],[48,26,13,61],[48,29,13,64,"arr"],[48,32,13,67],[48,33,13,68,"length"],[48,39,13,74],[48,41,13,76,"len"],[48,44,13,79],[48,47,13,82,"arr"],[48,50,13,85],[48,51,13,86,"length"],[48,57,13,92],[49,4,13,94],[49,9,13,99],[49,13,13,103,"i"],[49,14,13,104],[49,17,13,107],[49,18,13,108],[49,20,13,110,"arr2"],[49,24,13,114],[49,27,13,117],[49,31,13,121,"Array"],[49,36,13,126],[49,37,13,127,"len"],[49,40,13,130],[49,41,13,131],[49,43,13,133,"i"],[49,44,13,134],[49,47,13,137,"len"],[49,50,13,140],[49,52,13,142,"i"],[49,53,13,143],[49,55,13,145],[49,57,13,147],[50,6,13,149,"arr2"],[50,10,13,153],[50,11,13,154,"i"],[50,12,13,155],[50,13,13,156],[50,16,13,159,"arr"],[50,19,13,162],[50,20,13,163,"i"],[50,21,13,164],[50,22,13,165],[51,4,13,167],[52,4,13,169],[52,11,13,176,"arr2"],[52,15,13,180],[53,2,13,182],[54,2,15,0],[54,11,15,9,"filterUniqueArray"],[54,28,15,26,"filterUniqueArray"],[54,29,15,27,"arr"],[54,32,15,30],[54,34,15,32],[55,4,16,2],[55,11,16,9,"arr"],[55,14,16,12],[55,15,16,13,"filter"],[55,21,16,19],[55,22,16,20],[55,32,16,30,"val"],[55,35,16,33],[55,37,16,35,"index"],[55,42,16,40],[55,44,16,42],[56,6,17,4],[56,13,17,11,"arr"],[56,16,17,14],[56,17,17,15,"lastIndexOf"],[56,28,17,26],[56,29,17,27,"val"],[56,32,17,30],[56,33,17,31],[56,38,17,36,"index"],[56,43,17,41],[57,4,18,2],[57,5,18,3],[57,6,18,4],[58,2,19,0],[59,2,21,15],[59,11,21,24,"assignStyle"],[59,22,21,35,"assignStyle"],[59,23,21,36,"base"],[59,27,21,40],[59,29,21,42],[60,4,22,2],[60,9,22,7],[60,13,22,11,"i"],[60,14,22,12],[60,17,22,15],[60,18,22,16],[60,20,22,18,"len"],[60,23,22,21],[60,26,22,24,"arguments"],[60,35,22,33],[60,36,22,34,"length"],[60,42,22,40],[60,46,22,44],[60,47,22,45],[60,50,22,48],[60,51,22,49],[60,54,22,52,"arguments"],[60,63,22,61],[60,64,22,62,"length"],[60,70,22,68],[60,73,22,71],[60,74,22,72],[60,76,22,74,"i"],[60,77,22,75],[60,80,22,78,"len"],[60,83,22,81],[60,85,22,83],[60,87,22,85,"i"],[60,88,22,86],[60,90,22,88],[61,6,23,4],[61,10,23,8,"style"],[61,15,23,13],[61,18,23,16,"i"],[61,19,23,17],[61,22,23,20],[61,23,23,21],[61,26,23,24],[61,27,23,25],[61,31,23,29,"arguments"],[61,40,23,38],[61,41,23,39,"length"],[61,47,23,45],[61,51,23,49,"i"],[61,52,23,50],[61,55,23,53],[61,56,23,54],[61,59,23,57,"undefined"],[61,68,23,66],[61,71,23,69,"arguments"],[61,80,23,78],[61,81,23,79,"i"],[61,82,23,80],[61,85,23,83],[61,86,23,84],[61,87,23,85],[62,6,25,4],[62,11,25,9],[62,15,25,13,"property"],[62,23,25,21],[62,27,25,25,"style"],[62,32,25,30],[62,34,25,32],[63,8,26,6],[63,12,26,10,"value"],[63,17,26,15],[63,20,26,18,"style"],[63,25,26,23],[63,26,26,24,"property"],[63,34,26,32],[63,35,26,33],[64,8,27,6],[64,12,27,10,"baseValue"],[64,21,27,19],[64,24,27,22,"base"],[64,28,27,26],[64,29,27,27,"property"],[64,37,27,35],[64,38,27,36],[65,8,29,6],[65,12,29,10,"baseValue"],[65,21,29,19],[65,25,29,23,"value"],[65,30,29,28],[65,32,29,30],[66,10,30,8],[66,14,30,12,"Array"],[66,19,30,17],[66,20,30,18,"isArray"],[66,27,30,25],[66,28,30,26,"baseValue"],[66,37,30,35],[66,38,30,36],[66,40,30,38],[67,12,31,10,"base"],[67,16,31,14],[67,17,31,15,"property"],[67,25,31,23],[67,26,31,24],[67,29,31,27,"filterUniqueArray"],[67,46,31,44],[67,47,31,45,"baseValue"],[67,56,31,54],[67,57,31,55,"concat"],[67,63,31,61],[67,64,31,62,"value"],[67,69,31,67],[67,70,31,68],[67,71,31,69],[68,12,32,10],[69,10,33,8],[70,10,35,8],[70,14,35,12,"Array"],[70,19,35,17],[70,20,35,18,"isArray"],[70,27,35,25],[70,28,35,26,"value"],[70,33,35,31],[70,34,35,32],[70,36,35,34],[71,12,36,10,"base"],[71,16,36,14],[71,17,36,15,"property"],[71,25,36,23],[71,26,36,24],[71,29,36,27,"filterUniqueArray"],[71,46,36,44],[71,47,36,45],[71,48,36,46,"baseValue"],[71,57,36,55],[71,58,36,56],[71,59,36,57,"concat"],[71,65,36,63],[71,66,36,64,"_toConsumableArray"],[71,84,36,82],[71,85,36,83,"value"],[71,90,36,88],[71,91,36,89],[71,92,36,90],[71,93,36,91],[72,12,37,10],[73,10,38,8],[74,10,40,8],[74,14,40,12,"_typeof"],[74,21,40,19],[74,22,40,20,"value"],[74,27,40,25],[74,28,40,26],[74,33,40,31],[74,41,40,39],[74,43,40,41],[75,12,41,10,"base"],[75,16,41,14],[75,17,41,15,"property"],[75,25,41,23],[75,26,41,24],[75,29,41,27,"assignStyle"],[75,40,41,38],[75,41,41,39],[75,42,41,40],[75,43,41,41],[75,45,41,43,"baseValue"],[75,54,41,52],[75,56,41,54,"value"],[75,61,41,59],[75,62,41,60],[76,12,42,10],[77,10,43,8],[78,8,44,6],[79,8,46,6,"base"],[79,12,46,10],[79,13,46,11,"property"],[79,21,46,19],[79,22,46,20],[79,25,46,23,"value"],[79,30,46,28],[80,6,47,4],[81,4,48,2],[82,4,50,2],[82,11,50,9,"base"],[82,15,50,13],[83,2,51,0],[84,0,51,1],[84,3]],"functionMap":{"names":["_typeof","<global>","_toConsumableArray","_nonIterableSpread","_unsupportedIterableToArray","_iterableToArray","_arrayWithoutHoles","_arrayLikeToArray","filterUniqueArray","arr.filter$argument_0","assignStyle"],"mappings":"AAA,0XC;ACE,yJD;AEE,8LF;AGE,gaH;AIE,kIJ;AKE,2FL;AME,uLN;AOE;oBCC;GDE;CPC;eSE"},"hasCjsExports":false},"type":"js/module"}]}