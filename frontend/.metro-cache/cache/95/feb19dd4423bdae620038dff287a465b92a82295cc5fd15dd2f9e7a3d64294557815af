{"dependencies":[{"name":"react-native-web/dist/exports/BackHandler","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"JJ8ZeP6TwsodxtZCeal/l/p3LP0=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"isSearchBarAvailableForCurrentPlatform\", {\n    enumerable: true,\n    get: function () {\n      return isSearchBarAvailableForCurrentPlatform;\n    }\n  });\n  exports.executeNativeBackPress = executeNativeBackPress;\n  Object.defineProperty(exports, \"compatibilityFlags\", {\n    enumerable: true,\n    get: function () {\n      return compatibilityFlags;\n    }\n  });\n  var _reactNativeWebDistExportsBackHandler = require(_dependencyMap[0], \"react-native-web/dist/exports/BackHandler\");\n  var BackHandler = _interopDefault(_reactNativeWebDistExportsBackHandler);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  const isSearchBarAvailableForCurrentPlatform = ['ios', 'android'].includes(Platform.default.OS);\n  function executeNativeBackPress() {\n    // This function invokes the native back press event\n    BackHandler.default.exitApp();\n    return true;\n  }\n\n  /**\n   * Exposes information useful for downstream navigation library implementers,\n   * so they can keep reasonable backward compatibility, if desired.\n   *\n   * We don't mean for this object to only grow in number of fields, however at the same time\n   * we won't be very hasty to reduce it. Expect gradual changes.\n   */\n  const compatibilityFlags = {\n    /**\n     * Because of a bug introduced in https://github.com/software-mansion/react-native-screens/pull/1646\n     * react-native-screens v3.21 changed how header's backTitle handles whitespace strings in https://github.com/software-mansion/react-native-screens/pull/1726\n     * To allow for backwards compatibility in @react-navigation/native-stack we need a way to check if this version or newer is used.\n     * See https://github.com/react-navigation/react-navigation/pull/11423 for more context.\n     */\n    isNewBackTitleImplementation: true,\n    /**\n     * With version 4.0.0 the header implementation has been changed. To allow for backward compat\n     * with native-stack@v6 we want to expose a way to check whether the new implementation\n     * is in use or not.\n     *\n     * See:\n     * * https://github.com/software-mansion/react-native-screens/pull/2325\n     * * https://github.com/react-navigation/react-navigation/pull/12125\n     */\n    usesHeaderFlexboxImplementation: true\n  };\n});","lineCount":62,"map":[[12,2,2,0,"Object"],[12,8,2,0],[12,9,2,0,"defineProperty"],[12,23,2,0],[12,24,2,0,"exports"],[12,31,2,0],[13,4,2,0,"enumerable"],[13,14,2,0],[14,4,2,0,"get"],[14,7,2,0],[14,18,2,0,"get"],[14,19,2,0],[15,6,2,0],[15,13,2,0,"isSearchBarAvailableForCurrentPlatform"],[15,51,2,0],[16,4,2,0],[17,2,2,0],[18,2,3,0,"exports"],[18,9,3,0],[18,10,3,0,"executeNativeBackPress"],[18,32,3,0],[18,35,3,0,"executeNativeBackPress"],[18,57,3,0],[19,2,16,0,"Object"],[19,8,16,0],[19,9,16,0,"defineProperty"],[19,23,16,0],[19,24,16,0,"exports"],[19,31,16,0],[20,4,16,0,"enumerable"],[20,14,16,0],[21,4,16,0,"get"],[21,7,16,0],[21,18,16,0,"get"],[21,19,16,0],[22,6,16,0],[22,13,16,0,"compatibilityFlags"],[22,31,16,0],[23,4,16,0],[24,2,16,0],[25,2,34,2],[25,6,34,2,"_reactNativeWebDistExportsBackHandler"],[25,43,34,2],[25,46,34,2,"require"],[25,53,34,2],[25,54,34,2,"_dependencyMap"],[25,68,34,2],[26,2,34,2],[26,6,34,2,"BackHandler"],[26,17,34,2],[26,20,34,2,"_interopDefault"],[26,35,34,2],[26,36,34,2,"_reactNativeWebDistExportsBackHandler"],[26,73,34,2],[27,2,34,2],[27,6,34,2,"_reactNativeWebDistExportsPlatform"],[27,40,34,2],[27,43,34,2,"require"],[27,50,34,2],[27,51,34,2,"_dependencyMap"],[27,65,34,2],[28,2,34,2],[28,6,34,2,"Platform"],[28,14,34,2],[28,17,34,2,"_interopDefault"],[28,32,34,2],[28,33,34,2,"_reactNativeWebDistExportsPlatform"],[28,67,34,2],[29,2,2,7],[29,8,2,13,"isSearchBarAvailableForCurrentPlatform"],[29,46,2,51],[29,49,2,54],[29,50,2,55],[29,55,2,60],[29,57,2,62],[29,66,2,71],[29,67,2,72],[29,68,2,73,"includes"],[29,76,2,81],[29,77,2,82,"Platform"],[29,85,2,90],[29,86,2,90,"default"],[29,93,2,90],[29,94,2,91,"OS"],[29,96,2,93],[29,97,2,94],[30,2,3,7],[30,11,3,16,"executeNativeBackPress"],[30,33,3,38,"executeNativeBackPress"],[30,34,3,38],[30,36,3,41],[31,4,4,2],[32,4,5,2,"BackHandler"],[32,15,5,13],[32,16,5,13,"default"],[32,23,5,13],[32,24,5,14,"exitApp"],[32,31,5,21],[32,32,5,22],[32,33,5,23],[33,4,6,2],[33,11,6,9],[33,15,6,13],[34,2,7,0],[36,2,9,0],[37,0,10,0],[38,0,11,0],[39,0,12,0],[40,0,13,0],[41,0,14,0],[42,0,15,0],[43,2,16,7],[43,8,16,13,"compatibilityFlags"],[43,26,16,31],[43,29,16,34],[44,4,17,2],[45,0,18,0],[46,0,19,0],[47,0,20,0],[48,0,21,0],[49,0,22,0],[50,4,23,2,"isNewBackTitleImplementation"],[50,32,23,30],[50,34,23,32],[50,38,23,36],[51,4,24,2],[52,0,25,0],[53,0,26,0],[54,0,27,0],[55,0,28,0],[56,0,29,0],[57,0,30,0],[58,0,31,0],[59,0,32,0],[60,4,33,2,"usesHeaderFlexboxImplementation"],[60,35,33,33],[60,37,33,35],[61,2,34,0],[61,3,34,1],[62,0,34,2],[62,3]],"functionMap":{"names":["<global>","executeNativeBackPress"],"mappings":"AAA;OCE;CDI"},"hasCjsExports":false},"type":"js/module"}]}