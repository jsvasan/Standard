{"dependencies":[{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":61,"index":286}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.LogBoxLog = void 0;\n  var LogBoxSymbolication = _interopRequireWildcard(require(_dependencyMap[0], \"./LogBoxSymbolication\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  function componentStackToStack(componentStack) {\n    return componentStack.map(stack => ({\n      file: stack.fileName,\n      methodName: stack.content,\n      lineNumber: stack.location?.row ?? 0,\n      column: stack.location?.column ?? 0,\n      arguments: []\n    }));\n  }\n  class LogBoxLog {\n    symbolicated = {\n      stack: {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      },\n      component: {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      }\n    };\n    callbacks = new Map();\n    constructor(data) {\n      this.level = data.level;\n      this.type = data.type ?? 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = data.symbolicated ?? this.symbolicated;\n    }\n    incrementCount() {\n      this.count += 1;\n    }\n    getAvailableStack(type) {\n      if (this.symbolicated[type].status === 'COMPLETE') {\n        return this.symbolicated[type].stack;\n      }\n      return this.getStack(type);\n    }\n    flushCallbacks(type) {\n      const callbacks = this.callbacks.get(type);\n      const status = this.symbolicated[type].status;\n      if (callbacks) {\n        for (const callback of callbacks) {\n          callback(status);\n        }\n        callbacks.clear();\n      }\n    }\n    pushCallback(type, callback) {\n      let callbacks = this.callbacks.get(type);\n      if (!callbacks) {\n        callbacks = new Set();\n        this.callbacks.set(type, callbacks);\n      }\n      callbacks.add(callback);\n    }\n    retrySymbolicate(type, callback) {\n      this._symbolicate(type, true, callback);\n    }\n    symbolicate(type, callback) {\n      this._symbolicate(type, false, callback);\n    }\n    _symbolicate(type, retry, callback) {\n      if (callback) {\n        this.pushCallback(type, callback);\n      }\n      const status = this.symbolicated[type].status;\n      if (status === 'COMPLETE') {\n        return this.flushCallbacks(type);\n      }\n      if (retry) {\n        LogBoxSymbolication.deleteStack(this.getStack(type));\n        this.handleSymbolicate(type);\n      } else {\n        if (status === 'NONE') {\n          this.handleSymbolicate(type);\n        }\n      }\n    }\n    componentStackCache = null;\n    getStack(type) {\n      if (type === 'component') {\n        if (this.componentStackCache == null) {\n          this.componentStackCache = componentStackToStack(this.componentStack);\n        }\n        return this.componentStackCache;\n      }\n      return this.stack;\n    }\n    handleSymbolicate(type) {\n      if (type === 'component' && !this.componentStack?.length) {\n        return;\n      }\n      if (this.symbolicated[type].status !== 'PENDING') {\n        this.updateStatus(type, null, null, null);\n        LogBoxSymbolication.symbolicate(ensureStackFilesHaveParams(this.getStack(type))).then(data => {\n          this.updateStatus(type, null, data?.stack, data?.codeFrame);\n        }, error => {\n          this.updateStatus(type, error, null, null);\n        });\n      }\n    }\n    updateStatus(type, error, stack, codeFrame) {\n      const lastStatus = this.symbolicated[type].status;\n      if (error != null) {\n        this.symbolicated[type] = {\n          error,\n          stack: null,\n          status: 'FAILED'\n        };\n      } else if (stack != null) {\n        if (codeFrame) {\n          this.codeFrame = codeFrame;\n        }\n        this.symbolicated[type] = {\n          error: null,\n          stack,\n          status: 'COMPLETE'\n        };\n      } else {\n        this.symbolicated[type] = {\n          error: null,\n          stack: null,\n          status: 'PENDING'\n        };\n      }\n      const status = this.symbolicated[type].status;\n      if (lastStatus !== status) {\n        if (['COMPLETE', 'FAILED'].includes(status)) {\n          this.flushCallbacks(type);\n        }\n      }\n    }\n  }\n\n  // Sometime the web stacks don't have correct query params, this can lead to Metro errors when it attempts to resolve without a platform.\n  // This will attempt to reconcile the issue by adding the current query params to the stack frames if they exist, or fallback to some common defaults.\n  exports.LogBoxLog = LogBoxLog;\n  function ensureStackFilesHaveParams(stack) {\n    const currentSrc = typeof document !== 'undefined' && document.currentScript ? 'src' in document.currentScript && document.currentScript.src || null : null;\n    const currentParams = currentSrc ? new URLSearchParams(currentSrc) : new URLSearchParams({\n      platform: 'web',\n      dev: String(__DEV__)\n    });\n    return stack.map(frame => {\n      if (!frame.file?.startsWith('http') ||\n      // Account for Metro malformed URLs\n      frame.file.includes('&platform=')) return frame;\n      const url = new URL(frame.file);\n      if (url.searchParams.has('platform')) {\n        return frame;\n      }\n      currentParams.forEach((value, key) => {\n        if (url.searchParams.has(key)) return;\n        url.searchParams.set(key, value);\n      });\n      return {\n        ...frame,\n        file: url.toString()\n      };\n    });\n  }\n});","lineCount":184,"map":[[6,2,9,0],[6,6,9,0,"LogBoxSymbolication"],[6,25,9,0],[6,28,9,0,"_interopRequireWildcard"],[6,51,9,0],[6,52,9,0,"require"],[6,59,9,0],[6,60,9,0,"_dependencyMap"],[6,74,9,0],[7,2,9,61],[7,11,9,61,"_interopRequireWildcard"],[7,35,9,61,"e"],[7,36,9,61],[7,38,9,61,"t"],[7,39,9,61],[7,68,9,61,"WeakMap"],[7,75,9,61],[7,81,9,61,"r"],[7,82,9,61],[7,89,9,61,"WeakMap"],[7,96,9,61],[7,100,9,61,"n"],[7,101,9,61],[7,108,9,61,"WeakMap"],[7,115,9,61],[7,127,9,61,"_interopRequireWildcard"],[7,150,9,61],[7,162,9,61,"_interopRequireWildcard"],[7,163,9,61,"e"],[7,164,9,61],[7,166,9,61,"t"],[7,167,9,61],[7,176,9,61,"t"],[7,177,9,61],[7,181,9,61,"e"],[7,182,9,61],[7,186,9,61,"e"],[7,187,9,61],[7,188,9,61,"__esModule"],[7,198,9,61],[7,207,9,61,"e"],[7,208,9,61],[7,214,9,61,"o"],[7,215,9,61],[7,217,9,61,"i"],[7,218,9,61],[7,220,9,61,"f"],[7,221,9,61],[7,226,9,61,"__proto__"],[7,235,9,61],[7,243,9,61,"default"],[7,250,9,61],[7,252,9,61,"e"],[7,253,9,61],[7,270,9,61,"e"],[7,271,9,61],[7,294,9,61,"e"],[7,295,9,61],[7,320,9,61,"e"],[7,321,9,61],[7,330,9,61,"f"],[7,331,9,61],[7,337,9,61,"o"],[7,338,9,61],[7,341,9,61,"t"],[7,342,9,61],[7,345,9,61,"n"],[7,346,9,61],[7,349,9,61,"r"],[7,350,9,61],[7,358,9,61,"o"],[7,359,9,61],[7,360,9,61,"has"],[7,363,9,61],[7,364,9,61,"e"],[7,365,9,61],[7,375,9,61,"o"],[7,376,9,61],[7,377,9,61,"get"],[7,380,9,61],[7,381,9,61,"e"],[7,382,9,61],[7,385,9,61,"o"],[7,386,9,61],[7,387,9,61,"set"],[7,390,9,61],[7,391,9,61,"e"],[7,392,9,61],[7,394,9,61,"f"],[7,395,9,61],[7,411,9,61,"t"],[7,412,9,61],[7,416,9,61,"e"],[7,417,9,61],[7,433,9,61,"t"],[7,434,9,61],[7,441,9,61,"hasOwnProperty"],[7,455,9,61],[7,456,9,61,"call"],[7,460,9,61],[7,461,9,61,"e"],[7,462,9,61],[7,464,9,61,"t"],[7,465,9,61],[7,472,9,61,"i"],[7,473,9,61],[7,477,9,61,"o"],[7,478,9,61],[7,481,9,61,"Object"],[7,487,9,61],[7,488,9,61,"defineProperty"],[7,502,9,61],[7,507,9,61,"Object"],[7,513,9,61],[7,514,9,61,"getOwnPropertyDescriptor"],[7,538,9,61],[7,539,9,61,"e"],[7,540,9,61],[7,542,9,61,"t"],[7,543,9,61],[7,550,9,61,"i"],[7,551,9,61],[7,552,9,61,"get"],[7,555,9,61],[7,559,9,61,"i"],[7,560,9,61],[7,561,9,61,"set"],[7,564,9,61],[7,568,9,61,"o"],[7,569,9,61],[7,570,9,61,"f"],[7,571,9,61],[7,573,9,61,"t"],[7,574,9,61],[7,576,9,61,"i"],[7,577,9,61],[7,581,9,61,"f"],[7,582,9,61],[7,583,9,61,"t"],[7,584,9,61],[7,588,9,61,"e"],[7,589,9,61],[7,590,9,61,"t"],[7,591,9,61],[7,602,9,61,"f"],[7,603,9,61],[7,608,9,61,"e"],[7,609,9,61],[7,611,9,61,"t"],[7,612,9,61],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[16,2,30,0],[16,11,30,9,"componentStackToStack"],[16,32,30,30,"componentStackToStack"],[16,33,30,31,"componentStack"],[16,47,30,61],[16,49,30,70],[17,4,31,2],[17,11,31,9,"componentStack"],[17,25,31,23],[17,26,31,24,"map"],[17,29,31,27],[17,30,31,29,"stack"],[17,35,31,34],[17,40,31,40],[18,6,32,4,"file"],[18,10,32,8],[18,12,32,10,"stack"],[18,17,32,15],[18,18,32,16,"fileName"],[18,26,32,24],[19,6,33,4,"methodName"],[19,16,33,14],[19,18,33,16,"stack"],[19,23,33,21],[19,24,33,22,"content"],[19,31,33,29],[20,6,34,4,"lineNumber"],[20,16,34,14],[20,18,34,16,"stack"],[20,23,34,21],[20,24,34,22,"location"],[20,32,34,30],[20,34,34,32,"row"],[20,37,34,35],[20,41,34,39],[20,42,34,40],[21,6,35,4,"column"],[21,12,35,10],[21,14,35,12,"stack"],[21,19,35,17],[21,20,35,18,"location"],[21,28,35,26],[21,30,35,28,"column"],[21,36,35,34],[21,40,35,38],[21,41,35,39],[22,6,36,4,"arguments"],[22,15,36,13],[22,17,36,15],[23,4,37,2],[23,5,37,3],[23,6,37,4],[23,7,37,5],[24,2,38,0],[25,2,48,7],[25,8,48,13,"LogBoxLog"],[25,17,48,22],[25,18,48,23],[26,4,58,2,"symbolicated"],[26,16,58,14],[26,19,58,57],[27,6,59,4,"stack"],[27,11,59,9],[27,13,59,11],[28,8,60,6,"error"],[28,13,60,11],[28,15,60,13],[28,19,60,17],[29,8,61,6,"stack"],[29,13,61,11],[29,15,61,13],[29,19,61,17],[30,8,62,6,"status"],[30,14,62,12],[30,16,62,14],[31,6,63,4],[31,7,63,5],[32,6,64,4,"component"],[32,15,64,13],[32,17,64,15],[33,8,65,6,"error"],[33,13,65,11],[33,15,65,13],[33,19,65,17],[34,8,66,6,"stack"],[34,13,66,11],[34,15,66,13],[34,19,66,17],[35,8,67,6,"status"],[35,14,67,12],[35,16,67,14],[36,6,68,4],[37,4,69,2],[37,5,69,3],[38,4,71,10,"callbacks"],[38,13,71,19],[38,16,71,66],[38,20,71,70,"Map"],[38,23,71,73],[38,24,71,74],[38,25,71,75],[39,4,73,2,"constructor"],[39,15,73,13,"constructor"],[39,16,74,4,"data"],[39,20,76,5],[39,22,77,4],[40,6,78,4],[40,10,78,8],[40,11,78,9,"level"],[40,16,78,14],[40,19,78,17,"data"],[40,23,78,21],[40,24,78,22,"level"],[40,29,78,27],[41,6,79,4],[41,10,79,8],[41,11,79,9,"type"],[41,15,79,13],[41,18,79,16,"data"],[41,22,79,20],[41,23,79,21,"type"],[41,27,79,25],[41,31,79,29],[41,38,79,36],[42,6,80,4],[42,10,80,8],[42,11,80,9,"message"],[42,18,80,16],[42,21,80,19,"data"],[42,25,80,23],[42,26,80,24,"message"],[42,33,80,31],[43,6,81,4],[43,10,81,8],[43,11,81,9,"stack"],[43,16,81,14],[43,19,81,17,"data"],[43,23,81,21],[43,24,81,22,"stack"],[43,29,81,27],[44,6,82,4],[44,10,82,8],[44,11,82,9,"category"],[44,19,82,17],[44,22,82,20,"data"],[44,26,82,24],[44,27,82,25,"category"],[44,35,82,33],[45,6,83,4],[45,10,83,8],[45,11,83,9,"componentStack"],[45,25,83,23],[45,28,83,26,"data"],[45,32,83,30],[45,33,83,31,"componentStack"],[45,47,83,45],[46,6,84,4],[46,10,84,8],[46,11,84,9,"codeFrame"],[46,20,84,18],[46,23,84,21,"data"],[46,27,84,25],[46,28,84,26,"codeFrame"],[46,37,84,35],[47,6,85,4],[47,10,85,8],[47,11,85,9,"isComponentError"],[47,27,85,25],[47,30,85,28,"data"],[47,34,85,32],[47,35,85,33,"isComponentError"],[47,51,85,49],[48,6,86,4],[48,10,86,8],[48,11,86,9,"count"],[48,16,86,14],[48,19,86,17],[48,20,86,18],[49,6,87,4],[49,10,87,8],[49,11,87,9,"symbolicated"],[49,23,87,21],[49,26,87,24,"data"],[49,30,87,28],[49,31,87,29,"symbolicated"],[49,43,87,41],[49,47,87,45],[49,51,87,49],[49,52,87,50,"symbolicated"],[49,64,87,62],[50,4,88,2],[51,4,90,2,"incrementCount"],[51,18,90,16,"incrementCount"],[51,19,90,16],[51,21,90,25],[52,6,91,4],[52,10,91,8],[52,11,91,9,"count"],[52,16,91,14],[52,20,91,18],[52,21,91,19],[53,4,92,2],[54,4,94,2,"getAvailableStack"],[54,21,94,19,"getAvailableStack"],[54,22,94,20,"type"],[54,26,94,35],[54,28,94,51],[55,6,95,4],[55,10,95,8],[55,14,95,12],[55,15,95,13,"symbolicated"],[55,27,95,25],[55,28,95,26,"type"],[55,32,95,30],[55,33,95,31],[55,34,95,32,"status"],[55,40,95,38],[55,45,95,43],[55,55,95,53],[55,57,95,55],[56,8,96,6],[56,15,96,13],[56,19,96,17],[56,20,96,18,"symbolicated"],[56,32,96,30],[56,33,96,31,"type"],[56,37,96,35],[56,38,96,36],[56,39,96,37,"stack"],[56,44,96,42],[57,6,97,4],[58,6,98,4],[58,13,98,11],[58,17,98,15],[58,18,98,16,"getStack"],[58,26,98,24],[58,27,98,25,"type"],[58,31,98,29],[58,32,98,30],[59,4,99,2],[60,4,101,10,"flushCallbacks"],[60,18,101,24,"flushCallbacks"],[60,19,101,25,"type"],[60,23,101,40],[60,25,101,48],[61,6,102,4],[61,12,102,10,"callbacks"],[61,21,102,19],[61,24,102,22],[61,28,102,26],[61,29,102,27,"callbacks"],[61,38,102,36],[61,39,102,37,"get"],[61,42,102,40],[61,43,102,41,"type"],[61,47,102,45],[61,48,102,46],[62,6,103,4],[62,12,103,10,"status"],[62,18,103,16],[62,21,103,19],[62,25,103,23],[62,26,103,24,"symbolicated"],[62,38,103,36],[62,39,103,37,"type"],[62,43,103,41],[62,44,103,42],[62,45,103,43,"status"],[62,51,103,49],[63,6,104,4],[63,10,104,8,"callbacks"],[63,19,104,17],[63,21,104,19],[64,8,105,6],[64,13,105,11],[64,19,105,17,"callback"],[64,27,105,25],[64,31,105,29,"callbacks"],[64,40,105,38],[64,42,105,40],[65,10,106,8,"callback"],[65,18,106,16],[65,19,106,17,"status"],[65,25,106,23],[65,26,106,24],[66,8,107,6],[67,8,108,6,"callbacks"],[67,17,108,15],[67,18,108,16,"clear"],[67,23,108,21],[67,24,108,22],[67,25,108,23],[68,6,109,4],[69,4,110,2],[70,4,112,10,"pushCallback"],[70,16,112,22,"pushCallback"],[70,17,112,23,"type"],[70,21,112,38],[70,23,112,40,"callback"],[70,31,112,71],[70,33,112,79],[71,6,113,4],[71,10,113,8,"callbacks"],[71,19,113,17],[71,22,113,20],[71,26,113,24],[71,27,113,25,"callbacks"],[71,36,113,34],[71,37,113,35,"get"],[71,40,113,38],[71,41,113,39,"type"],[71,45,113,43],[71,46,113,44],[72,6,114,4],[72,10,114,8],[72,11,114,9,"callbacks"],[72,20,114,18],[72,22,114,20],[73,8,115,6,"callbacks"],[73,17,115,15],[73,20,115,18],[73,24,115,22,"Set"],[73,27,115,25],[73,28,115,26],[73,29,115,27],[74,8,116,6],[74,12,116,10],[74,13,116,11,"callbacks"],[74,22,116,20],[74,23,116,21,"set"],[74,26,116,24],[74,27,116,25,"type"],[74,31,116,29],[74,33,116,31,"callbacks"],[74,42,116,40],[74,43,116,41],[75,6,117,4],[76,6,118,4,"callbacks"],[76,15,118,13],[76,16,118,14,"add"],[76,19,118,17],[76,20,118,18,"callback"],[76,28,118,26],[76,29,118,27],[77,4,119,2],[78,4,121,2,"retrySymbolicate"],[78,20,121,18,"retrySymbolicate"],[78,21,121,19,"type"],[78,25,121,34],[78,27,121,36,"callback"],[78,35,121,84],[78,37,121,92],[79,6,122,4],[79,10,122,8],[79,11,122,9,"_symbolicate"],[79,23,122,21],[79,24,122,22,"type"],[79,28,122,26],[79,30,122,28],[79,34,122,32],[79,36,122,34,"callback"],[79,44,122,42],[79,45,122,43],[80,4,123,2],[81,4,125,2,"symbolicate"],[81,15,125,13,"symbolicate"],[81,16,125,14,"type"],[81,20,125,29],[81,22,125,31,"callback"],[81,30,125,79],[81,32,125,87],[82,6,126,4],[82,10,126,8],[82,11,126,9,"_symbolicate"],[82,23,126,21],[82,24,126,22,"type"],[82,28,126,26],[82,30,126,28],[82,35,126,33],[82,37,126,35,"callback"],[82,45,126,43],[82,46,126,44],[83,4,127,2],[84,4,129,10,"_symbolicate"],[84,16,129,22,"_symbolicate"],[84,17,130,4,"type"],[84,21,130,19],[84,23,131,4,"retry"],[84,28,131,18],[84,30,132,4,"callback"],[84,38,132,52],[84,40,133,10],[85,6,134,4],[85,10,134,8,"callback"],[85,18,134,16],[85,20,134,18],[86,8,135,6],[86,12,135,10],[86,13,135,11,"pushCallback"],[86,25,135,23],[86,26,135,24,"type"],[86,30,135,28],[86,32,135,30,"callback"],[86,40,135,38],[86,41,135,39],[87,6,136,4],[88,6,137,4],[88,12,137,10,"status"],[88,18,137,16],[88,21,137,19],[88,25,137,23],[88,26,137,24,"symbolicated"],[88,38,137,36],[88,39,137,37,"type"],[88,43,137,41],[88,44,137,42],[88,45,137,43,"status"],[88,51,137,49],[89,6,139,4],[89,10,139,8,"status"],[89,16,139,14],[89,21,139,19],[89,31,139,29],[89,33,139,31],[90,8,140,6],[90,15,140,13],[90,19,140,17],[90,20,140,18,"flushCallbacks"],[90,34,140,32],[90,35,140,33,"type"],[90,39,140,37],[90,40,140,38],[91,6,141,4],[92,6,143,4],[92,10,143,8,"retry"],[92,15,143,13],[92,17,143,15],[93,8,144,6,"LogBoxSymbolication"],[93,27,144,25],[93,28,144,26,"deleteStack"],[93,39,144,37],[93,40,144,38],[93,44,144,42],[93,45,144,43,"getStack"],[93,53,144,51],[93,54,144,52,"type"],[93,58,144,56],[93,59,144,57],[93,60,144,58],[94,8,145,6],[94,12,145,10],[94,13,145,11,"handleSymbolicate"],[94,30,145,28],[94,31,145,29,"type"],[94,35,145,33],[94,36,145,34],[95,6,146,4],[95,7,146,5],[95,13,146,11],[96,8,147,6],[96,12,147,10,"status"],[96,18,147,16],[96,23,147,21],[96,29,147,27],[96,31,147,29],[97,10,148,8],[97,14,148,12],[97,15,148,13,"handleSymbolicate"],[97,32,148,30],[97,33,148,31,"type"],[97,37,148,35],[97,38,148,36],[98,8,149,6],[99,6,150,4],[100,4,151,2],[101,4,153,10,"componentStackCache"],[101,23,153,29],[101,26,153,46],[101,30,153,50],[102,4,155,10,"getStack"],[102,12,155,18,"getStack"],[102,13,155,19,"type"],[102,17,155,34],[102,19,155,43],[103,6,156,4],[103,10,156,8,"type"],[103,14,156,12],[103,19,156,17],[103,30,156,28],[103,32,156,30],[104,8,157,6],[104,12,157,10],[104,16,157,14],[104,17,157,15,"componentStackCache"],[104,36,157,34],[104,40,157,38],[104,44,157,42],[104,46,157,44],[105,10,158,8],[105,14,158,12],[105,15,158,13,"componentStackCache"],[105,34,158,32],[105,37,158,35,"componentStackToStack"],[105,58,158,56],[105,59,158,57],[105,63,158,61],[105,64,158,62,"componentStack"],[105,78,158,76],[105,79,158,77],[106,8,159,6],[107,8,160,6],[107,15,160,13],[107,19,160,17],[107,20,160,18,"componentStackCache"],[107,39,160,37],[108,6,161,4],[109,6,162,4],[109,13,162,11],[109,17,162,15],[109,18,162,16,"stack"],[109,23,162,21],[110,4,163,2],[111,4,165,10,"handleSymbolicate"],[111,21,165,27,"handleSymbolicate"],[111,22,165,28,"type"],[111,26,165,43],[111,28,165,51],[112,6,166,4],[112,10,166,8,"type"],[112,14,166,12],[112,19,166,17],[112,30,166,28],[112,34,166,32],[112,35,166,33],[112,39,166,37],[112,40,166,38,"componentStack"],[112,54,166,52],[112,56,166,54,"length"],[112,62,166,60],[112,64,166,62],[113,8,167,6],[114,6,168,4],[115,6,170,4],[115,10,170,8],[115,14,170,12],[115,15,170,13,"symbolicated"],[115,27,170,25],[115,28,170,26,"type"],[115,32,170,30],[115,33,170,31],[115,34,170,32,"status"],[115,40,170,38],[115,45,170,43],[115,54,170,52],[115,56,170,54],[116,8,171,6],[116,12,171,10],[116,13,171,11,"updateStatus"],[116,25,171,23],[116,26,171,24,"type"],[116,30,171,28],[116,32,171,30],[116,36,171,34],[116,38,171,36],[116,42,171,40],[116,44,171,42],[116,48,171,46],[116,49,171,47],[117,8,172,6,"LogBoxSymbolication"],[117,27,172,25],[117,28,172,26,"symbolicate"],[117,39,172,37],[117,40,172,38,"ensureStackFilesHaveParams"],[117,66,172,64],[117,67,172,65],[117,71,172,69],[117,72,172,70,"getStack"],[117,80,172,78],[117,81,172,79,"type"],[117,85,172,83],[117,86,172,84],[117,87,172,85],[117,88,172,86],[117,89,172,87,"then"],[117,93,172,91],[117,94,173,9,"data"],[117,98,173,13],[117,102,173,18],[118,10,174,10],[118,14,174,14],[118,15,174,15,"updateStatus"],[118,27,174,27],[118,28,174,28,"type"],[118,32,174,32],[118,34,174,34],[118,38,174,38],[118,40,174,40,"data"],[118,44,174,44],[118,46,174,46,"stack"],[118,51,174,51],[118,53,174,53,"data"],[118,57,174,57],[118,59,174,59,"codeFrame"],[118,68,174,68],[118,69,174,69],[119,8,175,8],[119,9,175,9],[119,11,176,9,"error"],[119,16,176,14],[119,20,176,19],[120,10,177,10],[120,14,177,14],[120,15,177,15,"updateStatus"],[120,27,177,27],[120,28,177,28,"type"],[120,32,177,32],[120,34,177,34,"error"],[120,39,177,39],[120,41,177,41],[120,45,177,45],[120,47,177,47],[120,51,177,51],[120,52,177,52],[121,8,178,8],[121,9,179,6],[121,10,179,7],[122,6,180,4],[123,4,181,2],[124,4,183,10,"updateStatus"],[124,16,183,22,"updateStatus"],[124,17,184,4,"type"],[124,21,184,19],[124,23,185,4,"error"],[124,28,185,24],[124,30,186,4,"stack"],[124,35,186,24],[124,37,187,4,"codeFrame"],[124,46,187,32],[124,48,188,10],[125,6,189,4],[125,12,189,10,"lastStatus"],[125,22,189,20],[125,25,189,23],[125,29,189,27],[125,30,189,28,"symbolicated"],[125,42,189,40],[125,43,189,41,"type"],[125,47,189,45],[125,48,189,46],[125,49,189,47,"status"],[125,55,189,53],[126,6,190,4],[126,10,190,8,"error"],[126,15,190,13],[126,19,190,17],[126,23,190,21],[126,25,190,23],[127,8,191,6],[127,12,191,10],[127,13,191,11,"symbolicated"],[127,25,191,23],[127,26,191,24,"type"],[127,30,191,28],[127,31,191,29],[127,34,191,32],[128,10,192,8,"error"],[128,15,192,13],[129,10,193,8,"stack"],[129,15,193,13],[129,17,193,15],[129,21,193,19],[130,10,194,8,"status"],[130,16,194,14],[130,18,194,16],[131,8,195,6],[131,9,195,7],[132,6,196,4],[132,7,196,5],[132,13,196,11],[132,17,196,15,"stack"],[132,22,196,20],[132,26,196,24],[132,30,196,28],[132,32,196,30],[133,8,197,6],[133,12,197,10,"codeFrame"],[133,21,197,19],[133,23,197,21],[134,10,198,8],[134,14,198,12],[134,15,198,13,"codeFrame"],[134,24,198,22],[134,27,198,25,"codeFrame"],[134,36,198,34],[135,8,199,6],[136,8,201,6],[136,12,201,10],[136,13,201,11,"symbolicated"],[136,25,201,23],[136,26,201,24,"type"],[136,30,201,28],[136,31,201,29],[136,34,201,32],[137,10,202,8,"error"],[137,15,202,13],[137,17,202,15],[137,21,202,19],[138,10,203,8,"stack"],[138,15,203,13],[139,10,204,8,"status"],[139,16,204,14],[139,18,204,16],[140,8,205,6],[140,9,205,7],[141,6,206,4],[141,7,206,5],[141,13,206,11],[142,8,207,6],[142,12,207,10],[142,13,207,11,"symbolicated"],[142,25,207,23],[142,26,207,24,"type"],[142,30,207,28],[142,31,207,29],[142,34,207,32],[143,10,208,8,"error"],[143,15,208,13],[143,17,208,15],[143,21,208,19],[144,10,209,8,"stack"],[144,15,209,13],[144,17,209,15],[144,21,209,19],[145,10,210,8,"status"],[145,16,210,14],[145,18,210,16],[146,8,211,6],[146,9,211,7],[147,6,212,4],[148,6,214,4],[148,12,214,10,"status"],[148,18,214,16],[148,21,214,19],[148,25,214,23],[148,26,214,24,"symbolicated"],[148,38,214,36],[148,39,214,37,"type"],[148,43,214,41],[148,44,214,42],[148,45,214,43,"status"],[148,51,214,49],[149,6,215,4],[149,10,215,8,"lastStatus"],[149,20,215,18],[149,25,215,23,"status"],[149,31,215,29],[149,33,215,31],[150,8,216,6],[150,12,216,10],[150,13,216,11],[150,23,216,21],[150,25,216,23],[150,33,216,31],[150,34,216,32],[150,35,216,33,"includes"],[150,43,216,41],[150,44,216,42,"status"],[150,50,216,48],[150,51,216,49],[150,53,216,51],[151,10,217,8],[151,14,217,12],[151,15,217,13,"flushCallbacks"],[151,29,217,27],[151,30,217,28,"type"],[151,34,217,32],[151,35,217,33],[152,8,218,6],[153,6,219,4],[154,4,220,2],[155,2,221,0],[157,2,223,0],[158,2,224,0],[159,2,224,0,"exports"],[159,9,224,0],[159,10,224,0,"LogBoxLog"],[159,19,224,0],[159,22,224,0,"LogBoxLog"],[159,31,224,0],[160,2,225,0],[160,11,225,9,"ensureStackFilesHaveParams"],[160,37,225,35,"ensureStackFilesHaveParams"],[160,38,225,36,"stack"],[160,43,225,48],[160,45,225,57],[161,4,226,2],[161,10,226,8,"currentSrc"],[161,20,226,18],[161,23,227,4],[161,30,227,11,"document"],[161,38,227,19],[161,43,227,24],[161,54,227,35],[161,58,227,39,"document"],[161,66,227,47],[161,67,227,48,"currentScript"],[161,80,227,61],[161,83,228,9],[161,88,228,14],[161,92,228,18,"document"],[161,100,228,26],[161,101,228,27,"currentScript"],[161,114,228,40],[161,118,228,44,"document"],[161,126,228,52],[161,127,228,53,"currentScript"],[161,140,228,66],[161,141,228,67,"src"],[161,144,228,70],[161,148,228,75],[161,152,228,79],[161,155,229,8],[161,159,229,12],[162,4,231,2],[162,10,231,8,"currentParams"],[162,23,231,21],[162,26,231,24,"currentSrc"],[162,36,231,34],[162,39,232,6],[162,43,232,10,"URLSearchParams"],[162,58,232,25],[162,59,232,26,"currentSrc"],[162,69,232,36],[162,70,232,37],[162,73,233,6],[162,77,233,10,"URLSearchParams"],[162,92,233,25],[162,93,233,26],[163,6,234,8,"platform"],[163,14,234,16],[163,16,234,18],[163,21,234,23],[164,6,235,8,"dev"],[164,9,235,11],[164,11,235,13,"String"],[164,17,235,19],[164,18,235,20,"__DEV__"],[164,25,235,27],[165,4,236,6],[165,5,236,7],[165,6,236,8],[166,4,238,2],[166,11,238,9,"stack"],[166,16,238,14],[166,17,238,15,"map"],[166,20,238,18],[166,21,238,20,"frame"],[166,26,238,25],[166,30,238,30],[167,6,239,4],[167,10,240,6],[167,11,240,7,"frame"],[167,16,240,12],[167,17,240,13,"file"],[167,21,240,17],[167,23,240,19,"startsWith"],[167,33,240,29],[167,34,240,30],[167,40,240,36],[167,41,240,37],[168,6,241,6],[169,6,242,6,"frame"],[169,11,242,11],[169,12,242,12,"file"],[169,16,242,16],[169,17,242,17,"includes"],[169,25,242,25],[169,26,242,26],[169,38,242,38],[169,39,242,39],[169,41,244,6],[169,48,244,13,"frame"],[169,53,244,18],[170,6,246,4],[170,12,246,10,"url"],[170,15,246,13],[170,18,246,16],[170,22,246,20,"URL"],[170,25,246,23],[170,26,246,24,"frame"],[170,31,246,29],[170,32,246,30,"file"],[170,36,246,34],[170,37,246,35],[171,6,247,4],[171,10,247,8,"url"],[171,13,247,11],[171,14,247,12,"searchParams"],[171,26,247,24],[171,27,247,25,"has"],[171,30,247,28],[171,31,247,29],[171,41,247,39],[171,42,247,40],[171,44,247,42],[172,8,248,6],[172,15,248,13,"frame"],[172,20,248,18],[173,6,249,4],[174,6,251,4,"currentParams"],[174,19,251,17],[174,20,251,18,"forEach"],[174,27,251,25],[174,28,251,26],[174,29,251,27,"value"],[174,34,251,32],[174,36,251,34,"key"],[174,39,251,37],[174,44,251,42],[175,8,252,6],[175,12,252,10,"url"],[175,15,252,13],[175,16,252,14,"searchParams"],[175,28,252,26],[175,29,252,27,"has"],[175,32,252,30],[175,33,252,31,"key"],[175,36,252,34],[175,37,252,35],[175,39,252,37],[176,8,253,6,"url"],[176,11,253,9],[176,12,253,10,"searchParams"],[176,24,253,22],[176,25,253,23,"set"],[176,28,253,26],[176,29,253,27,"key"],[176,32,253,30],[176,34,253,32,"value"],[176,39,253,37],[176,40,253,38],[177,6,254,4],[177,7,254,5],[177,8,254,6],[178,6,256,4],[178,13,256,11],[179,8,256,13],[179,11,256,16,"frame"],[179,16,256,21],[180,8,256,23,"file"],[180,12,256,27],[180,14,256,29,"url"],[180,17,256,32],[180,18,256,33,"toString"],[180,26,256,41],[180,27,256,42],[181,6,256,44],[181,7,256,45],[182,4,257,2],[182,5,257,3],[182,6,257,4],[183,2,258,0],[184,0,258,1],[184,3]],"functionMap":{"names":["<global>","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","ensureStackFilesHaveParams","stack.map$argument_0","currentParams.forEach$argument_0"],"mappings":"AAA;AC6B;4BCC;IDM;CDC;OGU;ECyB;GDe;EEE;GFE;EGE;GHK;EIE;GJS;EKE;GLO;EME;GNE;EOE;GPE;EQE;GRsB;ESI;GTQ;EUE;QCQ;SDE;QEC;SFE;GVG;EaE;GbqC;CHC;AiBI;mBCa;0BCa;KDG;GDG;CjBC"}},"type":"js/module"}]}