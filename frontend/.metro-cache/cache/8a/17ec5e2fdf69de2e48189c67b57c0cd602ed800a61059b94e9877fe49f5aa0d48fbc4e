{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":210},"end":{"line":11,"column":36,"index":246}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useMergeRefs;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  /**\n   * Constructs a new ref that forwards new values to each of the given refs. The\n   * given refs will always be invoked in the order that they are supplied.\n   *\n   * WARNING: A known problem of merging refs using this approach is that if any\n   * of the given refs change, the returned callback ref will also be changed. If\n   * the returned callback ref is supplied as a `ref` to a React element, this may\n   * lead to problems with the given refs being invoked more times than desired.\n   */\n  function useMergeRefs() {\n    for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n      refs[_key] = arguments[_key];\n    }\n    return (0, _react.useCallback)(current => {\n      for (var _i = 0, _refs = refs; _i < _refs.length; _i++) {\n        var ref = _refs[_i];\n        if (ref != null) {\n          if (typeof ref === 'function') {\n            ref(current);\n          } else {\n            ref.current = current;\n          }\n        }\n      }\n    }, [...refs] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n  }\n});","lineCount":51,"map":[[7,2,21,15,"Object"],[7,8,21,15],[7,9,21,15,"defineProperty"],[7,23,21,15],[7,24,21,15,"exports"],[7,31,21,15],[8,4,21,15,"enumerable"],[8,14,21,15],[9,4,21,15,"get"],[9,7,21,15],[9,18,21,15,"get"],[9,19,21,15],[10,6,21,15],[10,13,21,15,"useMergeRefs"],[10,25,21,15],[11,4,21,15],[12,2,21,15],[13,2,11,0],[13,6,11,0,"_react"],[13,12,11,0],[13,15,11,0,"require"],[13,22,11,0],[13,23,11,0,"_dependencyMap"],[13,37,11,0],[14,2,1,0],[15,0,2,0],[16,0,3,0],[17,0,4,0],[18,0,5,0],[19,0,6,0],[20,0,7,0],[21,0,8,0],[22,0,9,0],[24,2,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,0,19,0],[32,0,20,0],[33,2,21,15],[33,11,21,24,"useMergeRefs"],[33,23,21,36,"useMergeRefs"],[33,24,21,36],[33,26,21,39],[34,4,22,2],[34,9,22,7],[34,13,22,11,"_len"],[34,17,22,15],[34,20,22,18,"arguments"],[34,29,22,27],[34,30,22,28,"length"],[34,36,22,34],[34,38,22,36,"refs"],[34,42,22,40],[34,45,22,43],[34,49,22,47,"Array"],[34,54,22,52],[34,55,22,53,"_len"],[34,59,22,57],[34,60,22,58],[34,62,22,60,"_key"],[34,66,22,64],[34,69,22,67],[34,70,22,68],[34,72,22,70,"_key"],[34,76,22,74],[34,79,22,77,"_len"],[34,83,22,81],[34,85,22,83,"_key"],[34,89,22,87],[34,91,22,89],[34,93,22,91],[35,6,23,4,"refs"],[35,10,23,8],[35,11,23,9,"_key"],[35,15,23,13],[35,16,23,14],[35,19,23,17,"arguments"],[35,28,23,26],[35,29,23,27,"_key"],[35,33,23,31],[35,34,23,32],[36,4,24,2],[37,4,25,2],[37,11,25,9],[37,15,25,9,"useCallback"],[37,21,25,20],[37,22,25,20,"useCallback"],[37,33,25,20],[37,35,25,21,"current"],[37,42,25,28],[37,46,25,32],[38,6,26,4],[38,11,26,9],[38,15,26,13,"_i"],[38,17,26,15],[38,20,26,18],[38,21,26,19],[38,23,26,21,"_refs"],[38,28,26,26],[38,31,26,29,"refs"],[38,35,26,33],[38,37,26,35,"_i"],[38,39,26,37],[38,42,26,40,"_refs"],[38,47,26,45],[38,48,26,46,"length"],[38,54,26,52],[38,56,26,54,"_i"],[38,58,26,56],[38,60,26,58],[38,62,26,60],[39,8,27,6],[39,12,27,10,"ref"],[39,15,27,13],[39,18,27,16,"_refs"],[39,23,27,21],[39,24,27,22,"_i"],[39,26,27,24],[39,27,27,25],[40,8,28,6],[40,12,28,10,"ref"],[40,15,28,13],[40,19,28,17],[40,23,28,21],[40,25,28,23],[41,10,29,8],[41,14,29,12],[41,21,29,19,"ref"],[41,24,29,22],[41,29,29,27],[41,39,29,37],[41,41,29,39],[42,12,30,10,"ref"],[42,15,30,13],[42,16,30,14,"current"],[42,23,30,21],[42,24,30,22],[43,10,31,8],[43,11,31,9],[43,17,31,15],[44,12,32,10,"ref"],[44,15,32,13],[44,16,32,14,"current"],[44,23,32,21],[44,26,32,24,"current"],[44,33,32,31],[45,10,33,8],[46,8,34,6],[47,6,35,4],[48,4,36,2],[48,5,36,3],[48,7,36,5],[48,8,36,6],[48,11,36,9,"refs"],[48,15,36,13],[48,16,36,14],[48,17,36,15],[49,4,37,2],[49,5,37,3],[50,2,38,0],[51,0,38,1],[51,3]],"functionMap":{"names":["<global>","useMergeRefs","<anonymous>"],"mappings":"AAA;eCoB;qBCI;GDW"},"hasCjsExports":false},"type":"js/module"}]}