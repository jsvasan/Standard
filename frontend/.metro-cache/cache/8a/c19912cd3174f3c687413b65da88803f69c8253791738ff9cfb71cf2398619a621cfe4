{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./processColor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":21},"end":{"line":16,"column":46}}],"key":"x3M7MCYAfAbRBHXsfUrvU5X7AMk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = processBackgroundImage;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var processColor = require(_dependencyMap[2], \"./processColor\").default;\n  var DIRECTION_KEYWORD_REGEX = /^to\\s+(?:top|bottom|left|right)(?:\\s+(?:top|bottom|left|right))?/i;\n  var ANGLE_UNIT_REGEX = /^([+-]?\\d*\\.?\\d+)(deg|grad|rad|turn)$/i;\n  var DEFAULT_DIRECTION = {\n    type: 'angle',\n    value: 180\n  };\n  function processBackgroundImage(backgroundImage) {\n    var result = [];\n    if (backgroundImage == null) {\n      return result;\n    }\n    if (typeof backgroundImage === 'string') {\n      result = parseCSSLinearGradient(backgroundImage.replace(/\\n/g, ' '));\n    } else if (Array.isArray(backgroundImage)) {\n      for (var bgImage of backgroundImage) {\n        var processedColorStops = [];\n        for (var index = 0; index < bgImage.colorStops.length; index++) {\n          var colorStop = bgImage.colorStops[index];\n          var positions = colorStop.positions;\n          if (colorStop.color == null && Array.isArray(positions) && positions.length === 1) {\n            var position = positions[0];\n            if (typeof position === 'number' || typeof position === 'string' && position.endsWith('%')) {\n              processedColorStops.push({\n                color: null,\n                position\n              });\n            } else {\n              return [];\n            }\n          } else {\n            var processedColor = processColor(colorStop.color);\n            if (processedColor == null) {\n              return [];\n            }\n            if (positions != null && positions.length > 0) {\n              for (var _position of positions) {\n                if (typeof _position === 'number' || typeof _position === 'string' && _position.endsWith('%')) {\n                  processedColorStops.push({\n                    color: processedColor,\n                    position: _position\n                  });\n                } else {\n                  return [];\n                }\n              }\n            } else {\n              processedColorStops.push({\n                color: processedColor,\n                position: null\n              });\n            }\n          }\n        }\n        var direction = DEFAULT_DIRECTION;\n        var bgDirection = bgImage.direction != null ? bgImage.direction.toLowerCase() : null;\n        if (bgDirection != null) {\n          if (ANGLE_UNIT_REGEX.test(bgDirection)) {\n            var parsedAngle = getAngleInDegrees(bgDirection);\n            if (parsedAngle != null) {\n              direction = {\n                type: 'angle',\n                value: parsedAngle\n              };\n            } else {\n              return [];\n            }\n          } else if (DIRECTION_KEYWORD_REGEX.test(bgDirection)) {\n            var parsedDirection = getDirectionForKeyword(bgDirection);\n            if (parsedDirection != null) {\n              direction = parsedDirection;\n            } else {\n              return [];\n            }\n          } else {\n            return [];\n          }\n        }\n        result = result.concat({\n          type: 'linearGradient',\n          direction,\n          colorStops: processedColorStops\n        });\n      }\n    }\n    return result;\n  }\n  function parseCSSLinearGradient(cssString) {\n    var gradients = [];\n    var match;\n    var linearGradientRegex = /linear-gradient\\s*\\(((?:\\([^)]*\\)|[^())])*)\\)/gi;\n    while (match = linearGradientRegex.exec(cssString)) {\n      var gradientContent = match[1];\n      var parts = gradientContent.split(',');\n      var direction = DEFAULT_DIRECTION;\n      var trimmedDirection = parts[0].trim().toLowerCase();\n      if (ANGLE_UNIT_REGEX.test(trimmedDirection)) {\n        var parsedAngle = getAngleInDegrees(trimmedDirection);\n        if (parsedAngle != null) {\n          direction = {\n            type: 'angle',\n            value: parsedAngle\n          };\n          parts.shift();\n        } else {\n          return [];\n        }\n      } else if (DIRECTION_KEYWORD_REGEX.test(trimmedDirection)) {\n        var parsedDirection = getDirectionForKeyword(trimmedDirection);\n        if (parsedDirection != null) {\n          direction = parsedDirection;\n          parts.shift();\n        } else {\n          return [];\n        }\n      }\n      var colorStopsString = parts.join(',');\n      var colorStops = [];\n      var stops = colorStopsString.split(/,(?![^(]*\\))/);\n      var prevStop = null;\n      for (var i = 0; i < stops.length; i++) {\n        var stop = stops[i];\n        var trimmedStop = stop.trim().toLowerCase();\n        var colorStopParts = trimmedStop.match(/\\S+\\([^)]*\\)|\\S+/g);\n        if (colorStopParts == null) {\n          return [];\n        }\n        if (colorStopParts.length === 3) {\n          var color = colorStopParts[0];\n          var position1 = getPositionFromCSSValue(colorStopParts[1]);\n          var position2 = getPositionFromCSSValue(colorStopParts[2]);\n          var processedColor = processColor(color);\n          if (processedColor == null) {\n            return [];\n          }\n          if (position1 == null || position2 == null) {\n            return [];\n          }\n          colorStops.push({\n            color: processedColor,\n            position: position1\n          });\n          colorStops.push({\n            color: processedColor,\n            position: position2\n          });\n        } else if (colorStopParts.length === 2) {\n          var _color = colorStopParts[0];\n          var position = getPositionFromCSSValue(colorStopParts[1]);\n          var _processedColor = processColor(_color);\n          if (_processedColor == null) {\n            return [];\n          }\n          if (position == null) {\n            return [];\n          }\n          colorStops.push({\n            color: _processedColor,\n            position\n          });\n        } else if (colorStopParts.length === 1) {\n          var _position2 = getPositionFromCSSValue(colorStopParts[0]);\n          if (_position2 != null) {\n            if (prevStop != null && prevStop.length === 1 && getPositionFromCSSValue(prevStop[0]) != null || i === stops.length - 1 || i === 0) {\n              return [];\n            }\n            colorStops.push({\n              color: null,\n              position: _position2\n            });\n          } else {\n            var _processedColor2 = processColor(colorStopParts[0]);\n            if (_processedColor2 == null) {\n              return [];\n            }\n            colorStops.push({\n              color: _processedColor2,\n              position: null\n            });\n          }\n        } else {\n          return [];\n        }\n        prevStop = colorStopParts;\n      }\n      gradients.push({\n        type: 'linearGradient',\n        direction,\n        colorStops\n      });\n    }\n    return gradients;\n  }\n  function getDirectionForKeyword(direction) {\n    if (direction == null) {\n      return null;\n    }\n    var normalized = direction.replace(/\\s+/g, ' ').toLowerCase();\n    switch (normalized) {\n      case 'to top':\n        return {\n          type: 'angle',\n          value: 0\n        };\n      case 'to right':\n        return {\n          type: 'angle',\n          value: 90\n        };\n      case 'to bottom':\n        return {\n          type: 'angle',\n          value: 180\n        };\n      case 'to left':\n        return {\n          type: 'angle',\n          value: 270\n        };\n      case 'to top right':\n      case 'to right top':\n        return {\n          type: 'keyword',\n          value: 'to top right'\n        };\n      case 'to bottom right':\n      case 'to right bottom':\n        return {\n          type: 'keyword',\n          value: 'to bottom right'\n        };\n      case 'to top left':\n      case 'to left top':\n        return {\n          type: 'keyword',\n          value: 'to top left'\n        };\n      case 'to bottom left':\n      case 'to left bottom':\n        return {\n          type: 'keyword',\n          value: 'to bottom left'\n        };\n      default:\n        return null;\n    }\n  }\n  function getAngleInDegrees(angle) {\n    if (angle == null) {\n      return null;\n    }\n    var match = angle.match(ANGLE_UNIT_REGEX);\n    if (!match) {\n      return null;\n    }\n    var _match = (0, _slicedToArray2.default)(match, 3),\n      value = _match[1],\n      unit = _match[2];\n    var numericValue = parseFloat(value);\n    switch (unit) {\n      case 'deg':\n        return numericValue;\n      case 'grad':\n        return numericValue * 0.9;\n      case 'rad':\n        return numericValue * 180 / Math.PI;\n      case 'turn':\n        return numericValue * 360;\n      default:\n        return null;\n    }\n  }\n  function getPositionFromCSSValue(position) {\n    if (position.endsWith('px')) {\n      return parseFloat(position);\n    }\n    if (position.endsWith('%')) {\n      return position;\n    }\n  }\n});","lineCount":290,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_interopRequireDefault"],[4,28,11,13],[4,31,11,13,"require"],[4,38,11,13],[4,39,11,13,"_dependencyMap"],[4,53,11,13],[5,2,11,13,"Object"],[5,8,11,13],[5,9,11,13,"defineProperty"],[5,23,11,13],[5,24,11,13,"exports"],[5,31,11,13],[6,4,11,13,"value"],[6,9,11,13],[7,2,11,13],[8,2,11,13,"exports"],[8,9,11,13],[8,10,11,13,"default"],[8,17,11,13],[8,20,11,13,"processBackgroundImage"],[8,42,11,13],[9,2,11,13],[9,6,11,13,"_slicedToArray2"],[9,21,11,13],[9,24,11,13,"_interopRequireDefault"],[9,46,11,13],[9,47,11,13,"require"],[9,54,11,13],[9,55,11,13,"_dependencyMap"],[9,69,11,13],[10,2,16,0],[10,6,16,6,"processColor"],[10,18,16,18],[10,21,16,21,"require"],[10,28,16,28],[10,29,16,28,"_dependencyMap"],[10,43,16,28],[10,64,16,45],[10,65,16,46],[10,66,16,47,"default"],[10,73,16,54],[11,2,17,0],[11,6,17,6,"DIRECTION_KEYWORD_REGEX"],[11,29,17,29],[11,32,18,2],[11,99,18,69],[12,2,19,0],[12,6,19,6,"ANGLE_UNIT_REGEX"],[12,22,19,22],[12,25,19,25],[12,65,19,65],[13,2,39,0],[13,6,39,6,"DEFAULT_DIRECTION"],[13,23,39,48],[13,26,39,51],[14,4,40,2,"type"],[14,8,40,6],[14,10,40,8],[14,17,40,15],[15,4,41,2,"value"],[15,9,41,7],[15,11,41,9],[16,2,42,0],[16,3,42,1],[17,2,44,15],[17,11,44,24,"processBackgroundImage"],[17,33,44,46,"processBackgroundImage"],[17,34,45,2,"backgroundImage"],[17,49,45,60],[17,51,46,39],[18,4,47,2],[18,8,47,6,"result"],[18,14,47,49],[18,17,47,52],[18,19,47,54],[19,4,48,2],[19,8,48,6,"backgroundImage"],[19,23,48,21],[19,27,48,25],[19,31,48,29],[19,33,48,31],[20,6,49,4],[20,13,49,11,"result"],[20,19,49,17],[21,4,50,2],[22,4,52,2],[22,8,52,6],[22,15,52,13,"backgroundImage"],[22,30,52,28],[22,35,52,33],[22,43,52,41],[22,45,52,43],[23,6,53,4,"result"],[23,12,53,10],[23,15,53,13,"parseCSSLinearGradient"],[23,37,53,35],[23,38,53,36,"backgroundImage"],[23,53,53,51],[23,54,53,52,"replace"],[23,61,53,59],[23,62,53,60],[23,67,53,65],[23,69,53,67],[23,72,53,70],[23,73,53,71],[23,74,53,72],[24,4,54,2],[24,5,54,3],[24,11,54,9],[24,15,54,13,"Array"],[24,20,54,18],[24,21,54,19,"isArray"],[24,28,54,26],[24,29,54,27,"backgroundImage"],[24,44,54,42],[24,45,54,43],[24,47,54,45],[25,6,55,4],[25,11,55,9],[25,15,55,15,"bgImage"],[25,22,55,22],[25,26,55,26,"backgroundImage"],[25,41,55,41],[25,43,55,43],[26,8,56,6],[26,12,56,12,"processedColorStops"],[26,31,59,8],[26,34,59,11],[26,36,59,13],[27,8,60,6],[27,13,60,11],[27,17,60,15,"index"],[27,22,60,20],[27,25,60,23],[27,26,60,24],[27,28,60,26,"index"],[27,33,60,31],[27,36,60,34,"bgImage"],[27,43,60,41],[27,44,60,42,"colorStops"],[27,54,60,52],[27,55,60,53,"length"],[27,61,60,59],[27,63,60,61,"index"],[27,68,60,66],[27,70,60,68],[27,72,60,70],[28,10,61,8],[28,14,61,14,"colorStop"],[28,23,61,23],[28,26,61,26,"bgImage"],[28,33,61,33],[28,34,61,34,"colorStops"],[28,44,61,44],[28,45,61,45,"index"],[28,50,61,50],[28,51,61,51],[29,10,62,8],[29,14,62,14,"positions"],[29,23,62,23],[29,26,62,26,"colorStop"],[29,35,62,35],[29,36,62,36,"positions"],[29,45,62,45],[30,10,64,8],[30,14,65,10,"colorStop"],[30,23,65,19],[30,24,65,20,"color"],[30,29,65,25],[30,33,65,29],[30,37,65,33],[30,41,66,10,"Array"],[30,46,66,15],[30,47,66,16,"isArray"],[30,54,66,23],[30,55,66,24,"positions"],[30,64,66,33],[30,65,66,34],[30,69,67,10,"positions"],[30,78,67,19],[30,79,67,20,"length"],[30,85,67,26],[30,90,67,31],[30,91,67,32],[30,93,68,10],[31,12,69,10],[31,16,69,16,"position"],[31,24,69,24],[31,27,69,27,"positions"],[31,36,69,36],[31,37,69,37],[31,38,69,38],[31,39,69,39],[32,12,70,10],[32,16,71,12],[32,23,71,19,"position"],[32,31,71,27],[32,36,71,32],[32,44,71,40],[32,48,72,13],[32,55,72,20,"position"],[32,63,72,28],[32,68,72,33],[32,76,72,41],[32,80,72,45,"position"],[32,88,72,53],[32,89,72,54,"endsWith"],[32,97,72,62],[32,98,72,63],[32,101,72,66],[32,102,72,68],[32,104,73,12],[33,14,74,12,"processedColorStops"],[33,33,74,31],[33,34,74,32,"push"],[33,38,74,36],[33,39,74,37],[34,16,75,14,"color"],[34,21,75,19],[34,23,75,21],[34,27,75,25],[35,16,76,14,"position"],[36,14,77,12],[36,15,77,13],[36,16,77,14],[37,12,78,10],[37,13,78,11],[37,19,78,17],[38,14,80,12],[38,21,80,19],[38,23,80,21],[39,12,81,10],[40,10,82,8],[40,11,82,9],[40,17,82,15],[41,12,83,10],[41,16,83,16,"processedColor"],[41,30,83,30],[41,33,83,33,"processColor"],[41,45,83,45],[41,46,83,46,"colorStop"],[41,55,83,55],[41,56,83,56,"color"],[41,61,83,61],[41,62,83,62],[42,12,84,10],[42,16,84,14,"processedColor"],[42,30,84,28],[42,34,84,32],[42,38,84,36],[42,40,84,38],[43,14,86,12],[43,21,86,19],[43,23,86,21],[44,12,87,10],[45,12,88,10],[45,16,88,14,"positions"],[45,25,88,23],[45,29,88,27],[45,33,88,31],[45,37,88,35,"positions"],[45,46,88,44],[45,47,88,45,"length"],[45,53,88,51],[45,56,88,54],[45,57,88,55],[45,59,88,57],[46,14,89,12],[46,19,89,17],[46,23,89,23,"position"],[46,32,89,31],[46,36,89,35,"positions"],[46,45,89,44],[46,47,89,46],[47,16,90,14],[47,20,91,16],[47,27,91,23,"position"],[47,36,91,31],[47,41,91,36],[47,49,91,44],[47,53,92,17],[47,60,92,24,"position"],[47,69,92,32],[47,74,92,37],[47,82,92,45],[47,86,92,49,"position"],[47,95,92,57],[47,96,92,58,"endsWith"],[47,104,92,66],[47,105,92,67],[47,108,92,70],[47,109,92,72],[47,111,93,16],[48,18,94,16,"processedColorStops"],[48,37,94,35],[48,38,94,36,"push"],[48,42,94,40],[48,43,94,41],[49,20,95,18,"color"],[49,25,95,23],[49,27,95,25,"processedColor"],[49,41,95,39],[50,20,96,18,"position"],[50,28,96,26],[50,30,96,18,"position"],[51,18,97,16],[51,19,97,17],[51,20,97,18],[52,16,98,14],[52,17,98,15],[52,23,98,21],[53,18,100,16],[53,25,100,23],[53,27,100,25],[54,16,101,14],[55,14,102,12],[56,12,103,10],[56,13,103,11],[56,19,103,17],[57,14,104,12,"processedColorStops"],[57,33,104,31],[57,34,104,32,"push"],[57,38,104,36],[57,39,104,37],[58,16,105,14,"color"],[58,21,105,19],[58,23,105,21,"processedColor"],[58,37,105,35],[59,16,106,14,"position"],[59,24,106,22],[59,26,106,24],[60,14,107,12],[60,15,107,13],[60,16,107,14],[61,12,108,10],[62,10,109,8],[63,8,110,6],[64,8,112,6],[64,12,112,10,"direction"],[64,21,112,44],[64,24,112,47,"DEFAULT_DIRECTION"],[64,41,112,64],[65,8,113,6],[65,12,113,12,"bgDirection"],[65,23,113,23],[65,26,114,8,"bgImage"],[65,33,114,15],[65,34,114,16,"direction"],[65,43,114,25],[65,47,114,29],[65,51,114,33],[65,54,114,36,"bgImage"],[65,61,114,43],[65,62,114,44,"direction"],[65,71,114,53],[65,72,114,54,"toLowerCase"],[65,83,114,65],[65,84,114,66],[65,85,114,67],[65,88,114,70],[65,92,114,74],[66,8,116,6],[66,12,116,10,"bgDirection"],[66,23,116,21],[66,27,116,25],[66,31,116,29],[66,33,116,31],[67,10,117,8],[67,14,117,12,"ANGLE_UNIT_REGEX"],[67,30,117,28],[67,31,117,29,"test"],[67,35,117,33],[67,36,117,34,"bgDirection"],[67,47,117,45],[67,48,117,46],[67,50,117,48],[68,12,118,10],[68,16,118,16,"parsedAngle"],[68,27,118,27],[68,30,118,30,"getAngleInDegrees"],[68,47,118,47],[68,48,118,48,"bgDirection"],[68,59,118,59],[68,60,118,60],[69,12,119,10],[69,16,119,14,"parsedAngle"],[69,27,119,25],[69,31,119,29],[69,35,119,33],[69,37,119,35],[70,14,120,12,"direction"],[70,23,120,21],[70,26,120,24],[71,16,121,14,"type"],[71,20,121,18],[71,22,121,20],[71,29,121,27],[72,16,122,14,"value"],[72,21,122,19],[72,23,122,21,"parsedAngle"],[73,14,123,12],[73,15,123,13],[74,12,124,10],[74,13,124,11],[74,19,124,17],[75,14,126,12],[75,21,126,19],[75,23,126,21],[76,12,127,10],[77,10,128,8],[77,11,128,9],[77,17,128,15],[77,21,128,19,"DIRECTION_KEYWORD_REGEX"],[77,44,128,42],[77,45,128,43,"test"],[77,49,128,47],[77,50,128,48,"bgDirection"],[77,61,128,59],[77,62,128,60],[77,64,128,62],[78,12,129,10],[78,16,129,16,"parsedDirection"],[78,31,129,31],[78,34,129,34,"getDirectionForKeyword"],[78,56,129,56],[78,57,129,57,"bgDirection"],[78,68,129,68],[78,69,129,69],[79,12,130,10],[79,16,130,14,"parsedDirection"],[79,31,130,29],[79,35,130,33],[79,39,130,37],[79,41,130,39],[80,14,131,12,"direction"],[80,23,131,21],[80,26,131,24,"parsedDirection"],[80,41,131,39],[81,12,132,10],[81,13,132,11],[81,19,132,17],[82,14,134,12],[82,21,134,19],[82,23,134,21],[83,12,135,10],[84,10,136,8],[84,11,136,9],[84,17,136,15],[85,12,138,10],[85,19,138,17],[85,21,138,19],[86,10,139,8],[87,8,140,6],[88,8,142,6,"result"],[88,14,142,12],[88,17,142,15,"result"],[88,23,142,21],[88,24,142,22,"concat"],[88,30,142,28],[88,31,142,29],[89,10,143,8,"type"],[89,14,143,12],[89,16,143,14],[89,32,143,30],[90,10,144,8,"direction"],[90,19,144,17],[91,10,145,8,"colorStops"],[91,20,145,18],[91,22,145,20,"processedColorStops"],[92,8,146,6],[92,9,146,7],[92,10,146,8],[93,6,147,4],[94,4,148,2],[95,4,150,2],[95,11,150,9,"result"],[95,17,150,15],[96,2,151,0],[97,2,153,0],[97,11,153,9,"parseCSSLinearGradient"],[97,33,153,31,"parseCSSLinearGradient"],[97,34,154,2,"cssString"],[97,43,154,19],[97,45,155,39],[98,4,156,2],[98,8,156,8,"gradients"],[98,17,156,17],[98,20,156,20],[98,22,156,22],[99,4,157,2],[99,8,157,6,"match"],[99,13,157,11],[100,4,160,2],[100,8,160,8,"linearGradientRegex"],[100,27,160,27],[100,30,160,30],[100,79,160,79],[101,4,162,2],[101,11,162,10,"match"],[101,16,162,15],[101,19,162,18,"linearGradientRegex"],[101,38,162,37],[101,39,162,38,"exec"],[101,43,162,42],[101,44,162,43,"cssString"],[101,53,162,52],[101,54,162,53],[101,56,162,56],[102,6,163,4],[102,10,163,10,"gradientContent"],[102,25,163,25],[102,28,163,28,"match"],[102,33,163,33],[102,34,163,34],[102,35,163,35],[102,36,163,36],[103,6,164,4],[103,10,164,10,"parts"],[103,15,164,15],[103,18,164,18,"gradientContent"],[103,33,164,33],[103,34,164,34,"split"],[103,39,164,39],[103,40,164,40],[103,43,164,43],[103,44,164,44],[104,6,165,4],[104,10,165,8,"direction"],[104,19,165,42],[104,22,165,45,"DEFAULT_DIRECTION"],[104,39,165,62],[105,6,166,4],[105,10,166,10,"trimmedDirection"],[105,26,166,26],[105,29,166,29,"parts"],[105,34,166,34],[105,35,166,35],[105,36,166,36],[105,37,166,37],[105,38,166,38,"trim"],[105,42,166,42],[105,43,166,43],[105,44,166,44],[105,45,166,45,"toLowerCase"],[105,56,166,56],[105,57,166,57],[105,58,166,58],[106,6,168,4],[106,10,168,8,"ANGLE_UNIT_REGEX"],[106,26,168,24],[106,27,168,25,"test"],[106,31,168,29],[106,32,168,30,"trimmedDirection"],[106,48,168,46],[106,49,168,47],[106,51,168,49],[107,8,169,6],[107,12,169,12,"parsedAngle"],[107,23,169,23],[107,26,169,26,"getAngleInDegrees"],[107,43,169,43],[107,44,169,44,"trimmedDirection"],[107,60,169,60],[107,61,169,61],[108,8,170,6],[108,12,170,10,"parsedAngle"],[108,23,170,21],[108,27,170,25],[108,31,170,29],[108,33,170,31],[109,10,171,8,"direction"],[109,19,171,17],[109,22,171,20],[110,12,172,10,"type"],[110,16,172,14],[110,18,172,16],[110,25,172,23],[111,12,173,10,"value"],[111,17,173,15],[111,19,173,17,"parsedAngle"],[112,10,174,8],[112,11,174,9],[113,10,175,8,"parts"],[113,15,175,13],[113,16,175,14,"shift"],[113,21,175,19],[113,22,175,20],[113,23,175,21],[114,8,176,6],[114,9,176,7],[114,15,176,13],[115,10,178,8],[115,17,178,15],[115,19,178,17],[116,8,179,6],[117,6,180,4],[117,7,180,5],[117,13,180,11],[117,17,180,15,"DIRECTION_KEYWORD_REGEX"],[117,40,180,38],[117,41,180,39,"test"],[117,45,180,43],[117,46,180,44,"trimmedDirection"],[117,62,180,60],[117,63,180,61],[117,65,180,63],[118,8,181,6],[118,12,181,12,"parsedDirection"],[118,27,181,27],[118,30,181,30,"getDirectionForKeyword"],[118,52,181,52],[118,53,181,53,"trimmedDirection"],[118,69,181,69],[118,70,181,70],[119,8,182,6],[119,12,182,10,"parsedDirection"],[119,27,182,25],[119,31,182,29],[119,35,182,33],[119,37,182,35],[120,10,183,8,"direction"],[120,19,183,17],[120,22,183,20,"parsedDirection"],[120,37,183,35],[121,10,184,8,"parts"],[121,15,184,13],[121,16,184,14,"shift"],[121,21,184,19],[121,22,184,20],[121,23,184,21],[122,8,185,6],[122,9,185,7],[122,15,185,13],[123,10,187,8],[123,17,187,15],[123,19,187,17],[124,8,188,6],[125,6,189,4],[126,6,191,4],[126,10,191,10,"colorStopsString"],[126,26,191,26],[126,29,191,29,"parts"],[126,34,191,34],[126,35,191,35,"join"],[126,39,191,39],[126,40,191,40],[126,43,191,43],[126,44,191,44],[127,6,192,4],[127,10,192,10,"colorStops"],[127,20,192,20],[127,23,192,23],[127,25,192,25],[128,6,194,4],[128,10,194,10,"stops"],[128,15,194,15],[128,18,194,18,"colorStopsString"],[128,34,194,34],[128,35,194,35,"split"],[128,40,194,40],[128,41,194,41],[128,55,194,55],[128,56,194,56],[129,6,195,4],[129,10,195,8,"prevStop"],[129,18,195,16],[129,21,195,19],[129,25,195,23],[130,6,196,4],[130,11,196,9],[130,15,196,13,"i"],[130,16,196,14],[130,19,196,17],[130,20,196,18],[130,22,196,20,"i"],[130,23,196,21],[130,26,196,24,"stops"],[130,31,196,29],[130,32,196,30,"length"],[130,38,196,36],[130,40,196,38,"i"],[130,41,196,39],[130,43,196,41],[130,45,196,43],[131,8,197,6],[131,12,197,12,"stop"],[131,16,197,16],[131,19,197,19,"stops"],[131,24,197,24],[131,25,197,25,"i"],[131,26,197,26],[131,27,197,27],[132,8,198,6],[132,12,198,12,"trimmedStop"],[132,23,198,23],[132,26,198,26,"stop"],[132,30,198,30],[132,31,198,31,"trim"],[132,35,198,35],[132,36,198,36],[132,37,198,37],[132,38,198,38,"toLowerCase"],[132,49,198,49],[132,50,198,50],[132,51,198,51],[133,8,200,6],[133,12,200,12,"colorStopParts"],[133,26,200,26],[133,29,200,29,"trimmedStop"],[133,40,200,40],[133,41,200,41,"match"],[133,46,200,46],[133,47,200,47],[133,66,200,66],[133,67,200,67],[134,8,201,6],[134,12,201,10,"colorStopParts"],[134,26,201,24],[134,30,201,28],[134,34,201,32],[134,36,201,34],[135,10,203,8],[135,17,203,15],[135,19,203,17],[136,8,204,6],[137,8,206,6],[137,12,206,10,"colorStopParts"],[137,26,206,24],[137,27,206,25,"length"],[137,33,206,31],[137,38,206,36],[137,39,206,37],[137,41,206,39],[138,10,207,8],[138,14,207,14,"color"],[138,19,207,19],[138,22,207,22,"colorStopParts"],[138,36,207,36],[138,37,207,37],[138,38,207,38],[138,39,207,39],[139,10,208,8],[139,14,208,14,"position1"],[139,23,208,23],[139,26,208,26,"getPositionFromCSSValue"],[139,49,208,49],[139,50,208,50,"colorStopParts"],[139,64,208,64],[139,65,208,65],[139,66,208,66],[139,67,208,67],[139,68,208,68],[140,10,209,8],[140,14,209,14,"position2"],[140,23,209,23],[140,26,209,26,"getPositionFromCSSValue"],[140,49,209,49],[140,50,209,50,"colorStopParts"],[140,64,209,64],[140,65,209,65],[140,66,209,66],[140,67,209,67],[140,68,209,68],[141,10,210,8],[141,14,210,14,"processedColor"],[141,28,210,28],[141,31,210,31,"processColor"],[141,43,210,43],[141,44,210,44,"color"],[141,49,210,49],[141,50,210,50],[142,10,211,8],[142,14,211,12,"processedColor"],[142,28,211,26],[142,32,211,30],[142,36,211,34],[142,38,211,36],[143,12,213,10],[143,19,213,17],[143,21,213,19],[144,10,214,8],[145,10,216,8],[145,14,216,12,"position1"],[145,23,216,21],[145,27,216,25],[145,31,216,29],[145,35,216,33,"position2"],[145,44,216,42],[145,48,216,46],[145,52,216,50],[145,54,216,52],[146,12,218,10],[146,19,218,17],[146,21,218,19],[147,10,219,8],[148,10,221,8,"colorStops"],[148,20,221,18],[148,21,221,19,"push"],[148,25,221,23],[148,26,221,24],[149,12,222,10,"color"],[149,17,222,15],[149,19,222,17,"processedColor"],[149,33,222,31],[150,12,223,10,"position"],[150,20,223,18],[150,22,223,20,"position1"],[151,10,224,8],[151,11,224,9],[151,12,224,10],[152,10,225,8,"colorStops"],[152,20,225,18],[152,21,225,19,"push"],[152,25,225,23],[152,26,225,24],[153,12,226,10,"color"],[153,17,226,15],[153,19,226,17,"processedColor"],[153,33,226,31],[154,12,227,10,"position"],[154,20,227,18],[154,22,227,20,"position2"],[155,10,228,8],[155,11,228,9],[155,12,228,10],[156,8,229,6],[156,9,229,7],[156,15,231,11],[156,19,231,15,"colorStopParts"],[156,33,231,29],[156,34,231,30,"length"],[156,40,231,36],[156,45,231,41],[156,46,231,42],[156,48,231,44],[157,10,232,8],[157,14,232,14,"color"],[157,20,232,19],[157,23,232,22,"colorStopParts"],[157,37,232,36],[157,38,232,37],[157,39,232,38],[157,40,232,39],[158,10,233,8],[158,14,233,14,"position"],[158,22,233,22],[158,25,233,25,"getPositionFromCSSValue"],[158,48,233,48],[158,49,233,49,"colorStopParts"],[158,63,233,63],[158,64,233,64],[158,65,233,65],[158,66,233,66],[158,67,233,67],[159,10,234,8],[159,14,234,14,"processedColor"],[159,29,234,28],[159,32,234,31,"processColor"],[159,44,234,43],[159,45,234,44,"color"],[159,51,234,49],[159,52,234,50],[160,10,235,8],[160,14,235,12,"processedColor"],[160,29,235,26],[160,33,235,30],[160,37,235,34],[160,39,235,36],[161,12,237,10],[161,19,237,17],[161,21,237,19],[162,10,238,8],[163,10,239,8],[163,14,239,12,"position"],[163,22,239,20],[163,26,239,24],[163,30,239,28],[163,32,239,30],[164,12,241,10],[164,19,241,17],[164,21,241,19],[165,10,242,8],[166,10,243,8,"colorStops"],[166,20,243,18],[166,21,243,19,"push"],[166,25,243,23],[166,26,243,24],[167,12,244,10,"color"],[167,17,244,15],[167,19,244,17,"processedColor"],[167,34,244,31],[168,12,245,10,"position"],[169,10,246,8],[169,11,246,9],[169,12,246,10],[170,8,247,6],[170,9,247,7],[170,15,250,11],[170,19,250,15,"colorStopParts"],[170,33,250,29],[170,34,250,30,"length"],[170,40,250,36],[170,45,250,41],[170,46,250,42],[170,48,250,44],[171,10,251,8],[171,14,251,14,"position"],[171,24,251,22],[171,27,251,25,"getPositionFromCSSValue"],[171,50,251,48],[171,51,251,49,"colorStopParts"],[171,65,251,63],[171,66,251,64],[171,67,251,65],[171,68,251,66],[171,69,251,67],[172,10,252,8],[172,14,252,12,"position"],[172,24,252,20],[172,28,252,24],[172,32,252,28],[172,34,252,30],[173,12,254,10],[173,16,255,13,"prevStop"],[173,24,255,21],[173,28,255,25],[173,32,255,29],[173,36,256,14,"prevStop"],[173,44,256,22],[173,45,256,23,"length"],[173,51,256,29],[173,56,256,34],[173,57,256,35],[173,61,257,14,"getPositionFromCSSValue"],[173,84,257,37],[173,85,257,38,"prevStop"],[173,93,257,46],[173,94,257,47],[173,95,257,48],[173,96,257,49],[173,97,257,50],[173,101,257,54],[173,105,257,58],[173,109,258,12,"i"],[173,110,258,13],[173,115,258,18,"stops"],[173,120,258,23],[173,121,258,24,"length"],[173,127,258,30],[173,130,258,33],[173,131,258,34],[173,135,259,12,"i"],[173,136,259,13],[173,141,259,18],[173,142,259,19],[173,144,260,12],[174,14,262,12],[174,21,262,19],[174,23,262,21],[175,12,263,10],[176,12,264,10,"colorStops"],[176,22,264,20],[176,23,264,21,"push"],[176,27,264,25],[176,28,264,26],[177,14,265,12,"color"],[177,19,265,17],[177,21,265,19],[177,25,265,23],[178,14,266,12,"position"],[178,22,266,20],[178,24,266,12,"position"],[179,12,267,10],[179,13,267,11],[179,14,267,12],[180,10,268,8],[180,11,268,9],[180,17,268,15],[181,12,269,10],[181,16,269,16,"processedColor"],[181,32,269,30],[181,35,269,33,"processColor"],[181,47,269,45],[181,48,269,46,"colorStopParts"],[181,62,269,60],[181,63,269,61],[181,64,269,62],[181,65,269,63],[181,66,269,64],[182,12,270,10],[182,16,270,14,"processedColor"],[182,32,270,28],[182,36,270,32],[182,40,270,36],[182,42,270,38],[183,14,272,12],[183,21,272,19],[183,23,272,21],[184,12,273,10],[185,12,274,10,"colorStops"],[185,22,274,20],[185,23,274,21,"push"],[185,27,274,25],[185,28,274,26],[186,14,275,12,"color"],[186,19,275,17],[186,21,275,19,"processedColor"],[186,37,275,33],[187,14,276,12,"position"],[187,22,276,20],[187,24,276,22],[188,12,277,10],[188,13,277,11],[188,14,277,12],[189,10,278,8],[190,8,279,6],[190,9,279,7],[190,15,279,13],[191,10,281,8],[191,17,281,15],[191,19,281,17],[192,8,282,6],[193,8,283,6,"prevStop"],[193,16,283,14],[193,19,283,17,"colorStopParts"],[193,33,283,31],[194,6,284,4],[195,6,286,4,"gradients"],[195,15,286,13],[195,16,286,14,"push"],[195,20,286,18],[195,21,286,19],[196,8,287,6,"type"],[196,12,287,10],[196,14,287,12],[196,30,287,28],[197,8,288,6,"direction"],[197,17,288,15],[198,8,289,6,"colorStops"],[199,6,290,4],[199,7,290,5],[199,8,290,6],[200,4,291,2],[201,4,293,2],[201,11,293,9,"gradients"],[201,20,293,18],[202,2,294,0],[203,2,296,0],[203,11,296,9,"getDirectionForKeyword"],[203,33,296,31,"getDirectionForKeyword"],[203,34,296,32,"direction"],[203,43,296,50],[203,45,296,78],[204,4,297,2],[204,8,297,6,"direction"],[204,17,297,15],[204,21,297,19],[204,25,297,23],[204,27,297,25],[205,6,298,4],[205,13,298,11],[205,17,298,15],[206,4,299,2],[207,4,301,2],[207,8,301,8,"normalized"],[207,18,301,18],[207,21,301,21,"direction"],[207,30,301,30],[207,31,301,31,"replace"],[207,38,301,38],[207,39,301,39],[207,45,301,45],[207,47,301,47],[207,50,301,50],[207,51,301,51],[207,52,301,52,"toLowerCase"],[207,63,301,63],[207,64,301,64],[207,65,301,65],[208,4,303,2],[208,12,303,10,"normalized"],[208,22,303,20],[209,6,304,4],[209,11,304,9],[209,19,304,17],[210,8,305,6],[210,15,305,13],[211,10,305,14,"type"],[211,14,305,18],[211,16,305,20],[211,23,305,27],[212,10,305,29,"value"],[212,15,305,34],[212,17,305,36],[213,8,305,37],[213,9,305,38],[214,6,306,4],[214,11,306,9],[214,21,306,19],[215,8,307,6],[215,15,307,13],[216,10,307,14,"type"],[216,14,307,18],[216,16,307,20],[216,23,307,27],[217,10,307,29,"value"],[217,15,307,34],[217,17,307,36],[218,8,307,38],[218,9,307,39],[219,6,308,4],[219,11,308,9],[219,22,308,20],[220,8,309,6],[220,15,309,13],[221,10,309,14,"type"],[221,14,309,18],[221,16,309,20],[221,23,309,27],[222,10,309,29,"value"],[222,15,309,34],[222,17,309,36],[223,8,309,39],[223,9,309,40],[224,6,310,4],[224,11,310,9],[224,20,310,18],[225,8,311,6],[225,15,311,13],[226,10,311,14,"type"],[226,14,311,18],[226,16,311,20],[226,23,311,27],[227,10,311,29,"value"],[227,15,311,34],[227,17,311,36],[228,8,311,39],[228,9,311,40],[229,6,312,4],[229,11,312,9],[229,25,312,23],[230,6,313,4],[230,11,313,9],[230,25,313,23],[231,8,314,6],[231,15,314,13],[232,10,314,14,"type"],[232,14,314,18],[232,16,314,20],[232,25,314,29],[233,10,314,31,"value"],[233,15,314,36],[233,17,314,38],[234,8,314,52],[234,9,314,53],[235,6,315,4],[235,11,315,9],[235,28,315,26],[236,6,316,4],[236,11,316,9],[236,28,316,26],[237,8,317,6],[237,15,317,13],[238,10,317,14,"type"],[238,14,317,18],[238,16,317,20],[238,25,317,29],[239,10,317,31,"value"],[239,15,317,36],[239,17,317,38],[240,8,317,55],[240,9,317,56],[241,6,318,4],[241,11,318,9],[241,24,318,22],[242,6,319,4],[242,11,319,9],[242,24,319,22],[243,8,320,6],[243,15,320,13],[244,10,320,14,"type"],[244,14,320,18],[244,16,320,20],[244,25,320,29],[245,10,320,31,"value"],[245,15,320,36],[245,17,320,38],[246,8,320,51],[246,9,320,52],[247,6,321,4],[247,11,321,9],[247,27,321,25],[248,6,322,4],[248,11,322,9],[248,27,322,25],[249,8,323,6],[249,15,323,13],[250,10,323,14,"type"],[250,14,323,18],[250,16,323,20],[250,25,323,29],[251,10,323,31,"value"],[251,15,323,36],[251,17,323,38],[252,8,323,54],[252,9,323,55],[253,6,324,4],[254,8,325,6],[254,15,325,13],[254,19,325,17],[255,4,326,2],[256,2,327,0],[257,2,329,0],[257,11,329,9,"getAngleInDegrees"],[257,28,329,26,"getAngleInDegrees"],[257,29,329,27,"angle"],[257,34,329,41],[257,36,329,52],[258,4,330,2],[258,8,330,6,"angle"],[258,13,330,11],[258,17,330,15],[258,21,330,19],[258,23,330,21],[259,6,331,4],[259,13,331,11],[259,17,331,15],[260,4,332,2],[261,4,333,2],[261,8,333,8,"match"],[261,13,333,13],[261,16,333,16,"angle"],[261,21,333,21],[261,22,333,22,"match"],[261,27,333,27],[261,28,333,28,"ANGLE_UNIT_REGEX"],[261,44,333,44],[261,45,333,45],[262,4,334,2],[262,8,334,6],[262,9,334,7,"match"],[262,14,334,12],[262,16,334,14],[263,6,335,4],[263,13,335,11],[263,17,335,15],[264,4,336,2],[265,4,338,2],[265,8,338,2,"_match"],[265,14,338,2],[265,21,338,2,"_slicedToArray2"],[265,36,338,2],[265,37,338,2,"default"],[265,44,338,2],[265,46,338,26,"match"],[265,51,338,31],[266,6,338,11,"value"],[266,11,338,16],[266,14,338,16,"_match"],[266,20,338,16],[267,6,338,18,"unit"],[267,10,338,22],[267,13,338,22,"_match"],[267,19,338,22],[268,4,340,2],[268,8,340,8,"numericValue"],[268,20,340,20],[268,23,340,23,"parseFloat"],[268,33,340,33],[268,34,340,34,"value"],[268,39,340,39],[268,40,340,40],[269,4,341,2],[269,12,341,10,"unit"],[269,16,341,14],[270,6,342,4],[270,11,342,9],[270,16,342,14],[271,8,343,6],[271,15,343,13,"numericValue"],[271,27,343,25],[272,6,344,4],[272,11,344,9],[272,17,344,15],[273,8,345,6],[273,15,345,13,"numericValue"],[273,27,345,25],[273,30,345,28],[273,33,345,31],[274,6,346,4],[274,11,346,9],[274,16,346,14],[275,8,347,6],[275,15,347,14,"numericValue"],[275,27,347,26],[275,30,347,29],[275,33,347,32],[275,36,347,36,"Math"],[275,40,347,40],[275,41,347,41,"PI"],[275,43,347,43],[276,6,348,4],[276,11,348,9],[276,17,348,15],[277,8,349,6],[277,15,349,13,"numericValue"],[277,27,349,25],[277,30,349,28],[277,33,349,31],[278,6,350,4],[279,8,351,6],[279,15,351,13],[279,19,351,17],[280,4,352,2],[281,2,353,0],[282,2,355,0],[282,11,355,9,"getPositionFromCSSValue"],[282,34,355,32,"getPositionFromCSSValue"],[282,35,355,33,"position"],[282,43,355,49],[282,45,355,51],[283,4,356,2],[283,8,356,6,"position"],[283,16,356,14],[283,17,356,15,"endsWith"],[283,25,356,23],[283,26,356,24],[283,30,356,28],[283,31,356,29],[283,33,356,31],[284,6,357,4],[284,13,357,11,"parseFloat"],[284,23,357,21],[284,24,357,22,"position"],[284,32,357,30],[284,33,357,31],[285,4,358,2],[286,4,360,2],[286,8,360,6,"position"],[286,16,360,14],[286,17,360,15,"endsWith"],[286,25,360,23],[286,26,360,24],[286,29,360,27],[286,30,360,28],[286,32,360,30],[287,6,361,4],[287,13,361,11,"position"],[287,21,361,19],[288,4,362,2],[289,2,363,0],[290,0,363,1],[290,3]],"functionMap":{"names":["<global>","processBackgroundImage","parseCSSLinearGradient","getDirectionForKeyword","getAngleInDegrees","getPositionFromCSSValue"],"mappings":"AAA;eC2C;CD2G;AEE;CF6I;AGE;CH+B;AIE;CJwB;AKE"}},"type":"js/module"}]}