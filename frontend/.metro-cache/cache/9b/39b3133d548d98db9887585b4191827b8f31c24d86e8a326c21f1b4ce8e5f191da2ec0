{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"EventEmitter\", {\n    enumerable: true,\n    get: function () {\n      return EventEmitter;\n    }\n  });\n  Object.defineProperty(exports, \"NativeModule\", {\n    enumerable: true,\n    get: function () {\n      return NativeModule;\n    }\n  });\n  Object.defineProperty(exports, \"SharedObject\", {\n    enumerable: true,\n    get: function () {\n      return SharedObject;\n    }\n  });\n  Object.defineProperty(exports, \"SharedRef\", {\n    enumerable: true,\n    get: function () {\n      return SharedRef;\n    }\n  });\n  class EventEmitter {\n    addListener(eventName, listener) {\n      if (!this.listeners) {\n        this.listeners = new Map();\n      }\n      if (!this.listeners?.has(eventName)) {\n        this.listeners?.set(eventName, new Set());\n      }\n      const previousListenerCount = this.listenerCount(eventName);\n      this.listeners?.get(eventName)?.add(listener);\n      if (previousListenerCount === 0 && this.listenerCount(eventName) === 1) {\n        this.startObserving(eventName);\n      }\n      return {\n        remove: () => {\n          this.removeListener(eventName, listener);\n        }\n      };\n    }\n    removeListener(eventName, listener) {\n      const hasRemovedListener = this.listeners?.get(eventName)?.delete(listener);\n      if (this.listenerCount(eventName) === 0 && hasRemovedListener) {\n        this.stopObserving(eventName);\n      }\n    }\n    removeAllListeners(eventName) {\n      const previousListenerCount = this.listenerCount(eventName);\n      this.listeners?.get(eventName)?.clear();\n      if (previousListenerCount > 0) {\n        this.stopObserving(eventName);\n      }\n    }\n    emit(eventName, ...args) {\n      const listeners = new Set(this.listeners?.get(eventName));\n      listeners.forEach(listener => {\n        // When the listener throws an error, don't stop the execution of subsequent listeners and\n        // don't propagate the error to the `emit` function. The motivation behind this is that\n        // errors thrown from a module or user's code shouldn't affect other modules' behavior.\n        try {\n          listener(...args);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n    }\n    listenerCount(eventName) {\n      return this.listeners?.get(eventName)?.size ?? 0;\n    }\n    startObserving(eventName) {}\n    stopObserving(eventName) {}\n  }\n  class NativeModule extends EventEmitter {}\n  class SharedObject extends EventEmitter {\n    release() {\n      // no-op on Web, but subclasses can override it if needed.\n    }\n  }\n  class SharedRef extends SharedObject {\n    nativeRefType = 'unknown';\n  }\n});","lineCount":91,"map":[[7,2,10,0,"Object"],[7,8,10,0],[7,9,10,0,"defineProperty"],[7,23,10,0],[7,24,10,0,"exports"],[7,31,10,0],[8,4,10,0,"enumerable"],[8,14,10,0],[9,4,10,0,"get"],[9,7,10,0],[9,18,10,0,"get"],[9,19,10,0],[10,6,10,0],[10,13,10,0,"EventEmitter"],[10,25,10,0],[11,4,10,0],[12,2,10,0],[13,2,84,0,"Object"],[13,8,84,0],[13,9,84,0,"defineProperty"],[13,23,84,0],[13,24,84,0,"exports"],[13,31,84,0],[14,4,84,0,"enumerable"],[14,14,84,0],[15,4,84,0,"get"],[15,7,84,0],[15,18,84,0,"get"],[15,19,84,0],[16,6,84,0],[16,13,84,0,"NativeModule"],[16,25,84,0],[17,4,84,0],[18,2,84,0],[19,2,93,0,"Object"],[19,8,93,0],[19,9,93,0,"defineProperty"],[19,23,93,0],[19,24,93,0,"exports"],[19,31,93,0],[20,4,93,0,"enumerable"],[20,14,93,0],[21,4,93,0,"get"],[21,7,93,0],[21,18,93,0,"get"],[21,19,93,0],[22,6,93,0],[22,13,93,0,"SharedObject"],[22,25,93,0],[23,4,93,0],[24,2,93,0],[25,2,102,0,"Object"],[25,8,102,0],[25,9,102,0,"defineProperty"],[25,23,102,0],[25,24,102,0,"exports"],[25,31,102,0],[26,4,102,0,"enumerable"],[26,14,102,0],[27,4,102,0,"get"],[27,7,102,0],[27,18,102,0,"get"],[27,19,102,0],[28,6,102,0],[28,13,102,0,"SharedRef"],[28,22,102,0],[29,4,102,0],[30,2,102,0],[31,2,10,7],[31,8,10,13,"EventEmitter"],[31,20,10,25],[31,21,10,84],[32,4,13,2,"addListener"],[32,15,13,13,"addListener"],[32,16,14,4,"eventName"],[32,25,14,24],[32,27,15,4,"listener"],[32,35,15,35],[32,37,16,23],[33,6,17,4],[33,10,17,8],[33,11,17,9],[33,15,17,13],[33,16,17,14,"listeners"],[33,25,17,23],[33,27,17,25],[34,8,18,6],[34,12,18,10],[34,13,18,11,"listeners"],[34,22,18,20],[34,25,18,23],[34,29,18,27,"Map"],[34,32,18,30],[34,33,18,31],[34,34,18,32],[35,6,19,4],[36,6,20,4],[36,10,20,8],[36,11,20,9],[36,15,20,13],[36,16,20,14,"listeners"],[36,25,20,23],[36,27,20,25,"has"],[36,30,20,28],[36,31,20,29,"eventName"],[36,40,20,38],[36,41,20,39],[36,43,20,41],[37,8,21,6],[37,12,21,10],[37,13,21,11,"listeners"],[37,22,21,20],[37,24,21,22,"set"],[37,27,21,25],[37,28,21,26,"eventName"],[37,37,21,35],[37,39,21,37],[37,43,21,41,"Set"],[37,46,21,44],[37,47,21,45],[37,48,21,46],[37,49,21,47],[38,6,22,4],[39,6,24,4],[39,12,24,10,"previousListenerCount"],[39,33,24,31],[39,36,24,34],[39,40,24,38],[39,41,24,39,"listenerCount"],[39,54,24,52],[39,55,24,53,"eventName"],[39,64,24,62],[39,65,24,63],[40,6,26,4],[40,10,26,8],[40,11,26,9,"listeners"],[40,20,26,18],[40,22,26,20,"get"],[40,25,26,23],[40,26,26,24,"eventName"],[40,35,26,33],[40,36,26,34],[40,38,26,36,"add"],[40,41,26,39],[40,42,26,40,"listener"],[40,50,26,48],[40,51,26,49],[41,6,28,4],[41,10,28,8,"previousListenerCount"],[41,31,28,29],[41,36,28,34],[41,37,28,35],[41,41,28,39],[41,45,28,43],[41,46,28,44,"listenerCount"],[41,59,28,57],[41,60,28,58,"eventName"],[41,69,28,67],[41,70,28,68],[41,75,28,73],[41,76,28,74],[41,78,28,76],[42,8,29,6],[42,12,29,10],[42,13,29,11,"startObserving"],[42,27,29,25],[42,28,29,26,"eventName"],[42,37,29,35],[42,38,29,36],[43,6,30,4],[44,6,32,4],[44,13,32,11],[45,8,33,6,"remove"],[45,14,33,12],[45,16,33,14,"remove"],[45,17,33,14],[45,22,33,20],[46,10,34,8],[46,14,34,12],[46,15,34,13,"removeListener"],[46,29,34,27],[46,30,34,28,"eventName"],[46,39,34,37],[46,41,34,39,"listener"],[46,49,34,47],[46,50,34,48],[47,8,35,6],[48,6,36,4],[48,7,36,5],[49,4,37,2],[50,4,39,2,"removeListener"],[50,18,39,16,"removeListener"],[50,19,40,4,"eventName"],[50,28,40,24],[50,30,41,4,"listener"],[50,38,41,35],[50,40,42,10],[51,6,43,4],[51,12,43,10,"hasRemovedListener"],[51,30,43,28],[51,33,43,31],[51,37,43,35],[51,38,43,36,"listeners"],[51,47,43,45],[51,49,43,47,"get"],[51,52,43,50],[51,53,43,51,"eventName"],[51,62,43,60],[51,63,43,61],[51,65,43,63,"delete"],[51,71,43,69],[51,72,43,70,"listener"],[51,80,43,78],[51,81,43,79],[52,6,44,4],[52,10,44,8],[52,14,44,12],[52,15,44,13,"listenerCount"],[52,28,44,26],[52,29,44,27,"eventName"],[52,38,44,36],[52,39,44,37],[52,44,44,42],[52,45,44,43],[52,49,44,47,"hasRemovedListener"],[52,67,44,65],[52,69,44,67],[53,8,45,6],[53,12,45,10],[53,13,45,11,"stopObserving"],[53,26,45,24],[53,27,45,25,"eventName"],[53,36,45,34],[53,37,45,35],[54,6,46,4],[55,4,47,2],[56,4,49,2,"removeAllListeners"],[56,22,49,20,"removeAllListeners"],[56,23,49,57,"eventName"],[56,32,49,77],[56,34,49,85],[57,6,50,4],[57,12,50,10,"previousListenerCount"],[57,33,50,31],[57,36,50,34],[57,40,50,38],[57,41,50,39,"listenerCount"],[57,54,50,52],[57,55,50,53,"eventName"],[57,64,50,62],[57,65,50,63],[58,6,51,4],[58,10,51,8],[58,11,51,9,"listeners"],[58,20,51,18],[58,22,51,20,"get"],[58,25,51,23],[58,26,51,24,"eventName"],[58,35,51,33],[58,36,51,34],[58,38,51,36,"clear"],[58,43,51,41],[58,44,51,42],[58,45,51,43],[59,6,52,4],[59,10,52,8,"previousListenerCount"],[59,31,52,29],[59,34,52,32],[59,35,52,33],[59,37,52,35],[60,8,53,6],[60,12,53,10],[60,13,53,11,"stopObserving"],[60,26,53,24],[60,27,53,25,"eventName"],[60,36,53,34],[60,37,53,35],[61,6,54,4],[62,4,55,2],[63,4,57,2,"emit"],[63,8,57,6,"emit"],[63,9,58,4,"eventName"],[63,18,58,24],[63,20,59,4],[63,23,59,7,"args"],[63,27,59,46],[63,29,60,10],[64,6,61,4],[64,12,61,10,"listeners"],[64,21,61,19],[64,24,61,22],[64,28,61,26,"Set"],[64,31,61,29],[64,32,61,30],[64,36,61,34],[64,37,61,35,"listeners"],[64,46,61,44],[64,48,61,46,"get"],[64,51,61,49],[64,52,61,50,"eventName"],[64,61,61,59],[64,62,61,60],[64,63,61,61],[65,6,63,4,"listeners"],[65,15,63,13],[65,16,63,14,"forEach"],[65,23,63,21],[65,24,63,23,"listener"],[65,32,63,31],[65,36,63,36],[66,8,64,6],[67,8,65,6],[68,8,66,6],[69,8,67,6],[69,12,67,10],[70,10,68,8,"listener"],[70,18,68,16],[70,19,68,17],[70,22,68,20,"args"],[70,26,68,24],[70,27,68,25],[71,8,69,6],[71,9,69,7],[71,10,69,8],[71,17,69,15,"error"],[71,22,69,20],[71,24,69,22],[72,10,70,8,"console"],[72,17,70,15],[72,18,70,16,"error"],[72,23,70,21],[72,24,70,22,"error"],[72,29,70,27],[72,30,70,28],[73,8,71,6],[74,6,72,4],[74,7,72,5],[74,8,72,6],[75,4,73,2],[76,4,75,2,"listenerCount"],[76,17,75,15,"listenerCount"],[76,18,75,52,"eventName"],[76,27,75,72],[76,29,75,82],[77,6,76,4],[77,13,76,11],[77,17,76,15],[77,18,76,16,"listeners"],[77,27,76,25],[77,29,76,27,"get"],[77,32,76,30],[77,33,76,31,"eventName"],[77,42,76,40],[77,43,76,41],[77,45,76,43,"size"],[77,49,76,47],[77,53,76,51],[77,54,76,52],[78,4,77,2],[79,4,79,2,"startObserving"],[79,18,79,16,"startObserving"],[79,19,79,53,"eventName"],[79,28,79,73],[79,30,79,81],[79,31,79,82],[80,4,81,2,"stopObserving"],[80,17,81,15,"stopObserving"],[80,18,81,52,"eventName"],[80,27,81,72],[80,29,81,80],[80,30,81,81],[81,2,82,0],[82,2,84,7],[82,8,84,13,"NativeModule"],[82,20,84,25],[82,29,85,10,"EventEmitter"],[82,41,85,22],[82,42,87,0],[83,2,93,7],[83,8,93,13,"SharedObject"],[83,20,93,25],[83,29,94,10,"EventEmitter"],[83,41,94,22],[83,42,96,0],[84,4,97,2,"release"],[84,11,97,9,"release"],[84,12,97,9],[84,14,97,18],[85,6,98,4],[86,4,98,4],[87,2,100,0],[88,2,102,7],[88,8,102,13,"SharedRef"],[88,17,102,22],[88,26,106,10,"SharedObject"],[88,38,106,22],[88,39,108,0],[89,4,109,2,"nativeRefType"],[89,17,109,15],[89,20,109,26],[89,29,109,35],[90,2,110,0],[91,0,110,1],[91,3]],"functionMap":{"names":["<global>","EventEmitter","EventEmitter#addListener","remove","EventEmitter#removeListener","EventEmitter#removeAllListeners","EventEmitter#emit","listeners.forEach$argument_0","EventEmitter#listenerCount","EventEmitter#startObserving","EventEmitter#stopObserving","NativeModule","SharedObject","SharedObject#release","SharedRef"],"mappings":"AAA;OCS;ECG;cCoB;ODE;GDE;EGE;GHQ;EIE;GJM;EKE;sBCM;KDS;GLC;EOE;GPE;EQE,iFR;ESE,gFT;CDC;OWE;CXO;OYE;ECI;GDE;CZC;OcE;CdQ"},"hasCjsExports":false},"type":"js/module"}]}