{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Nicolas Gallagher\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.styleq = void 0;\n  var cache = new WeakMap();\n  var compiledKey = '$$css';\n  function createStyleq(options) {\n    var disableCache;\n    var disableMix;\n    var transform;\n    if (options != null) {\n      disableCache = options.disableCache === true;\n      disableMix = options.disableMix === true;\n      transform = options.transform;\n    }\n    return function styleq() {\n      // Keep track of property commits to the className\n      var definedProperties = []; // The className and inline style to build up\n\n      var className = '';\n      var inlineStyle = null; // The current position in the cache graph\n\n      var nextCache = disableCache ? null : cache; // This way of creating an array from arguments is fastest\n\n      var styles = new Array(arguments.length);\n      for (var i = 0; i < arguments.length; i++) {\n        styles[i] = arguments[i];\n      } // Iterate over styles from last to first\n\n      while (styles.length > 0) {\n        var possibleStyle = styles.pop(); // Skip empty items\n\n        if (possibleStyle == null || possibleStyle === false) {\n          continue;\n        } // Push nested styles back onto the stack to be processed\n\n        if (Array.isArray(possibleStyle)) {\n          for (var _i = 0; _i < possibleStyle.length; _i++) {\n            styles.push(possibleStyle[_i]);\n          }\n          continue;\n        } // Process an individual style object\n\n        var style = transform != null ? transform(possibleStyle) : possibleStyle;\n        if (style.$$css) {\n          // Build up the class names defined by this object\n          var classNameChunk = ''; // Check the cache to see if we've already done this work\n\n          if (nextCache != null && nextCache.has(style)) {\n            // Cache: read\n            var cacheEntry = nextCache.get(style);\n            if (cacheEntry != null) {\n              classNameChunk = cacheEntry[0]; // $FlowIgnore\n\n              definedProperties.push.apply(definedProperties, cacheEntry[1]);\n              nextCache = cacheEntry[2];\n            }\n          } // Update the chunks with data from this object\n          else {\n            // The properties defined by this object\n            var definedPropertiesChunk = [];\n            for (var prop in style) {\n              var value = style[prop];\n              if (prop === compiledKey) continue; // Each property value is used as an HTML class name\n              // { 'debug.string': 'debug.string', opacity: 's-jskmnoqp' }\n\n              if (typeof value === 'string' || value === null) {\n                // Only add to chunks if this property hasn't already been seen\n                if (!definedProperties.includes(prop)) {\n                  definedProperties.push(prop);\n                  if (nextCache != null) {\n                    definedPropertiesChunk.push(prop);\n                  }\n                  if (typeof value === 'string') {\n                    classNameChunk += classNameChunk ? ' ' + value : value;\n                  }\n                }\n              } // If we encounter a value that isn't a string or `null`\n              else {\n                console.error(\"styleq: \".concat(prop, \" typeof \").concat(String(value), \" is not \\\"string\\\" or \\\"null\\\".\"));\n              }\n            } // Cache: write\n\n            if (nextCache != null) {\n              // Create the next WeakMap for this sequence of styles\n              var weakMap = new WeakMap();\n              nextCache.set(style, [classNameChunk, definedPropertiesChunk, weakMap]);\n              nextCache = weakMap;\n            }\n          } // Order of classes in chunks matches property-iteration order of style\n          // object. Order of chunks matches passed order of styles from first to\n          // last (which we iterate over in reverse).\n\n          if (classNameChunk) {\n            className = className ? classNameChunk + ' ' + className : classNameChunk;\n          }\n        } // ----- DYNAMIC: Process inline style object -----\n        else {\n          if (disableMix) {\n            if (inlineStyle == null) {\n              inlineStyle = {};\n            }\n            inlineStyle = Object.assign({}, style, inlineStyle);\n          } else {\n            var subStyle = null;\n            for (var _prop in style) {\n              var _value = style[_prop];\n              if (_value !== undefined) {\n                if (!definedProperties.includes(_prop)) {\n                  if (_value != null) {\n                    if (inlineStyle == null) {\n                      inlineStyle = {};\n                    }\n                    if (subStyle == null) {\n                      subStyle = {};\n                    }\n                    subStyle[_prop] = _value;\n                  }\n                  definedProperties.push(_prop); // Cache is unnecessary overhead if results can't be reused.\n\n                  nextCache = null;\n                }\n              }\n            }\n            if (subStyle != null) {\n              inlineStyle = Object.assign(subStyle, inlineStyle);\n            }\n          }\n        }\n      }\n      var styleProps = [className, inlineStyle];\n      return styleProps;\n    };\n  }\n  var styleq = createStyleq();\n  exports.styleq = styleq;\n  styleq.factory = createStyleq;\n});","lineCount":149,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,2,9,0],[10,14,9,12],[12,2,11,0,"Object"],[12,8,11,6],[12,9,11,7,"defineProperty"],[12,23,11,21],[12,24,11,22,"exports"],[12,31,11,29],[12,33,11,31],[12,45,11,43],[12,47,11,45],[13,4,12,2,"value"],[13,9,12,7],[13,11,12,9],[14,2,13,0],[14,3,13,1],[14,4,13,2],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"styleq"],[15,16,14,14],[15,19,14,17],[15,24,14,22],[15,25,14,23],[16,2,15,0],[16,6,15,4,"cache"],[16,11,15,9],[16,14,15,12],[16,18,15,16,"WeakMap"],[16,25,15,23],[16,26,15,24],[16,27,15,25],[17,2,16,0],[17,6,16,4,"compiledKey"],[17,17,16,15],[17,20,16,18],[17,27,16,25],[18,2,18,0],[18,11,18,9,"createStyleq"],[18,23,18,21,"createStyleq"],[18,24,18,22,"options"],[18,31,18,29],[18,33,18,31],[19,4,19,2],[19,8,19,6,"disableCache"],[19,20,19,18],[20,4,20,2],[20,8,20,6,"disableMix"],[20,18,20,16],[21,4,21,2],[21,8,21,6,"transform"],[21,17,21,15],[22,4,23,2],[22,8,23,6,"options"],[22,15,23,13],[22,19,23,17],[22,23,23,21],[22,25,23,23],[23,6,24,4,"disableCache"],[23,18,24,16],[23,21,24,19,"options"],[23,28,24,26],[23,29,24,27,"disableCache"],[23,41,24,39],[23,46,24,44],[23,50,24,48],[24,6,25,4,"disableMix"],[24,16,25,14],[24,19,25,17,"options"],[24,26,25,24],[24,27,25,25,"disableMix"],[24,37,25,35],[24,42,25,40],[24,46,25,44],[25,6,26,4,"transform"],[25,15,26,13],[25,18,26,16,"options"],[25,25,26,23],[25,26,26,24,"transform"],[25,35,26,33],[26,4,27,2],[27,4,29,2],[27,11,29,9],[27,20,29,18,"styleq"],[27,26,29,24,"styleq"],[27,27,29,24],[27,29,29,27],[28,6,30,4],[29,6,31,4],[29,10,31,8,"definedProperties"],[29,27,31,25],[29,30,31,28],[29,32,31,30],[29,33,31,31],[29,34,31,32],[31,6,33,4],[31,10,33,8,"className"],[31,19,33,17],[31,22,33,20],[31,24,33,22],[32,6,34,4],[32,10,34,8,"inlineStyle"],[32,21,34,19],[32,24,34,22],[32,28,34,26],[32,29,34,27],[32,30,34,28],[34,6,36,4],[34,10,36,8,"nextCache"],[34,19,36,17],[34,22,36,20,"disableCache"],[34,34,36,32],[34,37,36,35],[34,41,36,39],[34,44,36,42,"cache"],[34,49,36,47],[34,50,36,48],[34,51,36,49],[36,6,38,4],[36,10,38,8,"styles"],[36,16,38,14],[36,19,38,17],[36,23,38,21,"Array"],[36,28,38,26],[36,29,38,27,"arguments"],[36,38,38,36],[36,39,38,37,"length"],[36,45,38,43],[36,46,38,44],[37,6,40,4],[37,11,40,9],[37,15,40,13,"i"],[37,16,40,14],[37,19,40,17],[37,20,40,18],[37,22,40,20,"i"],[37,23,40,21],[37,26,40,24,"arguments"],[37,35,40,33],[37,36,40,34,"length"],[37,42,40,40],[37,44,40,42,"i"],[37,45,40,43],[37,47,40,45],[37,49,40,47],[38,8,41,6,"styles"],[38,14,41,12],[38,15,41,13,"i"],[38,16,41,14],[38,17,41,15],[38,20,41,18,"arguments"],[38,29,41,27],[38,30,41,28,"i"],[38,31,41,29],[38,32,41,30],[39,6,42,4],[39,7,42,5],[39,8,42,6],[41,6,45,4],[41,13,45,11,"styles"],[41,19,45,17],[41,20,45,18,"length"],[41,26,45,24],[41,29,45,27],[41,30,45,28],[41,32,45,30],[42,8,46,6],[42,12,46,10,"possibleStyle"],[42,25,46,23],[42,28,46,26,"styles"],[42,34,46,32],[42,35,46,33,"pop"],[42,38,46,36],[42,39,46,37],[42,40,46,38],[42,41,46,39],[42,42,46,40],[44,8,48,6],[44,12,48,10,"possibleStyle"],[44,25,48,23],[44,29,48,27],[44,33,48,31],[44,37,48,35,"possibleStyle"],[44,50,48,48],[44,55,48,53],[44,60,48,58],[44,62,48,60],[45,10,49,8],[46,8,50,6],[46,9,50,7],[46,10,50,8],[48,8,53,6],[48,12,53,10,"Array"],[48,17,53,15],[48,18,53,16,"isArray"],[48,25,53,23],[48,26,53,24,"possibleStyle"],[48,39,53,37],[48,40,53,38],[48,42,53,40],[49,10,54,8],[49,15,54,13],[49,19,54,17,"_i"],[49,21,54,19],[49,24,54,22],[49,25,54,23],[49,27,54,25,"_i"],[49,29,54,27],[49,32,54,30,"possibleStyle"],[49,45,54,43],[49,46,54,44,"length"],[49,52,54,50],[49,54,54,52,"_i"],[49,56,54,54],[49,58,54,56],[49,60,54,58],[50,12,55,10,"styles"],[50,18,55,16],[50,19,55,17,"push"],[50,23,55,21],[50,24,55,22,"possibleStyle"],[50,37,55,35],[50,38,55,36,"_i"],[50,40,55,38],[50,41,55,39],[50,42,55,40],[51,10,56,8],[52,10,58,8],[53,8,59,6],[53,9,59,7],[53,10,59,8],[55,8,62,6],[55,12,62,10,"style"],[55,17,62,15],[55,20,62,18,"transform"],[55,29,62,27],[55,33,62,31],[55,37,62,35],[55,40,62,38,"transform"],[55,49,62,47],[55,50,62,48,"possibleStyle"],[55,63,62,61],[55,64,62,62],[55,67,62,65,"possibleStyle"],[55,80,62,78],[56,8,64,6],[56,12,64,10,"style"],[56,17,64,15],[56,18,64,16,"$$css"],[56,23,64,21],[56,25,64,23],[57,10,65,8],[58,10,66,8],[58,14,66,12,"classNameChunk"],[58,28,66,26],[58,31,66,29],[58,33,66,31],[58,34,66,32],[58,35,66,33],[60,10,68,8],[60,14,68,12,"nextCache"],[60,23,68,21],[60,27,68,25],[60,31,68,29],[60,35,68,33,"nextCache"],[60,44,68,42],[60,45,68,43,"has"],[60,48,68,46],[60,49,68,47,"style"],[60,54,68,52],[60,55,68,53],[60,57,68,55],[61,12,69,10],[62,12,70,10],[62,16,70,14,"cacheEntry"],[62,26,70,24],[62,29,70,27,"nextCache"],[62,38,70,36],[62,39,70,37,"get"],[62,42,70,40],[62,43,70,41,"style"],[62,48,70,46],[62,49,70,47],[63,12,72,10],[63,16,72,14,"cacheEntry"],[63,26,72,24],[63,30,72,28],[63,34,72,32],[63,36,72,34],[64,14,73,12,"classNameChunk"],[64,28,73,26],[64,31,73,29,"cacheEntry"],[64,41,73,39],[64,42,73,40],[64,43,73,41],[64,44,73,42],[64,45,73,43],[64,46,73,44],[66,14,75,12,"definedProperties"],[66,31,75,29],[66,32,75,30,"push"],[66,36,75,34],[66,37,75,35,"apply"],[66,42,75,40],[66,43,75,41,"definedProperties"],[66,60,75,58],[66,62,75,60,"cacheEntry"],[66,72,75,70],[66,73,75,71],[66,74,75,72],[66,75,75,73],[66,76,75,74],[67,14,76,12,"nextCache"],[67,23,76,21],[67,26,76,24,"cacheEntry"],[67,36,76,34],[67,37,76,35],[67,38,76,36],[67,39,76,37],[68,12,77,10],[69,10,78,8],[69,11,78,9],[69,12,78,10],[70,10,78,10],[70,15,79,13],[71,12,80,10],[72,12,81,10],[72,16,81,14,"definedPropertiesChunk"],[72,38,81,36],[72,41,81,39],[72,43,81,41],[73,12,83,10],[73,17,83,15],[73,21,83,19,"prop"],[73,25,83,23],[73,29,83,27,"style"],[73,34,83,32],[73,36,83,34],[74,14,84,12],[74,18,84,16,"value"],[74,23,84,21],[74,26,84,24,"style"],[74,31,84,29],[74,32,84,30,"prop"],[74,36,84,34],[74,37,84,35],[75,14,85,12],[75,18,85,16,"prop"],[75,22,85,20],[75,27,85,25,"compiledKey"],[75,38,85,36],[75,40,85,38],[75,49,85,47],[75,50,85,48],[76,14,86,12],[78,14,88,12],[78,18,88,16],[78,25,88,23,"value"],[78,30,88,28],[78,35,88,33],[78,43,88,41],[78,47,88,45,"value"],[78,52,88,50],[78,57,88,55],[78,61,88,59],[78,63,88,61],[79,16,89,14],[80,16,90,14],[80,20,90,18],[80,21,90,19,"definedProperties"],[80,38,90,36],[80,39,90,37,"includes"],[80,47,90,45],[80,48,90,46,"prop"],[80,52,90,50],[80,53,90,51],[80,55,90,53],[81,18,91,16,"definedProperties"],[81,35,91,33],[81,36,91,34,"push"],[81,40,91,38],[81,41,91,39,"prop"],[81,45,91,43],[81,46,91,44],[82,18,93,16],[82,22,93,20,"nextCache"],[82,31,93,29],[82,35,93,33],[82,39,93,37],[82,41,93,39],[83,20,94,18,"definedPropertiesChunk"],[83,42,94,40],[83,43,94,41,"push"],[83,47,94,45],[83,48,94,46,"prop"],[83,52,94,50],[83,53,94,51],[84,18,95,16],[85,18,97,16],[85,22,97,20],[85,29,97,27,"value"],[85,34,97,32],[85,39,97,37],[85,47,97,45],[85,49,97,47],[86,20,98,18,"classNameChunk"],[86,34,98,32],[86,38,98,36,"classNameChunk"],[86,52,98,50],[86,55,98,53],[86,58,98,56],[86,61,98,59,"value"],[86,66,98,64],[86,69,98,67,"value"],[86,74,98,72],[87,18,99,16],[88,16,100,14],[89,14,101,12],[89,15,101,13],[89,16,101,14],[90,14,101,14],[90,19,102,17],[91,16,103,14,"console"],[91,23,103,21],[91,24,103,22,"error"],[91,29,103,27],[91,30,103,28],[91,40,103,38],[91,41,103,39,"concat"],[91,47,103,45],[91,48,103,46,"prop"],[91,52,103,50],[91,54,103,52],[91,64,103,62],[91,65,103,63],[91,66,103,64,"concat"],[91,72,103,70],[91,73,103,71,"String"],[91,79,103,77],[91,80,103,78,"value"],[91,85,103,83],[91,86,103,84],[91,88,103,86],[91,121,103,119],[91,122,103,120],[91,123,103,121],[92,14,104,12],[93,12,105,10],[93,13,105,11],[93,14,105,12],[95,12,108,10],[95,16,108,14,"nextCache"],[95,25,108,23],[95,29,108,27],[95,33,108,31],[95,35,108,33],[96,14,109,12],[97,14,110,12],[97,18,110,16,"weakMap"],[97,25,110,23],[97,28,110,26],[97,32,110,30,"WeakMap"],[97,39,110,37],[97,40,110,38],[97,41,110,39],[98,14,111,12,"nextCache"],[98,23,111,21],[98,24,111,22,"set"],[98,27,111,25],[98,28,111,26,"style"],[98,33,111,31],[98,35,111,33],[98,36,111,34,"classNameChunk"],[98,50,111,48],[98,52,111,50,"definedPropertiesChunk"],[98,74,111,72],[98,76,111,74,"weakMap"],[98,83,111,81],[98,84,111,82],[98,85,111,83],[99,14,112,12,"nextCache"],[99,23,112,21],[99,26,112,24,"weakMap"],[99,33,112,31],[100,12,113,10],[101,10,114,8],[101,11,114,9],[101,12,114,10],[102,10,115,8],[103,10,116,8],[105,10,119,8],[105,14,119,12,"classNameChunk"],[105,28,119,26],[105,30,119,28],[106,12,120,10,"className"],[106,21,120,19],[106,24,120,22,"className"],[106,33,120,31],[106,36,120,34,"classNameChunk"],[106,50,120,48],[106,53,120,51],[106,56,120,54],[106,59,120,57,"className"],[106,68,120,66],[106,71,120,69,"classNameChunk"],[106,85,120,83],[107,10,121,8],[108,8,122,6],[108,9,122,7],[108,10,122,8],[109,8,122,8],[109,13,123,11],[110,10,124,8],[110,14,124,12,"disableMix"],[110,24,124,22],[110,26,124,24],[111,12,125,10],[111,16,125,14,"inlineStyle"],[111,27,125,25],[111,31,125,29],[111,35,125,33],[111,37,125,35],[112,14,126,12,"inlineStyle"],[112,25,126,23],[112,28,126,26],[112,29,126,27],[112,30,126,28],[113,12,127,10],[114,12,129,10,"inlineStyle"],[114,23,129,21],[114,26,129,24,"Object"],[114,32,129,30],[114,33,129,31,"assign"],[114,39,129,37],[114,40,129,38],[114,41,129,39],[114,42,129,40],[114,44,129,42,"style"],[114,49,129,47],[114,51,129,49,"inlineStyle"],[114,62,129,60],[114,63,129,61],[115,10,130,8],[115,11,130,9],[115,17,130,15],[116,12,131,10],[116,16,131,14,"subStyle"],[116,24,131,22],[116,27,131,25],[116,31,131,29],[117,12,133,10],[117,17,133,15],[117,21,133,19,"_prop"],[117,26,133,24],[117,30,133,28,"style"],[117,35,133,33],[117,37,133,35],[118,14,134,12],[118,18,134,16,"_value"],[118,24,134,22],[118,27,134,25,"style"],[118,32,134,30],[118,33,134,31,"_prop"],[118,38,134,36],[118,39,134,37],[119,14,136,12],[119,18,136,16,"_value"],[119,24,136,22],[119,29,136,27,"undefined"],[119,38,136,36],[119,40,136,38],[120,16,137,14],[120,20,137,18],[120,21,137,19,"definedProperties"],[120,38,137,36],[120,39,137,37,"includes"],[120,47,137,45],[120,48,137,46,"_prop"],[120,53,137,51],[120,54,137,52],[120,56,137,54],[121,18,138,16],[121,22,138,20,"_value"],[121,28,138,26],[121,32,138,30],[121,36,138,34],[121,38,138,36],[122,20,139,18],[122,24,139,22,"inlineStyle"],[122,35,139,33],[122,39,139,37],[122,43,139,41],[122,45,139,43],[123,22,140,20,"inlineStyle"],[123,33,140,31],[123,36,140,34],[123,37,140,35],[123,38,140,36],[124,20,141,18],[125,20,143,18],[125,24,143,22,"subStyle"],[125,32,143,30],[125,36,143,34],[125,40,143,38],[125,42,143,40],[126,22,144,20,"subStyle"],[126,30,144,28],[126,33,144,31],[126,34,144,32],[126,35,144,33],[127,20,145,18],[128,20,147,18,"subStyle"],[128,28,147,26],[128,29,147,27,"_prop"],[128,34,147,32],[128,35,147,33],[128,38,147,36,"_value"],[128,44,147,42],[129,18,148,16],[130,18,150,16,"definedProperties"],[130,35,150,33],[130,36,150,34,"push"],[130,40,150,38],[130,41,150,39,"_prop"],[130,46,150,44],[130,47,150,45],[130,48,150,46],[130,49,150,47],[132,18,152,16,"nextCache"],[132,27,152,25],[132,30,152,28],[132,34,152,32],[133,16,153,14],[134,14,154,12],[135,12,155,10],[136,12,157,10],[136,16,157,14,"subStyle"],[136,24,157,22],[136,28,157,26],[136,32,157,30],[136,34,157,32],[137,14,158,12,"inlineStyle"],[137,25,158,23],[137,28,158,26,"Object"],[137,34,158,32],[137,35,158,33,"assign"],[137,41,158,39],[137,42,158,40,"subStyle"],[137,50,158,48],[137,52,158,50,"inlineStyle"],[137,63,158,61],[137,64,158,62],[138,12,159,10],[139,10,160,8],[140,8,161,6],[141,6,162,4],[142,6,164,4],[142,10,164,8,"styleProps"],[142,20,164,18],[142,23,164,21],[142,24,164,22,"className"],[142,33,164,31],[142,35,164,33,"inlineStyle"],[142,46,164,44],[142,47,164,45],[143,6,165,4],[143,13,165,11,"styleProps"],[143,23,165,21],[144,4,166,2],[144,5,166,3],[145,2,167,0],[146,2,169,0],[146,6,169,4,"styleq"],[146,12,169,10],[146,15,169,13,"createStyleq"],[146,27,169,25],[146,28,169,26],[146,29,169,27],[147,2,170,0,"exports"],[147,9,170,7],[147,10,170,8,"styleq"],[147,16,170,14],[147,19,170,17,"styleq"],[147,25,170,23],[148,2,171,0,"styleq"],[148,8,171,6],[148,9,171,7,"factory"],[148,16,171,14],[148,19,171,17,"createStyleq"],[148,31,171,29],[149,0,171,30],[149,3]],"functionMap":{"names":["<global>","createStyleq","styleq"],"mappings":"AAA;ACiB;SCW;GDyI;CDC"}},"type":"js/module"}]}