{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":61}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _LogBoxSymbolication = require(_dependencyMap[2], \"./LogBoxSymbolication\");\n  var LogBoxSymbolication = _interopNamespace(_LogBoxSymbolication);\n  function convertComponentStateToStack(componentStack) {\n    return componentStack.map(frame => ({\n      column: frame?.location?.column,\n      file: frame.fileName,\n      lineNumber: frame?.location?.row,\n      methodName: frame.content,\n      collapse: false\n    }));\n  }\n  function convertStackToComponentStack(stack) {\n    var componentStack = [];\n    for (var i = 0; i < stack.length; i++) {\n      var frame = stack[i];\n      if (frame.lineNumber != null && frame.column != null) {\n        componentStack.push({\n          fileName: frame?.file || '',\n          location: {\n            row: frame.lineNumber,\n            column: frame.column\n          },\n          content: frame.methodName,\n          collapse: false\n        });\n      }\n    }\n    return componentStack;\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.symbolicatedComponentStack = {\n        error: null,\n        componentStack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.componentStackType = data.componentStackType || 'legacy';\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.extraData = data.extraData;\n      this.count = 1;\n      this.onNotificationPress = data.onNotificationPress;\n    }\n    return (0, _createClass.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"getAvailableComponentStack\",\n      value: function getAvailableComponentStack() {\n        if (this.componentStackType === 'legacy') {\n          return this.componentStack;\n        }\n        return this.symbolicatedComponentStack.status === 'COMPLETE' ? this.symbolicatedComponentStack.componentStack : this.componentStack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        var retry = false;\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          retry = true;\n        }\n        if (this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(convertComponentStateToStack(this.componentStack));\n          retry = true;\n        }\n        if (retry) {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        if (this.symbolicated.status !== 'PENDING' && this.symbolicated.status !== 'COMPLETE') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(data => {\n            this.updateStatus(null, data?.stack, data?.codeFrame, callback);\n          }, error => {\n            this.updateStatus(error, null, null, callback);\n          });\n        }\n        if (this.componentStack != null && this.componentStackType === 'stack' && this.symbolicatedComponentStack.status !== 'PENDING' && this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          this.updateComponentStackStatus(null, null, null, callback);\n          var componentStackFrames = convertComponentStateToStack(this.componentStack);\n          LogBoxSymbolication.symbolicate(componentStackFrames, []).then(data => {\n            this.updateComponentStackStatus(null, convertStackToComponentStack(data.stack), data?.codeFrame, callback);\n          }, error => {\n            this.updateComponentStackStatus(error, null, null, callback);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n        if (error != null) {\n          this.symbolicated = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }, {\n      key: \"updateComponentStackStatus\",\n      value: function updateComponentStackStatus(error, componentStack, codeFrame, callback) {\n        var lastStatus = this.symbolicatedComponentStack.status;\n        if (error != null) {\n          this.symbolicatedComponentStack = {\n            error,\n            componentStack: null,\n            status: 'FAILED'\n          };\n        } else if (componentStack != null) {\n          if (codeFrame) {\n            this.componentCodeFrame = codeFrame;\n          }\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicatedComponentStack.status) {\n          callback(this.symbolicatedComponentStack.status);\n        }\n      }\n    }]);\n  }();\n  var _default = LogBoxLog;\n});","lineCount":217,"map":[[27,2,279,0,"Object"],[27,8,279,0],[27,9,279,0,"defineProperty"],[27,23,279,0],[27,24,279,0,"exports"],[27,31,279,0],[28,4,279,0,"enumerable"],[28,14,279,0],[29,4,279,0,"get"],[29,7,279,0],[29,18,279,0,"get"],[29,19,279,0],[30,6,279,0],[30,13,279,0,"_default"],[30,21,279,0],[31,4,279,0],[32,2,279,0],[33,2,279,25],[33,6,279,25,"_babelRuntimeHelpersClassCallCheck"],[33,40,279,25],[33,43,279,25,"require"],[33,50,279,25],[33,51,279,25,"_dependencyMap"],[33,65,279,25],[34,2,279,25],[34,6,279,25,"_classCallCheck"],[34,21,279,25],[34,24,279,25,"_interopDefault"],[34,39,279,25],[34,40,279,25,"_babelRuntimeHelpersClassCallCheck"],[34,74,279,25],[35,2,279,25],[35,6,279,25,"_babelRuntimeHelpersCreateClass"],[35,37,279,25],[35,40,279,25,"require"],[35,47,279,25],[35,48,279,25,"_dependencyMap"],[35,62,279,25],[36,2,279,25],[36,6,279,25,"_createClass"],[36,18,279,25],[36,21,279,25,"_interopDefault"],[36,36,279,25],[36,37,279,25,"_babelRuntimeHelpersCreateClass"],[36,68,279,25],[37,2,20,0],[37,6,20,0,"_LogBoxSymbolication"],[37,26,20,0],[37,29,20,0,"require"],[37,36,20,0],[37,37,20,0,"_dependencyMap"],[37,51,20,0],[38,2,20,0],[38,6,20,0,"LogBoxSymbolication"],[38,25,20,0],[38,28,20,0,"_interopNamespace"],[38,45,20,0],[38,46,20,0,"_LogBoxSymbolication"],[38,66,20,0],[39,2,28,0],[39,11,28,9,"convertComponentStateToStack"],[39,39,28,37,"convertComponentStateToStack"],[39,40,28,38,"componentStack"],[39,54,28,68],[39,56,28,77],[40,4,29,2],[40,11,29,9,"componentStack"],[40,25,29,23],[40,26,29,24,"map"],[40,29,29,27],[40,30,29,28,"frame"],[40,35,29,33],[40,40,29,38],[41,6,30,4,"column"],[41,12,30,10],[41,14,30,12,"frame"],[41,19,30,17],[41,21,30,19,"location"],[41,29,30,27],[41,31,30,29,"column"],[41,37,30,35],[42,6,31,4,"file"],[42,10,31,8],[42,12,31,10,"frame"],[42,17,31,15],[42,18,31,16,"fileName"],[42,26,31,24],[43,6,32,4,"lineNumber"],[43,16,32,14],[43,18,32,16,"frame"],[43,23,32,21],[43,25,32,23,"location"],[43,33,32,31],[43,35,32,33,"row"],[43,38,32,36],[44,6,33,4,"methodName"],[44,16,33,14],[44,18,33,16,"frame"],[44,23,33,21],[44,24,33,22,"content"],[44,31,33,29],[45,6,34,4,"collapse"],[45,14,34,12],[45,16,34,14],[46,4,35,2],[46,5,35,3],[46,6,35,4],[46,7,35,5],[47,2,36,0],[48,2,38,0],[48,11,38,9,"convertStackToComponentStack"],[48,39,38,37,"convertStackToComponentStack"],[48,40,38,38,"stack"],[48,45,38,50],[48,47,38,68],[49,4,39,2],[49,8,39,8,"componentStack"],[49,22,39,22],[49,25,39,25],[49,27,39,27],[50,4,40,2],[50,9,40,7],[50,13,40,11,"i"],[50,14,40,12],[50,17,40,15],[50,18,40,16],[50,20,40,18,"i"],[50,21,40,19],[50,24,40,22,"stack"],[50,29,40,27],[50,30,40,28,"length"],[50,36,40,34],[50,38,40,36,"i"],[50,39,40,37],[50,41,40,39],[50,43,40,41],[51,6,41,4],[51,10,41,10,"frame"],[51,15,41,15],[51,18,41,18,"stack"],[51,23,41,23],[51,24,41,24,"i"],[51,25,41,25],[51,26,41,26],[52,6,43,4],[52,10,43,8,"frame"],[52,15,43,13],[52,16,43,14,"lineNumber"],[52,26,43,24],[52,30,43,28],[52,34,43,32],[52,38,43,36,"frame"],[52,43,43,41],[52,44,43,42,"column"],[52,50,43,48],[52,54,43,52],[52,58,43,56],[52,60,43,58],[53,8,44,6,"componentStack"],[53,22,44,20],[53,23,44,21,"push"],[53,27,44,25],[53,28,44,26],[54,10,45,8,"fileName"],[54,18,45,16],[54,20,45,18,"frame"],[54,25,45,23],[54,27,45,25,"file"],[54,31,45,29],[54,35,45,33],[54,37,45,35],[55,10,46,8,"location"],[55,18,46,16],[55,20,46,18],[56,12,47,10,"row"],[56,15,47,13],[56,17,47,15,"frame"],[56,22,47,20],[56,23,47,21,"lineNumber"],[56,33,47,31],[57,12,48,10,"column"],[57,18,48,16],[57,20,48,18,"frame"],[57,25,48,23],[57,26,48,24,"column"],[58,10,49,8],[58,11,49,9],[59,10,50,8,"content"],[59,17,50,15],[59,19,50,17,"frame"],[59,24,50,22],[59,25,50,23,"methodName"],[59,35,50,33],[60,10,51,8,"collapse"],[60,18,51,16],[60,20,51,18],[61,8,52,6],[61,9,52,7],[61,10,52,8],[62,6,53,4],[63,4,54,2],[64,4,55,2],[64,11,55,9,"componentStack"],[64,25,55,23],[65,2,56,0],[66,2,56,1],[66,6,72,6,"LogBoxLog"],[66,15,72,15],[67,4,109,2],[67,13,109,2,"LogBoxLog"],[67,23,109,14,"data"],[67,27,109,33],[67,29,109,35],[68,6,109,35],[68,10,109,35,"_classCallCheck"],[68,25,109,35],[68,26,109,35,"default"],[68,33,109,35],[68,41,109,35,"LogBoxLog"],[68,50,109,35],[69,6,109,35],[69,11,85,2,"symbolicated"],[69,23,85,14],[69,26,89,65],[70,8,90,4,"error"],[70,13,90,9],[70,15,90,11],[70,19,90,15],[71,8,91,4,"stack"],[71,13,91,9],[71,15,91,11],[71,19,91,15],[72,8,92,4,"status"],[72,14,92,10],[72,16,92,12],[73,6,93,2],[73,7,93,3],[74,6,93,3],[74,11,94,2,"symbolicatedComponentStack"],[74,37,94,28],[74,40,102,74],[75,8,103,4,"error"],[75,13,103,9],[75,15,103,11],[75,19,103,15],[76,8,104,4,"componentStack"],[76,22,104,18],[76,24,104,20],[76,28,104,24],[77,8,105,4,"status"],[77,14,105,10],[77,16,105,12],[78,6,106,2],[78,7,106,3],[79,6,110,4],[79,10,110,8],[79,11,110,9,"level"],[79,16,110,14],[79,19,110,17,"data"],[79,23,110,21],[79,24,110,22,"level"],[79,29,110,27],[80,6,111,4],[80,10,111,8],[80,11,111,9,"type"],[80,15,111,13],[80,18,111,16,"data"],[80,22,111,20],[80,23,111,21,"type"],[80,27,111,25],[81,6,112,4],[81,10,112,8],[81,11,112,9,"message"],[81,18,112,16],[81,21,112,19,"data"],[81,25,112,23],[81,26,112,24,"message"],[81,33,112,31],[82,6,113,4],[82,10,113,8],[82,11,113,9,"stack"],[82,16,113,14],[82,19,113,17,"data"],[82,23,113,21],[82,24,113,22,"stack"],[82,29,113,27],[83,6,114,4],[83,10,114,8],[83,11,114,9,"category"],[83,19,114,17],[83,22,114,20,"data"],[83,26,114,24],[83,27,114,25,"category"],[83,35,114,33],[84,6,115,4],[84,10,115,8],[84,11,115,9,"componentStack"],[84,25,115,23],[84,28,115,26,"data"],[84,32,115,30],[84,33,115,31,"componentStack"],[84,47,115,45],[85,6,116,4],[85,10,116,8],[85,11,116,9,"componentStackType"],[85,29,116,27],[85,32,116,30,"data"],[85,36,116,34],[85,37,116,35,"componentStackType"],[85,55,116,53],[85,59,116,57],[85,67,116,65],[86,6,117,4],[86,10,117,8],[86,11,117,9,"codeFrame"],[86,20,117,18],[86,23,117,21,"data"],[86,27,117,25],[86,28,117,26,"codeFrame"],[86,37,117,35],[87,6,118,4],[87,10,118,8],[87,11,118,9,"isComponentError"],[87,27,118,25],[87,30,118,28,"data"],[87,34,118,32],[87,35,118,33,"isComponentError"],[87,51,118,49],[88,6,119,4],[88,10,119,8],[88,11,119,9,"extraData"],[88,20,119,18],[88,23,119,21,"data"],[88,27,119,25],[88,28,119,26,"extraData"],[88,37,119,35],[89,6,120,4],[89,10,120,8],[89,11,120,9,"count"],[89,16,120,14],[89,19,120,17],[89,20,120,18],[90,6,121,4],[90,10,121,8],[90,11,121,9,"onNotificationPress"],[90,30,121,28],[90,33,121,31,"data"],[90,37,121,35],[90,38,121,36,"onNotificationPress"],[90,57,121,55],[91,4,122,2],[92,4,122,3],[92,15,122,3,"_createClass"],[92,27,122,3],[92,28,122,3,"default"],[92,35,122,3],[92,37,122,3,"LogBoxLog"],[92,46,122,3],[93,6,122,3,"key"],[93,9,122,3],[94,6,122,3,"value"],[94,11,122,3],[94,13,124,2],[94,22,124,2,"incrementCount"],[94,36,124,16,"incrementCount"],[94,37,124,16],[94,39,124,25],[95,8,125,4],[95,12,125,8],[95,13,125,9,"count"],[95,18,125,14],[95,22,125,18],[95,23,125,19],[96,6,126,2],[97,4,126,3],[98,6,126,3,"key"],[98,9,126,3],[99,6,126,3,"value"],[99,11,126,3],[99,13,128,2],[99,22,128,2,"getAvailableStack"],[99,39,128,19,"getAvailableStack"],[99,40,128,19],[99,42,128,29],[100,8,129,4],[100,15,129,11],[100,19,129,15],[100,20,129,16,"symbolicated"],[100,32,129,28],[100,33,129,29,"status"],[100,39,129,35],[100,44,129,40],[100,54,129,50],[100,57,130,8],[100,61,130,12],[100,62,130,13,"symbolicated"],[100,74,130,25],[100,75,130,26,"stack"],[100,80,130,31],[100,83,131,8],[100,87,131,12],[100,88,131,13,"stack"],[100,93,131,18],[101,6,132,2],[102,4,132,3],[103,6,132,3,"key"],[103,9,132,3],[104,6,132,3,"value"],[104,11,132,3],[104,13,134,2],[104,22,134,2,"getAvailableComponentStack"],[104,48,134,28,"getAvailableComponentStack"],[104,49,134,28],[104,51,134,47],[105,8,135,4],[105,12,135,8],[105,16,135,12],[105,17,135,13,"componentStackType"],[105,35,135,31],[105,40,135,36],[105,48,135,44],[105,50,135,46],[106,10,136,6],[106,17,136,13],[106,21,136,17],[106,22,136,18,"componentStack"],[106,36,136,32],[107,8,137,4],[108,8,138,4],[108,15,138,11],[108,19,138,15],[108,20,138,16,"symbolicatedComponentStack"],[108,46,138,42],[108,47,138,43,"status"],[108,53,138,49],[108,58,138,54],[108,68,138,64],[108,71,139,8],[108,75,139,12],[108,76,139,13,"symbolicatedComponentStack"],[108,102,139,39],[108,103,139,40,"componentStack"],[108,117,139,54],[108,120,140,8],[108,124,140,12],[108,125,140,13,"componentStack"],[108,139,140,27],[109,6,141,2],[110,4,141,3],[111,6,141,3,"key"],[111,9,141,3],[112,6,141,3,"value"],[112,11,141,3],[112,13,143,2],[112,22,143,2,"retrySymbolicate"],[112,38,143,18,"retrySymbolicate"],[112,39,143,19,"callback"],[112,47,143,67],[112,49,143,75],[113,8,144,4],[113,12,144,8,"retry"],[113,17,144,13],[113,20,144,16],[113,25,144,21],[114,8,145,4],[114,12,145,8],[114,16,145,12],[114,17,145,13,"symbolicated"],[114,29,145,25],[114,30,145,26,"status"],[114,36,145,32],[114,41,145,37],[114,51,145,47],[114,53,145,49],[115,10,146,6,"LogBoxSymbolication"],[115,29,146,25],[115,30,146,26,"deleteStack"],[115,41,146,37],[115,42,146,38],[115,46,146,42],[115,47,146,43,"stack"],[115,52,146,48],[115,53,146,49],[116,10,147,6,"retry"],[116,15,147,11],[116,18,147,14],[116,22,147,18],[117,8,148,4],[118,8,149,4],[118,12,149,8],[118,16,149,12],[118,17,149,13,"symbolicatedComponentStack"],[118,43,149,39],[118,44,149,40,"status"],[118,50,149,46],[118,55,149,51],[118,65,149,61],[118,67,149,63],[119,10,150,6,"LogBoxSymbolication"],[119,29,150,25],[119,30,150,26,"deleteStack"],[119,41,150,37],[119,42,151,8,"convertComponentStateToStack"],[119,70,151,36],[119,71,151,37],[119,75,151,41],[119,76,151,42,"componentStack"],[119,90,151,56],[119,91,152,6],[119,92,152,7],[120,10,153,6,"retry"],[120,15,153,11],[120,18,153,14],[120,22,153,18],[121,8,154,4],[122,8,155,4],[122,12,155,8,"retry"],[122,17,155,13],[122,19,155,15],[123,10,156,6],[123,14,156,10],[123,15,156,11,"handleSymbolicate"],[123,32,156,28],[123,33,156,29,"callback"],[123,41,156,37],[123,42,156,38],[124,8,157,4],[125,6,158,2],[126,4,158,3],[127,6,158,3,"key"],[127,9,158,3],[128,6,158,3,"value"],[128,11,158,3],[128,13,160,2],[128,22,160,2,"symbolicate"],[128,33,160,13,"symbolicate"],[128,34,160,14,"callback"],[128,42,160,62],[128,44,160,70],[129,8,161,4],[129,12,161,8],[129,16,161,12],[129,17,161,13,"symbolicated"],[129,29,161,25],[129,30,161,26,"status"],[129,36,161,32],[129,41,161,37],[129,47,161,43],[129,49,161,45],[130,10,162,6],[130,14,162,10],[130,15,162,11,"handleSymbolicate"],[130,32,162,28],[130,33,162,29,"callback"],[130,41,162,37],[130,42,162,38],[131,8,163,4],[132,6,164,2],[133,4,164,3],[134,6,164,3,"key"],[134,9,164,3],[135,6,164,3,"value"],[135,11,164,3],[135,13,166,2],[135,22,166,2,"handleSymbolicate"],[135,39,166,19,"handleSymbolicate"],[135,40,166,20,"callback"],[135,48,166,68],[135,50,166,76],[136,8,167,4],[136,12,168,6],[136,16,168,10],[136,17,168,11,"symbolicated"],[136,29,168,23],[136,30,168,24,"status"],[136,36,168,30],[136,41,168,35],[136,50,168,44],[136,54,169,6],[136,58,169,10],[136,59,169,11,"symbolicated"],[136,71,169,23],[136,72,169,24,"status"],[136,78,169,30],[136,83,169,35],[136,93,169,45],[136,95,170,6],[137,10,171,6],[137,14,171,10],[137,15,171,11,"updateStatus"],[137,27,171,23],[137,28,171,24],[137,32,171,28],[137,34,171,30],[137,38,171,34],[137,40,171,36],[137,44,171,40],[137,46,171,42,"callback"],[137,54,171,50],[137,55,171,51],[138,10,172,6,"LogBoxSymbolication"],[138,29,172,25],[138,30,172,26,"symbolicate"],[138,41,172,37],[138,42,172,38],[138,46,172,42],[138,47,172,43,"stack"],[138,52,172,48],[138,54,172,50],[138,58,172,54],[138,59,172,55,"extraData"],[138,68,172,64],[138,69,172,65],[138,70,172,66,"then"],[138,74,172,70],[138,75,173,8,"data"],[138,79,173,12],[138,83,173,16],[139,12,174,10],[139,16,174,14],[139,17,174,15,"updateStatus"],[139,29,174,27],[139,30,174,28],[139,34,174,32],[139,36,174,34,"data"],[139,40,174,38],[139,42,174,40,"stack"],[139,47,174,45],[139,49,174,47,"data"],[139,53,174,51],[139,55,174,53,"codeFrame"],[139,64,174,62],[139,66,174,64,"callback"],[139,74,174,72],[139,75,174,73],[140,10,175,8],[140,11,175,9],[140,13,176,8,"error"],[140,18,176,13],[140,22,176,17],[141,12,177,10],[141,16,177,14],[141,17,177,15,"updateStatus"],[141,29,177,27],[141,30,177,28,"error"],[141,35,177,33],[141,37,177,35],[141,41,177,39],[141,43,177,41],[141,47,177,45],[141,49,177,47,"callback"],[141,57,177,55],[141,58,177,56],[142,10,178,8],[142,11,179,6],[142,12,179,7],[143,8,180,4],[144,8,181,4],[144,12,182,6],[144,16,182,10],[144,17,182,11,"componentStack"],[144,31,182,25],[144,35,182,29],[144,39,182,33],[144,43,183,6],[144,47,183,10],[144,48,183,11,"componentStackType"],[144,66,183,29],[144,71,183,34],[144,78,183,41],[144,82,184,6],[144,86,184,10],[144,87,184,11,"symbolicatedComponentStack"],[144,113,184,37],[144,114,184,38,"status"],[144,120,184,44],[144,125,184,49],[144,134,184,58],[144,138,185,6],[144,142,185,10],[144,143,185,11,"symbolicatedComponentStack"],[144,169,185,37],[144,170,185,38,"status"],[144,176,185,44],[144,181,185,49],[144,191,185,59],[144,193,186,6],[145,10,187,6],[145,14,187,10],[145,15,187,11,"updateComponentStackStatus"],[145,41,187,37],[145,42,187,38],[145,46,187,42],[145,48,187,44],[145,52,187,48],[145,54,187,50],[145,58,187,54],[145,60,187,56,"callback"],[145,68,187,64],[145,69,187,65],[146,10,188,6],[146,14,188,12,"componentStackFrames"],[146,34,188,32],[146,37,188,35,"convertComponentStateToStack"],[146,65,188,63],[146,66,189,8],[146,70,189,12],[146,71,189,13,"componentStack"],[146,85,190,6],[146,86,190,7],[147,10,191,6,"LogBoxSymbolication"],[147,29,191,25],[147,30,191,26,"symbolicate"],[147,41,191,37],[147,42,191,38,"componentStackFrames"],[147,62,191,58],[147,64,191,60],[147,66,191,62],[147,67,191,63],[147,68,191,64,"then"],[147,72,191,68],[147,73,192,8,"data"],[147,77,192,12],[147,81,192,16],[148,12,193,10],[148,16,193,14],[148,17,193,15,"updateComponentStackStatus"],[148,43,193,41],[148,44,194,12],[148,48,194,16],[148,50,195,12,"convertStackToComponentStack"],[148,78,195,40],[148,79,195,41,"data"],[148,83,195,45],[148,84,195,46,"stack"],[148,89,195,51],[148,90,195,52],[148,92,196,12,"data"],[148,96,196,16],[148,98,196,18,"codeFrame"],[148,107,196,27],[148,109,197,12,"callback"],[148,117,198,10],[148,118,198,11],[149,10,199,8],[149,11,199,9],[149,13,200,8,"error"],[149,18,200,13],[149,22,200,17],[150,12,201,10],[150,16,201,14],[150,17,201,15,"updateComponentStackStatus"],[150,43,201,41],[150,44,201,42,"error"],[150,49,201,47],[150,51,201,49],[150,55,201,53],[150,57,201,55],[150,61,201,59],[150,63,201,61,"callback"],[150,71,201,69],[150,72,201,70],[151,10,202,8],[151,11,203,6],[151,12,203,7],[152,8,204,4],[153,6,205,2],[154,4,205,3],[155,6,205,3,"key"],[155,9,205,3],[156,6,205,3,"value"],[156,11,205,3],[156,13,207,2],[156,22,207,2,"updateStatus"],[156,34,207,14,"updateStatus"],[156,35,208,4,"error"],[156,40,208,17],[156,42,209,4,"stack"],[156,47,209,17],[156,49,210,4,"codeFrame"],[156,58,210,25],[156,60,211,4,"callback"],[156,68,211,52],[156,70,212,10],[157,8,213,4],[157,12,213,10,"lastStatus"],[157,22,213,20],[157,25,213,23],[157,29,213,27],[157,30,213,28,"symbolicated"],[157,42,213,40],[157,43,213,41,"status"],[157,49,213,47],[158,8,214,4],[158,12,214,8,"error"],[158,17,214,13],[158,21,214,17],[158,25,214,21],[158,27,214,23],[159,10,215,6],[159,14,215,10],[159,15,215,11,"symbolicated"],[159,27,215,23],[159,30,215,26],[160,12,216,8,"error"],[160,17,216,13],[161,12,217,8,"stack"],[161,17,217,13],[161,19,217,15],[161,23,217,19],[162,12,218,8,"status"],[162,18,218,14],[162,20,218,16],[163,10,219,6],[163,11,219,7],[164,8,220,4],[164,9,220,5],[164,15,220,11],[164,19,220,15,"stack"],[164,24,220,20],[164,28,220,24],[164,32,220,28],[164,34,220,30],[165,10,221,6],[165,14,221,10,"codeFrame"],[165,23,221,19],[165,25,221,21],[166,12,222,8],[166,16,222,12],[166,17,222,13,"codeFrame"],[166,26,222,22],[166,29,222,25,"codeFrame"],[166,38,222,34],[167,10,223,6],[168,10,225,6],[168,14,225,10],[168,15,225,11,"symbolicated"],[168,27,225,23],[168,30,225,26],[169,12,226,8,"error"],[169,17,226,13],[169,19,226,15],[169,23,226,19],[170,12,227,8,"stack"],[170,17,227,13],[171,12,228,8,"status"],[171,18,228,14],[171,20,228,16],[172,10,229,6],[172,11,229,7],[173,8,230,4],[173,9,230,5],[173,15,230,11],[174,10,231,6],[174,14,231,10],[174,15,231,11,"symbolicated"],[174,27,231,23],[174,30,231,26],[175,12,232,8,"error"],[175,17,232,13],[175,19,232,15],[175,23,232,19],[176,12,233,8,"stack"],[176,17,233,13],[176,19,233,15],[176,23,233,19],[177,12,234,8,"status"],[177,18,234,14],[177,20,234,16],[178,10,235,6],[178,11,235,7],[179,8,236,4],[180,8,238,4],[180,12,238,8,"callback"],[180,20,238,16],[180,24,238,20,"lastStatus"],[180,34,238,30],[180,39,238,35],[180,43,238,39],[180,44,238,40,"symbolicated"],[180,56,238,52],[180,57,238,53,"status"],[180,63,238,59],[180,65,238,61],[181,10,239,6,"callback"],[181,18,239,14],[181,19,239,15],[181,23,239,19],[181,24,239,20,"symbolicated"],[181,36,239,32],[181,37,239,33,"status"],[181,43,239,39],[181,44,239,40],[182,8,240,4],[183,6,241,2],[184,4,241,3],[185,6,241,3,"key"],[185,9,241,3],[186,6,241,3,"value"],[186,11,241,3],[186,13,243,2],[186,22,243,2,"updateComponentStackStatus"],[186,48,243,28,"updateComponentStackStatus"],[186,49,244,4,"error"],[186,54,244,17],[186,56,245,4,"componentStack"],[186,70,245,35],[186,72,246,4,"codeFrame"],[186,81,246,25],[186,83,247,4,"callback"],[186,91,247,52],[186,93,248,10],[187,8,249,4],[187,12,249,10,"lastStatus"],[187,22,249,20],[187,25,249,23],[187,29,249,27],[187,30,249,28,"symbolicatedComponentStack"],[187,56,249,54],[187,57,249,55,"status"],[187,63,249,61],[188,8,250,4],[188,12,250,8,"error"],[188,17,250,13],[188,21,250,17],[188,25,250,21],[188,27,250,23],[189,10,251,6],[189,14,251,10],[189,15,251,11,"symbolicatedComponentStack"],[189,41,251,37],[189,44,251,40],[190,12,252,8,"error"],[190,17,252,13],[191,12,253,8,"componentStack"],[191,26,253,22],[191,28,253,24],[191,32,253,28],[192,12,254,8,"status"],[192,18,254,14],[192,20,254,16],[193,10,255,6],[193,11,255,7],[194,8,256,4],[194,9,256,5],[194,15,256,11],[194,19,256,15,"componentStack"],[194,33,256,29],[194,37,256,33],[194,41,256,37],[194,43,256,39],[195,10,257,6],[195,14,257,10,"codeFrame"],[195,23,257,19],[195,25,257,21],[196,12,258,8],[196,16,258,12],[196,17,258,13,"componentCodeFrame"],[196,35,258,31],[196,38,258,34,"codeFrame"],[196,47,258,43],[197,10,259,6],[198,10,260,6],[198,14,260,10],[198,15,260,11,"symbolicatedComponentStack"],[198,41,260,37],[198,44,260,40],[199,12,261,8,"error"],[199,17,261,13],[199,19,261,15],[199,23,261,19],[200,12,262,8,"componentStack"],[200,26,262,22],[201,12,263,8,"status"],[201,18,263,14],[201,20,263,16],[202,10,264,6],[202,11,264,7],[203,8,265,4],[203,9,265,5],[203,15,265,11],[204,10,266,6],[204,14,266,10],[204,15,266,11,"symbolicatedComponentStack"],[204,41,266,37],[204,44,266,40],[205,12,267,8,"error"],[205,17,267,13],[205,19,267,15],[205,23,267,19],[206,12,268,8,"componentStack"],[206,26,268,22],[206,28,268,24],[206,32,268,28],[207,12,269,8,"status"],[207,18,269,14],[207,20,269,16],[208,10,270,6],[208,11,270,7],[209,8,271,4],[210,8,273,4],[210,12,273,8,"callback"],[210,20,273,16],[210,24,273,20,"lastStatus"],[210,34,273,30],[210,39,273,35],[210,43,273,39],[210,44,273,40,"symbolicatedComponentStack"],[210,70,273,66],[210,71,273,67,"status"],[210,77,273,73],[210,79,273,75],[211,10,274,6,"callback"],[211,18,274,14],[211,19,274,15],[211,23,274,19],[211,24,274,20,"symbolicatedComponentStack"],[211,50,274,46],[211,51,274,47,"status"],[211,57,274,53],[211,58,274,54],[212,8,275,4],[213,6,276,2],[214,4,276,3],[215,2,276,3],[216,2,279,0],[216,6,279,0,"_default"],[216,14,279,0],[216,17,279,15,"LogBoxLog"],[216,26,279,24],[217,0,279,25],[217,3]],"functionMap":{"names":["<global>","convertComponentStateToStack","componentStack.map$argument_0","convertStackToComponentStack","LogBoxLog","constructor","incrementCount","getAvailableStack","getAvailableComponentStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","updateComponentStackStatus"],"mappings":"AAA;AC2B;4BCC;IDM;CDC;AGE;CHkB;AIgB;ECqC;GDa;EEE;GFE;EGE;GHI;EIE;GJO;EKE;GLe;EME;GNI;EOE;QCO;SDE;QEC;SFE;QCc;SDO;QEC;SFE;GPG;EUE;GVkC;EWE;GXiC;CJC"},"hasCjsExports":false},"type":"js/module"}]}