{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":115,"index":130}}],"key":"Wm75LgE4xYscVWo0KoLFlflJQCo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":131},"end":{"line":4,"column":31,"index":162}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./LinkingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":204},"end":{"line":6,"column":53,"index":257}}],"key":"r/0Yvi+HouDAqn4vN4m4I6AMfEI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useLinkProps = useLinkProps;\n  var _reactNavigationCore = require(_dependencyMap[0], \"@react-navigation/core\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _LinkingContextJs = require(_dependencyMap[3], \"./LinkingContext.js\");\n  const getStateFromParams = params => {\n    if (params?.state) {\n      return params.state;\n    }\n    if (params?.screen) {\n      return {\n        routes: [{\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error this is fine ðŸ”¥\n          state: params.screen ? getStateFromParams(params.params) : undefined\n        }]\n      };\n    }\n    return undefined;\n  };\n\n  /**\n   * Hook to get props for an anchor tag so it can work with in page navigation.\n   *\n   * @param props.screen Name of the screen to navigate to (e.g. `'Feeds'`).\n   * @param props.params Params to pass to the screen to navigate to (e.g. `{ sort: 'hot' }`).\n   * @param props.href Optional absolute path to use for the href (e.g. `/feeds/hot`).\n   * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n   */\n  function useLinkProps({\n    screen,\n    params,\n    href,\n    action\n  }) {\n    const root = React.useContext(_reactNavigationCore.NavigationContainerRefContext);\n    const navigation = React.useContext(_reactNavigationCore.NavigationHelpersContext);\n    const {\n      options\n    } = React.useContext(_LinkingContextJs.LinkingContext);\n    const onPress = e => {\n      let shouldHandle = false;\n      if (Platform.default.OS !== 'web' || !e) {\n        e?.preventDefault?.();\n        shouldHandle = true;\n      } else {\n        // ignore clicks with modifier keys\n        const hasModifierKey = 'metaKey' in e && e.metaKey || 'altKey' in e && e.altKey || 'ctrlKey' in e && e.ctrlKey || 'shiftKey' in e && e.shiftKey;\n\n        // only handle left clicks\n        const isLeftClick = 'button' in e ? e.button == null || e.button === 0 : true;\n\n        // let browser handle \"target=_blank\" etc.\n        const isSelfTarget = e.currentTarget && 'target' in e.currentTarget ? [undefined, null, '', 'self'].includes(e.currentTarget.target) : true;\n        if (!hasModifierKey && isLeftClick && isSelfTarget) {\n          e.preventDefault?.();\n          shouldHandle = true;\n        }\n      }\n      if (shouldHandle) {\n        if (action) {\n          if (navigation) {\n            navigation.dispatch(action);\n          } else if (root) {\n            root.dispatch(action);\n          } else {\n            throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n          }\n        } else {\n          // @ts-expect-error This is already type-checked by the prop types\n          navigation?.navigate(screen, params);\n        }\n      }\n    };\n    const getPathFromStateHelper = options?.getPathFromState ?? _reactNavigationCore.getPathFromState;\n    return {\n      href: href ?? (Platform.default.OS === 'web' && screen != null ? getPathFromStateHelper({\n        routes: [{\n          // @ts-expect-error this is fine ðŸ”¥\n          name: screen,\n          // @ts-expect-error this is fine ðŸ”¥\n          params: params,\n          // @ts-expect-error this is fine ðŸ”¥\n          state: getStateFromParams(params)\n        }]\n      }, options?.config) : undefined),\n      role: 'link',\n      onPress\n    };\n  }\n});","lineCount":120,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13],[11,10,1,13,"d"],[11,11,1,13],[11,14,1,13,"Object"],[11,20,1,13],[11,21,1,13,"getOwnPropertyDescriptor"],[11,45,1,13],[11,46,1,13,"e"],[11,47,1,13],[11,49,1,13,"k"],[11,50,1,13],[12,6,1,13,"Object"],[12,12,1,13],[12,13,1,13,"defineProperty"],[12,27,1,13],[12,28,1,13,"n"],[12,29,1,13],[12,31,1,13,"k"],[12,32,1,13],[12,34,1,13,"d"],[12,35,1,13],[12,36,1,13,"get"],[12,39,1,13],[12,42,1,13,"d"],[12,43,1,13],[13,8,1,13,"enumerable"],[13,18,1,13],[14,8,1,13,"get"],[14,11,1,13],[14,22,1,13,"get"],[14,23,1,13],[15,10,1,13],[15,17,1,13,"e"],[15,18,1,13],[15,19,1,13,"k"],[15,20,1,13],[16,8,1,13],[17,6,1,13],[18,4,1,13],[19,4,1,13,"n"],[19,5,1,13],[19,6,1,13,"default"],[19,13,1,13],[19,16,1,13,"e"],[19,17,1,13],[20,4,1,13],[20,11,1,13,"n"],[20,12,1,13],[21,2,1,13],[22,2,1,13],[22,11,1,13,"_interopDefault"],[22,27,1,13,"e"],[22,28,1,13],[23,4,1,13],[23,11,1,13,"e"],[23,12,1,13],[23,16,1,13,"e"],[23,17,1,13],[23,18,1,13,"__esModule"],[23,28,1,13],[23,31,1,13,"e"],[23,32,1,13],[24,6,1,13,"default"],[24,13,1,13],[24,15,1,13,"e"],[25,4,1,13],[26,2,1,13],[27,2,32,0,"exports"],[27,9,32,0],[27,10,32,0,"useLinkProps"],[27,22,32,0],[27,25,32,0,"useLinkProps"],[27,37,32,0],[28,2,3,0],[28,6,3,0,"_reactNavigationCore"],[28,26,3,0],[28,29,3,0,"require"],[28,36,3,0],[28,37,3,0,"_dependencyMap"],[28,51,3,0],[29,2,4,0],[29,6,4,0,"_react"],[29,12,4,0],[29,15,4,0,"require"],[29,22,4,0],[29,23,4,0,"_dependencyMap"],[29,37,4,0],[30,2,4,0],[30,6,4,0,"React"],[30,11,4,0],[30,14,4,0,"_interopNamespace"],[30,31,4,0],[30,32,4,0,"_react"],[30,38,4,0],[31,2,4,31],[31,6,4,31,"_reactNativeWebDistExportsPlatform"],[31,40,4,31],[31,43,4,31,"require"],[31,50,4,31],[31,51,4,31,"_dependencyMap"],[31,65,4,31],[32,2,4,31],[32,6,4,31,"Platform"],[32,14,4,31],[32,17,4,31,"_interopDefault"],[32,32,4,31],[32,33,4,31,"_reactNativeWebDistExportsPlatform"],[32,67,4,31],[33,2,6,0],[33,6,6,0,"_LinkingContextJs"],[33,23,6,0],[33,26,6,0,"require"],[33,33,6,0],[33,34,6,0,"_dependencyMap"],[33,48,6,0],[34,2,7,0],[34,8,7,6,"getStateFromParams"],[34,26,7,24],[34,29,7,27,"params"],[34,35,7,33],[34,39,7,37],[35,4,8,2],[35,8,8,6,"params"],[35,14,8,12],[35,16,8,14,"state"],[35,21,8,19],[35,23,8,21],[36,6,9,4],[36,13,9,11,"params"],[36,19,9,17],[36,20,9,18,"state"],[36,25,9,23],[37,4,10,2],[38,4,11,2],[38,8,11,6,"params"],[38,14,11,12],[38,16,11,14,"screen"],[38,22,11,20],[38,24,11,22],[39,6,12,4],[39,13,12,11],[40,8,13,6,"routes"],[40,14,13,12],[40,16,13,14],[40,17,13,15],[41,10,14,8,"name"],[41,14,14,12],[41,16,14,14,"params"],[41,22,14,20],[41,23,14,21,"screen"],[41,29,14,27],[42,10,15,8,"params"],[42,16,15,14],[42,18,15,16,"params"],[42,24,15,22],[42,25,15,23,"params"],[42,31,15,29],[43,10,16,8],[44,10,17,8,"state"],[44,15,17,13],[44,17,17,15,"params"],[44,23,17,21],[44,24,17,22,"screen"],[44,30,17,28],[44,33,17,31,"getStateFromParams"],[44,51,17,49],[44,52,17,50,"params"],[44,58,17,56],[44,59,17,57,"params"],[44,65,17,63],[44,66,17,64],[44,69,17,67,"undefined"],[45,8,18,6],[45,9,18,7],[46,6,19,4],[46,7,19,5],[47,4,20,2],[48,4,21,2],[48,11,21,9,"undefined"],[48,20,21,18],[49,2,22,0],[49,3,22,1],[51,2,24,0],[52,0,25,0],[53,0,26,0],[54,0,27,0],[55,0,28,0],[56,0,29,0],[57,0,30,0],[58,0,31,0],[59,2,32,7],[59,11,32,16,"useLinkProps"],[59,23,32,28,"useLinkProps"],[59,24,32,29],[60,4,33,2,"screen"],[60,10,33,8],[61,4,34,2,"params"],[61,10,34,8],[62,4,35,2,"href"],[62,8,35,6],[63,4,36,2,"action"],[64,2,37,0],[64,3,37,1],[64,5,37,3],[65,4,38,2],[65,10,38,8,"root"],[65,14,38,12],[65,17,38,15,"React"],[65,22,38,20],[65,23,38,21,"useContext"],[65,33,38,31],[65,34,38,32,"NavigationContainerRefContext"],[65,54,38,61],[65,55,38,61,"NavigationContainerRefContext"],[65,84,38,61],[65,85,38,62],[66,4,39,2],[66,10,39,8,"navigation"],[66,20,39,18],[66,23,39,21,"React"],[66,28,39,26],[66,29,39,27,"useContext"],[66,39,39,37],[66,40,39,38,"NavigationHelpersContext"],[66,60,39,62],[66,61,39,62,"NavigationHelpersContext"],[66,85,39,62],[66,86,39,63],[67,4,40,2],[67,10,40,8],[68,6,41,4,"options"],[69,4,42,2],[69,5,42,3],[69,8,42,6,"React"],[69,13,42,11],[69,14,42,12,"useContext"],[69,24,42,22],[69,25,42,23,"LinkingContext"],[69,42,42,37],[69,43,42,37,"LinkingContext"],[69,57,42,37],[69,58,42,38],[70,4,43,2],[70,10,43,8,"onPress"],[70,17,43,15],[70,20,43,18,"e"],[70,21,43,19],[70,25,43,23],[71,6,44,4],[71,10,44,8,"shouldHandle"],[71,22,44,20],[71,25,44,23],[71,30,44,28],[72,6,45,4],[72,10,45,8,"Platform"],[72,18,45,16],[72,19,45,16,"default"],[72,26,45,16],[72,27,45,17,"OS"],[72,29,45,19],[72,34,45,24],[72,39,45,29],[72,43,45,33],[72,44,45,34,"e"],[72,45,45,35],[72,47,45,37],[73,8,46,6,"e"],[73,9,46,7],[73,11,46,9,"preventDefault"],[73,25,46,23],[73,28,46,26],[73,29,46,27],[74,8,47,6,"shouldHandle"],[74,20,47,18],[74,23,47,21],[74,27,47,25],[75,6,48,4],[75,7,48,5],[75,13,48,11],[76,8,49,6],[77,8,50,6],[77,14,50,12,"hasModifierKey"],[77,28,50,26],[77,31,50,29],[77,40,50,38],[77,44,50,42,"e"],[77,45,50,43],[77,49,50,47,"e"],[77,50,50,48],[77,51,50,49,"metaKey"],[77,58,50,56],[77,62,50,60],[77,70,50,68],[77,74,50,72,"e"],[77,75,50,73],[77,79,50,77,"e"],[77,80,50,78],[77,81,50,79,"altKey"],[77,87,50,85],[77,91,50,89],[77,100,50,98],[77,104,50,102,"e"],[77,105,50,103],[77,109,50,107,"e"],[77,110,50,108],[77,111,50,109,"ctrlKey"],[77,118,50,116],[77,122,50,120],[77,132,50,130],[77,136,50,134,"e"],[77,137,50,135],[77,141,50,139,"e"],[77,142,50,140],[77,143,50,141,"shiftKey"],[77,151,50,149],[79,8,52,6],[80,8,53,6],[80,14,53,12,"isLeftClick"],[80,25,53,23],[80,28,53,26],[80,36,53,34],[80,40,53,38,"e"],[80,41,53,39],[80,44,53,42,"e"],[80,45,53,43],[80,46,53,44,"button"],[80,52,53,50],[80,56,53,54],[80,60,53,58],[80,64,53,62,"e"],[80,65,53,63],[80,66,53,64,"button"],[80,72,53,70],[80,77,53,75],[80,78,53,76],[80,81,53,79],[80,85,53,83],[82,8,55,6],[83,8,56,6],[83,14,56,12,"isSelfTarget"],[83,26,56,24],[83,29,56,27,"e"],[83,30,56,28],[83,31,56,29,"currentTarget"],[83,44,56,42],[83,48,56,46],[83,56,56,54],[83,60,56,58,"e"],[83,61,56,59],[83,62,56,60,"currentTarget"],[83,75,56,73],[83,78,56,76],[83,79,56,77,"undefined"],[83,88,56,86],[83,90,56,88],[83,94,56,92],[83,96,56,94],[83,98,56,96],[83,100,56,98],[83,106,56,104],[83,107,56,105],[83,108,56,106,"includes"],[83,116,56,114],[83,117,56,115,"e"],[83,118,56,116],[83,119,56,117,"currentTarget"],[83,132,56,130],[83,133,56,131,"target"],[83,139,56,137],[83,140,56,138],[83,143,56,141],[83,147,56,145],[84,8,57,6],[84,12,57,10],[84,13,57,11,"hasModifierKey"],[84,27,57,25],[84,31,57,29,"isLeftClick"],[84,42,57,40],[84,46,57,44,"isSelfTarget"],[84,58,57,56],[84,60,57,58],[85,10,58,8,"e"],[85,11,58,9],[85,12,58,10,"preventDefault"],[85,26,58,24],[85,29,58,27],[85,30,58,28],[86,10,59,8,"shouldHandle"],[86,22,59,20],[86,25,59,23],[86,29,59,27],[87,8,60,6],[88,6,61,4],[89,6,62,4],[89,10,62,8,"shouldHandle"],[89,22,62,20],[89,24,62,22],[90,8,63,6],[90,12,63,10,"action"],[90,18,63,16],[90,20,63,18],[91,10,64,8],[91,14,64,12,"navigation"],[91,24,64,22],[91,26,64,24],[92,12,65,10,"navigation"],[92,22,65,20],[92,23,65,21,"dispatch"],[92,31,65,29],[92,32,65,30,"action"],[92,38,65,36],[92,39,65,37],[93,10,66,8],[93,11,66,9],[93,17,66,15],[93,21,66,19,"root"],[93,25,66,23],[93,27,66,25],[94,12,67,10,"root"],[94,16,67,14],[94,17,67,15,"dispatch"],[94,25,67,23],[94,26,67,24,"action"],[94,32,67,30],[94,33,67,31],[95,10,68,8],[95,11,68,9],[95,17,68,15],[96,12,69,10],[96,18,69,16],[96,22,69,20,"Error"],[96,27,69,25],[96,28,69,26],[96,110,69,108],[96,111,69,109],[97,10,70,8],[98,8,71,6],[98,9,71,7],[98,15,71,13],[99,10,72,8],[100,10,73,8,"navigation"],[100,20,73,18],[100,22,73,20,"navigate"],[100,30,73,28],[100,31,73,29,"screen"],[100,37,73,35],[100,39,73,37,"params"],[100,45,73,43],[100,46,73,44],[101,8,74,6],[102,6,75,4],[103,4,76,2],[103,5,76,3],[104,4,77,2],[104,10,77,8,"getPathFromStateHelper"],[104,32,77,30],[104,35,77,33,"options"],[104,42,77,40],[104,44,77,42,"getPathFromState"],[104,60,77,58],[104,64,77,62,"getPathFromState"],[104,84,77,78],[104,85,77,78,"getPathFromState"],[104,101,77,78],[105,4,78,2],[105,11,78,9],[106,6,79,4,"href"],[106,10,79,8],[106,12,79,10,"href"],[106,16,79,14],[106,21,79,19,"Platform"],[106,29,79,27],[106,30,79,27,"default"],[106,37,79,27],[106,38,79,28,"OS"],[106,40,79,30],[106,45,79,35],[106,50,79,40],[106,54,79,44,"screen"],[106,60,79,50],[106,64,79,54],[106,68,79,58],[106,71,79,61,"getPathFromStateHelper"],[106,93,79,83],[106,94,79,84],[107,8,80,6,"routes"],[107,14,80,12],[107,16,80,14],[107,17,80,15],[108,10,81,8],[109,10,82,8,"name"],[109,14,82,12],[109,16,82,14,"screen"],[109,22,82,20],[110,10,83,8],[111,10,84,8,"params"],[111,16,84,14],[111,18,84,16,"params"],[111,24,84,22],[112,10,85,8],[113,10,86,8,"state"],[113,15,86,13],[113,17,86,15,"getStateFromParams"],[113,35,86,33],[113,36,86,34,"params"],[113,42,86,40],[114,8,87,6],[114,9,87,7],[115,6,88,4],[115,7,88,5],[115,9,88,7,"options"],[115,16,88,14],[115,18,88,16,"config"],[115,24,88,22],[115,25,88,23],[115,28,88,26,"undefined"],[115,37,88,35],[115,38,88,36],[116,6,89,4,"role"],[116,10,89,8],[116,12,89,10],[116,18,89,16],[117,6,90,4,"onPress"],[118,4,91,2],[118,5,91,3],[119,2,92,0],[120,0,92,1],[120,3]],"functionMap":{"names":["<global>","getStateFromParams","useLinkProps","onPress"],"mappings":"AAA;2BCM;CDe;OEU;kBCW;GDiC;CFgB"},"hasCjsExports":false},"type":"js/module"}]}