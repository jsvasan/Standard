{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = bezier;\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n  var float32ArraySupported = typeof Float32Array === 'function';\n  function A(aA1, aA2) {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  }\n  function B(aA1, aA2) {\n    return 3.0 * aA2 - 6.0 * aA1;\n  }\n  function C(aA1) {\n    return 3.0 * aA1;\n  }\n  function calcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  }\n  function getSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n  function binarySubdivide(aX, _aA, _aB, mX1, mX2) {\n    var currentX,\n      currentT,\n      i = 0,\n      aA = _aA,\n      aB = _aB;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n    return currentT;\n  }\n  function newtonRaphsonIterate(aX, _aGuessT, mX1, mX2) {\n    var aGuessT = _aGuessT;\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n  function bezier(mX1, mY1, mX2, mY2) {\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n      throw new Error('bezier x values must be in [0, 1] range');\n    }\n    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n    function getTForX(aX) {\n      var intervalStart = 0.0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n      --currentSample;\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    }\n    return function BezierEasing(x) {\n      if (mX1 === mY1 && mX2 === mY2) {\n        return x;\n      }\n      if (x === 0) {\n        return 0;\n      }\n      if (x === 1) {\n        return 1;\n      }\n      return calcBezier(getTForX(x), mY1, mY2);\n    };\n  }\n});","lineCount":101,"map":[[2,2,17,0],[2,14,17,12],[4,2,17,13,"Object"],[4,8,17,13],[4,9,17,13,"defineProperty"],[4,23,17,13],[4,24,17,13,"exports"],[4,31,17,13],[5,4,17,13,"value"],[5,9,17,13],[6,2,17,13],[7,2,17,13,"exports"],[7,9,17,13],[7,10,17,13,"default"],[7,17,17,13],[7,20,17,13,"bezier"],[7,26,17,13],[8,2,20,0],[8,6,20,6,"NEWTON_ITERATIONS"],[8,23,20,23],[8,26,20,26],[8,27,20,27],[9,2,21,0],[9,6,21,6,"NEWTON_MIN_SLOPE"],[9,22,21,22],[9,25,21,25],[9,30,21,30],[10,2,22,0],[10,6,22,6,"SUBDIVISION_PRECISION"],[10,27,22,27],[10,30,22,30],[10,39,22,39],[11,2,23,0],[11,6,23,6,"SUBDIVISION_MAX_ITERATIONS"],[11,32,23,32],[11,35,23,35],[11,37,23,37],[12,2,25,0],[12,6,25,6,"kSplineTableSize"],[12,22,25,22],[12,25,25,25],[12,27,25,27],[13,2,26,0],[13,6,26,6,"kSampleStepSize"],[13,21,26,21],[13,24,26,24],[13,27,26,27],[13,31,26,31,"kSplineTableSize"],[13,47,26,47],[13,50,26,50],[13,53,26,53],[13,54,26,54],[14,2,28,0],[14,6,28,6,"float32ArraySupported"],[14,27,28,27],[14,30,28,30],[14,37,28,37,"Float32Array"],[14,49,28,49],[14,54,28,54],[14,64,28,64],[15,2,30,0],[15,11,30,9,"A"],[15,12,30,10,"A"],[15,13,30,11,"aA1"],[15,16,30,22],[15,18,30,24,"aA2"],[15,21,30,35],[15,23,30,37],[16,4,31,2],[16,11,31,9],[16,14,31,12],[16,17,31,15],[16,20,31,18],[16,23,31,21,"aA2"],[16,26,31,24],[16,29,31,27],[16,32,31,30],[16,35,31,33,"aA1"],[16,38,31,36],[17,2,32,0],[18,2,33,0],[18,11,33,9,"B"],[18,12,33,10,"B"],[18,13,33,11,"aA1"],[18,16,33,22],[18,18,33,24,"aA2"],[18,21,33,35],[18,23,33,37],[19,4,34,2],[19,11,34,9],[19,14,34,12],[19,17,34,15,"aA2"],[19,20,34,18],[19,23,34,21],[19,26,34,24],[19,29,34,27,"aA1"],[19,32,34,30],[20,2,35,0],[21,2,36,0],[21,11,36,9,"C"],[21,12,36,10,"C"],[21,13,36,11,"aA1"],[21,16,36,22],[21,18,36,24],[22,4,37,2],[22,11,37,9],[22,14,37,12],[22,17,37,15,"aA1"],[22,20,37,18],[23,2,38,0],[24,2,41,0],[24,11,41,9,"calcBezier"],[24,21,41,19,"calcBezier"],[24,22,41,20,"aT"],[24,24,41,30],[24,26,41,32,"aA1"],[24,29,41,43],[24,31,41,45,"aA2"],[24,34,41,56],[24,36,41,58],[25,4,42,2],[25,11,42,9],[25,12,42,10],[25,13,42,11,"A"],[25,14,42,12],[25,15,42,13,"aA1"],[25,18,42,16],[25,20,42,18,"aA2"],[25,23,42,21],[25,24,42,22],[25,27,42,25,"aT"],[25,29,42,27],[25,32,42,30,"B"],[25,33,42,31],[25,34,42,32,"aA1"],[25,37,42,35],[25,39,42,37,"aA2"],[25,42,42,40],[25,43,42,41],[25,47,42,45,"aT"],[25,49,42,47],[25,52,42,50,"C"],[25,53,42,51],[25,54,42,52,"aA1"],[25,57,42,55],[25,58,42,56],[25,62,42,60,"aT"],[25,64,42,62],[26,2,43,0],[27,2,46,0],[27,11,46,9,"getSlope"],[27,19,46,17,"getSlope"],[27,20,46,18,"aT"],[27,22,46,28],[27,24,46,30,"aA1"],[27,27,46,41],[27,29,46,43,"aA2"],[27,32,46,54],[27,34,46,56],[28,4,47,2],[28,11,47,9],[28,14,47,12],[28,17,47,15,"A"],[28,18,47,16],[28,19,47,17,"aA1"],[28,22,47,20],[28,24,47,22,"aA2"],[28,27,47,25],[28,28,47,26],[28,31,47,29,"aT"],[28,33,47,31],[28,36,47,34,"aT"],[28,38,47,36],[28,41,47,39],[28,44,47,42],[28,47,47,45,"B"],[28,48,47,46],[28,49,47,47,"aA1"],[28,52,47,50],[28,54,47,52,"aA2"],[28,57,47,55],[28,58,47,56],[28,61,47,59,"aT"],[28,63,47,61],[28,66,47,64,"C"],[28,67,47,65],[28,68,47,66,"aA1"],[28,71,47,69],[28,72,47,70],[29,2,48,0],[30,2,50,0],[30,11,50,9,"binarySubdivide"],[30,26,50,24,"binarySubdivide"],[30,27,51,2,"aX"],[30,29,51,12],[30,31,52,2,"_aA"],[30,34,52,13],[30,36,53,2,"_aB"],[30,39,53,13],[30,41,54,2,"mX1"],[30,44,54,13],[30,46,55,2,"mX2"],[30,49,55,13],[30,51,56,2],[31,4,57,2],[31,8,57,6,"currentX"],[31,16,57,14],[32,6,58,4,"currentT"],[32,14,58,12],[33,6,59,4,"i"],[33,7,59,5],[33,10,59,8],[33,11,59,9],[34,6,60,4,"aA"],[34,8,60,6],[34,11,60,9,"_aA"],[34,14,60,12],[35,6,61,4,"aB"],[35,8,61,6],[35,11,61,9,"_aB"],[35,14,61,12],[36,4,62,2],[36,7,62,5],[37,6,63,4,"currentT"],[37,14,63,12],[37,17,63,15,"aA"],[37,19,63,17],[37,22,63,20],[37,23,63,21,"aB"],[37,25,63,23],[37,28,63,26,"aA"],[37,30,63,28],[37,34,63,32],[37,37,63,35],[38,6,64,4,"currentX"],[38,14,64,12],[38,17,64,15,"calcBezier"],[38,27,64,25],[38,28,64,26,"currentT"],[38,36,64,34],[38,38,64,36,"mX1"],[38,41,64,39],[38,43,64,41,"mX2"],[38,46,64,44],[38,47,64,45],[38,50,64,48,"aX"],[38,52,64,50],[39,6,65,4],[39,10,65,8,"currentX"],[39,18,65,16],[39,21,65,19],[39,24,65,22],[39,26,65,24],[40,8,66,6,"aB"],[40,10,66,8],[40,13,66,11,"currentT"],[40,21,66,19],[41,6,67,4],[41,7,67,5],[41,13,67,11],[42,8,68,6,"aA"],[42,10,68,8],[42,13,68,11,"currentT"],[42,21,68,19],[43,6,69,4],[44,4,70,2],[44,5,70,3],[44,13,71,4,"Math"],[44,17,71,8],[44,18,71,9,"abs"],[44,21,71,12],[44,22,71,13,"currentX"],[44,30,71,21],[44,31,71,22],[44,34,71,25,"SUBDIVISION_PRECISION"],[44,55,71,46],[44,59,72,4],[44,61,72,6,"i"],[44,62,72,7],[44,65,72,10,"SUBDIVISION_MAX_ITERATIONS"],[44,91,72,36],[45,4,74,2],[45,11,74,9,"currentT"],[45,19,74,17],[46,2,75,0],[47,2,77,0],[47,11,77,9,"newtonRaphsonIterate"],[47,31,77,29,"newtonRaphsonIterate"],[47,32,78,2,"aX"],[47,34,78,12],[47,36,79,2,"_aGuessT"],[47,44,79,18],[47,46,80,2,"mX1"],[47,49,80,13],[47,51,81,2,"mX2"],[47,54,81,13],[47,56,82,2],[48,4,83,2],[48,8,83,6,"aGuessT"],[48,15,83,13],[48,18,83,16,"_aGuessT"],[48,26,83,24],[49,4,84,2],[49,9,84,7],[49,13,84,11,"i"],[49,14,84,12],[49,17,84,15],[49,18,84,16],[49,20,84,18,"i"],[49,21,84,19],[49,24,84,22,"NEWTON_ITERATIONS"],[49,41,84,39],[49,43,84,41],[49,45,84,43,"i"],[49,46,84,44],[49,48,84,46],[50,6,85,4],[50,10,85,10,"currentSlope"],[50,22,85,22],[50,25,85,25,"getSlope"],[50,33,85,33],[50,34,85,34,"aGuessT"],[50,41,85,41],[50,43,85,43,"mX1"],[50,46,85,46],[50,48,85,48,"mX2"],[50,51,85,51],[50,52,85,52],[51,6,86,4],[51,10,86,8,"currentSlope"],[51,22,86,20],[51,27,86,25],[51,30,86,28],[51,32,86,30],[52,8,87,6],[52,15,87,13,"aGuessT"],[52,22,87,20],[53,6,88,4],[54,6,89,4],[54,10,89,10,"currentX"],[54,18,89,18],[54,21,89,21,"calcBezier"],[54,31,89,31],[54,32,89,32,"aGuessT"],[54,39,89,39],[54,41,89,41,"mX1"],[54,44,89,44],[54,46,89,46,"mX2"],[54,49,89,49],[54,50,89,50],[54,53,89,53,"aX"],[54,55,89,55],[55,6,90,4,"aGuessT"],[55,13,90,11],[55,17,90,15,"currentX"],[55,25,90,23],[55,28,90,26,"currentSlope"],[55,40,90,38],[56,4,91,2],[57,4,92,2],[57,11,92,9,"aGuessT"],[57,18,92,16],[58,2,93,0],[59,2,95,15],[59,11,95,24,"bezier"],[59,17,95,30,"bezier"],[59,18,96,2,"mX1"],[59,21,96,13],[59,23,97,2,"mY1"],[59,26,97,13],[59,28,98,2,"mX2"],[59,31,98,13],[59,33,99,2,"mY2"],[59,36,99,13],[59,38,100,25],[60,4,101,2],[60,8,101,6],[60,10,101,8,"mX1"],[60,13,101,11],[60,17,101,15],[60,18,101,16],[60,22,101,20,"mX1"],[60,25,101,23],[60,29,101,27],[60,30,101,28],[60,34,101,32,"mX2"],[60,37,101,35],[60,41,101,39],[60,42,101,40],[60,46,101,44,"mX2"],[60,49,101,47],[60,53,101,51],[60,54,101,52],[60,55,101,53],[60,57,101,55],[61,6,102,4],[61,12,102,10],[61,16,102,14,"Error"],[61,21,102,19],[61,22,102,20],[61,63,102,61],[61,64,102,62],[62,4,103,2],[63,4,106,2],[63,8,106,8,"sampleValues"],[63,20,106,20],[63,23,106,23,"float32ArraySupported"],[63,44,106,44],[63,47,107,6],[63,51,107,10,"Float32Array"],[63,63,107,22],[63,64,107,23,"kSplineTableSize"],[63,80,107,39],[63,81,107,40],[63,84,108,6],[63,88,108,10,"Array"],[63,93,108,15],[63,94,108,24,"kSplineTableSize"],[63,110,108,40],[63,111,108,41],[64,4,109,2],[64,8,109,6,"mX1"],[64,11,109,9],[64,16,109,14,"mY1"],[64,19,109,17],[64,23,109,21,"mX2"],[64,26,109,24],[64,31,109,29,"mY2"],[64,34,109,32],[64,36,109,34],[65,6,110,4],[65,11,110,9],[65,15,110,13,"i"],[65,16,110,14],[65,19,110,17],[65,20,110,18],[65,22,110,20,"i"],[65,23,110,21],[65,26,110,24,"kSplineTableSize"],[65,42,110,40],[65,44,110,42],[65,46,110,44,"i"],[65,47,110,45],[65,49,110,47],[66,8,111,6,"sampleValues"],[66,20,111,18],[66,21,111,19,"i"],[66,22,111,20],[66,23,111,21],[66,26,111,24,"calcBezier"],[66,36,111,34],[66,37,111,35,"i"],[66,38,111,36],[66,41,111,39,"kSampleStepSize"],[66,56,111,54],[66,58,111,56,"mX1"],[66,61,111,59],[66,63,111,61,"mX2"],[66,66,111,64],[66,67,111,65],[67,6,112,4],[68,4,113,2],[69,4,115,2],[69,13,115,11,"getTForX"],[69,21,115,19,"getTForX"],[69,22,115,20,"aX"],[69,24,115,30],[69,26,115,32],[70,6,116,4],[70,10,116,8,"intervalStart"],[70,23,116,21],[70,26,116,24],[70,29,116,27],[71,6,117,4],[71,10,117,8,"currentSample"],[71,23,117,21],[71,26,117,24],[71,27,117,25],[72,6,118,4],[72,10,118,10,"lastSample"],[72,20,118,20],[72,23,118,23,"kSplineTableSize"],[72,39,118,39],[72,42,118,42],[72,43,118,43],[73,6,120,4],[73,13,122,6,"currentSample"],[73,26,122,19],[73,31,122,24,"lastSample"],[73,41,122,34],[73,45,122,38,"sampleValues"],[73,57,122,50],[73,58,122,51,"currentSample"],[73,71,122,64],[73,72,122,65],[73,76,122,69,"aX"],[73,78,122,71],[73,80,123,6],[73,82,123,8,"currentSample"],[73,95,123,21],[73,97,124,6],[74,8,125,6,"intervalStart"],[74,21,125,19],[74,25,125,23,"kSampleStepSize"],[74,40,125,38],[75,6,126,4],[76,6,127,4],[76,8,127,6,"currentSample"],[76,21,127,19],[77,6,130,4],[77,10,130,10,"dist"],[77,14,130,14],[77,17,131,6],[77,18,131,7,"aX"],[77,20,131,9],[77,23,131,12,"sampleValues"],[77,35,131,24],[77,36,131,25,"currentSample"],[77,49,131,38],[77,50,131,39],[77,55,132,7,"sampleValues"],[77,67,132,19],[77,68,132,20,"currentSample"],[77,81,132,33],[77,84,132,36],[77,85,132,37],[77,86,132,38],[77,89,132,41,"sampleValues"],[77,101,132,53],[77,102,132,54,"currentSample"],[77,115,132,67],[77,116,132,68],[77,117,132,69],[78,6,133,4],[78,10,133,10,"guessForT"],[78,19,133,19],[78,22,133,22,"intervalStart"],[78,35,133,35],[78,38,133,38,"dist"],[78,42,133,42],[78,45,133,45,"kSampleStepSize"],[78,60,133,60],[79,6,135,4],[79,10,135,10,"initialSlope"],[79,22,135,22],[79,25,135,25,"getSlope"],[79,33,135,33],[79,34,135,34,"guessForT"],[79,43,135,43],[79,45,135,45,"mX1"],[79,48,135,48],[79,50,135,50,"mX2"],[79,53,135,53],[79,54,135,54],[80,6,136,4],[80,10,136,8,"initialSlope"],[80,22,136,20],[80,26,136,24,"NEWTON_MIN_SLOPE"],[80,42,136,40],[80,44,136,42],[81,8,137,6],[81,15,137,13,"newtonRaphsonIterate"],[81,35,137,33],[81,36,137,34,"aX"],[81,38,137,36],[81,40,137,38,"guessForT"],[81,49,137,47],[81,51,137,49,"mX1"],[81,54,137,52],[81,56,137,54,"mX2"],[81,59,137,57],[81,60,137,58],[82,6,138,4],[82,7,138,5],[82,13,138,11],[82,17,138,15,"initialSlope"],[82,29,138,27],[82,34,138,32],[82,37,138,35],[82,39,138,37],[83,8,139,6],[83,15,139,13,"guessForT"],[83,24,139,22],[84,6,140,4],[84,7,140,5],[84,13,140,11],[85,8,141,6],[85,15,141,13,"binarySubdivide"],[85,30,141,28],[85,31,142,8,"aX"],[85,33,142,10],[85,35,143,8,"intervalStart"],[85,48,143,21],[85,50,144,8,"intervalStart"],[85,63,144,21],[85,66,144,24,"kSampleStepSize"],[85,81,144,39],[85,83,145,8,"mX1"],[85,86,145,11],[85,88,146,8,"mX2"],[85,91,147,6],[85,92,147,7],[86,6,148,4],[87,4,149,2],[88,4,151,2],[88,11,151,9],[88,20,151,18,"BezierEasing"],[88,32,151,30,"BezierEasing"],[88,33,151,31,"x"],[88,34,151,40],[88,36,151,50],[89,6,152,4],[89,10,152,8,"mX1"],[89,13,152,11],[89,18,152,16,"mY1"],[89,21,152,19],[89,25,152,23,"mX2"],[89,28,152,26],[89,33,152,31,"mY2"],[89,36,152,34],[89,38,152,36],[90,8,153,6],[90,15,153,13,"x"],[90,16,153,14],[91,6,154,4],[92,6,156,4],[92,10,156,8,"x"],[92,11,156,9],[92,16,156,14],[92,17,156,15],[92,19,156,17],[93,8,157,6],[93,15,157,13],[93,16,157,14],[94,6,158,4],[95,6,159,4],[95,10,159,8,"x"],[95,11,159,9],[95,16,159,14],[95,17,159,15],[95,19,159,17],[96,8,160,6],[96,15,160,13],[96,16,160,14],[97,6,161,4],[98,6,162,4],[98,13,162,11,"calcBezier"],[98,23,162,21],[98,24,162,22,"getTForX"],[98,32,162,30],[98,33,162,31,"x"],[98,34,162,32],[98,35,162,33],[98,37,162,35,"mY1"],[98,40,162,38],[98,42,162,40,"mY2"],[98,45,162,43],[98,46,162,44],[99,4,163,2],[99,5,163,3],[100,2,164,0],[101,0,164,1],[101,3]],"functionMap":{"names":["<global>","A","B","C","calcBezier","getSlope","binarySubdivide","newtonRaphsonIterate","bezier","getTForX","BezierEasing"],"mappings":"AAA;AC6B;CDE;AEC;CFE;AGC;CHE;AIG;CJE;AKG;CLE;AME;CNyB;AOE;CPgB;eQE;ECoB;GDkC;SEE;GFY"}},"type":"js/module"}]}