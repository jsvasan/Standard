{"dependencies":[{"name":"./createResponderEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":134,"column":0,"index":7431},"end":{"line":134,"column":58,"index":7489}}],"key":"WVoiSaZWjjHByaCD8pXurvduFWM=","exportNames":["*"],"imports":1}},{"name":"./ResponderEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":135,"column":0,"index":7490},"end":{"line":135,"column":114,"index":7604}}],"key":"vBlYL6aBF9Cu7j4MJjDSbmFqyNY=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":136,"column":0,"index":7605},"end":{"line":136,"column":144,"index":7749}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"./ResponderTouchHistoryStore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":137,"column":0,"index":7750},"end":{"line":137,"column":74,"index":7824}}],"key":"Oc38LKkYGlEOOMvyz1Oz6HYHQCE=","exportNames":["*"],"imports":1}},{"name":"../canUseDom","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":138,"column":0,"index":7825},"end":{"line":138,"column":37,"index":7862}}],"key":"NAgv5vx4h/J1uxoLSWxqZG/Z81Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.attachListeners = attachListeners;\n  exports.addNode = addNode;\n  exports.removeNode = removeNode;\n  exports.terminateResponder = terminateResponder;\n  exports.getResponderNode = getResponderNode;\n  var _createResponderEvent = require(_dependencyMap[0], \"./createResponderEvent\");\n  var createResponderEvent = _interopDefault(_createResponderEvent);\n  var _ResponderEventTypes = require(_dependencyMap[1], \"./ResponderEventTypes\");\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  var _ResponderTouchHistoryStore = require(_dependencyMap[3], \"./ResponderTouchHistoryStore\");\n  var _canUseDom = require(_dependencyMap[4], \"../canUseDom\");\n  var canUseDOM = _interopDefault(_canUseDom);\n  /**\n   * Copyright (c) Nicolas Gallagher\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  /**\n   * RESPONDER EVENT SYSTEM\n   *\n   * A single, global \"interaction lock\" on views. For a view to be the \"responder\" means\n   * that pointer interactions are exclusive to that view and none other. The \"interaction\n   * lock\" can be transferred (only) to ancestors of the current \"responder\" as long as\n   * pointers continue to be active.\n   *\n   * Responder being granted:\n   *\n   * A view can become the \"responder\" after the following events:\n   *  * \"pointerdown\" (implemented using \"touchstart\", \"mousedown\")\n   *  * \"pointermove\" (implemented using \"touchmove\", \"mousemove\")\n   *  * \"scroll\" (while a pointer is down)\n   *  * \"selectionchange\" (while a pointer is down)\n   *\n   * If nothing is already the \"responder\", the event propagates to (capture) and from\n   * (bubble) the event target until a view returns `true` for\n   * `on*ShouldSetResponder(Capture)`.\n   *\n   * If something is already the responder, the event propagates to (capture) and from\n   * (bubble) the lowest common ancestor of the event target and the current \"responder\".\n   * Then negotiation happens between the current \"responder\" and a view that wants to\n   * become the \"responder\": see the timing diagram below.\n   *\n   * (NOTE: Scrolled views either automatically become the \"responder\" or release the\n   * \"interaction lock\". A native scroll view that isn't built on top of the responder\n   * system must result in the current \"responder\" being notified that it no longer has\n   * the \"interaction lock\" - the native system has taken over.\n   *\n   * Responder being released:\n   *\n   * As soon as there are no more active pointers that *started* inside descendants\n   * of the *current* \"responder\", an `onResponderRelease` event is dispatched to the\n   * current \"responder\", and the responder lock is released.\n   *\n   * Typical sequence of events:\n   *  * startShouldSetResponder\n   *  * responderGrant/Reject\n   *  * responderStart\n   *  * responderMove\n   *  * responderEnd\n   *  * responderRelease\n   */\n\n  /*                                             Negotiation Performed\n                                               +-----------------------+\n                                              /                         \\\n  Process low level events to    +     Current Responder      +   wantsResponderID\n  determine who to perform negot-|   (if any exists at all)   |\n  iation/transition              | Otherwise just pass through|\n  -------------------------------+----------------------------+------------------+\n  Bubble to find first ID        |                            |\n  to return true:wantsResponderID|                            |\n                                 |                            |\n       +--------------+          |                            |\n       | onTouchStart |          |                            |\n       +------+-------+    none  |                            |\n              |            return|                            |\n  +-----------v-------------+true| +------------------------+ |\n  |onStartShouldSetResponder|----->| onResponderStart (cur) |<-----------+\n  +-----------+-------------+    | +------------------------+ |          |\n              |                  |                            | +--------+-------+\n              | returned true for|       false:REJECT +-------->|onResponderReject\n              | wantsResponderID |                    |       | +----------------+\n              | (now attempt     | +------------------+-----+ |\n              |  handoff)        | | onResponder            | |\n              +------------------->|    TerminationRequest  | |\n                                 | +------------------+-----+ |\n                                 |                    |       | +----------------+\n                                 |         true:GRANT +-------->|onResponderGrant|\n                                 |                            | +--------+-------+\n                                 | +------------------------+ |          |\n                                 | | onResponderTerminate   |<-----------+\n                                 | +------------------+-----+ |\n                                 |                    |       | +----------------+\n                                 |                    +-------->|onResponderStart|\n                                 |                            | +----------------+\n  Bubble to find first ID        |                            |\n  to return true:wantsResponderID|                            |\n                                 |                            |\n       +-------------+           |                            |\n       | onTouchMove |           |                            |\n       +------+------+     none  |                            |\n              |            return|                            |\n  +-----------v-------------+true| +------------------------+ |\n  |onMoveShouldSetResponder |----->| onResponderMove (cur)  |<-----------+\n  +-----------+-------------+    | +------------------------+ |          |\n              |                  |                            | +--------+-------+\n              | returned true for|       false:REJECT +-------->|onResponderReject\n              | wantsResponderID |                    |       | +----------------+\n              | (now attempt     | +------------------+-----+ |\n              |  handoff)        | |   onResponder          | |\n              +------------------->|      TerminationRequest| |\n                                 | +------------------+-----+ |\n                                 |                    |       | +----------------+\n                                 |         true:GRANT +-------->|onResponderGrant|\n                                 |                            | +--------+-------+\n                                 | +------------------------+ |          |\n                                 | |   onResponderTerminate |<-----------+\n                                 | +------------------+-----+ |\n                                 |                    |       | +----------------+\n                                 |                    +-------->|onResponderMove |\n                                 |                            | +----------------+\n                                 |                            |\n                                 |                            |\n        Some active touch started|                            |\n        inside current responder | +------------------------+ |\n        +------------------------->|      onResponderEnd    | |\n        |                        | +------------------------+ |\n    +---+---------+              |                            |\n    | onTouchEnd  |              |                            |\n    +---+---------+              |                            |\n        |                        | +------------------------+ |\n        +------------------------->|     onResponderEnd     | |\n        No active touches started| +-----------+------------+ |\n        inside current responder |             |              |\n                                 |             v              |\n                                 | +------------------------+ |\n                                 | |    onResponderRelease  | |\n                                 | +------------------------+ |\n                                 |                            |\n                                 +                            + */\n\n  /* ------------ TYPES ------------ */\n\n  var emptyObject = {};\n\n  /* ------------ IMPLEMENTATION ------------ */\n\n  var startRegistration = ['onStartShouldSetResponderCapture', 'onStartShouldSetResponder', {\n    bubbles: true\n  }];\n  var moveRegistration = ['onMoveShouldSetResponderCapture', 'onMoveShouldSetResponder', {\n    bubbles: true\n  }];\n  var scrollRegistration = ['onScrollShouldSetResponderCapture', 'onScrollShouldSetResponder', {\n    bubbles: false\n  }];\n  var shouldSetResponderEvents = {\n    touchstart: startRegistration,\n    mousedown: startRegistration,\n    touchmove: moveRegistration,\n    mousemove: moveRegistration,\n    scroll: scrollRegistration\n  };\n  var emptyResponder = {\n    id: null,\n    idPath: null,\n    node: null\n  };\n  var responderListenersMap = new Map();\n  var isEmulatingMouseEvents = false;\n  var trackedTouchCount = 0;\n  var currentResponder = {\n    id: null,\n    node: null,\n    idPath: null\n  };\n  var responderTouchHistoryStore = new _ResponderTouchHistoryStore.ResponderTouchHistoryStore();\n  function changeCurrentResponder(responder) {\n    currentResponder = responder;\n  }\n  function getResponderConfig(id) {\n    var config = responderListenersMap.get(id);\n    return config != null ? config : emptyObject;\n  }\n\n  /**\n   * Process native events\n   *\n   * A single event listener is used to manage the responder system.\n   * All pointers are tracked in the ResponderTouchHistoryStore. Native events\n   * are interpreted in terms of the Responder System and checked to see if\n   * the responder should be transferred. Each host node that is attached to\n   * the Responder System has an ID, which is used to look up its associated\n   * callbacks.\n   */\n  function eventListener(domEvent) {\n    var eventType = domEvent.type;\n    var eventTarget = domEvent.target;\n\n    /**\n     * Manage emulated events and early bailout.\n     * Since PointerEvent is not used yet (lack of support in older Safari), it's\n     * necessary to manually manage the mess of browser touch/mouse events.\n     * And bailout early for termination events when there is no active responder.\n     */\n\n    // Flag when browser may produce emulated events\n    if (eventType === 'touchstart') {\n      isEmulatingMouseEvents = true;\n    }\n    // Remove flag when browser will not produce emulated events\n    if (eventType === 'touchmove' || trackedTouchCount > 1) {\n      isEmulatingMouseEvents = false;\n    }\n    // Ignore various events in particular circumstances\n    if (\n    // Ignore browser emulated mouse events\n    eventType === 'mousedown' && isEmulatingMouseEvents || eventType === 'mousemove' && isEmulatingMouseEvents ||\n    // Ignore mousemove if a mousedown didn't occur first\n    eventType === 'mousemove' && trackedTouchCount < 1) {\n      return;\n    }\n    // Remove flag after emulated events are finished\n    if (isEmulatingMouseEvents && eventType === 'mouseup') {\n      if (trackedTouchCount === 0) {\n        isEmulatingMouseEvents = false;\n      }\n      return;\n    }\n    var isStartEvent = (0, _ResponderEventTypes.isStartish)(eventType) && (0, _utils.isPrimaryPointerDown)(domEvent);\n    var isMoveEvent = (0, _ResponderEventTypes.isMoveish)(eventType);\n    var isEndEvent = (0, _ResponderEventTypes.isEndish)(eventType);\n    var isScrollEvent = (0, _ResponderEventTypes.isScroll)(eventType);\n    var isSelectionChangeEvent = (0, _ResponderEventTypes.isSelectionChange)(eventType);\n    var responderEvent = (0, createResponderEvent.default)(domEvent, responderTouchHistoryStore);\n\n    /**\n     * Record the state of active pointers\n     */\n\n    if (isStartEvent || isMoveEvent || isEndEvent) {\n      if (domEvent.touches) {\n        trackedTouchCount = domEvent.touches.length;\n      } else {\n        if (isStartEvent) {\n          trackedTouchCount = 1;\n        } else if (isEndEvent) {\n          trackedTouchCount = 0;\n        }\n      }\n      responderTouchHistoryStore.recordTouchTrack(eventType, responderEvent.nativeEvent);\n    }\n\n    /**\n     * Responder System logic\n     */\n\n    var eventPaths = (0, _utils.getResponderPaths)(domEvent);\n    var wasNegotiated = false;\n    var wantsResponder;\n\n    // If an event occured that might change the current responder...\n    if (isStartEvent || isMoveEvent || isScrollEvent && trackedTouchCount > 0) {\n      // If there is already a responder, prune the event paths to the lowest common ancestor\n      // of the existing responder and deepest target of the event.\n      var currentResponderIdPath = currentResponder.idPath;\n      var eventIdPath = eventPaths.idPath;\n      if (currentResponderIdPath != null && eventIdPath != null) {\n        var lowestCommonAncestor = (0, _utils.getLowestCommonAncestor)(currentResponderIdPath, eventIdPath);\n        if (lowestCommonAncestor != null) {\n          var indexOfLowestCommonAncestor = eventIdPath.indexOf(lowestCommonAncestor);\n          // Skip the current responder so it doesn't receive unexpected \"shouldSet\" events.\n          var index = indexOfLowestCommonAncestor + (lowestCommonAncestor === currentResponder.id ? 1 : 0);\n          eventPaths = {\n            idPath: eventIdPath.slice(index),\n            nodePath: eventPaths.nodePath.slice(index)\n          };\n        } else {\n          eventPaths = null;\n        }\n      }\n      if (eventPaths != null) {\n        // If a node wants to become the responder, attempt to transfer.\n        wantsResponder = findWantsResponder(eventPaths, domEvent, responderEvent);\n        if (wantsResponder != null) {\n          // Sets responder if none exists, or negotates with existing responder.\n          attemptTransfer(responderEvent, wantsResponder);\n          wasNegotiated = true;\n        }\n      }\n    }\n\n    // If there is now a responder, invoke its callbacks for the lifecycle of the gesture.\n    if (currentResponder.id != null && currentResponder.node != null) {\n      var _currentResponder = currentResponder,\n        id = _currentResponder.id,\n        node = _currentResponder.node;\n      var _getResponderConfig = getResponderConfig(id),\n        onResponderStart = _getResponderConfig.onResponderStart,\n        onResponderMove = _getResponderConfig.onResponderMove,\n        onResponderEnd = _getResponderConfig.onResponderEnd,\n        onResponderRelease = _getResponderConfig.onResponderRelease,\n        onResponderTerminate = _getResponderConfig.onResponderTerminate,\n        onResponderTerminationRequest = _getResponderConfig.onResponderTerminationRequest;\n      responderEvent.bubbles = false;\n      responderEvent.cancelable = false;\n      responderEvent.currentTarget = node;\n\n      // Start\n      if (isStartEvent) {\n        if (onResponderStart != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderStart';\n          onResponderStart(responderEvent);\n        }\n      }\n      // Move\n      else if (isMoveEvent) {\n        if (onResponderMove != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderMove';\n          onResponderMove(responderEvent);\n        }\n      } else {\n        var isTerminateEvent = (0, _ResponderEventTypes.isCancelish)(eventType) ||\n        // native context menu\n        eventType === 'contextmenu' ||\n        // window blur\n        eventType === 'blur' && eventTarget === window ||\n        // responder (or ancestors) blur\n        eventType === 'blur' && eventTarget.contains(node) && domEvent.relatedTarget !== node ||\n        // native scroll without using a pointer\n        isScrollEvent && trackedTouchCount === 0 ||\n        // native scroll on node that is parent of the responder (allow siblings to scroll)\n        isScrollEvent && eventTarget.contains(node) && eventTarget !== node ||\n        // native select/selectionchange on node\n        isSelectionChangeEvent && (0, _utils.hasValidSelection)(domEvent);\n        var isReleaseEvent = isEndEvent && !isTerminateEvent && !(0, _utils.hasTargetTouches)(node, domEvent.touches);\n\n        // End\n        if (isEndEvent) {\n          if (onResponderEnd != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderEnd';\n            onResponderEnd(responderEvent);\n          }\n        }\n        // Release\n        if (isReleaseEvent) {\n          if (onResponderRelease != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderRelease';\n            onResponderRelease(responderEvent);\n          }\n          changeCurrentResponder(emptyResponder);\n        }\n        // Terminate\n        if (isTerminateEvent) {\n          var shouldTerminate = true;\n\n          // Responders can still avoid termination but only for these events.\n          if (eventType === 'contextmenu' || eventType === 'scroll' || eventType === 'selectionchange') {\n            // Only call this function is it wasn't already called during negotiation.\n            if (wasNegotiated) {\n              shouldTerminate = false;\n            } else if (onResponderTerminationRequest != null) {\n              responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n              if (onResponderTerminationRequest(responderEvent) === false) {\n                shouldTerminate = false;\n              }\n            }\n          }\n          if (shouldTerminate) {\n            if (onResponderTerminate != null) {\n              responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n              onResponderTerminate(responderEvent);\n            }\n            changeCurrentResponder(emptyResponder);\n            isEmulatingMouseEvents = false;\n            trackedTouchCount = 0;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Walk the event path to/from the target node. At each node, stop and call the\n   * relevant \"shouldSet\" functions for the given event type. If any of those functions\n   * call \"stopPropagation\" on the event, stop searching for a responder.\n   */\n  function findWantsResponder(eventPaths, domEvent, responderEvent) {\n    var shouldSetCallbacks = shouldSetResponderEvents[domEvent.type]; // for Flow\n\n    if (shouldSetCallbacks != null) {\n      var idPath = eventPaths.idPath,\n        nodePath = eventPaths.nodePath;\n      var shouldSetCallbackCaptureName = shouldSetCallbacks[0];\n      var shouldSetCallbackBubbleName = shouldSetCallbacks[1];\n      var bubbles = shouldSetCallbacks[2].bubbles;\n      var check = function check(id, node, callbackName) {\n        var config = getResponderConfig(id);\n        var shouldSetCallback = config[callbackName];\n        if (shouldSetCallback != null) {\n          responderEvent.currentTarget = node;\n          if (shouldSetCallback(responderEvent) === true) {\n            // Start the path from the potential responder\n            var prunedIdPath = idPath.slice(idPath.indexOf(id));\n            return {\n              id,\n              node,\n              idPath: prunedIdPath\n            };\n          }\n        }\n      };\n\n      // capture\n      for (var i = idPath.length - 1; i >= 0; i--) {\n        var id = idPath[i];\n        var node = nodePath[i];\n        var result = check(id, node, shouldSetCallbackCaptureName);\n        if (result != null) {\n          return result;\n        }\n        if (responderEvent.isPropagationStopped() === true) {\n          return;\n        }\n      }\n\n      // bubble\n      if (bubbles) {\n        for (var _i = 0; _i < idPath.length; _i++) {\n          var _id = idPath[_i];\n          var _node = nodePath[_i];\n          var _result = check(_id, _node, shouldSetCallbackBubbleName);\n          if (_result != null) {\n            return _result;\n          }\n          if (responderEvent.isPropagationStopped() === true) {\n            return;\n          }\n        }\n      } else {\n        var _id2 = idPath[0];\n        var _node2 = nodePath[0];\n        var target = domEvent.target;\n        if (target === _node2) {\n          return check(_id2, _node2, shouldSetCallbackBubbleName);\n        }\n      }\n    }\n  }\n\n  /**\n   * Attempt to transfer the responder.\n   */\n  function attemptTransfer(responderEvent, wantsResponder) {\n    var _currentResponder2 = currentResponder,\n      currentId = _currentResponder2.id,\n      currentNode = _currentResponder2.node;\n    var id = wantsResponder.id,\n      node = wantsResponder.node;\n    var _getResponderConfig2 = getResponderConfig(id),\n      onResponderGrant = _getResponderConfig2.onResponderGrant,\n      onResponderReject = _getResponderConfig2.onResponderReject;\n    responderEvent.bubbles = false;\n    responderEvent.cancelable = false;\n    responderEvent.currentTarget = node;\n\n    // Set responder\n    if (currentId == null) {\n      if (onResponderGrant != null) {\n        responderEvent.currentTarget = node;\n        responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n        onResponderGrant(responderEvent);\n      }\n      changeCurrentResponder(wantsResponder);\n    }\n    // Negotiate with current responder\n    else {\n      var _getResponderConfig3 = getResponderConfig(currentId),\n        onResponderTerminate = _getResponderConfig3.onResponderTerminate,\n        onResponderTerminationRequest = _getResponderConfig3.onResponderTerminationRequest;\n      var allowTransfer = true;\n      if (onResponderTerminationRequest != null) {\n        responderEvent.currentTarget = currentNode;\n        responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n        if (onResponderTerminationRequest(responderEvent) === false) {\n          allowTransfer = false;\n        }\n      }\n      if (allowTransfer) {\n        // Terminate existing responder\n        if (onResponderTerminate != null) {\n          responderEvent.currentTarget = currentNode;\n          responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n          onResponderTerminate(responderEvent);\n        }\n        // Grant next responder\n        if (onResponderGrant != null) {\n          responderEvent.currentTarget = node;\n          responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n          onResponderGrant(responderEvent);\n        }\n        changeCurrentResponder(wantsResponder);\n      } else {\n        // Reject responder request\n        if (onResponderReject != null) {\n          responderEvent.currentTarget = node;\n          responderEvent.dispatchConfig.registrationName = 'onResponderReject';\n          onResponderReject(responderEvent);\n        }\n      }\n    }\n  }\n\n  /* ------------ PUBLIC API ------------ */\n\n  /**\n   * Attach Listeners\n   *\n   * Use native events as ReactDOM doesn't have a non-plugin API to implement\n   * this system.\n   */\n  var documentEventsCapturePhase = ['blur', 'scroll'];\n  var documentEventsBubblePhase = [\n  // mouse\n  'mousedown', 'mousemove', 'mouseup', 'dragstart',\n  // touch\n  'touchstart', 'touchmove', 'touchend', 'touchcancel',\n  // other\n  'contextmenu', 'select', 'selectionchange'];\n  function attachListeners() {\n    if (canUseDOM.default && window.__reactResponderSystemActive == null) {\n      window.addEventListener('blur', eventListener);\n      documentEventsBubblePhase.forEach(eventType => {\n        document.addEventListener(eventType, eventListener);\n      });\n      documentEventsCapturePhase.forEach(eventType => {\n        document.addEventListener(eventType, eventListener, true);\n      });\n      window.__reactResponderSystemActive = true;\n    }\n  }\n\n  /**\n   * Register a node with the ResponderSystem.\n   */\n  function addNode(id, node, config) {\n    (0, _utils.setResponderId)(node, id);\n    responderListenersMap.set(id, config);\n  }\n\n  /**\n   * Unregister a node with the ResponderSystem.\n   */\n  function removeNode(id) {\n    if (currentResponder.id === id) {\n      terminateResponder();\n    }\n    if (responderListenersMap.has(id)) {\n      responderListenersMap.delete(id);\n    }\n  }\n\n  /**\n   * Allow the current responder to be terminated from within components to support\n   * more complex requirements, such as use with other React libraries for working\n   * with scroll views, input views, etc.\n   */\n  function terminateResponder() {\n    var _currentResponder3 = currentResponder,\n      id = _currentResponder3.id,\n      node = _currentResponder3.node;\n    if (id != null && node != null) {\n      var _getResponderConfig4 = getResponderConfig(id),\n        onResponderTerminate = _getResponderConfig4.onResponderTerminate;\n      if (onResponderTerminate != null) {\n        var event = (0, createResponderEvent.default)({}, responderTouchHistoryStore);\n        event.currentTarget = node;\n        onResponderTerminate(event);\n      }\n      changeCurrentResponder(emptyResponder);\n    }\n    isEmulatingMouseEvents = false;\n    trackedTouchCount = 0;\n  }\n\n  /**\n   * Allow unit tests to inspect the current responder in the system.\n   * FOR TESTING ONLY.\n   */\n  function getResponderNode() {\n    return currentResponder.node;\n  }\n});","lineCount":608,"map":[[12,2,528,0,"exports"],[12,9,528,0],[12,10,528,0,"attachListeners"],[12,25,528,0],[12,28,528,0,"attachListeners"],[12,43,528,0],[13,2,544,0,"exports"],[13,9,544,0],[13,10,544,0,"addNode"],[13,17,544,0],[13,20,544,0,"addNode"],[13,27,544,0],[14,2,552,0,"exports"],[14,9,552,0],[14,10,552,0,"removeNode"],[14,20,552,0],[14,23,552,0,"removeNode"],[14,33,552,0],[15,2,566,0,"exports"],[15,9,566,0],[15,10,566,0,"terminateResponder"],[15,28,566,0],[15,31,566,0,"terminateResponder"],[15,49,566,0],[16,2,588,0,"exports"],[16,9,588,0],[16,10,588,0,"getResponderNode"],[16,26,588,0],[16,29,588,0,"getResponderNode"],[16,45,588,0],[17,2,134,0],[17,6,134,0,"_createResponderEvent"],[17,27,134,0],[17,30,134,0,"require"],[17,37,134,0],[17,38,134,0,"_dependencyMap"],[17,52,134,0],[18,2,134,0],[18,6,134,0,"createResponderEvent"],[18,26,134,0],[18,29,134,0,"_interopDefault"],[18,44,134,0],[18,45,134,0,"_createResponderEvent"],[18,66,134,0],[19,2,135,0],[19,6,135,0,"_ResponderEventTypes"],[19,26,135,0],[19,29,135,0,"require"],[19,36,135,0],[19,37,135,0,"_dependencyMap"],[19,51,135,0],[20,2,136,0],[20,6,136,0,"_utils"],[20,12,136,0],[20,15,136,0,"require"],[20,22,136,0],[20,23,136,0,"_dependencyMap"],[20,37,136,0],[21,2,137,0],[21,6,137,0,"_ResponderTouchHistoryStore"],[21,33,137,0],[21,36,137,0,"require"],[21,43,137,0],[21,44,137,0,"_dependencyMap"],[21,58,137,0],[22,2,138,0],[22,6,138,0,"_canUseDom"],[22,16,138,0],[22,19,138,0,"require"],[22,26,138,0],[22,27,138,0,"_dependencyMap"],[22,41,138,0],[23,2,138,0],[23,6,138,0,"canUseDOM"],[23,15,138,0],[23,18,138,0,"_interopDefault"],[23,33,138,0],[23,34,138,0,"_canUseDom"],[23,44,138,0],[24,2,1,0],[25,0,2,0],[26,0,3,0],[27,0,4,0],[28,0,5,0],[29,0,6,0],[30,0,7,0],[31,0,8,0],[33,2,10,0],[34,0,11,0],[35,0,12,0],[36,0,13,0],[37,0,14,0],[38,0,15,0],[39,0,16,0],[40,0,17,0],[41,0,18,0],[42,0,19,0],[43,0,20,0],[44,0,21,0],[45,0,22,0],[46,0,23,0],[47,0,24,0],[48,0,25,0],[49,0,26,0],[50,0,27,0],[51,0,28,0],[52,0,29,0],[53,0,30,0],[54,0,31,0],[55,0,32,0],[56,0,33,0],[57,0,34,0],[58,0,35,0],[59,0,36,0],[60,0,37,0],[61,0,38,0],[62,0,39,0],[63,0,40,0],[64,0,41,0],[65,0,42,0],[66,0,43,0],[67,0,44,0],[68,0,45,0],[69,0,46,0],[70,0,47,0],[71,0,48,0],[72,0,49,0],[73,0,50,0],[74,0,51,0],[75,0,52,0],[76,0,53,0],[78,2,55,0],[79,0,56,0],[80,0,57,0],[81,0,58,0],[82,0,59,0],[83,0,60,0],[84,0,61,0],[85,0,62,0],[86,0,63,0],[87,0,64,0],[88,0,65,0],[89,0,66,0],[90,0,67,0],[91,0,68,0],[92,0,69,0],[93,0,70,0],[94,0,71,0],[95,0,72,0],[96,0,73,0],[97,0,74,0],[98,0,75,0],[99,0,76,0],[100,0,77,0],[101,0,78,0],[102,0,79,0],[103,0,80,0],[104,0,81,0],[105,0,82,0],[106,0,83,0],[107,0,84,0],[108,0,85,0],[109,0,86,0],[110,0,87,0],[111,0,88,0],[112,0,89,0],[113,0,90,0],[114,0,91,0],[115,0,92,0],[116,0,93,0],[117,0,94,0],[118,0,95,0],[119,0,96,0],[120,0,97,0],[121,0,98,0],[122,0,99,0],[123,0,100,0],[124,0,101,0],[125,0,102,0],[126,0,103,0],[127,0,104,0],[128,0,105,0],[129,0,106,0],[130,0,107,0],[131,0,108,0],[132,0,109,0],[133,0,110,0],[134,0,111,0],[135,0,112,0],[136,0,113,0],[137,0,114,0],[138,0,115,0],[139,0,116,0],[140,0,117,0],[141,0,118,0],[142,0,119,0],[143,0,120,0],[144,0,121,0],[145,0,122,0],[146,0,123,0],[147,0,124,0],[148,0,125,0],[149,0,126,0],[150,0,127,0],[151,0,128,0],[152,0,129,0],[153,0,130,0],[154,0,131,0],[155,0,132,0],[157,2,140,0],[159,2,142,0],[159,6,142,4,"emptyObject"],[159,17,142,15],[159,20,142,18],[159,21,142,19],[159,22,142,20],[161,2,144,0],[163,2,146,0],[163,6,146,4,"startRegistration"],[163,23,146,21],[163,26,146,24],[163,27,146,25],[163,61,146,59],[163,63,146,61],[163,90,146,88],[163,92,146,90],[164,4,147,2,"bubbles"],[164,11,147,9],[164,13,147,11],[165,2,148,0],[165,3,148,1],[165,4,148,2],[166,2,149,0],[166,6,149,4,"moveRegistration"],[166,22,149,20],[166,25,149,23],[166,26,149,24],[166,59,149,57],[166,61,149,59],[166,87,149,85],[166,89,149,87],[167,4,150,2,"bubbles"],[167,11,150,9],[167,13,150,11],[168,2,151,0],[168,3,151,1],[168,4,151,2],[169,2,152,0],[169,6,152,4,"scrollRegistration"],[169,24,152,22],[169,27,152,25],[169,28,152,26],[169,63,152,61],[169,65,152,63],[169,93,152,91],[169,95,152,93],[170,4,153,2,"bubbles"],[170,11,153,9],[170,13,153,11],[171,2,154,0],[171,3,154,1],[171,4,154,2],[172,2,155,0],[172,6,155,4,"shouldSetResponderEvents"],[172,30,155,28],[172,33,155,31],[173,4,156,2,"touchstart"],[173,14,156,12],[173,16,156,14,"startRegistration"],[173,33,156,31],[174,4,157,2,"mousedown"],[174,13,157,11],[174,15,157,13,"startRegistration"],[174,32,157,30],[175,4,158,2,"touchmove"],[175,13,158,11],[175,15,158,13,"moveRegistration"],[175,31,158,29],[176,4,159,2,"mousemove"],[176,13,159,11],[176,15,159,13,"moveRegistration"],[176,31,159,29],[177,4,160,2,"scroll"],[177,10,160,8],[177,12,160,10,"scrollRegistration"],[178,2,161,0],[178,3,161,1],[179,2,162,0],[179,6,162,4,"emptyResponder"],[179,20,162,18],[179,23,162,21],[180,4,163,2,"id"],[180,6,163,4],[180,8,163,6],[180,12,163,10],[181,4,164,2,"idPath"],[181,10,164,8],[181,12,164,10],[181,16,164,14],[182,4,165,2,"node"],[182,8,165,6],[182,10,165,8],[183,2,166,0],[183,3,166,1],[184,2,167,0],[184,6,167,4,"responderListenersMap"],[184,27,167,25],[184,30,167,28],[184,34,167,32,"Map"],[184,37,167,35],[184,38,167,36],[184,39,167,37],[185,2,168,0],[185,6,168,4,"isEmulatingMouseEvents"],[185,28,168,26],[185,31,168,29],[185,36,168,34],[186,2,169,0],[186,6,169,4,"trackedTouchCount"],[186,23,169,21],[186,26,169,24],[186,27,169,25],[187,2,170,0],[187,6,170,4,"currentResponder"],[187,22,170,20],[187,25,170,23],[188,4,171,2,"id"],[188,6,171,4],[188,8,171,6],[188,12,171,10],[189,4,172,2,"node"],[189,8,172,6],[189,10,172,8],[189,14,172,12],[190,4,173,2,"idPath"],[190,10,173,8],[190,12,173,10],[191,2,174,0],[191,3,174,1],[192,2,175,0],[192,6,175,4,"responderTouchHistoryStore"],[192,32,175,30],[192,35,175,33],[192,39,175,37,"ResponderTouchHistoryStore"],[192,66,175,63],[192,67,175,63,"ResponderTouchHistoryStore"],[192,93,175,63],[192,94,175,64],[192,95,175,65],[193,2,176,0],[193,11,176,9,"changeCurrentResponder"],[193,33,176,31,"changeCurrentResponder"],[193,34,176,32,"responder"],[193,43,176,41],[193,45,176,43],[194,4,177,2,"currentResponder"],[194,20,177,18],[194,23,177,21,"responder"],[194,32,177,30],[195,2,178,0],[196,2,179,0],[196,11,179,9,"getResponderConfig"],[196,29,179,27,"getResponderConfig"],[196,30,179,28,"id"],[196,32,179,30],[196,34,179,32],[197,4,180,2],[197,8,180,6,"config"],[197,14,180,12],[197,17,180,15,"responderListenersMap"],[197,38,180,36],[197,39,180,37,"get"],[197,42,180,40],[197,43,180,41,"id"],[197,45,180,43],[197,46,180,44],[198,4,181,2],[198,11,181,9,"config"],[198,17,181,15],[198,21,181,19],[198,25,181,23],[198,28,181,26,"config"],[198,34,181,32],[198,37,181,35,"emptyObject"],[198,48,181,46],[199,2,182,0],[201,2,184,0],[202,0,185,0],[203,0,186,0],[204,0,187,0],[205,0,188,0],[206,0,189,0],[207,0,190,0],[208,0,191,0],[209,0,192,0],[210,0,193,0],[211,2,194,0],[211,11,194,9,"eventListener"],[211,24,194,22,"eventListener"],[211,25,194,23,"domEvent"],[211,33,194,31],[211,35,194,33],[212,4,195,2],[212,8,195,6,"eventType"],[212,17,195,15],[212,20,195,18,"domEvent"],[212,28,195,26],[212,29,195,27,"type"],[212,33,195,31],[213,4,196,2],[213,8,196,6,"eventTarget"],[213,19,196,17],[213,22,196,20,"domEvent"],[213,30,196,28],[213,31,196,29,"target"],[213,37,196,35],[215,4,198,2],[216,0,199,0],[217,0,200,0],[218,0,201,0],[219,0,202,0],[220,0,203,0],[222,4,205,2],[223,4,206,2],[223,8,206,6,"eventType"],[223,17,206,15],[223,22,206,20],[223,34,206,32],[223,36,206,34],[224,6,207,4,"isEmulatingMouseEvents"],[224,28,207,26],[224,31,207,29],[224,35,207,33],[225,4,208,2],[226,4,209,2],[227,4,210,2],[227,8,210,6,"eventType"],[227,17,210,15],[227,22,210,20],[227,33,210,31],[227,37,210,35,"trackedTouchCount"],[227,54,210,52],[227,57,210,55],[227,58,210,56],[227,60,210,58],[228,6,211,4,"isEmulatingMouseEvents"],[228,28,211,26],[228,31,211,29],[228,36,211,34],[229,4,212,2],[230,4,213,2],[231,4,214,2],[232,4,215,2],[233,4,216,2,"eventType"],[233,13,216,11],[233,18,216,16],[233,29,216,27],[233,33,216,31,"isEmulatingMouseEvents"],[233,55,216,53],[233,59,216,57,"eventType"],[233,68,216,66],[233,73,216,71],[233,84,216,82],[233,88,216,86,"isEmulatingMouseEvents"],[233,110,216,108],[234,4,217,2],[235,4,218,2,"eventType"],[235,13,218,11],[235,18,218,16],[235,29,218,27],[235,33,218,31,"trackedTouchCount"],[235,50,218,48],[235,53,218,51],[235,54,218,52],[235,56,218,54],[236,6,219,4],[237,4,220,2],[238,4,221,2],[239,4,222,2],[239,8,222,6,"isEmulatingMouseEvents"],[239,30,222,28],[239,34,222,32,"eventType"],[239,43,222,41],[239,48,222,46],[239,57,222,55],[239,59,222,57],[240,6,223,4],[240,10,223,8,"trackedTouchCount"],[240,27,223,25],[240,32,223,30],[240,33,223,31],[240,35,223,33],[241,8,224,6,"isEmulatingMouseEvents"],[241,30,224,28],[241,33,224,31],[241,38,224,36],[242,6,225,4],[243,6,226,4],[244,4,227,2],[245,4,228,2],[245,8,228,6,"isStartEvent"],[245,20,228,18],[245,23,228,21],[245,27,228,21,"isStartish"],[245,47,228,31],[245,48,228,31,"isStartish"],[245,58,228,31],[245,60,228,32,"eventType"],[245,69,228,41],[245,70,228,42],[245,74,228,46],[245,78,228,46,"isPrimaryPointerDown"],[245,84,228,66],[245,85,228,66,"isPrimaryPointerDown"],[245,105,228,66],[245,107,228,67,"domEvent"],[245,115,228,75],[245,116,228,76],[246,4,229,2],[246,8,229,6,"isMoveEvent"],[246,19,229,17],[246,22,229,20],[246,26,229,20,"isMoveish"],[246,46,229,29],[246,47,229,29,"isMoveish"],[246,56,229,29],[246,58,229,30,"eventType"],[246,67,229,39],[246,68,229,40],[247,4,230,2],[247,8,230,6,"isEndEvent"],[247,18,230,16],[247,21,230,19],[247,25,230,19,"isEndish"],[247,45,230,27],[247,46,230,27,"isEndish"],[247,54,230,27],[247,56,230,28,"eventType"],[247,65,230,37],[247,66,230,38],[248,4,231,2],[248,8,231,6,"isScrollEvent"],[248,21,231,19],[248,24,231,22],[248,28,231,22,"isScroll"],[248,48,231,30],[248,49,231,30,"isScroll"],[248,57,231,30],[248,59,231,31,"eventType"],[248,68,231,40],[248,69,231,41],[249,4,232,2],[249,8,232,6,"isSelectionChangeEvent"],[249,30,232,28],[249,33,232,31],[249,37,232,31,"isSelectionChange"],[249,57,232,48],[249,58,232,48,"isSelectionChange"],[249,75,232,48],[249,77,232,49,"eventType"],[249,86,232,58],[249,87,232,59],[250,4,233,2],[250,8,233,6,"responderEvent"],[250,22,233,20],[250,25,233,23],[250,29,233,23,"createResponderEvent"],[250,49,233,43],[250,50,233,43,"default"],[250,57,233,43],[250,59,233,44,"domEvent"],[250,67,233,52],[250,69,233,54,"responderTouchHistoryStore"],[250,95,233,80],[250,96,233,81],[252,4,235,2],[253,0,236,0],[254,0,237,0],[256,4,239,2],[256,8,239,6,"isStartEvent"],[256,20,239,18],[256,24,239,22,"isMoveEvent"],[256,35,239,33],[256,39,239,37,"isEndEvent"],[256,49,239,47],[256,51,239,49],[257,6,240,4],[257,10,240,8,"domEvent"],[257,18,240,16],[257,19,240,17,"touches"],[257,26,240,24],[257,28,240,26],[258,8,241,6,"trackedTouchCount"],[258,25,241,23],[258,28,241,26,"domEvent"],[258,36,241,34],[258,37,241,35,"touches"],[258,44,241,42],[258,45,241,43,"length"],[258,51,241,49],[259,6,242,4],[259,7,242,5],[259,13,242,11],[260,8,243,6],[260,12,243,10,"isStartEvent"],[260,24,243,22],[260,26,243,24],[261,10,244,8,"trackedTouchCount"],[261,27,244,25],[261,30,244,28],[261,31,244,29],[262,8,245,6],[262,9,245,7],[262,15,245,13],[262,19,245,17,"isEndEvent"],[262,29,245,27],[262,31,245,29],[263,10,246,8,"trackedTouchCount"],[263,27,246,25],[263,30,246,28],[263,31,246,29],[264,8,247,6],[265,6,248,4],[266,6,249,4,"responderTouchHistoryStore"],[266,32,249,30],[266,33,249,31,"recordTouchTrack"],[266,49,249,47],[266,50,249,48,"eventType"],[266,59,249,57],[266,61,249,59,"responderEvent"],[266,75,249,73],[266,76,249,74,"nativeEvent"],[266,87,249,85],[266,88,249,86],[267,4,250,2],[269,4,252,2],[270,0,253,0],[271,0,254,0],[273,4,256,2],[273,8,256,6,"eventPaths"],[273,18,256,16],[273,21,256,19],[273,25,256,19,"getResponderPaths"],[273,31,256,36],[273,32,256,36,"getResponderPaths"],[273,49,256,36],[273,51,256,37,"domEvent"],[273,59,256,45],[273,60,256,46],[274,4,257,2],[274,8,257,6,"wasNegotiated"],[274,21,257,19],[274,24,257,22],[274,29,257,27],[275,4,258,2],[275,8,258,6,"wantsResponder"],[275,22,258,20],[277,4,260,2],[278,4,261,2],[278,8,261,6,"isStartEvent"],[278,20,261,18],[278,24,261,22,"isMoveEvent"],[278,35,261,33],[278,39,261,37,"isScrollEvent"],[278,52,261,50],[278,56,261,54,"trackedTouchCount"],[278,73,261,71],[278,76,261,74],[278,77,261,75],[278,79,261,77],[279,6,262,4],[280,6,263,4],[281,6,264,4],[281,10,264,8,"currentResponderIdPath"],[281,32,264,30],[281,35,264,33,"currentResponder"],[281,51,264,49],[281,52,264,50,"idPath"],[281,58,264,56],[282,6,265,4],[282,10,265,8,"eventIdPath"],[282,21,265,19],[282,24,265,22,"eventPaths"],[282,34,265,32],[282,35,265,33,"idPath"],[282,41,265,39],[283,6,266,4],[283,10,266,8,"currentResponderIdPath"],[283,32,266,30],[283,36,266,34],[283,40,266,38],[283,44,266,42,"eventIdPath"],[283,55,266,53],[283,59,266,57],[283,63,266,61],[283,65,266,63],[284,8,267,6],[284,12,267,10,"lowestCommonAncestor"],[284,32,267,30],[284,35,267,33],[284,39,267,33,"getLowestCommonAncestor"],[284,45,267,56],[284,46,267,56,"getLowestCommonAncestor"],[284,69,267,56],[284,71,267,57,"currentResponderIdPath"],[284,93,267,79],[284,95,267,81,"eventIdPath"],[284,106,267,92],[284,107,267,93],[285,8,268,6],[285,12,268,10,"lowestCommonAncestor"],[285,32,268,30],[285,36,268,34],[285,40,268,38],[285,42,268,40],[286,10,269,8],[286,14,269,12,"indexOfLowestCommonAncestor"],[286,41,269,39],[286,44,269,42,"eventIdPath"],[286,55,269,53],[286,56,269,54,"indexOf"],[286,63,269,61],[286,64,269,62,"lowestCommonAncestor"],[286,84,269,82],[286,85,269,83],[287,10,270,8],[288,10,271,8],[288,14,271,12,"index"],[288,19,271,17],[288,22,271,20,"indexOfLowestCommonAncestor"],[288,49,271,47],[288,53,271,51,"lowestCommonAncestor"],[288,73,271,71],[288,78,271,76,"currentResponder"],[288,94,271,92],[288,95,271,93,"id"],[288,97,271,95],[288,100,271,98],[288,101,271,99],[288,104,271,102],[288,105,271,103],[288,106,271,104],[289,10,272,8,"eventPaths"],[289,20,272,18],[289,23,272,21],[290,12,273,10,"idPath"],[290,18,273,16],[290,20,273,18,"eventIdPath"],[290,31,273,29],[290,32,273,30,"slice"],[290,37,273,35],[290,38,273,36,"index"],[290,43,273,41],[290,44,273,42],[291,12,274,10,"nodePath"],[291,20,274,18],[291,22,274,20,"eventPaths"],[291,32,274,30],[291,33,274,31,"nodePath"],[291,41,274,39],[291,42,274,40,"slice"],[291,47,274,45],[291,48,274,46,"index"],[291,53,274,51],[292,10,275,8],[292,11,275,9],[293,8,276,6],[293,9,276,7],[293,15,276,13],[294,10,277,8,"eventPaths"],[294,20,277,18],[294,23,277,21],[294,27,277,25],[295,8,278,6],[296,6,279,4],[297,6,280,4],[297,10,280,8,"eventPaths"],[297,20,280,18],[297,24,280,22],[297,28,280,26],[297,30,280,28],[298,8,281,6],[299,8,282,6,"wantsResponder"],[299,22,282,20],[299,25,282,23,"findWantsResponder"],[299,43,282,41],[299,44,282,42,"eventPaths"],[299,54,282,52],[299,56,282,54,"domEvent"],[299,64,282,62],[299,66,282,64,"responderEvent"],[299,80,282,78],[299,81,282,79],[300,8,283,6],[300,12,283,10,"wantsResponder"],[300,26,283,24],[300,30,283,28],[300,34,283,32],[300,36,283,34],[301,10,284,8],[302,10,285,8,"attemptTransfer"],[302,25,285,23],[302,26,285,24,"responderEvent"],[302,40,285,38],[302,42,285,40,"wantsResponder"],[302,56,285,54],[302,57,285,55],[303,10,286,8,"wasNegotiated"],[303,23,286,21],[303,26,286,24],[303,30,286,28],[304,8,287,6],[305,6,288,4],[306,4,289,2],[308,4,291,2],[309,4,292,2],[309,8,292,6,"currentResponder"],[309,24,292,22],[309,25,292,23,"id"],[309,27,292,25],[309,31,292,29],[309,35,292,33],[309,39,292,37,"currentResponder"],[309,55,292,53],[309,56,292,54,"node"],[309,60,292,58],[309,64,292,62],[309,68,292,66],[309,70,292,68],[310,6,293,4],[310,10,293,8,"_currentResponder"],[310,27,293,25],[310,30,293,28,"currentResponder"],[310,46,293,44],[311,8,294,6,"id"],[311,10,294,8],[311,13,294,11,"_currentResponder"],[311,30,294,28],[311,31,294,29,"id"],[311,33,294,31],[312,8,295,6,"node"],[312,12,295,10],[312,15,295,13,"_currentResponder"],[312,32,295,30],[312,33,295,31,"node"],[312,37,295,35],[313,6,296,4],[313,10,296,8,"_getResponderConfig"],[313,29,296,27],[313,32,296,30,"getResponderConfig"],[313,50,296,48],[313,51,296,49,"id"],[313,53,296,51],[313,54,296,52],[314,8,297,6,"onResponderStart"],[314,24,297,22],[314,27,297,25,"_getResponderConfig"],[314,46,297,44],[314,47,297,45,"onResponderStart"],[314,63,297,61],[315,8,298,6,"onResponderMove"],[315,23,298,21],[315,26,298,24,"_getResponderConfig"],[315,45,298,43],[315,46,298,44,"onResponderMove"],[315,61,298,59],[316,8,299,6,"onResponderEnd"],[316,22,299,20],[316,25,299,23,"_getResponderConfig"],[316,44,299,42],[316,45,299,43,"onResponderEnd"],[316,59,299,57],[317,8,300,6,"onResponderRelease"],[317,26,300,24],[317,29,300,27,"_getResponderConfig"],[317,48,300,46],[317,49,300,47,"onResponderRelease"],[317,67,300,65],[318,8,301,6,"onResponderTerminate"],[318,28,301,26],[318,31,301,29,"_getResponderConfig"],[318,50,301,48],[318,51,301,49,"onResponderTerminate"],[318,71,301,69],[319,8,302,6,"onResponderTerminationRequest"],[319,37,302,35],[319,40,302,38,"_getResponderConfig"],[319,59,302,57],[319,60,302,58,"onResponderTerminationRequest"],[319,89,302,87],[320,6,303,4,"responderEvent"],[320,20,303,18],[320,21,303,19,"bubbles"],[320,28,303,26],[320,31,303,29],[320,36,303,34],[321,6,304,4,"responderEvent"],[321,20,304,18],[321,21,304,19,"cancelable"],[321,31,304,29],[321,34,304,32],[321,39,304,37],[322,6,305,4,"responderEvent"],[322,20,305,18],[322,21,305,19,"currentTarget"],[322,34,305,32],[322,37,305,35,"node"],[322,41,305,39],[324,6,307,4],[325,6,308,4],[325,10,308,8,"isStartEvent"],[325,22,308,20],[325,24,308,22],[326,8,309,6],[326,12,309,10,"onResponderStart"],[326,28,309,26],[326,32,309,30],[326,36,309,34],[326,38,309,36],[327,10,310,8,"responderEvent"],[327,24,310,22],[327,25,310,23,"dispatchConfig"],[327,39,310,37],[327,40,310,38,"registrationName"],[327,56,310,54],[327,59,310,57],[327,77,310,75],[328,10,311,8,"onResponderStart"],[328,26,311,24],[328,27,311,25,"responderEvent"],[328,41,311,39],[328,42,311,40],[329,8,312,6],[330,6,313,4],[331,6,314,4],[332,6,314,4],[332,11,315,9],[332,15,315,13,"isMoveEvent"],[332,26,315,24],[332,28,315,26],[333,8,316,6],[333,12,316,10,"onResponderMove"],[333,27,316,25],[333,31,316,29],[333,35,316,33],[333,37,316,35],[334,10,317,8,"responderEvent"],[334,24,317,22],[334,25,317,23,"dispatchConfig"],[334,39,317,37],[334,40,317,38,"registrationName"],[334,56,317,54],[334,59,317,57],[334,76,317,74],[335,10,318,8,"onResponderMove"],[335,25,318,23],[335,26,318,24,"responderEvent"],[335,40,318,38],[335,41,318,39],[336,8,319,6],[337,6,320,4],[337,7,320,5],[337,13,320,11],[338,8,321,6],[338,12,321,10,"isTerminateEvent"],[338,28,321,26],[338,31,321,29],[338,35,321,29,"isCancelish"],[338,55,321,40],[338,56,321,40,"isCancelish"],[338,67,321,40],[338,69,321,41,"eventType"],[338,78,321,50],[338,79,321,51],[339,8,322,6],[340,8,323,6,"eventType"],[340,17,323,15],[340,22,323,20],[340,35,323,33],[341,8,324,6],[342,8,325,6,"eventType"],[342,17,325,15],[342,22,325,20],[342,28,325,26],[342,32,325,30,"eventTarget"],[342,43,325,41],[342,48,325,46,"window"],[342,54,325,52],[343,8,326,6],[344,8,327,6,"eventType"],[344,17,327,15],[344,22,327,20],[344,28,327,26],[344,32,327,30,"eventTarget"],[344,43,327,41],[344,44,327,42,"contains"],[344,52,327,50],[344,53,327,51,"node"],[344,57,327,55],[344,58,327,56],[344,62,327,60,"domEvent"],[344,70,327,68],[344,71,327,69,"relatedTarget"],[344,84,327,82],[344,89,327,87,"node"],[344,93,327,91],[345,8,328,6],[346,8,329,6,"isScrollEvent"],[346,21,329,19],[346,25,329,23,"trackedTouchCount"],[346,42,329,40],[346,47,329,45],[346,48,329,46],[347,8,330,6],[348,8,331,6,"isScrollEvent"],[348,21,331,19],[348,25,331,23,"eventTarget"],[348,36,331,34],[348,37,331,35,"contains"],[348,45,331,43],[348,46,331,44,"node"],[348,50,331,48],[348,51,331,49],[348,55,331,53,"eventTarget"],[348,66,331,64],[348,71,331,69,"node"],[348,75,331,73],[349,8,332,6],[350,8,333,6,"isSelectionChangeEvent"],[350,30,333,28],[350,34,333,32],[350,38,333,32,"hasValidSelection"],[350,44,333,49],[350,45,333,49,"hasValidSelection"],[350,62,333,49],[350,64,333,50,"domEvent"],[350,72,333,58],[350,73,333,59],[351,8,334,6],[351,12,334,10,"isReleaseEvent"],[351,26,334,24],[351,29,334,27,"isEndEvent"],[351,39,334,37],[351,43,334,41],[351,44,334,42,"isTerminateEvent"],[351,60,334,58],[351,64,334,62],[351,65,334,63],[351,69,334,63,"hasTargetTouches"],[351,75,334,79],[351,76,334,79,"hasTargetTouches"],[351,92,334,79],[351,94,334,80,"node"],[351,98,334,84],[351,100,334,86,"domEvent"],[351,108,334,94],[351,109,334,95,"touches"],[351,116,334,102],[351,117,334,103],[353,8,336,6],[354,8,337,6],[354,12,337,10,"isEndEvent"],[354,22,337,20],[354,24,337,22],[355,10,338,8],[355,14,338,12,"onResponderEnd"],[355,28,338,26],[355,32,338,30],[355,36,338,34],[355,38,338,36],[356,12,339,10,"responderEvent"],[356,26,339,24],[356,27,339,25,"dispatchConfig"],[356,41,339,39],[356,42,339,40,"registrationName"],[356,58,339,56],[356,61,339,59],[356,77,339,75],[357,12,340,10,"onResponderEnd"],[357,26,340,24],[357,27,340,25,"responderEvent"],[357,41,340,39],[357,42,340,40],[358,10,341,8],[359,8,342,6],[360,8,343,6],[361,8,344,6],[361,12,344,10,"isReleaseEvent"],[361,26,344,24],[361,28,344,26],[362,10,345,8],[362,14,345,12,"onResponderRelease"],[362,32,345,30],[362,36,345,34],[362,40,345,38],[362,42,345,40],[363,12,346,10,"responderEvent"],[363,26,346,24],[363,27,346,25,"dispatchConfig"],[363,41,346,39],[363,42,346,40,"registrationName"],[363,58,346,56],[363,61,346,59],[363,81,346,79],[364,12,347,10,"onResponderRelease"],[364,30,347,28],[364,31,347,29,"responderEvent"],[364,45,347,43],[364,46,347,44],[365,10,348,8],[366,10,349,8,"changeCurrentResponder"],[366,32,349,30],[366,33,349,31,"emptyResponder"],[366,47,349,45],[366,48,349,46],[367,8,350,6],[368,8,351,6],[369,8,352,6],[369,12,352,10,"isTerminateEvent"],[369,28,352,26],[369,30,352,28],[370,10,353,8],[370,14,353,12,"shouldTerminate"],[370,29,353,27],[370,32,353,30],[370,36,353,34],[372,10,355,8],[373,10,356,8],[373,14,356,12,"eventType"],[373,23,356,21],[373,28,356,26],[373,41,356,39],[373,45,356,43,"eventType"],[373,54,356,52],[373,59,356,57],[373,67,356,65],[373,71,356,69,"eventType"],[373,80,356,78],[373,85,356,83],[373,102,356,100],[373,104,356,102],[374,12,357,10],[375,12,358,10],[375,16,358,14,"wasNegotiated"],[375,29,358,27],[375,31,358,29],[376,14,359,12,"shouldTerminate"],[376,29,359,27],[376,32,359,30],[376,37,359,35],[377,12,360,10],[377,13,360,11],[377,19,360,17],[377,23,360,21,"onResponderTerminationRequest"],[377,52,360,50],[377,56,360,54],[377,60,360,58],[377,62,360,60],[378,14,361,12,"responderEvent"],[378,28,361,26],[378,29,361,27,"dispatchConfig"],[378,43,361,41],[378,44,361,42,"registrationName"],[378,60,361,58],[378,63,361,61],[378,94,361,92],[379,14,362,12],[379,18,362,16,"onResponderTerminationRequest"],[379,47,362,45],[379,48,362,46,"responderEvent"],[379,62,362,60],[379,63,362,61],[379,68,362,66],[379,73,362,71],[379,75,362,73],[380,16,363,14,"shouldTerminate"],[380,31,363,29],[380,34,363,32],[380,39,363,37],[381,14,364,12],[382,12,365,10],[383,10,366,8],[384,10,367,8],[384,14,367,12,"shouldTerminate"],[384,29,367,27],[384,31,367,29],[385,12,368,10],[385,16,368,14,"onResponderTerminate"],[385,36,368,34],[385,40,368,38],[385,44,368,42],[385,46,368,44],[386,14,369,12,"responderEvent"],[386,28,369,26],[386,29,369,27,"dispatchConfig"],[386,43,369,41],[386,44,369,42,"registrationName"],[386,60,369,58],[386,63,369,61],[386,85,369,83],[387,14,370,12,"onResponderTerminate"],[387,34,370,32],[387,35,370,33,"responderEvent"],[387,49,370,47],[387,50,370,48],[388,12,371,10],[389,12,372,10,"changeCurrentResponder"],[389,34,372,32],[389,35,372,33,"emptyResponder"],[389,49,372,47],[389,50,372,48],[390,12,373,10,"isEmulatingMouseEvents"],[390,34,373,32],[390,37,373,35],[390,42,373,40],[391,12,374,10,"trackedTouchCount"],[391,29,374,27],[391,32,374,30],[391,33,374,31],[392,10,375,8],[393,8,376,6],[394,6,377,4],[395,4,378,2],[396,2,379,0],[398,2,381,0],[399,0,382,0],[400,0,383,0],[401,0,384,0],[402,0,385,0],[403,2,386,0],[403,11,386,9,"findWantsResponder"],[403,29,386,27,"findWantsResponder"],[403,30,386,28,"eventPaths"],[403,40,386,38],[403,42,386,40,"domEvent"],[403,50,386,48],[403,52,386,50,"responderEvent"],[403,66,386,64],[403,68,386,66],[404,4,387,2],[404,8,387,6,"shouldSetCallbacks"],[404,26,387,24],[404,29,387,27,"shouldSetResponderEvents"],[404,53,387,51],[404,54,387,52,"domEvent"],[404,62,387,60],[404,63,387,61,"type"],[404,67,387,65],[404,68,387,66],[404,69,387,67],[404,70,387,68],[406,4,389,2],[406,8,389,6,"shouldSetCallbacks"],[406,26,389,24],[406,30,389,28],[406,34,389,32],[406,36,389,34],[407,6,390,4],[407,10,390,8,"idPath"],[407,16,390,14],[407,19,390,17,"eventPaths"],[407,29,390,27],[407,30,390,28,"idPath"],[407,36,390,34],[408,8,391,6,"nodePath"],[408,16,391,14],[408,19,391,17,"eventPaths"],[408,29,391,27],[408,30,391,28,"nodePath"],[408,38,391,36],[409,6,392,4],[409,10,392,8,"shouldSetCallbackCaptureName"],[409,38,392,36],[409,41,392,39,"shouldSetCallbacks"],[409,59,392,57],[409,60,392,58],[409,61,392,59],[409,62,392,60],[410,6,393,4],[410,10,393,8,"shouldSetCallbackBubbleName"],[410,37,393,35],[410,40,393,38,"shouldSetCallbacks"],[410,58,393,56],[410,59,393,57],[410,60,393,58],[410,61,393,59],[411,6,394,4],[411,10,394,8,"bubbles"],[411,17,394,15],[411,20,394,18,"shouldSetCallbacks"],[411,38,394,36],[411,39,394,37],[411,40,394,38],[411,41,394,39],[411,42,394,40,"bubbles"],[411,49,394,47],[412,6,395,4],[412,10,395,8,"check"],[412,15,395,13],[412,18,395,16],[412,27,395,25,"check"],[412,32,395,30,"check"],[412,33,395,31,"id"],[412,35,395,33],[412,37,395,35,"node"],[412,41,395,39],[412,43,395,41,"callbackName"],[412,55,395,53],[412,57,395,55],[413,8,396,6],[413,12,396,10,"config"],[413,18,396,16],[413,21,396,19,"getResponderConfig"],[413,39,396,37],[413,40,396,38,"id"],[413,42,396,40],[413,43,396,41],[414,8,397,6],[414,12,397,10,"shouldSetCallback"],[414,29,397,27],[414,32,397,30,"config"],[414,38,397,36],[414,39,397,37,"callbackName"],[414,51,397,49],[414,52,397,50],[415,8,398,6],[415,12,398,10,"shouldSetCallback"],[415,29,398,27],[415,33,398,31],[415,37,398,35],[415,39,398,37],[416,10,399,8,"responderEvent"],[416,24,399,22],[416,25,399,23,"currentTarget"],[416,38,399,36],[416,41,399,39,"node"],[416,45,399,43],[417,10,400,8],[417,14,400,12,"shouldSetCallback"],[417,31,400,29],[417,32,400,30,"responderEvent"],[417,46,400,44],[417,47,400,45],[417,52,400,50],[417,56,400,54],[417,58,400,56],[418,12,401,10],[419,12,402,10],[419,16,402,14,"prunedIdPath"],[419,28,402,26],[419,31,402,29,"idPath"],[419,37,402,35],[419,38,402,36,"slice"],[419,43,402,41],[419,44,402,42,"idPath"],[419,50,402,48],[419,51,402,49,"indexOf"],[419,58,402,56],[419,59,402,57,"id"],[419,61,402,59],[419,62,402,60],[419,63,402,61],[420,12,403,10],[420,19,403,17],[421,14,404,12,"id"],[421,16,404,14],[422,14,405,12,"node"],[422,18,405,16],[423,14,406,12,"idPath"],[423,20,406,18],[423,22,406,20,"prunedIdPath"],[424,12,407,10],[424,13,407,11],[425,10,408,8],[426,8,409,6],[427,6,410,4],[427,7,410,5],[429,6,412,4],[430,6,413,4],[430,11,413,9],[430,15,413,13,"i"],[430,16,413,14],[430,19,413,17,"idPath"],[430,25,413,23],[430,26,413,24,"length"],[430,32,413,30],[430,35,413,33],[430,36,413,34],[430,38,413,36,"i"],[430,39,413,37],[430,43,413,41],[430,44,413,42],[430,46,413,44,"i"],[430,47,413,45],[430,49,413,47],[430,51,413,49],[431,8,414,6],[431,12,414,10,"id"],[431,14,414,12],[431,17,414,15,"idPath"],[431,23,414,21],[431,24,414,22,"i"],[431,25,414,23],[431,26,414,24],[432,8,415,6],[432,12,415,10,"node"],[432,16,415,14],[432,19,415,17,"nodePath"],[432,27,415,25],[432,28,415,26,"i"],[432,29,415,27],[432,30,415,28],[433,8,416,6],[433,12,416,10,"result"],[433,18,416,16],[433,21,416,19,"check"],[433,26,416,24],[433,27,416,25,"id"],[433,29,416,27],[433,31,416,29,"node"],[433,35,416,33],[433,37,416,35,"shouldSetCallbackCaptureName"],[433,65,416,63],[433,66,416,64],[434,8,417,6],[434,12,417,10,"result"],[434,18,417,16],[434,22,417,20],[434,26,417,24],[434,28,417,26],[435,10,418,8],[435,17,418,15,"result"],[435,23,418,21],[436,8,419,6],[437,8,420,6],[437,12,420,10,"responderEvent"],[437,26,420,24],[437,27,420,25,"isPropagationStopped"],[437,47,420,45],[437,48,420,46],[437,49,420,47],[437,54,420,52],[437,58,420,56],[437,60,420,58],[438,10,421,8],[439,8,422,6],[440,6,423,4],[442,6,425,4],[443,6,426,4],[443,10,426,8,"bubbles"],[443,17,426,15],[443,19,426,17],[444,8,427,6],[444,13,427,11],[444,17,427,15,"_i"],[444,19,427,17],[444,22,427,20],[444,23,427,21],[444,25,427,23,"_i"],[444,27,427,25],[444,30,427,28,"idPath"],[444,36,427,34],[444,37,427,35,"length"],[444,43,427,41],[444,45,427,43,"_i"],[444,47,427,45],[444,49,427,47],[444,51,427,49],[445,10,428,8],[445,14,428,12,"_id"],[445,17,428,15],[445,20,428,18,"idPath"],[445,26,428,24],[445,27,428,25,"_i"],[445,29,428,27],[445,30,428,28],[446,10,429,8],[446,14,429,12,"_node"],[446,19,429,17],[446,22,429,20,"nodePath"],[446,30,429,28],[446,31,429,29,"_i"],[446,33,429,31],[446,34,429,32],[447,10,430,8],[447,14,430,12,"_result"],[447,21,430,19],[447,24,430,22,"check"],[447,29,430,27],[447,30,430,28,"_id"],[447,33,430,31],[447,35,430,33,"_node"],[447,40,430,38],[447,42,430,40,"shouldSetCallbackBubbleName"],[447,69,430,67],[447,70,430,68],[448,10,431,8],[448,14,431,12,"_result"],[448,21,431,19],[448,25,431,23],[448,29,431,27],[448,31,431,29],[449,12,432,10],[449,19,432,17,"_result"],[449,26,432,24],[450,10,433,8],[451,10,434,8],[451,14,434,12,"responderEvent"],[451,28,434,26],[451,29,434,27,"isPropagationStopped"],[451,49,434,47],[451,50,434,48],[451,51,434,49],[451,56,434,54],[451,60,434,58],[451,62,434,60],[452,12,435,10],[453,10,436,8],[454,8,437,6],[455,6,438,4],[455,7,438,5],[455,13,438,11],[456,8,439,6],[456,12,439,10,"_id2"],[456,16,439,14],[456,19,439,17,"idPath"],[456,25,439,23],[456,26,439,24],[456,27,439,25],[456,28,439,26],[457,8,440,6],[457,12,440,10,"_node2"],[457,18,440,16],[457,21,440,19,"nodePath"],[457,29,440,27],[457,30,440,28],[457,31,440,29],[457,32,440,30],[458,8,441,6],[458,12,441,10,"target"],[458,18,441,16],[458,21,441,19,"domEvent"],[458,29,441,27],[458,30,441,28,"target"],[458,36,441,34],[459,8,442,6],[459,12,442,10,"target"],[459,18,442,16],[459,23,442,21,"_node2"],[459,29,442,27],[459,31,442,29],[460,10,443,8],[460,17,443,15,"check"],[460,22,443,20],[460,23,443,21,"_id2"],[460,27,443,25],[460,29,443,27,"_node2"],[460,35,443,33],[460,37,443,35,"shouldSetCallbackBubbleName"],[460,64,443,62],[460,65,443,63],[461,8,444,6],[462,6,445,4],[463,4,446,2],[464,2,447,0],[466,2,449,0],[467,0,450,0],[468,0,451,0],[469,2,452,0],[469,11,452,9,"attemptTransfer"],[469,26,452,24,"attemptTransfer"],[469,27,452,25,"responderEvent"],[469,41,452,39],[469,43,452,41,"wantsResponder"],[469,57,452,55],[469,59,452,57],[470,4,453,2],[470,8,453,6,"_currentResponder2"],[470,26,453,24],[470,29,453,27,"currentResponder"],[470,45,453,43],[471,6,454,4,"currentId"],[471,15,454,13],[471,18,454,16,"_currentResponder2"],[471,36,454,34],[471,37,454,35,"id"],[471,39,454,37],[472,6,455,4,"currentNode"],[472,17,455,15],[472,20,455,18,"_currentResponder2"],[472,38,455,36],[472,39,455,37,"node"],[472,43,455,41],[473,4,456,2],[473,8,456,6,"id"],[473,10,456,8],[473,13,456,11,"wantsResponder"],[473,27,456,25],[473,28,456,26,"id"],[473,30,456,28],[474,6,457,4,"node"],[474,10,457,8],[474,13,457,11,"wantsResponder"],[474,27,457,25],[474,28,457,26,"node"],[474,32,457,30],[475,4,458,2],[475,8,458,6,"_getResponderConfig2"],[475,28,458,26],[475,31,458,29,"getResponderConfig"],[475,49,458,47],[475,50,458,48,"id"],[475,52,458,50],[475,53,458,51],[476,6,459,4,"onResponderGrant"],[476,22,459,20],[476,25,459,23,"_getResponderConfig2"],[476,45,459,43],[476,46,459,44,"onResponderGrant"],[476,62,459,60],[477,6,460,4,"onResponderReject"],[477,23,460,21],[477,26,460,24,"_getResponderConfig2"],[477,46,460,44],[477,47,460,45,"onResponderReject"],[477,64,460,62],[478,4,461,2,"responderEvent"],[478,18,461,16],[478,19,461,17,"bubbles"],[478,26,461,24],[478,29,461,27],[478,34,461,32],[479,4,462,2,"responderEvent"],[479,18,462,16],[479,19,462,17,"cancelable"],[479,29,462,27],[479,32,462,30],[479,37,462,35],[480,4,463,2,"responderEvent"],[480,18,463,16],[480,19,463,17,"currentTarget"],[480,32,463,30],[480,35,463,33,"node"],[480,39,463,37],[482,4,465,2],[483,4,466,2],[483,8,466,6,"currentId"],[483,17,466,15],[483,21,466,19],[483,25,466,23],[483,27,466,25],[484,6,467,4],[484,10,467,8,"onResponderGrant"],[484,26,467,24],[484,30,467,28],[484,34,467,32],[484,36,467,34],[485,8,468,6,"responderEvent"],[485,22,468,20],[485,23,468,21,"currentTarget"],[485,36,468,34],[485,39,468,37,"node"],[485,43,468,41],[486,8,469,6,"responderEvent"],[486,22,469,20],[486,23,469,21,"dispatchConfig"],[486,37,469,35],[486,38,469,36,"registrationName"],[486,54,469,52],[486,57,469,55],[486,75,469,73],[487,8,470,6,"onResponderGrant"],[487,24,470,22],[487,25,470,23,"responderEvent"],[487,39,470,37],[487,40,470,38],[488,6,471,4],[489,6,472,4,"changeCurrentResponder"],[489,28,472,26],[489,29,472,27,"wantsResponder"],[489,43,472,41],[489,44,472,42],[490,4,473,2],[491,4,474,2],[492,4,474,2],[492,9,475,7],[493,6,476,4],[493,10,476,8,"_getResponderConfig3"],[493,30,476,28],[493,33,476,31,"getResponderConfig"],[493,51,476,49],[493,52,476,50,"currentId"],[493,61,476,59],[493,62,476,60],[494,8,477,6,"onResponderTerminate"],[494,28,477,26],[494,31,477,29,"_getResponderConfig3"],[494,51,477,49],[494,52,477,50,"onResponderTerminate"],[494,72,477,70],[495,8,478,6,"onResponderTerminationRequest"],[495,37,478,35],[495,40,478,38,"_getResponderConfig3"],[495,60,478,58],[495,61,478,59,"onResponderTerminationRequest"],[495,90,478,88],[496,6,479,4],[496,10,479,8,"allowTransfer"],[496,23,479,21],[496,26,479,24],[496,30,479,28],[497,6,480,4],[497,10,480,8,"onResponderTerminationRequest"],[497,39,480,37],[497,43,480,41],[497,47,480,45],[497,49,480,47],[498,8,481,6,"responderEvent"],[498,22,481,20],[498,23,481,21,"currentTarget"],[498,36,481,34],[498,39,481,37,"currentNode"],[498,50,481,48],[499,8,482,6,"responderEvent"],[499,22,482,20],[499,23,482,21,"dispatchConfig"],[499,37,482,35],[499,38,482,36,"registrationName"],[499,54,482,52],[499,57,482,55],[499,88,482,86],[500,8,483,6],[500,12,483,10,"onResponderTerminationRequest"],[500,41,483,39],[500,42,483,40,"responderEvent"],[500,56,483,54],[500,57,483,55],[500,62,483,60],[500,67,483,65],[500,69,483,67],[501,10,484,8,"allowTransfer"],[501,23,484,21],[501,26,484,24],[501,31,484,29],[502,8,485,6],[503,6,486,4],[504,6,487,4],[504,10,487,8,"allowTransfer"],[504,23,487,21],[504,25,487,23],[505,8,488,6],[506,8,489,6],[506,12,489,10,"onResponderTerminate"],[506,32,489,30],[506,36,489,34],[506,40,489,38],[506,42,489,40],[507,10,490,8,"responderEvent"],[507,24,490,22],[507,25,490,23,"currentTarget"],[507,38,490,36],[507,41,490,39,"currentNode"],[507,52,490,50],[508,10,491,8,"responderEvent"],[508,24,491,22],[508,25,491,23,"dispatchConfig"],[508,39,491,37],[508,40,491,38,"registrationName"],[508,56,491,54],[508,59,491,57],[508,81,491,79],[509,10,492,8,"onResponderTerminate"],[509,30,492,28],[509,31,492,29,"responderEvent"],[509,45,492,43],[509,46,492,44],[510,8,493,6],[511,8,494,6],[512,8,495,6],[512,12,495,10,"onResponderGrant"],[512,28,495,26],[512,32,495,30],[512,36,495,34],[512,38,495,36],[513,10,496,8,"responderEvent"],[513,24,496,22],[513,25,496,23,"currentTarget"],[513,38,496,36],[513,41,496,39,"node"],[513,45,496,43],[514,10,497,8,"responderEvent"],[514,24,497,22],[514,25,497,23,"dispatchConfig"],[514,39,497,37],[514,40,497,38,"registrationName"],[514,56,497,54],[514,59,497,57],[514,77,497,75],[515,10,498,8,"onResponderGrant"],[515,26,498,24],[515,27,498,25,"responderEvent"],[515,41,498,39],[515,42,498,40],[516,8,499,6],[517,8,500,6,"changeCurrentResponder"],[517,30,500,28],[517,31,500,29,"wantsResponder"],[517,45,500,43],[517,46,500,44],[518,6,501,4],[518,7,501,5],[518,13,501,11],[519,8,502,6],[520,8,503,6],[520,12,503,10,"onResponderReject"],[520,29,503,27],[520,33,503,31],[520,37,503,35],[520,39,503,37],[521,10,504,8,"responderEvent"],[521,24,504,22],[521,25,504,23,"currentTarget"],[521,38,504,36],[521,41,504,39,"node"],[521,45,504,43],[522,10,505,8,"responderEvent"],[522,24,505,22],[522,25,505,23,"dispatchConfig"],[522,39,505,37],[522,40,505,38,"registrationName"],[522,56,505,54],[522,59,505,57],[522,78,505,76],[523,10,506,8,"onResponderReject"],[523,27,506,25],[523,28,506,26,"responderEvent"],[523,42,506,40],[523,43,506,41],[524,8,507,6],[525,6,508,4],[526,4,509,2],[527,2,510,0],[529,2,512,0],[531,2,514,0],[532,0,515,0],[533,0,516,0],[534,0,517,0],[535,0,518,0],[536,0,519,0],[537,2,520,0],[537,6,520,4,"documentEventsCapturePhase"],[537,32,520,30],[537,35,520,33],[537,36,520,34],[537,42,520,40],[537,44,520,42],[537,52,520,50],[537,53,520,51],[538,2,521,0],[538,6,521,4,"documentEventsBubblePhase"],[538,31,521,29],[538,34,521,32],[539,2,522,0],[540,2,523,0],[540,13,523,11],[540,15,523,13],[540,26,523,24],[540,28,523,26],[540,37,523,35],[540,39,523,37],[540,50,523,48],[541,2,524,0],[542,2,525,0],[542,14,525,12],[542,16,525,14],[542,27,525,25],[542,29,525,27],[542,39,525,37],[542,41,525,39],[542,54,525,52],[543,2,526,0],[544,2,527,0],[544,15,527,13],[544,17,527,15],[544,25,527,23],[544,27,527,25],[544,44,527,42],[544,45,527,43],[545,2,528,7],[545,11,528,16,"attachListeners"],[545,26,528,31,"attachListeners"],[545,27,528,31],[545,29,528,34],[546,4,529,2],[546,8,529,6,"canUseDOM"],[546,17,529,15],[546,18,529,15,"default"],[546,25,529,15],[546,29,529,19,"window"],[546,35,529,25],[546,36,529,26,"__reactResponderSystemActive"],[546,64,529,54],[546,68,529,58],[546,72,529,62],[546,74,529,64],[547,6,530,4,"window"],[547,12,530,10],[547,13,530,11,"addEventListener"],[547,29,530,27],[547,30,530,28],[547,36,530,34],[547,38,530,36,"eventListener"],[547,51,530,49],[547,52,530,50],[548,6,531,4,"documentEventsBubblePhase"],[548,31,531,29],[548,32,531,30,"forEach"],[548,39,531,37],[548,40,531,38,"eventType"],[548,49,531,47],[548,53,531,51],[549,8,532,6,"document"],[549,16,532,14],[549,17,532,15,"addEventListener"],[549,33,532,31],[549,34,532,32,"eventType"],[549,43,532,41],[549,45,532,43,"eventListener"],[549,58,532,56],[549,59,532,57],[550,6,533,4],[550,7,533,5],[550,8,533,6],[551,6,534,4,"documentEventsCapturePhase"],[551,32,534,30],[551,33,534,31,"forEach"],[551,40,534,38],[551,41,534,39,"eventType"],[551,50,534,48],[551,54,534,52],[552,8,535,6,"document"],[552,16,535,14],[552,17,535,15,"addEventListener"],[552,33,535,31],[552,34,535,32,"eventType"],[552,43,535,41],[552,45,535,43,"eventListener"],[552,58,535,56],[552,60,535,58],[552,64,535,62],[552,65,535,63],[553,6,536,4],[553,7,536,5],[553,8,536,6],[554,6,537,4,"window"],[554,12,537,10],[554,13,537,11,"__reactResponderSystemActive"],[554,41,537,39],[554,44,537,42],[554,48,537,46],[555,4,538,2],[556,2,539,0],[558,2,541,0],[559,0,542,0],[560,0,543,0],[561,2,544,7],[561,11,544,16,"addNode"],[561,18,544,23,"addNode"],[561,19,544,24,"id"],[561,21,544,26],[561,23,544,28,"node"],[561,27,544,32],[561,29,544,34,"config"],[561,35,544,40],[561,37,544,42],[562,4,545,2],[562,8,545,2,"setResponderId"],[562,14,545,16],[562,15,545,16,"setResponderId"],[562,29,545,16],[562,31,545,17,"node"],[562,35,545,21],[562,37,545,23,"id"],[562,39,545,25],[562,40,545,26],[563,4,546,2,"responderListenersMap"],[563,25,546,23],[563,26,546,24,"set"],[563,29,546,27],[563,30,546,28,"id"],[563,32,546,30],[563,34,546,32,"config"],[563,40,546,38],[563,41,546,39],[564,2,547,0],[566,2,549,0],[567,0,550,0],[568,0,551,0],[569,2,552,7],[569,11,552,16,"removeNode"],[569,21,552,26,"removeNode"],[569,22,552,27,"id"],[569,24,552,29],[569,26,552,31],[570,4,553,2],[570,8,553,6,"currentResponder"],[570,24,553,22],[570,25,553,23,"id"],[570,27,553,25],[570,32,553,30,"id"],[570,34,553,32],[570,36,553,34],[571,6,554,4,"terminateResponder"],[571,24,554,22],[571,25,554,23],[571,26,554,24],[572,4,555,2],[573,4,556,2],[573,8,556,6,"responderListenersMap"],[573,29,556,27],[573,30,556,28,"has"],[573,33,556,31],[573,34,556,32,"id"],[573,36,556,34],[573,37,556,35],[573,39,556,37],[574,6,557,4,"responderListenersMap"],[574,27,557,25],[574,28,557,26,"delete"],[574,34,557,32],[574,35,557,33,"id"],[574,37,557,35],[574,38,557,36],[575,4,558,2],[576,2,559,0],[578,2,561,0],[579,0,562,0],[580,0,563,0],[581,0,564,0],[582,0,565,0],[583,2,566,7],[583,11,566,16,"terminateResponder"],[583,29,566,34,"terminateResponder"],[583,30,566,34],[583,32,566,37],[584,4,567,2],[584,8,567,6,"_currentResponder3"],[584,26,567,24],[584,29,567,27,"currentResponder"],[584,45,567,43],[585,6,568,4,"id"],[585,8,568,6],[585,11,568,9,"_currentResponder3"],[585,29,568,27],[585,30,568,28,"id"],[585,32,568,30],[586,6,569,4,"node"],[586,10,569,8],[586,13,569,11,"_currentResponder3"],[586,31,569,29],[586,32,569,30,"node"],[586,36,569,34],[587,4,570,2],[587,8,570,6,"id"],[587,10,570,8],[587,14,570,12],[587,18,570,16],[587,22,570,20,"node"],[587,26,570,24],[587,30,570,28],[587,34,570,32],[587,36,570,34],[588,6,571,4],[588,10,571,8,"_getResponderConfig4"],[588,30,571,28],[588,33,571,31,"getResponderConfig"],[588,51,571,49],[588,52,571,50,"id"],[588,54,571,52],[588,55,571,53],[589,8,572,6,"onResponderTerminate"],[589,28,572,26],[589,31,572,29,"_getResponderConfig4"],[589,51,572,49],[589,52,572,50,"onResponderTerminate"],[589,72,572,70],[590,6,573,4],[590,10,573,8,"onResponderTerminate"],[590,30,573,28],[590,34,573,32],[590,38,573,36],[590,40,573,38],[591,8,574,6],[591,12,574,10,"event"],[591,17,574,15],[591,20,574,18],[591,24,574,18,"createResponderEvent"],[591,44,574,38],[591,45,574,38,"default"],[591,52,574,38],[591,54,574,39],[591,55,574,40],[591,56,574,41],[591,58,574,43,"responderTouchHistoryStore"],[591,84,574,69],[591,85,574,70],[592,8,575,6,"event"],[592,13,575,11],[592,14,575,12,"currentTarget"],[592,27,575,25],[592,30,575,28,"node"],[592,34,575,32],[593,8,576,6,"onResponderTerminate"],[593,28,576,26],[593,29,576,27,"event"],[593,34,576,32],[593,35,576,33],[594,6,577,4],[595,6,578,4,"changeCurrentResponder"],[595,28,578,26],[595,29,578,27,"emptyResponder"],[595,43,578,41],[595,44,578,42],[596,4,579,2],[597,4,580,2,"isEmulatingMouseEvents"],[597,26,580,24],[597,29,580,27],[597,34,580,32],[598,4,581,2,"trackedTouchCount"],[598,21,581,19],[598,24,581,22],[598,25,581,23],[599,2,582,0],[601,2,584,0],[602,0,585,0],[603,0,586,0],[604,0,587,0],[605,2,588,7],[605,11,588,16,"getResponderNode"],[605,27,588,32,"getResponderNode"],[605,28,588,32],[605,30,588,35],[606,4,589,2],[606,11,589,9,"currentResponder"],[606,27,589,25],[606,28,589,26,"node"],[606,32,589,30],[607,2,590,0],[608,0,590,1],[608,3]],"functionMap":{"names":["<global>","changeCurrentResponder","getResponderConfig","eventListener","findWantsResponder","check","attemptTransfer","attachListeners","documentEventsBubblePhase.forEach$argument_0","documentEventsCapturePhase.forEach$argument_0","addNode","removeNode","terminateResponder","getResponderNode"],"mappings":"AAA;AC+K;CDE;AEC;CFG;AGY;CHyL;AIO;gBCS;KDe;CJqC;AMK;CN0D;OOkB;sCCG;KDE;uCEC;KFE;CPG;OUK;CVG;OWK;CXO;OYO;CZgB;OaM"},"hasCjsExports":false},"type":"js/module"}]}