{"dependencies":[{"name":"query-string","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"Tk6zkk+/XfK89igjx1MNWAcG1Q8=","exportNames":["*"],"imports":1}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":55,"index":115}}],"key":"ZBgxhB8YmJlp1KxhfM5ocx9xUB0=","exportNames":["*"],"imports":1}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":116},"end":{"line":5,"column":61,"index":177}}],"key":"zoUaUuxQP5qPvRrno+lraXgTGfI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.getPathFromState = getPathFromState;\n  var _queryString = require(_dependencyMap[0], \"query-string\");\n  var queryString = _interopNamespace(_queryString);\n  var _getPatternPartsJs = require(_dependencyMap[1], \"./getPatternParts.js\");\n  var _validatePathConfigJs = require(_dependencyMap[2], \"./validatePathConfig.js\");\n  const getActiveRoute = state => {\n    const route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n  const cachedNormalizedConfigs = new WeakMap();\n  const getNormalizedConfigs = options => {\n    if (!options?.screens) return {};\n    const cached = cachedNormalizedConfigs.get(options?.screens);\n    if (cached) return cached;\n    const normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _validatePathConfigJs.validatePathConfig)(options);\n    }\n    const configs = getNormalizedConfigs(options);\n    let path = '/';\n    let current = state;\n    const allParams = {};\n    while (current) {\n      let index = typeof current.index === 'number' ? current.index : 0;\n      let route = current.routes[index];\n      let parts;\n      let focusedParams;\n      let currentOptions = configs;\n      const focusedRoute = getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      const nestedRouteNames = [];\n      let hasNext = true;\n      while (route.name in currentOptions && hasNext) {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          const options = currentOptions[route.name];\n          const currentParams = Object.fromEntries(Object.entries(route.params).map(([key, value]) => {\n            if (value === undefined) {\n              if (options) {\n                const optional = options.parts?.find(part => part.param === key)?.optional;\n                if (optional) {\n                  return null;\n                }\n              } else {\n                return null;\n              }\n            }\n            const stringify = options?.stringify?.[key] ?? String;\n            return [key, stringify(value)];\n          }).filter(entry => entry != null));\n          if (parts?.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = Object.assign({}, currentParams);\n            parts\n            // eslint-disable-next-line no-loop-func\n            ?.forEach(({\n              param\n            }) => {\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          const nextRoute = route.state.routes[index];\n          const nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += parts?.map(({\n          segment,\n          param,\n          optional\n        }) => {\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            const value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(([key, value]) => [key, String(value)]));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (const param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        const query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    }\n\n    // Include the root path if specified\n    if (options?.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  const createConfigItem = (config, parentParts) => {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      const parts = (0, _getPatternPartsJs.getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [...parentParts, ...parts]\n        };\n      }\n      return {\n        parts\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    const parts = config.exact !== true ? [...(parentParts || []), ...(config.path ? (0, _getPatternPartsJs.getPatternParts)(config.path) : [])] : config.path ? (0, _getPatternPartsJs.getPatternParts)(config.path) : undefined;\n    const screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts,\n      stringify: config.stringify,\n      screens\n    };\n  };\n  const createNormalizedConfigs = (options, parts) => Object.fromEntries(Object.entries(options).map(([name, c]) => {\n    const result = createConfigItem(c, parts);\n    return [name, result];\n  }));\n});","lineCount":254,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13],[11,10,1,13,"d"],[11,11,1,13],[11,14,1,13,"Object"],[11,20,1,13],[11,21,1,13,"getOwnPropertyDescriptor"],[11,45,1,13],[11,46,1,13,"e"],[11,47,1,13],[11,49,1,13,"k"],[11,50,1,13],[12,6,1,13,"Object"],[12,12,1,13],[12,13,1,13,"defineProperty"],[12,27,1,13],[12,28,1,13,"n"],[12,29,1,13],[12,31,1,13,"k"],[12,32,1,13],[12,34,1,13,"d"],[12,35,1,13],[12,36,1,13,"get"],[12,39,1,13],[12,42,1,13,"d"],[12,43,1,13],[13,8,1,13,"enumerable"],[13,18,1,13],[14,8,1,13,"get"],[14,11,1,13],[14,22,1,13,"get"],[14,23,1,13],[15,10,1,13],[15,17,1,13,"e"],[15,18,1,13],[15,19,1,13,"k"],[15,20,1,13],[16,8,1,13],[17,6,1,13],[18,4,1,13],[19,4,1,13,"n"],[19,5,1,13],[19,6,1,13,"default"],[19,13,1,13],[19,16,1,13,"e"],[19,17,1,13],[20,4,1,13],[20,11,1,13,"n"],[20,12,1,13],[21,2,1,13],[22,2,52,0,"exports"],[22,9,52,0],[22,10,52,0,"getPathFromState"],[22,26,52,0],[22,29,52,0,"getPathFromState"],[22,45,52,0],[23,2,3,0],[23,6,3,0,"_queryString"],[23,18,3,0],[23,21,3,0,"require"],[23,28,3,0],[23,29,3,0,"_dependencyMap"],[23,43,3,0],[24,2,3,0],[24,6,3,0,"queryString"],[24,17,3,0],[24,20,3,0,"_interopNamespace"],[24,37,3,0],[24,38,3,0,"_queryString"],[24,50,3,0],[25,2,4,0],[25,6,4,0,"_getPatternPartsJs"],[25,24,4,0],[25,27,4,0,"require"],[25,34,4,0],[25,35,4,0,"_dependencyMap"],[25,49,4,0],[26,2,5,0],[26,6,5,0,"_validatePathConfigJs"],[26,27,5,0],[26,30,5,0,"require"],[26,37,5,0],[26,38,5,0,"_dependencyMap"],[26,52,5,0],[27,2,6,0],[27,8,6,6,"getActiveRoute"],[27,22,6,20],[27,25,6,23,"state"],[27,30,6,28],[27,34,6,32],[28,4,7,2],[28,10,7,8,"route"],[28,15,7,13],[28,18,7,16],[28,25,7,23,"state"],[28,30,7,28],[28,31,7,29,"index"],[28,36,7,34],[28,41,7,39],[28,49,7,47],[28,52,7,50,"state"],[28,57,7,55],[28,58,7,56,"routes"],[28,64,7,62],[28,65,7,63,"state"],[28,70,7,68],[28,71,7,69,"index"],[28,76,7,74],[28,77,7,75],[28,80,7,78,"state"],[28,85,7,83],[28,86,7,84,"routes"],[28,92,7,90],[28,93,7,91,"state"],[28,98,7,96],[28,99,7,97,"routes"],[28,105,7,103],[28,106,7,104,"length"],[28,112,7,110],[28,115,7,113],[28,116,7,114],[28,117,7,115],[29,4,8,2],[29,8,8,6,"route"],[29,13,8,11],[29,14,8,12,"state"],[29,19,8,17],[29,21,8,19],[30,6,9,4],[30,13,9,11,"getActiveRoute"],[30,27,9,25],[30,28,9,26,"route"],[30,33,9,31],[30,34,9,32,"state"],[30,39,9,37],[30,40,9,38],[31,4,10,2],[32,4,11,2],[32,11,11,9,"route"],[32,16,11,14],[33,2,12,0],[33,3,12,1],[34,2,13,0],[34,8,13,6,"cachedNormalizedConfigs"],[34,31,13,29],[34,34,13,32],[34,38,13,36,"WeakMap"],[34,45,13,43],[34,46,13,44],[34,47,13,45],[35,2,14,0],[35,8,14,6,"getNormalizedConfigs"],[35,28,14,26],[35,31,14,29,"options"],[35,38,14,36],[35,42,14,40],[36,4,15,2],[36,8,15,6],[36,9,15,7,"options"],[36,16,15,14],[36,18,15,16,"screens"],[36,25,15,23],[36,27,15,25],[36,34,15,32],[36,35,15,33],[36,36,15,34],[37,4,16,2],[37,10,16,8,"cached"],[37,16,16,14],[37,19,16,17,"cachedNormalizedConfigs"],[37,42,16,40],[37,43,16,41,"get"],[37,46,16,44],[37,47,16,45,"options"],[37,54,16,52],[37,56,16,54,"screens"],[37,63,16,61],[37,64,16,62],[38,4,17,2],[38,8,17,6,"cached"],[38,14,17,12],[38,16,17,14],[38,23,17,21,"cached"],[38,29,17,27],[39,4,18,2],[39,10,18,8,"normalizedConfigs"],[39,27,18,25],[39,30,18,28,"createNormalizedConfigs"],[39,53,18,51],[39,54,18,52,"options"],[39,61,18,59],[39,62,18,60,"screens"],[39,69,18,67],[39,70,18,68],[40,4,19,2,"cachedNormalizedConfigs"],[40,27,19,25],[40,28,19,26,"set"],[40,31,19,29],[40,32,19,30,"options"],[40,39,19,37],[40,40,19,38,"screens"],[40,47,19,45],[40,49,19,47,"normalizedConfigs"],[40,66,19,64],[40,67,19,65],[41,4,20,2],[41,11,20,9,"normalizedConfigs"],[41,28,20,26],[42,2,21,0],[42,3,21,1],[44,2,23,0],[45,0,24,0],[46,0,25,0],[47,0,26,0],[48,0,27,0],[49,0,28,0],[50,0,29,0],[51,0,30,0],[52,0,31,0],[53,0,32,0],[54,0,33,0],[55,0,34,0],[56,0,35,0],[57,0,36,0],[58,0,37,0],[59,0,38,0],[60,0,39,0],[61,0,40,0],[62,0,41,0],[63,0,42,0],[64,0,43,0],[65,0,44,0],[66,0,45,0],[67,0,46,0],[68,0,47,0],[69,0,48,0],[70,0,49,0],[71,0,50,0],[72,0,51,0],[73,2,52,7],[73,11,52,16,"getPathFromState"],[73,27,52,32,"getPathFromState"],[73,28,52,33,"state"],[73,33,52,38],[73,35,52,40,"options"],[73,42,52,47],[73,44,52,49],[74,4,53,2],[74,8,53,6,"state"],[74,13,53,11],[74,17,53,15],[74,21,53,19],[74,23,53,21],[75,6,54,4],[75,12,54,10,"Error"],[75,17,54,15],[75,18,54,16],[75,26,54,24,"String"],[75,32,54,30],[75,33,54,31,"state"],[75,38,54,36],[75,39,54,37],[75,104,54,102],[75,105,54,103],[76,4,55,2],[77,4,56,2],[77,8,56,6,"options"],[77,15,56,13],[77,17,56,15],[78,6,57,4],[78,10,57,4,"validatePathConfig"],[78,31,57,22],[78,32,57,22,"validatePathConfig"],[78,50,57,22],[78,52,57,23,"options"],[78,59,57,30],[78,60,57,31],[79,4,58,2],[80,4,59,2],[80,10,59,8,"configs"],[80,17,59,15],[80,20,59,18,"getNormalizedConfigs"],[80,40,59,38],[80,41,59,39,"options"],[80,48,59,46],[80,49,59,47],[81,4,60,2],[81,8,60,6,"path"],[81,12,60,10],[81,15,60,13],[81,18,60,16],[82,4,61,2],[82,8,61,6,"current"],[82,15,61,13],[82,18,61,16,"state"],[82,23,61,21],[83,4,62,2],[83,10,62,8,"allParams"],[83,19,62,17],[83,22,62,20],[83,23,62,21],[83,24,62,22],[84,4,63,2],[84,11,63,9,"current"],[84,18,63,16],[84,20,63,18],[85,6,64,4],[85,10,64,8,"index"],[85,15,64,13],[85,18,64,16],[85,25,64,23,"current"],[85,32,64,30],[85,33,64,31,"index"],[85,38,64,36],[85,43,64,41],[85,51,64,49],[85,54,64,52,"current"],[85,61,64,59],[85,62,64,60,"index"],[85,67,64,65],[85,70,64,68],[85,71,64,69],[86,6,65,4],[86,10,65,8,"route"],[86,15,65,13],[86,18,65,16,"current"],[86,25,65,23],[86,26,65,24,"routes"],[86,32,65,30],[86,33,65,31,"index"],[86,38,65,36],[86,39,65,37],[87,6,66,4],[87,10,66,8,"parts"],[87,15,66,13],[88,6,67,4],[88,10,67,8,"focusedParams"],[88,23,67,21],[89,6,68,4],[89,10,68,8,"currentOptions"],[89,24,68,22],[89,27,68,25,"configs"],[89,34,68,32],[90,6,69,4],[90,12,69,10,"focusedRoute"],[90,24,69,22],[90,27,69,25,"getActiveRoute"],[90,41,69,39],[90,42,69,40,"state"],[90,47,69,45],[90,48,69,46],[92,6,71,4],[93,6,72,4],[93,12,72,10,"nestedRouteNames"],[93,28,72,26],[93,31,72,29],[93,33,72,31],[94,6,73,4],[94,10,73,8,"hasNext"],[94,17,73,15],[94,20,73,18],[94,24,73,22],[95,6,74,4],[95,13,74,11,"route"],[95,18,74,16],[95,19,74,17,"name"],[95,23,74,21],[95,27,74,25,"currentOptions"],[95,41,74,39],[95,45,74,43,"hasNext"],[95,52,74,50],[95,54,74,52],[96,8,75,6,"parts"],[96,13,75,11],[96,16,75,14,"currentOptions"],[96,30,75,28],[96,31,75,29,"route"],[96,36,75,34],[96,37,75,35,"name"],[96,41,75,39],[96,42,75,40],[96,43,75,41,"parts"],[96,48,75,46],[97,8,76,6,"nestedRouteNames"],[97,24,76,22],[97,25,76,23,"push"],[97,29,76,27],[97,30,76,28,"route"],[97,35,76,33],[97,36,76,34,"name"],[97,40,76,38],[97,41,76,39],[98,8,77,6],[98,12,77,10,"route"],[98,17,77,15],[98,18,77,16,"params"],[98,24,77,22],[98,26,77,24],[99,10,78,8],[99,16,78,14,"options"],[99,23,78,21],[99,26,78,24,"currentOptions"],[99,40,78,38],[99,41,78,39,"route"],[99,46,78,44],[99,47,78,45,"name"],[99,51,78,49],[99,52,78,50],[100,10,79,8],[100,16,79,14,"currentParams"],[100,29,79,27],[100,32,79,30,"Object"],[100,38,79,36],[100,39,79,37,"fromEntries"],[100,50,79,48],[100,51,79,49,"Object"],[100,57,79,55],[100,58,79,56,"entries"],[100,65,79,63],[100,66,79,64,"route"],[100,71,79,69],[100,72,79,70,"params"],[100,78,79,76],[100,79,79,77],[100,80,79,78,"map"],[100,83,79,81],[100,84,79,82],[100,85,79,83],[100,86,79,84,"key"],[100,89,79,87],[100,91,79,89,"value"],[100,96,79,94],[100,97,79,95],[100,102,79,100],[101,12,80,10],[101,16,80,14,"value"],[101,21,80,19],[101,26,80,24,"undefined"],[101,35,80,33],[101,37,80,35],[102,14,81,12],[102,18,81,16,"options"],[102,25,81,23],[102,27,81,25],[103,16,82,14],[103,22,82,20,"optional"],[103,30,82,28],[103,33,82,31,"options"],[103,40,82,38],[103,41,82,39,"parts"],[103,46,82,44],[103,48,82,46,"find"],[103,52,82,50],[103,53,82,51,"part"],[103,57,82,55],[103,61,82,59,"part"],[103,65,82,63],[103,66,82,64,"param"],[103,71,82,69],[103,76,82,74,"key"],[103,79,82,77],[103,80,82,78],[103,82,82,80,"optional"],[103,90,82,88],[104,16,83,14],[104,20,83,18,"optional"],[104,28,83,26],[104,30,83,28],[105,18,84,16],[105,25,84,23],[105,29,84,27],[106,16,85,14],[107,14,86,12],[107,15,86,13],[107,21,86,19],[108,16,87,14],[108,23,87,21],[108,27,87,25],[109,14,88,12],[110,12,89,10],[111,12,90,10],[111,18,90,16,"stringify"],[111,27,90,25],[111,30,90,28,"options"],[111,37,90,35],[111,39,90,37,"stringify"],[111,48,90,46],[111,51,90,49,"key"],[111,54,90,52],[111,55,90,53],[111,59,90,57,"String"],[111,65,90,63],[112,12,91,10],[112,19,91,17],[112,20,91,18,"key"],[112,23,91,21],[112,25,91,23,"stringify"],[112,34,91,32],[112,35,91,33,"value"],[112,40,91,38],[112,41,91,39],[112,42,91,40],[113,10,92,8],[113,11,92,9],[113,12,92,10],[113,13,92,11,"filter"],[113,19,92,17],[113,20,92,18,"entry"],[113,25,92,23],[113,29,92,27,"entry"],[113,34,92,32],[113,38,92,36],[113,42,92,40],[113,43,92,41],[113,44,92,42],[114,10,93,8],[114,14,93,12,"parts"],[114,19,93,17],[114,21,93,19,"length"],[114,27,93,25],[114,29,93,27],[115,12,94,10,"Object"],[115,18,94,16],[115,19,94,17,"assign"],[115,25,94,23],[115,26,94,24,"allParams"],[115,35,94,33],[115,37,94,35,"currentParams"],[115,50,94,48],[115,51,94,49],[116,10,95,8],[117,10,96,8],[117,14,96,12,"focusedRoute"],[117,26,96,24],[117,31,96,29,"route"],[117,36,96,34],[117,38,96,36],[118,12,97,10],[119,12,98,10],[120,12,99,10,"focusedParams"],[120,25,99,23],[120,28,99,23,"Object"],[120,34,99,23],[120,35,99,23,"assign"],[120,41,99,23],[120,46,100,15,"currentParams"],[120,59,100,28],[120,60,101,11],[121,12,102,10,"parts"],[122,12,103,10],[123,12,103,10],[123,14,104,12,"forEach"],[123,21,104,19],[123,22,104,20],[123,23,104,21],[124,14,105,12,"param"],[125,12,106,10],[125,13,106,11],[125,18,106,16],[126,14,107,12],[126,18,107,16,"param"],[126,23,107,21],[126,25,107,23],[127,16,108,14],[128,16,109,14],[128,20,109,18,"focusedParams"],[128,33,109,31],[128,35,109,33],[129,18,110,16],[130,18,111,16],[130,25,111,23,"focusedParams"],[130,38,111,36],[130,39,111,37,"param"],[130,44,111,42],[130,45,111,43],[131,16,112,14],[132,14,113,12],[133,12,114,10],[133,13,114,11],[133,14,114,12],[134,10,115,8],[135,8,116,6],[137,8,118,6],[138,8,119,6],[138,12,119,10],[138,13,119,11,"currentOptions"],[138,27,119,25],[138,28,119,26,"route"],[138,33,119,31],[138,34,119,32,"name"],[138,38,119,36],[138,39,119,37],[138,40,119,38,"screens"],[138,47,119,45],[138,51,119,49,"route"],[138,56,119,54],[138,57,119,55,"state"],[138,62,119,60],[138,67,119,65,"undefined"],[138,76,119,74],[138,78,119,76],[139,10,120,8,"hasNext"],[139,17,120,15],[139,20,120,18],[139,25,120,23],[140,8,121,6],[140,9,121,7],[140,15,121,13],[141,10,122,8,"index"],[141,15,122,13],[141,18,122,16],[141,25,122,23,"route"],[141,30,122,28],[141,31,122,29,"state"],[141,36,122,34],[141,37,122,35,"index"],[141,42,122,40],[141,47,122,45],[141,55,122,53],[141,58,122,56,"route"],[141,63,122,61],[141,64,122,62,"state"],[141,69,122,67],[141,70,122,68,"index"],[141,75,122,73],[141,78,122,76,"route"],[141,83,122,81],[141,84,122,82,"state"],[141,89,122,87],[141,90,122,88,"routes"],[141,96,122,94],[141,97,122,95,"length"],[141,103,122,101],[141,106,122,104],[141,107,122,105],[142,10,123,8],[142,16,123,14,"nextRoute"],[142,25,123,23],[142,28,123,26,"route"],[142,33,123,31],[142,34,123,32,"state"],[142,39,123,37],[142,40,123,38,"routes"],[142,46,123,44],[142,47,123,45,"index"],[142,52,123,50],[142,53,123,51],[143,10,124,8],[143,16,124,14,"nestedConfig"],[143,28,124,26],[143,31,124,29,"currentOptions"],[143,45,124,43],[143,46,124,44,"route"],[143,51,124,49],[143,52,124,50,"name"],[143,56,124,54],[143,57,124,55],[143,58,124,56,"screens"],[143,65,124,63],[145,10,126,8],[146,10,127,8],[146,14,127,12,"nestedConfig"],[146,26,127,24],[146,30,127,28,"nextRoute"],[146,39,127,37],[146,40,127,38,"name"],[146,44,127,42],[146,48,127,46,"nestedConfig"],[146,60,127,58],[146,62,127,60],[147,12,128,10,"route"],[147,17,128,15],[147,20,128,18,"nextRoute"],[147,29,128,27],[148,12,129,10,"currentOptions"],[148,26,129,24],[148,29,129,27,"nestedConfig"],[148,41,129,39],[149,10,130,8],[149,11,130,9],[149,17,130,15],[150,12,131,10],[151,12,132,10,"hasNext"],[151,19,132,17],[151,22,132,20],[151,27,132,25],[152,10,133,8],[153,8,134,6],[154,6,135,4],[155,6,136,4],[155,10,136,8,"currentOptions"],[155,24,136,22],[155,25,136,23,"route"],[155,30,136,28],[155,31,136,29,"name"],[155,35,136,33],[155,36,136,34],[155,41,136,39,"undefined"],[155,50,136,48],[155,52,136,50],[156,8,137,6,"path"],[156,12,137,10],[156,16,137,14,"parts"],[156,21,137,19],[156,23,137,21,"map"],[156,26,137,24],[156,27,137,25],[156,28,137,26],[157,10,138,8,"segment"],[157,17,138,15],[158,10,139,8,"param"],[158,15,139,13],[159,10,140,8,"optional"],[160,8,141,6],[160,9,141,7],[160,14,141,12],[161,10,142,8],[162,10,143,8],[163,10,144,8],[164,10,145,8],[164,14,145,12,"segment"],[164,21,145,19],[164,26,145,24],[164,29,145,27],[164,31,145,29],[165,12,146,10],[165,19,146,17,"route"],[165,24,146,22],[165,25,146,23,"name"],[165,29,146,27],[166,10,147,8],[168,10,149,8],[169,10,150,8],[169,14,150,12,"param"],[169,19,150,17],[169,21,150,19],[170,12,151,10],[170,18,151,16,"value"],[170,23,151,21],[170,26,151,24,"allParams"],[170,35,151,33],[170,36,151,34,"param"],[170,41,151,39],[170,42,151,40],[171,12,152,10],[171,16,152,14,"value"],[171,21,152,19],[171,26,152,24,"undefined"],[171,35,152,33],[171,39,152,37,"optional"],[171,47,152,45],[171,49,152,47],[172,14,153,12],[173,14,154,12],[173,21,154,19],[173,23,154,21],[174,12,155,10],[176,12,157,10],[177,12,158,10],[178,12,159,10],[178,19,159,17,"String"],[178,25,159,23],[178,26,159,24,"value"],[178,31,159,29],[178,32,159,30],[178,33,159,31,"replace"],[178,40,159,38],[178,41,159,39],[178,74,159,72],[178,76,159,74,"char"],[178,80,159,78],[178,84,159,82,"encodeURIComponent"],[178,102,159,100],[178,103,159,101,"char"],[178,107,159,105],[178,108,159,106],[178,109,159,107],[179,10,160,8],[180,10,161,8],[180,17,161,15,"encodeURIComponent"],[180,35,161,33],[180,36,161,34,"segment"],[180,43,161,41],[180,44,161,42],[181,8,162,6],[181,9,162,7],[181,10,162,8],[181,11,162,9,"join"],[181,15,162,13],[181,16,162,14],[181,19,162,17],[181,20,162,18],[182,6,163,4],[182,7,163,5],[182,13,163,11],[183,8,164,6,"path"],[183,12,164,10],[183,16,164,14,"encodeURIComponent"],[183,34,164,32],[183,35,164,33,"route"],[183,40,164,38],[183,41,164,39,"name"],[183,45,164,43],[183,46,164,44],[184,6,165,4],[185,6,166,4],[185,10,166,8],[185,11,166,9,"focusedParams"],[185,24,166,22],[185,28,166,26,"focusedRoute"],[185,40,166,38],[185,41,166,39,"params"],[185,47,166,45],[185,49,166,47],[186,8,167,6,"focusedParams"],[186,21,167,19],[186,24,167,22,"Object"],[186,30,167,28],[186,31,167,29,"fromEntries"],[186,42,167,40],[186,43,167,41,"Object"],[186,49,167,47],[186,50,167,48,"entries"],[186,57,167,55],[186,58,167,56,"focusedRoute"],[186,70,167,68],[186,71,167,69,"params"],[186,77,167,75],[186,78,167,76],[186,79,167,77,"map"],[186,82,167,80],[186,83,167,81],[186,84,167,82],[186,85,167,83,"key"],[186,88,167,86],[186,90,167,88,"value"],[186,95,167,93],[186,96,167,94],[186,101,167,99],[186,102,167,100,"key"],[186,105,167,103],[186,107,167,105,"String"],[186,113,167,111],[186,114,167,112,"value"],[186,119,167,117],[186,120,167,118],[186,121,167,119],[186,122,167,120],[186,123,167,121],[187,6,168,4],[188,6,169,4],[188,10,169,8,"route"],[188,15,169,13],[188,16,169,14,"state"],[188,21,169,19],[188,23,169,21],[189,8,170,6,"path"],[189,12,170,10],[189,16,170,14],[189,19,170,17],[190,6,171,4],[190,7,171,5],[190,13,171,11],[190,17,171,15,"focusedParams"],[190,30,171,28],[190,32,171,30],[191,8,172,6],[191,13,172,11],[191,19,172,17,"param"],[191,24,172,22],[191,28,172,26,"focusedParams"],[191,41,172,39],[191,43,172,41],[192,10,173,8],[192,14,173,12,"focusedParams"],[192,27,173,25],[192,28,173,26,"param"],[192,33,173,31],[192,34,173,32],[192,39,173,37],[192,50,173,48],[192,52,173,50],[193,12,174,10],[194,12,175,10],[194,19,175,17,"focusedParams"],[194,32,175,30],[194,33,175,31,"param"],[194,38,175,36],[194,39,175,37],[195,10,176,8],[196,8,177,6],[197,8,178,6],[197,14,178,12,"query"],[197,19,178,17],[197,22,178,20,"queryString"],[197,33,178,31],[197,34,178,32,"stringify"],[197,43,178,41],[197,44,178,42,"focusedParams"],[197,57,178,55],[197,59,178,57],[198,10,179,8,"sort"],[198,14,179,12],[198,16,179,14],[199,8,180,6],[199,9,180,7],[199,10,180,8],[200,8,181,6],[200,12,181,10,"query"],[200,17,181,15],[200,19,181,17],[201,10,182,8,"path"],[201,14,182,12],[201,18,182,16],[201,22,182,20,"query"],[201,27,182,25],[201,29,182,27],[202,8,183,6],[203,6,184,4],[204,6,185,4,"current"],[204,13,185,11],[204,16,185,14,"route"],[204,21,185,19],[204,22,185,20,"state"],[204,27,185,25],[205,4,186,2],[207,4,188,2],[208,4,189,2],[208,8,189,6,"options"],[208,15,189,13],[208,17,189,15,"path"],[208,21,189,19],[208,23,189,21],[209,6,190,4,"path"],[209,10,190,8],[209,13,190,11],[209,16,190,14,"options"],[209,23,190,21],[209,24,190,22,"path"],[209,28,190,26],[209,32,190,30,"path"],[209,36,190,34],[209,38,190,36],[210,4,191,2],[212,4,193,2],[213,4,194,2,"path"],[213,8,194,6],[213,11,194,9,"path"],[213,15,194,13],[213,16,194,14,"replace"],[213,23,194,21],[213,24,194,22],[213,30,194,28],[213,32,194,30],[213,35,194,33],[213,36,194,34],[214,4,195,2,"path"],[214,8,195,6],[214,11,195,9,"path"],[214,15,195,13],[214,16,195,14,"length"],[214,22,195,20],[214,25,195,23],[214,26,195,24],[214,29,195,27,"path"],[214,33,195,31],[214,34,195,32,"replace"],[214,41,195,39],[214,42,195,40],[214,47,195,45],[214,49,195,47],[214,51,195,49],[214,52,195,50],[214,55,195,53,"path"],[214,59,195,57],[216,4,197,2],[217,4,198,2],[218,4,199,2],[218,8,199,6],[218,9,199,7,"path"],[218,13,199,11],[218,14,199,12,"startsWith"],[218,24,199,22],[218,25,199,23],[218,28,199,26],[218,29,199,27],[218,31,199,29],[219,6,200,4,"path"],[219,10,200,8],[219,13,200,11],[219,17,200,15,"path"],[219,21,200,19],[219,23,200,21],[220,4,201,2],[221,4,202,2],[221,11,202,9,"path"],[221,15,202,13],[222,2,203,0],[223,2,204,0],[223,8,204,6,"createConfigItem"],[223,24,204,22],[223,27,204,25,"createConfigItem"],[223,28,204,26,"config"],[223,34,204,32],[223,36,204,34,"parentParts"],[223,47,204,45],[223,52,204,50],[224,4,205,2],[224,8,205,6],[224,15,205,13,"config"],[224,21,205,19],[224,26,205,24],[224,34,205,32],[224,36,205,34],[225,6,206,4],[226,6,207,4],[226,12,207,10,"parts"],[226,17,207,15],[226,20,207,18],[226,24,207,18,"getPatternParts"],[226,42,207,33],[226,43,207,33,"getPatternParts"],[226,58,207,33],[226,60,207,34,"config"],[226,66,207,40],[226,67,207,41],[227,6,208,4],[227,10,208,8,"parentParts"],[227,21,208,19],[227,23,208,21],[228,8,209,6],[228,15,209,13],[229,10,210,8,"parts"],[229,15,210,13],[229,17,210,15],[229,18,210,16],[229,21,210,19,"parentParts"],[229,32,210,30],[229,34,210,32],[229,37,210,35,"parts"],[229,42,210,40],[230,8,211,6],[230,9,211,7],[231,6,212,4],[232,6,213,4],[232,13,213,11],[233,8,214,6,"parts"],[234,6,215,4],[234,7,215,5],[235,4,216,2],[236,4,217,2],[236,8,217,6,"config"],[236,14,217,12],[236,15,217,13,"exact"],[236,20,217,18],[236,24,217,22,"config"],[236,30,217,28],[236,31,217,29,"path"],[236,35,217,33],[236,40,217,38,"undefined"],[236,49,217,47],[236,51,217,49],[237,6,218,4],[237,12,218,10],[237,16,218,14,"Error"],[237,21,218,19],[237,22,218,20],[237,172,218,170],[237,173,218,171],[238,4,219,2],[240,4,221,2],[241,4,222,2],[242,4,223,2],[242,10,223,8,"parts"],[242,15,223,13],[242,18,223,16,"config"],[242,24,223,22],[242,25,223,23,"exact"],[242,30,223,28],[242,35,223,33],[242,39,223,37],[242,42,223,40],[242,43,223,41],[242,47,223,45,"parentParts"],[242,58,223,56],[242,62,223,60],[242,64,223,62],[242,65,223,63],[242,67,223,65],[242,71,223,69,"config"],[242,77,223,75],[242,78,223,76,"path"],[242,82,223,80],[242,85,223,83],[242,89,223,83,"getPatternParts"],[242,107,223,98],[242,108,223,98,"getPatternParts"],[242,123,223,98],[242,125,223,99,"config"],[242,131,223,105],[242,132,223,106,"path"],[242,136,223,110],[242,137,223,111],[242,140,223,114],[242,142,223,116],[242,143,223,117],[242,144,223,118],[242,147,223,121,"config"],[242,153,223,127],[242,154,223,128,"path"],[242,158,223,132],[242,161,223,135],[242,165,223,135,"getPatternParts"],[242,183,223,150],[242,184,223,150,"getPatternParts"],[242,199,223,150],[242,201,223,151,"config"],[242,207,223,157],[242,208,223,158,"path"],[242,212,223,162],[242,213,223,163],[242,216,223,166,"undefined"],[242,225,223,175],[243,4,224,2],[243,10,224,8,"screens"],[243,17,224,15],[243,20,224,18,"config"],[243,26,224,24],[243,27,224,25,"screens"],[243,34,224,32],[243,37,224,35,"createNormalizedConfigs"],[243,60,224,58],[243,61,224,59,"config"],[243,67,224,65],[243,68,224,66,"screens"],[243,75,224,73],[243,77,224,75,"parts"],[243,82,224,80],[243,83,224,81],[243,86,224,84,"undefined"],[243,95,224,93],[244,4,225,2],[244,11,225,9],[245,6,226,4,"parts"],[245,11,226,9],[246,6,227,4,"stringify"],[246,15,227,13],[246,17,227,15,"config"],[246,23,227,21],[246,24,227,22,"stringify"],[246,33,227,31],[247,6,228,4,"screens"],[248,4,229,2],[248,5,229,3],[249,2,230,0],[249,3,230,1],[250,2,231,0],[250,8,231,6,"createNormalizedConfigs"],[250,31,231,29],[250,34,231,32,"createNormalizedConfigs"],[250,35,231,33,"options"],[250,42,231,40],[250,44,231,42,"parts"],[250,49,231,47],[250,54,231,52,"Object"],[250,60,231,58],[250,61,231,59,"fromEntries"],[250,72,231,70],[250,73,231,71,"Object"],[250,79,231,77],[250,80,231,78,"entries"],[250,87,231,85],[250,88,231,86,"options"],[250,95,231,93],[250,96,231,94],[250,97,231,95,"map"],[250,100,231,98],[250,101,231,99],[250,102,231,100],[250,103,231,101,"name"],[250,107,231,105],[250,109,231,107,"c"],[250,110,231,108],[250,111,231,109],[250,116,231,114],[251,4,232,2],[251,10,232,8,"result"],[251,16,232,14],[251,19,232,17,"createConfigItem"],[251,35,232,33],[251,36,232,34,"c"],[251,37,232,35],[251,39,232,37,"parts"],[251,44,232,42],[251,45,232,43],[252,4,233,2],[252,11,233,9],[252,12,233,10,"name"],[252,16,233,14],[252,18,233,16,"result"],[252,24,233,22],[252,25,233,23],[253,2,234,0],[253,3,234,1],[253,4,234,2],[253,5,234,3],[254,0,234,4],[254,3]],"functionMap":{"names":["<global>","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","options.parts.find$argument_0","Object.entries.map.filter$argument_0","parts.forEach$argument_0","parts.map$argument_0","String.replace$argument_1","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCK;CDM;6BEE;CFO;OG+B;kFC2B;mDCG,0BD;SDU,SG,sBH;oBIY;WJU;yBKuB;0ECsB,gCD;OLG;iFCK,sCD;CHoC;yBUC;CV0B;gCWC,mEP;COG,EX"},"hasCjsExports":false},"type":"js/module"}]}