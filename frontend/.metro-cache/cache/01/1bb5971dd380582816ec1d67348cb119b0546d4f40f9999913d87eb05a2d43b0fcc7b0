{"dependencies":[{"name":"../modules/symbolicateStackTrace","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":296},"end":{"line":11,"column":69,"index":365}}],"key":"YdkqoDMIPdxOnCsE0E8rzpWj034=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.deleteStack = deleteStack;\n  exports.symbolicate = symbolicate;\n  var _modulesSymbolicateStackTrace = require(_dependencyMap[0], \"../modules/symbolicateStackTrace\");\n  var symbolicateStackTrace = _interopDefault(_modulesSymbolicateStackTrace);\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var cache = new Map();\n\n  /**\n   * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\n   */\n  var sanitize = _ref => {\n    var maybeStack = _ref.stack,\n      codeFrame = _ref.codeFrame;\n    if (!Array.isArray(maybeStack)) {\n      throw new Error('Expected stack to be an array.');\n    }\n    var stack = [];\n    for (var maybeFrame of maybeStack) {\n      var collapse = false;\n      if ('collapse' in maybeFrame) {\n        if (typeof maybeFrame.collapse !== 'boolean') {\n          throw new Error('Expected stack frame `collapse` to be a boolean.');\n        }\n        collapse = maybeFrame.collapse;\n      }\n      stack.push({\n        arguments: [],\n        column: maybeFrame.column,\n        file: maybeFrame.file,\n        lineNumber: maybeFrame.lineNumber,\n        methodName: maybeFrame.methodName,\n        collapse\n      });\n    }\n    return {\n      stack,\n      codeFrame\n    };\n  };\n  function deleteStack(stack) {\n    cache.delete(stack);\n  }\n  function symbolicate(stack) {\n    var promise = cache.get(stack);\n    if (promise == null) {\n      promise = (0, symbolicateStackTrace.default)(stack).then(sanitize);\n      cache.set(stack, promise);\n    }\n    return promise;\n  }\n});","lineCount":69,"map":[[12,2,52,0,"exports"],[12,9,52,0],[12,10,52,0,"deleteStack"],[12,21,52,0],[12,24,52,0,"deleteStack"],[12,35,52,0],[13,2,56,0,"exports"],[13,9,56,0],[13,10,56,0,"symbolicate"],[13,21,56,0],[13,24,56,0,"symbolicate"],[13,35,56,0],[14,2,11,0],[14,6,11,0,"_modulesSymbolicateStackTrace"],[14,35,11,0],[14,38,11,0,"require"],[14,45,11,0],[14,46,11,0,"_dependencyMap"],[14,60,11,0],[15,2,11,0],[15,6,11,0,"symbolicateStackTrace"],[15,27,11,0],[15,30,11,0,"_interopDefault"],[15,45,11,0],[15,46,11,0,"_modulesSymbolicateStackTrace"],[15,75,11,0],[16,2,1,0],[17,0,2,0],[18,0,3,0],[19,0,4,0],[20,0,5,0],[21,0,6,0],[22,0,7,0],[24,2,19,0],[24,6,19,6,"cache"],[24,11,19,56],[24,14,19,59],[24,18,19,63,"Map"],[24,21,19,66],[24,22,19,67],[24,23,19,68],[26,2,21,0],[27,0,22,0],[28,0,23,0],[29,2,24,0],[29,6,24,6,"sanitize"],[29,14,24,14],[29,17,24,17,"_ref"],[29,21,24,17],[29,25,27,54],[30,4,27,54],[30,8,25,9,"maybeStack"],[30,18,25,19],[30,21,25,19,"_ref"],[30,25,25,19],[30,26,25,2,"stack"],[30,31,25,7],[31,6,26,2,"codeFrame"],[31,15,26,11],[31,18,26,11,"_ref"],[31,22,26,11],[31,23,26,2,"codeFrame"],[31,32,26,11],[32,4,28,2],[32,8,28,6],[32,9,28,7,"Array"],[32,14,28,12],[32,15,28,13,"isArray"],[32,22,28,20],[32,23,28,21,"maybeStack"],[32,33,28,31],[32,34,28,32],[32,36,28,34],[33,6,29,4],[33,12,29,10],[33,16,29,14,"Error"],[33,21,29,19],[33,22,29,20],[33,54,29,52],[33,55,29,53],[34,4,30,2],[35,4,31,2],[35,8,31,8,"stack"],[35,13,31,27],[35,16,31,30],[35,18,31,32],[36,4,32,2],[36,9,32,7],[36,13,32,13,"maybeFrame"],[36,23,32,23],[36,27,32,27,"maybeStack"],[36,37,32,37],[36,39,32,39],[37,6,33,4],[37,10,33,8,"collapse"],[37,18,33,16],[37,21,33,19],[37,26,33,24],[38,6,34,4],[38,10,34,8],[38,20,34,18],[38,24,34,22,"maybeFrame"],[38,34,34,32],[38,36,34,34],[39,8,35,6],[39,12,35,10],[39,19,35,17,"maybeFrame"],[39,29,35,27],[39,30,35,28,"collapse"],[39,38,35,36],[39,43,35,41],[39,52,35,50],[39,54,35,52],[40,10,36,8],[40,16,36,14],[40,20,36,18,"Error"],[40,25,36,23],[40,26,36,24],[40,76,36,74],[40,77,36,75],[41,8,37,6],[42,8,38,6,"collapse"],[42,16,38,14],[42,19,38,17,"maybeFrame"],[42,29,38,27],[42,30,38,28,"collapse"],[42,38,38,36],[43,6,39,4],[44,6,40,4,"stack"],[44,11,40,9],[44,12,40,10,"push"],[44,16,40,14],[44,17,40,15],[45,8,41,6,"arguments"],[45,17,41,15],[45,19,41,17],[45,21,41,19],[46,8,42,6,"column"],[46,14,42,12],[46,16,42,14,"maybeFrame"],[46,26,42,24],[46,27,42,25,"column"],[46,33,42,31],[47,8,43,6,"file"],[47,12,43,10],[47,14,43,12,"maybeFrame"],[47,24,43,22],[47,25,43,23,"file"],[47,29,43,27],[48,8,44,6,"lineNumber"],[48,18,44,16],[48,20,44,18,"maybeFrame"],[48,30,44,28],[48,31,44,29,"lineNumber"],[48,41,44,39],[49,8,45,6,"methodName"],[49,18,45,16],[49,20,45,18,"maybeFrame"],[49,30,45,28],[49,31,45,29,"methodName"],[49,41,45,39],[50,8,46,6,"collapse"],[51,6,47,4],[51,7,47,5],[51,8,47,6],[52,4,48,2],[53,4,49,2],[53,11,49,9],[54,6,49,11,"stack"],[54,11,49,16],[55,6,49,18,"codeFrame"],[56,4,49,28],[56,5,49,29],[57,2,50,0],[57,3,50,1],[58,2,52,7],[58,11,52,16,"deleteStack"],[58,22,52,27,"deleteStack"],[58,23,52,28,"stack"],[58,28,52,40],[58,30,52,48],[59,4,53,2,"cache"],[59,9,53,7],[59,10,53,8,"delete"],[59,16,53,14],[59,17,53,15,"stack"],[59,22,53,20],[59,23,53,21],[60,2,54,0],[61,2,56,7],[61,11,56,16,"symbolicate"],[61,22,56,27,"symbolicate"],[61,23,56,28,"stack"],[61,28,56,40],[61,30,56,75],[62,4,57,2],[62,8,57,6,"promise"],[62,15,57,13],[62,18,57,16,"cache"],[62,23,57,21],[62,24,57,22,"get"],[62,27,57,25],[62,28,57,26,"stack"],[62,33,57,31],[62,34,57,32],[63,4,58,2],[63,8,58,6,"promise"],[63,15,58,13],[63,19,58,17],[63,23,58,21],[63,25,58,23],[64,6,59,4,"promise"],[64,13,59,11],[64,16,59,14],[64,20,59,14,"symbolicateStackTrace"],[64,41,59,35],[64,42,59,35,"default"],[64,49,59,35],[64,51,59,36,"stack"],[64,56,59,41],[64,57,59,42],[64,58,59,43,"then"],[64,62,59,47],[64,63,59,48,"sanitize"],[64,71,59,56],[64,72,59,57],[65,6,60,4,"cache"],[65,11,60,9],[65,12,60,10,"set"],[65,15,60,13],[65,16,60,14,"stack"],[65,21,60,19],[65,23,60,21,"promise"],[65,30,60,28],[65,31,60,29],[66,4,61,2],[67,4,63,2],[67,11,63,9,"promise"],[67,18,63,16],[68,2,64,0],[69,0,64,1],[69,3]],"functionMap":{"names":["<global>","sanitize","deleteStack","symbolicate"],"mappings":"AAA;iBCuB;CD0B;OEE;CFE;OGE;CHQ"},"hasCjsExports":false},"type":"js/module"}]}