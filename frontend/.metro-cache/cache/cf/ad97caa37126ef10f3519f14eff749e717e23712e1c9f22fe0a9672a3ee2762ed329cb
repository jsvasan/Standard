{"dependencies":[{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":61,"index":286}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"LogBoxLog\", {\n    enumerable: true,\n    get: function () {\n      return LogBoxLog;\n    }\n  });\n  var _LogBoxSymbolication = require(_dependencyMap[0], \"./LogBoxSymbolication\");\n  var LogBoxSymbolication = _interopNamespace(_LogBoxSymbolication);\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  function componentStackToStack(componentStack) {\n    return componentStack.map(stack => ({\n      file: stack.fileName,\n      methodName: stack.content,\n      lineNumber: stack.location?.row ?? 0,\n      column: stack.location?.column ?? 0,\n      arguments: []\n    }));\n  }\n  class LogBoxLog {\n    symbolicated = {\n      stack: {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      },\n      component: {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      }\n    };\n    callbacks = new Map();\n    constructor(data) {\n      this.level = data.level;\n      this.type = data.type ?? 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = data.symbolicated ?? this.symbolicated;\n    }\n    incrementCount() {\n      this.count += 1;\n    }\n    getAvailableStack(type) {\n      if (this.symbolicated[type].status === 'COMPLETE') {\n        return this.symbolicated[type].stack;\n      }\n      return this.getStack(type);\n    }\n    flushCallbacks(type) {\n      const callbacks = this.callbacks.get(type);\n      const status = this.symbolicated[type].status;\n      if (callbacks) {\n        for (const callback of callbacks) {\n          callback(status);\n        }\n        callbacks.clear();\n      }\n    }\n    pushCallback(type, callback) {\n      let callbacks = this.callbacks.get(type);\n      if (!callbacks) {\n        callbacks = new Set();\n        this.callbacks.set(type, callbacks);\n      }\n      callbacks.add(callback);\n    }\n    retrySymbolicate(type, callback) {\n      this._symbolicate(type, true, callback);\n    }\n    symbolicate(type, callback) {\n      this._symbolicate(type, false, callback);\n    }\n    _symbolicate(type, retry, callback) {\n      if (callback) {\n        this.pushCallback(type, callback);\n      }\n      const status = this.symbolicated[type].status;\n      if (status === 'COMPLETE') {\n        return this.flushCallbacks(type);\n      }\n      if (retry) {\n        LogBoxSymbolication.deleteStack(this.getStack(type));\n        this.handleSymbolicate(type);\n      } else {\n        if (status === 'NONE') {\n          this.handleSymbolicate(type);\n        }\n      }\n    }\n    componentStackCache = null;\n    getStack(type) {\n      if (type === 'component') {\n        if (this.componentStackCache == null) {\n          this.componentStackCache = componentStackToStack(this.componentStack);\n        }\n        return this.componentStackCache;\n      }\n      return this.stack;\n    }\n    handleSymbolicate(type) {\n      if (type === 'component' && !this.componentStack?.length) {\n        return;\n      }\n      if (this.symbolicated[type].status !== 'PENDING') {\n        this.updateStatus(type, null, null, null);\n        LogBoxSymbolication.symbolicate(ensureStackFilesHaveParams(this.getStack(type))).then(data => {\n          this.updateStatus(type, null, data?.stack, data?.codeFrame);\n        }, error => {\n          this.updateStatus(type, error, null, null);\n        });\n      }\n    }\n    updateStatus(type, error, stack, codeFrame) {\n      const lastStatus = this.symbolicated[type].status;\n      if (error != null) {\n        this.symbolicated[type] = {\n          error,\n          stack: null,\n          status: 'FAILED'\n        };\n      } else if (stack != null) {\n        if (codeFrame) {\n          this.codeFrame = codeFrame;\n        }\n        this.symbolicated[type] = {\n          error: null,\n          stack,\n          status: 'COMPLETE'\n        };\n      } else {\n        this.symbolicated[type] = {\n          error: null,\n          stack: null,\n          status: 'PENDING'\n        };\n      }\n      const status = this.symbolicated[type].status;\n      if (lastStatus !== status) {\n        if (['COMPLETE', 'FAILED'].includes(status)) {\n          this.flushCallbacks(type);\n        }\n      }\n    }\n  }\n\n  // Sometime the web stacks don't have correct query params, this can lead to Metro errors when it attempts to resolve without a platform.\n  // This will attempt to reconcile the issue by adding the current query params to the stack frames if they exist, or fallback to some common defaults.\n  function ensureStackFilesHaveParams(stack) {\n    const currentSrc = typeof document !== 'undefined' && document.currentScript ? 'src' in document.currentScript && document.currentScript.src || null : null;\n    const currentParams = currentSrc ? new URLSearchParams(currentSrc) : new URLSearchParams({\n      platform: 'web',\n      dev: String(__DEV__)\n    });\n    return stack.map(frame => {\n      if (!frame.file?.startsWith('http') ||\n      // Account for Metro malformed URLs\n      frame.file.includes('&platform=')) return frame;\n      const url = new URL(frame.file);\n      if (url.searchParams.has('platform')) {\n        return frame;\n      }\n      currentParams.forEach((value, key) => {\n        if (url.searchParams.has(key)) return;\n        url.searchParams.set(key, value);\n      });\n      return {\n        ...frame,\n        file: url.toString()\n      };\n    });\n  }\n});","lineCount":205,"map":[[22,2,48,0,"Object"],[22,8,48,0],[22,9,48,0,"defineProperty"],[22,23,48,0],[22,24,48,0,"exports"],[22,31,48,0],[23,4,48,0,"enumerable"],[23,14,48,0],[24,4,48,0,"get"],[24,7,48,0],[24,18,48,0,"get"],[24,19,48,0],[25,6,48,0],[25,13,48,0,"LogBoxLog"],[25,22,48,0],[26,4,48,0],[27,2,48,0],[28,2,9,0],[28,6,9,0,"_LogBoxSymbolication"],[28,26,9,0],[28,29,9,0,"require"],[28,36,9,0],[28,37,9,0,"_dependencyMap"],[28,51,9,0],[29,2,9,0],[29,6,9,0,"LogBoxSymbolication"],[29,25,9,0],[29,28,9,0,"_interopNamespace"],[29,45,9,0],[29,46,9,0,"_LogBoxSymbolication"],[29,66,9,0],[30,2,1,0],[31,0,2,0],[32,0,3,0],[33,0,4,0],[34,0,5,0],[35,0,6,0],[36,0,7,0],[38,2,30,0],[38,11,30,9,"componentStackToStack"],[38,32,30,30,"componentStackToStack"],[38,33,30,31,"componentStack"],[38,47,30,61],[38,49,30,70],[39,4,31,2],[39,11,31,9,"componentStack"],[39,25,31,23],[39,26,31,24,"map"],[39,29,31,27],[39,30,31,29,"stack"],[39,35,31,34],[39,40,31,40],[40,6,32,4,"file"],[40,10,32,8],[40,12,32,10,"stack"],[40,17,32,15],[40,18,32,16,"fileName"],[40,26,32,24],[41,6,33,4,"methodName"],[41,16,33,14],[41,18,33,16,"stack"],[41,23,33,21],[41,24,33,22,"content"],[41,31,33,29],[42,6,34,4,"lineNumber"],[42,16,34,14],[42,18,34,16,"stack"],[42,23,34,21],[42,24,34,22,"location"],[42,32,34,30],[42,34,34,32,"row"],[42,37,34,35],[42,41,34,39],[42,42,34,40],[43,6,35,4,"column"],[43,12,35,10],[43,14,35,12,"stack"],[43,19,35,17],[43,20,35,18,"location"],[43,28,35,26],[43,30,35,28,"column"],[43,36,35,34],[43,40,35,38],[43,41,35,39],[44,6,36,4,"arguments"],[44,15,36,13],[44,17,36,15],[45,4,37,2],[45,5,37,3],[45,6,37,4],[45,7,37,5],[46,2,38,0],[47,2,48,7],[47,8,48,13,"LogBoxLog"],[47,17,48,22],[47,18,48,23],[48,4,58,2,"symbolicated"],[48,16,58,14],[48,19,58,57],[49,6,59,4,"stack"],[49,11,59,9],[49,13,59,11],[50,8,60,6,"error"],[50,13,60,11],[50,15,60,13],[50,19,60,17],[51,8,61,6,"stack"],[51,13,61,11],[51,15,61,13],[51,19,61,17],[52,8,62,6,"status"],[52,14,62,12],[52,16,62,14],[53,6,63,4],[53,7,63,5],[54,6,64,4,"component"],[54,15,64,13],[54,17,64,15],[55,8,65,6,"error"],[55,13,65,11],[55,15,65,13],[55,19,65,17],[56,8,66,6,"stack"],[56,13,66,11],[56,15,66,13],[56,19,66,17],[57,8,67,6,"status"],[57,14,67,12],[57,16,67,14],[58,6,68,4],[59,4,69,2],[59,5,69,3],[60,4,71,10,"callbacks"],[60,13,71,19],[60,16,71,66],[60,20,71,70,"Map"],[60,23,71,73],[60,24,71,74],[60,25,71,75],[61,4,73,2,"constructor"],[61,15,73,13,"constructor"],[61,16,74,4,"data"],[61,20,76,5],[61,22,77,4],[62,6,78,4],[62,10,78,8],[62,11,78,9,"level"],[62,16,78,14],[62,19,78,17,"data"],[62,23,78,21],[62,24,78,22,"level"],[62,29,78,27],[63,6,79,4],[63,10,79,8],[63,11,79,9,"type"],[63,15,79,13],[63,18,79,16,"data"],[63,22,79,20],[63,23,79,21,"type"],[63,27,79,25],[63,31,79,29],[63,38,79,36],[64,6,80,4],[64,10,80,8],[64,11,80,9,"message"],[64,18,80,16],[64,21,80,19,"data"],[64,25,80,23],[64,26,80,24,"message"],[64,33,80,31],[65,6,81,4],[65,10,81,8],[65,11,81,9,"stack"],[65,16,81,14],[65,19,81,17,"data"],[65,23,81,21],[65,24,81,22,"stack"],[65,29,81,27],[66,6,82,4],[66,10,82,8],[66,11,82,9,"category"],[66,19,82,17],[66,22,82,20,"data"],[66,26,82,24],[66,27,82,25,"category"],[66,35,82,33],[67,6,83,4],[67,10,83,8],[67,11,83,9,"componentStack"],[67,25,83,23],[67,28,83,26,"data"],[67,32,83,30],[67,33,83,31,"componentStack"],[67,47,83,45],[68,6,84,4],[68,10,84,8],[68,11,84,9,"codeFrame"],[68,20,84,18],[68,23,84,21,"data"],[68,27,84,25],[68,28,84,26,"codeFrame"],[68,37,84,35],[69,6,85,4],[69,10,85,8],[69,11,85,9,"isComponentError"],[69,27,85,25],[69,30,85,28,"data"],[69,34,85,32],[69,35,85,33,"isComponentError"],[69,51,85,49],[70,6,86,4],[70,10,86,8],[70,11,86,9,"count"],[70,16,86,14],[70,19,86,17],[70,20,86,18],[71,6,87,4],[71,10,87,8],[71,11,87,9,"symbolicated"],[71,23,87,21],[71,26,87,24,"data"],[71,30,87,28],[71,31,87,29,"symbolicated"],[71,43,87,41],[71,47,87,45],[71,51,87,49],[71,52,87,50,"symbolicated"],[71,64,87,62],[72,4,88,2],[73,4,90,2,"incrementCount"],[73,18,90,16,"incrementCount"],[73,19,90,16],[73,21,90,25],[74,6,91,4],[74,10,91,8],[74,11,91,9,"count"],[74,16,91,14],[74,20,91,18],[74,21,91,19],[75,4,92,2],[76,4,94,2,"getAvailableStack"],[76,21,94,19,"getAvailableStack"],[76,22,94,20,"type"],[76,26,94,35],[76,28,94,51],[77,6,95,4],[77,10,95,8],[77,14,95,12],[77,15,95,13,"symbolicated"],[77,27,95,25],[77,28,95,26,"type"],[77,32,95,30],[77,33,95,31],[77,34,95,32,"status"],[77,40,95,38],[77,45,95,43],[77,55,95,53],[77,57,95,55],[78,8,96,6],[78,15,96,13],[78,19,96,17],[78,20,96,18,"symbolicated"],[78,32,96,30],[78,33,96,31,"type"],[78,37,96,35],[78,38,96,36],[78,39,96,37,"stack"],[78,44,96,42],[79,6,97,4],[80,6,98,4],[80,13,98,11],[80,17,98,15],[80,18,98,16,"getStack"],[80,26,98,24],[80,27,98,25,"type"],[80,31,98,29],[80,32,98,30],[81,4,99,2],[82,4,101,10,"flushCallbacks"],[82,18,101,24,"flushCallbacks"],[82,19,101,25,"type"],[82,23,101,40],[82,25,101,48],[83,6,102,4],[83,12,102,10,"callbacks"],[83,21,102,19],[83,24,102,22],[83,28,102,26],[83,29,102,27,"callbacks"],[83,38,102,36],[83,39,102,37,"get"],[83,42,102,40],[83,43,102,41,"type"],[83,47,102,45],[83,48,102,46],[84,6,103,4],[84,12,103,10,"status"],[84,18,103,16],[84,21,103,19],[84,25,103,23],[84,26,103,24,"symbolicated"],[84,38,103,36],[84,39,103,37,"type"],[84,43,103,41],[84,44,103,42],[84,45,103,43,"status"],[84,51,103,49],[85,6,104,4],[85,10,104,8,"callbacks"],[85,19,104,17],[85,21,104,19],[86,8,105,6],[86,13,105,11],[86,19,105,17,"callback"],[86,27,105,25],[86,31,105,29,"callbacks"],[86,40,105,38],[86,42,105,40],[87,10,106,8,"callback"],[87,18,106,16],[87,19,106,17,"status"],[87,25,106,23],[87,26,106,24],[88,8,107,6],[89,8,108,6,"callbacks"],[89,17,108,15],[89,18,108,16,"clear"],[89,23,108,21],[89,24,108,22],[89,25,108,23],[90,6,109,4],[91,4,110,2],[92,4,112,10,"pushCallback"],[92,16,112,22,"pushCallback"],[92,17,112,23,"type"],[92,21,112,38],[92,23,112,40,"callback"],[92,31,112,71],[92,33,112,79],[93,6,113,4],[93,10,113,8,"callbacks"],[93,19,113,17],[93,22,113,20],[93,26,113,24],[93,27,113,25,"callbacks"],[93,36,113,34],[93,37,113,35,"get"],[93,40,113,38],[93,41,113,39,"type"],[93,45,113,43],[93,46,113,44],[94,6,114,4],[94,10,114,8],[94,11,114,9,"callbacks"],[94,20,114,18],[94,22,114,20],[95,8,115,6,"callbacks"],[95,17,115,15],[95,20,115,18],[95,24,115,22,"Set"],[95,27,115,25],[95,28,115,26],[95,29,115,27],[96,8,116,6],[96,12,116,10],[96,13,116,11,"callbacks"],[96,22,116,20],[96,23,116,21,"set"],[96,26,116,24],[96,27,116,25,"type"],[96,31,116,29],[96,33,116,31,"callbacks"],[96,42,116,40],[96,43,116,41],[97,6,117,4],[98,6,118,4,"callbacks"],[98,15,118,13],[98,16,118,14,"add"],[98,19,118,17],[98,20,118,18,"callback"],[98,28,118,26],[98,29,118,27],[99,4,119,2],[100,4,121,2,"retrySymbolicate"],[100,20,121,18,"retrySymbolicate"],[100,21,121,19,"type"],[100,25,121,34],[100,27,121,36,"callback"],[100,35,121,84],[100,37,121,92],[101,6,122,4],[101,10,122,8],[101,11,122,9,"_symbolicate"],[101,23,122,21],[101,24,122,22,"type"],[101,28,122,26],[101,30,122,28],[101,34,122,32],[101,36,122,34,"callback"],[101,44,122,42],[101,45,122,43],[102,4,123,2],[103,4,125,2,"symbolicate"],[103,15,125,13,"symbolicate"],[103,16,125,14,"type"],[103,20,125,29],[103,22,125,31,"callback"],[103,30,125,79],[103,32,125,87],[104,6,126,4],[104,10,126,8],[104,11,126,9,"_symbolicate"],[104,23,126,21],[104,24,126,22,"type"],[104,28,126,26],[104,30,126,28],[104,35,126,33],[104,37,126,35,"callback"],[104,45,126,43],[104,46,126,44],[105,4,127,2],[106,4,129,10,"_symbolicate"],[106,16,129,22,"_symbolicate"],[106,17,130,4,"type"],[106,21,130,19],[106,23,131,4,"retry"],[106,28,131,18],[106,30,132,4,"callback"],[106,38,132,52],[106,40,133,10],[107,6,134,4],[107,10,134,8,"callback"],[107,18,134,16],[107,20,134,18],[108,8,135,6],[108,12,135,10],[108,13,135,11,"pushCallback"],[108,25,135,23],[108,26,135,24,"type"],[108,30,135,28],[108,32,135,30,"callback"],[108,40,135,38],[108,41,135,39],[109,6,136,4],[110,6,137,4],[110,12,137,10,"status"],[110,18,137,16],[110,21,137,19],[110,25,137,23],[110,26,137,24,"symbolicated"],[110,38,137,36],[110,39,137,37,"type"],[110,43,137,41],[110,44,137,42],[110,45,137,43,"status"],[110,51,137,49],[111,6,139,4],[111,10,139,8,"status"],[111,16,139,14],[111,21,139,19],[111,31,139,29],[111,33,139,31],[112,8,140,6],[112,15,140,13],[112,19,140,17],[112,20,140,18,"flushCallbacks"],[112,34,140,32],[112,35,140,33,"type"],[112,39,140,37],[112,40,140,38],[113,6,141,4],[114,6,143,4],[114,10,143,8,"retry"],[114,15,143,13],[114,17,143,15],[115,8,144,6,"LogBoxSymbolication"],[115,27,144,25],[115,28,144,26,"deleteStack"],[115,39,144,37],[115,40,144,38],[115,44,144,42],[115,45,144,43,"getStack"],[115,53,144,51],[115,54,144,52,"type"],[115,58,144,56],[115,59,144,57],[115,60,144,58],[116,8,145,6],[116,12,145,10],[116,13,145,11,"handleSymbolicate"],[116,30,145,28],[116,31,145,29,"type"],[116,35,145,33],[116,36,145,34],[117,6,146,4],[117,7,146,5],[117,13,146,11],[118,8,147,6],[118,12,147,10,"status"],[118,18,147,16],[118,23,147,21],[118,29,147,27],[118,31,147,29],[119,10,148,8],[119,14,148,12],[119,15,148,13,"handleSymbolicate"],[119,32,148,30],[119,33,148,31,"type"],[119,37,148,35],[119,38,148,36],[120,8,149,6],[121,6,150,4],[122,4,151,2],[123,4,153,10,"componentStackCache"],[123,23,153,29],[123,26,153,46],[123,30,153,50],[124,4,155,10,"getStack"],[124,12,155,18,"getStack"],[124,13,155,19,"type"],[124,17,155,34],[124,19,155,43],[125,6,156,4],[125,10,156,8,"type"],[125,14,156,12],[125,19,156,17],[125,30,156,28],[125,32,156,30],[126,8,157,6],[126,12,157,10],[126,16,157,14],[126,17,157,15,"componentStackCache"],[126,36,157,34],[126,40,157,38],[126,44,157,42],[126,46,157,44],[127,10,158,8],[127,14,158,12],[127,15,158,13,"componentStackCache"],[127,34,158,32],[127,37,158,35,"componentStackToStack"],[127,58,158,56],[127,59,158,57],[127,63,158,61],[127,64,158,62,"componentStack"],[127,78,158,76],[127,79,158,77],[128,8,159,6],[129,8,160,6],[129,15,160,13],[129,19,160,17],[129,20,160,18,"componentStackCache"],[129,39,160,37],[130,6,161,4],[131,6,162,4],[131,13,162,11],[131,17,162,15],[131,18,162,16,"stack"],[131,23,162,21],[132,4,163,2],[133,4,165,10,"handleSymbolicate"],[133,21,165,27,"handleSymbolicate"],[133,22,165,28,"type"],[133,26,165,43],[133,28,165,51],[134,6,166,4],[134,10,166,8,"type"],[134,14,166,12],[134,19,166,17],[134,30,166,28],[134,34,166,32],[134,35,166,33],[134,39,166,37],[134,40,166,38,"componentStack"],[134,54,166,52],[134,56,166,54,"length"],[134,62,166,60],[134,64,166,62],[135,8,167,6],[136,6,168,4],[137,6,170,4],[137,10,170,8],[137,14,170,12],[137,15,170,13,"symbolicated"],[137,27,170,25],[137,28,170,26,"type"],[137,32,170,30],[137,33,170,31],[137,34,170,32,"status"],[137,40,170,38],[137,45,170,43],[137,54,170,52],[137,56,170,54],[138,8,171,6],[138,12,171,10],[138,13,171,11,"updateStatus"],[138,25,171,23],[138,26,171,24,"type"],[138,30,171,28],[138,32,171,30],[138,36,171,34],[138,38,171,36],[138,42,171,40],[138,44,171,42],[138,48,171,46],[138,49,171,47],[139,8,172,6,"LogBoxSymbolication"],[139,27,172,25],[139,28,172,26,"symbolicate"],[139,39,172,37],[139,40,172,38,"ensureStackFilesHaveParams"],[139,66,172,64],[139,67,172,65],[139,71,172,69],[139,72,172,70,"getStack"],[139,80,172,78],[139,81,172,79,"type"],[139,85,172,83],[139,86,172,84],[139,87,172,85],[139,88,172,86],[139,89,172,87,"then"],[139,93,172,91],[139,94,173,9,"data"],[139,98,173,13],[139,102,173,18],[140,10,174,10],[140,14,174,14],[140,15,174,15,"updateStatus"],[140,27,174,27],[140,28,174,28,"type"],[140,32,174,32],[140,34,174,34],[140,38,174,38],[140,40,174,40,"data"],[140,44,174,44],[140,46,174,46,"stack"],[140,51,174,51],[140,53,174,53,"data"],[140,57,174,57],[140,59,174,59,"codeFrame"],[140,68,174,68],[140,69,174,69],[141,8,175,8],[141,9,175,9],[141,11,176,9,"error"],[141,16,176,14],[141,20,176,19],[142,10,177,10],[142,14,177,14],[142,15,177,15,"updateStatus"],[142,27,177,27],[142,28,177,28,"type"],[142,32,177,32],[142,34,177,34,"error"],[142,39,177,39],[142,41,177,41],[142,45,177,45],[142,47,177,47],[142,51,177,51],[142,52,177,52],[143,8,178,8],[143,9,179,6],[143,10,179,7],[144,6,180,4],[145,4,181,2],[146,4,183,10,"updateStatus"],[146,16,183,22,"updateStatus"],[146,17,184,4,"type"],[146,21,184,19],[146,23,185,4,"error"],[146,28,185,24],[146,30,186,4,"stack"],[146,35,186,24],[146,37,187,4,"codeFrame"],[146,46,187,32],[146,48,188,10],[147,6,189,4],[147,12,189,10,"lastStatus"],[147,22,189,20],[147,25,189,23],[147,29,189,27],[147,30,189,28,"symbolicated"],[147,42,189,40],[147,43,189,41,"type"],[147,47,189,45],[147,48,189,46],[147,49,189,47,"status"],[147,55,189,53],[148,6,190,4],[148,10,190,8,"error"],[148,15,190,13],[148,19,190,17],[148,23,190,21],[148,25,190,23],[149,8,191,6],[149,12,191,10],[149,13,191,11,"symbolicated"],[149,25,191,23],[149,26,191,24,"type"],[149,30,191,28],[149,31,191,29],[149,34,191,32],[150,10,192,8,"error"],[150,15,192,13],[151,10,193,8,"stack"],[151,15,193,13],[151,17,193,15],[151,21,193,19],[152,10,194,8,"status"],[152,16,194,14],[152,18,194,16],[153,8,195,6],[153,9,195,7],[154,6,196,4],[154,7,196,5],[154,13,196,11],[154,17,196,15,"stack"],[154,22,196,20],[154,26,196,24],[154,30,196,28],[154,32,196,30],[155,8,197,6],[155,12,197,10,"codeFrame"],[155,21,197,19],[155,23,197,21],[156,10,198,8],[156,14,198,12],[156,15,198,13,"codeFrame"],[156,24,198,22],[156,27,198,25,"codeFrame"],[156,36,198,34],[157,8,199,6],[158,8,201,6],[158,12,201,10],[158,13,201,11,"symbolicated"],[158,25,201,23],[158,26,201,24,"type"],[158,30,201,28],[158,31,201,29],[158,34,201,32],[159,10,202,8,"error"],[159,15,202,13],[159,17,202,15],[159,21,202,19],[160,10,203,8,"stack"],[160,15,203,13],[161,10,204,8,"status"],[161,16,204,14],[161,18,204,16],[162,8,205,6],[162,9,205,7],[163,6,206,4],[163,7,206,5],[163,13,206,11],[164,8,207,6],[164,12,207,10],[164,13,207,11,"symbolicated"],[164,25,207,23],[164,26,207,24,"type"],[164,30,207,28],[164,31,207,29],[164,34,207,32],[165,10,208,8,"error"],[165,15,208,13],[165,17,208,15],[165,21,208,19],[166,10,209,8,"stack"],[166,15,209,13],[166,17,209,15],[166,21,209,19],[167,10,210,8,"status"],[167,16,210,14],[167,18,210,16],[168,8,211,6],[168,9,211,7],[169,6,212,4],[170,6,214,4],[170,12,214,10,"status"],[170,18,214,16],[170,21,214,19],[170,25,214,23],[170,26,214,24,"symbolicated"],[170,38,214,36],[170,39,214,37,"type"],[170,43,214,41],[170,44,214,42],[170,45,214,43,"status"],[170,51,214,49],[171,6,215,4],[171,10,215,8,"lastStatus"],[171,20,215,18],[171,25,215,23,"status"],[171,31,215,29],[171,33,215,31],[172,8,216,6],[172,12,216,10],[172,13,216,11],[172,23,216,21],[172,25,216,23],[172,33,216,31],[172,34,216,32],[172,35,216,33,"includes"],[172,43,216,41],[172,44,216,42,"status"],[172,50,216,48],[172,51,216,49],[172,53,216,51],[173,10,217,8],[173,14,217,12],[173,15,217,13,"flushCallbacks"],[173,29,217,27],[173,30,217,28,"type"],[173,34,217,32],[173,35,217,33],[174,8,218,6],[175,6,219,4],[176,4,220,2],[177,2,221,0],[179,2,223,0],[180,2,224,0],[181,2,225,0],[181,11,225,9,"ensureStackFilesHaveParams"],[181,37,225,35,"ensureStackFilesHaveParams"],[181,38,225,36,"stack"],[181,43,225,48],[181,45,225,57],[182,4,226,2],[182,10,226,8,"currentSrc"],[182,20,226,18],[182,23,227,4],[182,30,227,11,"document"],[182,38,227,19],[182,43,227,24],[182,54,227,35],[182,58,227,39,"document"],[182,66,227,47],[182,67,227,48,"currentScript"],[182,80,227,61],[182,83,228,9],[182,88,228,14],[182,92,228,18,"document"],[182,100,228,26],[182,101,228,27,"currentScript"],[182,114,228,40],[182,118,228,44,"document"],[182,126,228,52],[182,127,228,53,"currentScript"],[182,140,228,66],[182,141,228,67,"src"],[182,144,228,70],[182,148,228,75],[182,152,228,79],[182,155,229,8],[182,159,229,12],[183,4,231,2],[183,10,231,8,"currentParams"],[183,23,231,21],[183,26,231,24,"currentSrc"],[183,36,231,34],[183,39,232,6],[183,43,232,10,"URLSearchParams"],[183,58,232,25],[183,59,232,26,"currentSrc"],[183,69,232,36],[183,70,232,37],[183,73,233,6],[183,77,233,10,"URLSearchParams"],[183,92,233,25],[183,93,233,26],[184,6,234,8,"platform"],[184,14,234,16],[184,16,234,18],[184,21,234,23],[185,6,235,8,"dev"],[185,9,235,11],[185,11,235,13,"String"],[185,17,235,19],[185,18,235,20,"__DEV__"],[185,25,235,27],[186,4,236,6],[186,5,236,7],[186,6,236,8],[187,4,238,2],[187,11,238,9,"stack"],[187,16,238,14],[187,17,238,15,"map"],[187,20,238,18],[187,21,238,20,"frame"],[187,26,238,25],[187,30,238,30],[188,6,239,4],[188,10,240,6],[188,11,240,7,"frame"],[188,16,240,12],[188,17,240,13,"file"],[188,21,240,17],[188,23,240,19,"startsWith"],[188,33,240,29],[188,34,240,30],[188,40,240,36],[188,41,240,37],[189,6,241,6],[190,6,242,6,"frame"],[190,11,242,11],[190,12,242,12,"file"],[190,16,242,16],[190,17,242,17,"includes"],[190,25,242,25],[190,26,242,26],[190,38,242,38],[190,39,242,39],[190,41,244,6],[190,48,244,13,"frame"],[190,53,244,18],[191,6,246,4],[191,12,246,10,"url"],[191,15,246,13],[191,18,246,16],[191,22,246,20,"URL"],[191,25,246,23],[191,26,246,24,"frame"],[191,31,246,29],[191,32,246,30,"file"],[191,36,246,34],[191,37,246,35],[192,6,247,4],[192,10,247,8,"url"],[192,13,247,11],[192,14,247,12,"searchParams"],[192,26,247,24],[192,27,247,25,"has"],[192,30,247,28],[192,31,247,29],[192,41,247,39],[192,42,247,40],[192,44,247,42],[193,8,248,6],[193,15,248,13,"frame"],[193,20,248,18],[194,6,249,4],[195,6,251,4,"currentParams"],[195,19,251,17],[195,20,251,18,"forEach"],[195,27,251,25],[195,28,251,26],[195,29,251,27,"value"],[195,34,251,32],[195,36,251,34,"key"],[195,39,251,37],[195,44,251,42],[196,8,252,6],[196,12,252,10,"url"],[196,15,252,13],[196,16,252,14,"searchParams"],[196,28,252,26],[196,29,252,27,"has"],[196,32,252,30],[196,33,252,31,"key"],[196,36,252,34],[196,37,252,35],[196,39,252,37],[197,8,253,6,"url"],[197,11,253,9],[197,12,253,10,"searchParams"],[197,24,253,22],[197,25,253,23,"set"],[197,28,253,26],[197,29,253,27,"key"],[197,32,253,30],[197,34,253,32,"value"],[197,39,253,37],[197,40,253,38],[198,6,254,4],[198,7,254,5],[198,8,254,6],[199,6,256,4],[199,13,256,11],[200,8,256,13],[200,11,256,16,"frame"],[200,16,256,21],[201,8,256,23,"file"],[201,12,256,27],[201,14,256,29,"url"],[201,17,256,32],[201,18,256,33,"toString"],[201,26,256,41],[201,27,256,42],[202,6,256,44],[202,7,256,45],[203,4,257,2],[203,5,257,3],[203,6,257,4],[204,2,258,0],[205,0,258,1],[205,3]],"functionMap":{"names":["<global>","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","ensureStackFilesHaveParams","stack.map$argument_0","currentParams.forEach$argument_0"],"mappings":"AAA;AC6B;4BCC;IDM;CDC;OGU;ECyB;GDe;EEE;GFE;EGE;GHK;EIE;GJS;EKE;GLO;EME;GNE;EOE;GPE;EQE;GRsB;ESI;GTQ;EUE;QCQ;SDE;QEC;SFE;GVG;EaE;GbqC;CHC;AiBI;mBCa;0BCa;KDG;GDG;CjBC"},"hasCjsExports":false},"type":"js/module"}]}