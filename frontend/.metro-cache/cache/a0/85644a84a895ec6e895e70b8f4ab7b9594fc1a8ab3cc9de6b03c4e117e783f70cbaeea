{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":44,"index":101}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./ExpoLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":143},"end":{"line":4,"column":40,"index":183}}],"key":"9p576A/DjaRztdSFcD8Nohub+Qg=","exportNames":["*"],"imports":1}},{"name":"./RNLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":184},"end":{"line":5,"column":36,"index":220}}],"key":"2y1SxYi56UhLqVRPo+LPBad0ytc=","exportNames":["*"],"imports":1}},{"name":"./createURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":221},"end":{"line":6,"column":36,"index":257}}],"key":"vA/KQURWJdMSJD6QjTsub0VGQQ0=","exportNames":["*"],"imports":1}},{"name":"./validateURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":258},"end":{"line":7,"column":44,"index":302}}],"key":"QglbFjhSs1PLl8wx6icnjPl9qpg=","exportNames":["*"],"imports":1}},{"name":"./Linking.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":143,"column":0,"index":5389},"end":{"line":143,"column":32,"index":5421}}],"key":"UNHzwDbHrazdE82g65F1azNEReY=","exportNames":["*"],"imports":1}},{"name":"./Schemes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":144,"column":0,"index":5422},"end":{"line":144,"column":26,"index":5448}}],"key":"n/tFEHLQPHdXg5i1nrK9VhhMvhA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"parse\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.parse;\n    }\n  });\n  Object.defineProperty(exports, \"createURL\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.createURL;\n    }\n  });\n  exports.addEventListener = addEventListener;\n  exports.parseInitialURLAsync = parseInitialURLAsync;\n  exports.sendIntent = sendIntent;\n  exports.openSettings = openSettings;\n  exports.getInitialURL = getInitialURL;\n  exports.getLinkingURL = getLinkingURL;\n  exports.openURL = openURL;\n  exports.canOpenURL = canOpenURL;\n  exports.useURL = useURL;\n  exports.useLinkingURL = useLinkingURL;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _ExpoLinking = require(_dependencyMap[3], \"./ExpoLinking\");\n  var ExpoLinking = _interopDefault(_ExpoLinking);\n  var _RNLinking = require(_dependencyMap[4], \"./RNLinking\");\n  var RNLinking = _interopDefault(_RNLinking);\n  var _createURL = require(_dependencyMap[5], \"./createURL\");\n  var _validateURL = require(_dependencyMap[6], \"./validateURL\");\n  var _LinkingTypes = require(_dependencyMap[7], \"./Linking.types\");\n  Object.keys(_LinkingTypes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _LinkingTypes[k];\n        }\n      });\n    }\n  });\n  var _Schemes = require(_dependencyMap[8], \"./Schemes\");\n  Object.keys(_Schemes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _Schemes[k];\n        }\n      });\n    }\n  });\n  // @needsAudit\n  /**\n   * Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\n   * It is recommended to use the [`useURL()`](#useurl) hook instead.\n   * @param type The only valid type is `'url'`.\n   * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n   * [`EventType`](#eventtype).\n   * @return An EmitterSubscription that has the remove method from EventSubscription\n   * @see [React Native documentation on Linking](https://reactnative.dev/docs/linking#addeventlistener).\n   */\n  function addEventListener(type, handler) {\n    return RNLinking.default.addEventListener(type, handler);\n  }\n  // @needsAudit\n  /**\n   * Helper method which wraps React Native's `Linking.getInitialURL()` in `Linking.parse()`.\n   * Parses the deep link information out of the URL used to open the experience initially.\n   * If no link opened the app, all the fields will be `null`.\n   * > On the web it parses the current window URL.\n   * @return A promise that resolves with `ParsedURL` object.\n   */\n  async function parseInitialURLAsync() {\n    const initialUrl = await RNLinking.default.getInitialURL();\n    if (!initialUrl) {\n      return {\n        scheme: null,\n        hostname: null,\n        path: null,\n        queryParams: null\n      };\n    }\n    return (0, _createURL.parse)(initialUrl);\n  }\n  // @needsAudit\n  /**\n   * Launch an Android intent with extras.\n   * > Use [`expo-intent-launcher`](./intent-launcher) instead. `sendIntent` is only included in\n   * > `Linking` for API compatibility with React Native's Linking API.\n   * @platform android\n   */\n  async function sendIntent(action, extras) {\n    if (Platform.default.OS === 'android') {\n      return await RNLinking.default.sendIntent(action, extras);\n    }\n    throw new _expoModulesCore.UnavailabilityError('Linking', 'sendIntent');\n  }\n  // @needsAudit\n  /**\n   * Open the operating system settings app and displays the appâ€™s custom settings, if it has any.\n   */\n  async function openSettings() {\n    if (Platform.default.OS === 'web') {\n      throw new _expoModulesCore.UnavailabilityError('Linking', 'openSettings');\n    }\n    if (RNLinking.default.openSettings) {\n      return await RNLinking.default.openSettings();\n    }\n    await openURL('app-settings:');\n  }\n  // @needsAudit\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  async function getInitialURL() {\n    return (await RNLinking.default.getInitialURL()) ?? null;\n  }\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function getLinkingURL() {\n    return ExpoLinking.default.getLinkingURL();\n  }\n  // @needsAudit\n  /**\n   * Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\n   * for more information.\n   * @param url A URL for the operating system to open. For example: `tel:5555555`, `exp://`.\n   * @return A `Promise` that is fulfilled with `true` if the link is opened operating system\n   * automatically or the user confirms the prompt to open the link. The `Promise` rejects if there\n   * are no applications registered for the URL or the user cancels the dialog.\n   */\n  async function openURL(url) {\n    (0, _validateURL.validateURL)(url);\n    return await RNLinking.default.openURL(url);\n  }\n  // @needsAudit\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   * On web this always returns `true` because there is no API for detecting what URLs can be opened.\n   * @param url The URL that you want to test can be opened.\n   * @return A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\n   * `false` if not.\n   * The `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\n   * on iOS if you didn't [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#linking-from-your-app).\n   */\n  async function canOpenURL(url) {\n    (0, _validateURL.validateURL)(url);\n    return await RNLinking.default.canOpenURL(url);\n  }\n  // @needsAudit\n  /**\n   * Returns the initial URL followed by any subsequent changes to the URL.\n   * @deprecated Use `useLinkingURL` hook instead.\n   * @return Returns the initial URL or `null`.\n   */\n  function useURL() {\n    const [url, setLink] = (0, _react.useState)(null);\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      getInitialURL().then(url => setLink(url));\n      const subscription = addEventListener('url', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url;\n  }\n  /**\n   * Returns the linking URL followed by any subsequent changes to the URL.\n   * Always returns the initial URL immediately on reload.\n   * @return Returns the initial URL or `null`.\n   */\n  function useLinkingURL() {\n    const [url, setLink] = (0, _react.useState)(ExpoLinking.default.getLinkingURL);\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      const subscription = ExpoLinking.default.addListener('onURLReceived', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url ?? null;\n  }\n});","lineCount":201,"map":[[12,2,145,0,"Object"],[12,8,145,0],[12,9,145,0,"defineProperty"],[12,23,145,0],[12,24,145,0,"exports"],[12,31,145,0],[13,4,145,0,"enumerable"],[13,14,145,0],[14,4,145,0,"get"],[14,7,145,0],[14,18,145,0,"get"],[14,19,145,0],[15,6,145,0],[15,13,145,0,"_createURL"],[15,23,145,0],[15,24,145,0,"parse"],[15,29,145,0],[16,4,145,0],[17,2,145,0],[18,2,145,0,"Object"],[18,8,145,0],[18,9,145,0,"defineProperty"],[18,23,145,0],[18,24,145,0,"exports"],[18,31,145,0],[19,4,145,0,"enumerable"],[19,14,145,0],[20,4,145,0,"get"],[20,7,145,0],[20,18,145,0,"get"],[20,19,145,0],[21,6,145,0],[21,13,145,0,"_createURL"],[21,23,145,0],[21,24,145,0,"createURL"],[21,33,145,0],[22,4,145,0],[23,2,145,0],[24,2,18,0,"exports"],[24,9,18,0],[24,10,18,0,"addEventListener"],[24,26,18,0],[24,29,18,0,"addEventListener"],[24,45,18,0],[25,2,29,0,"exports"],[25,9,29,0],[25,10,29,0,"parseInitialURLAsync"],[25,30,29,0],[25,33,29,0,"parseInitialURLAsync"],[25,53,29,0],[26,2,48,0,"exports"],[26,9,48,0],[26,10,48,0,"sendIntent"],[26,20,48,0],[26,23,48,0,"sendIntent"],[26,33,48,0],[27,2,58,0,"exports"],[27,9,58,0],[27,10,58,0,"openSettings"],[27,22,58,0],[27,25,58,0,"openSettings"],[27,37,58,0],[28,2,72,0,"exports"],[28,9,72,0],[28,10,72,0,"getInitialURL"],[28,23,72,0],[28,26,72,0,"getInitialURL"],[28,39,72,0],[29,2,79,0,"exports"],[29,9,79,0],[29,10,79,0,"getLinkingURL"],[29,23,79,0],[29,26,79,0,"getLinkingURL"],[29,39,79,0],[30,2,91,0,"exports"],[30,9,91,0],[30,10,91,0,"openURL"],[30,17,91,0],[30,20,91,0,"openURL"],[30,27,91,0],[31,2,105,0,"exports"],[31,9,105,0],[31,10,105,0,"canOpenURL"],[31,20,105,0],[31,23,105,0,"canOpenURL"],[31,33,105,0],[32,2,115,0,"exports"],[32,9,115,0],[32,10,115,0,"useURL"],[32,16,115,0],[32,19,115,0,"useURL"],[32,25,115,0],[33,2,132,0,"exports"],[33,9,132,0],[33,10,132,0,"useLinkingURL"],[33,23,132,0],[33,26,132,0,"useLinkingURL"],[33,39,132,0],[34,2,1,0],[34,6,1,0,"_expoModulesCore"],[34,22,1,0],[34,25,1,0,"require"],[34,32,1,0],[34,33,1,0,"_dependencyMap"],[34,47,1,0],[35,2,2,0],[35,6,2,0,"_react"],[35,12,2,0],[35,15,2,0,"require"],[35,22,2,0],[35,23,2,0,"_dependencyMap"],[35,37,2,0],[36,2,2,44],[36,6,2,44,"_reactNativeWebDistExportsPlatform"],[36,40,2,44],[36,43,2,44,"require"],[36,50,2,44],[36,51,2,44,"_dependencyMap"],[36,65,2,44],[37,2,2,44],[37,6,2,44,"Platform"],[37,14,2,44],[37,17,2,44,"_interopDefault"],[37,32,2,44],[37,33,2,44,"_reactNativeWebDistExportsPlatform"],[37,67,2,44],[38,2,4,0],[38,6,4,0,"_ExpoLinking"],[38,18,4,0],[38,21,4,0,"require"],[38,28,4,0],[38,29,4,0,"_dependencyMap"],[38,43,4,0],[39,2,4,0],[39,6,4,0,"ExpoLinking"],[39,17,4,0],[39,20,4,0,"_interopDefault"],[39,35,4,0],[39,36,4,0,"_ExpoLinking"],[39,48,4,0],[40,2,5,0],[40,6,5,0,"_RNLinking"],[40,16,5,0],[40,19,5,0,"require"],[40,26,5,0],[40,27,5,0,"_dependencyMap"],[40,41,5,0],[41,2,5,0],[41,6,5,0,"RNLinking"],[41,15,5,0],[41,18,5,0,"_interopDefault"],[41,33,5,0],[41,34,5,0,"_RNLinking"],[41,44,5,0],[42,2,6,0],[42,6,6,0,"_createURL"],[42,16,6,0],[42,19,6,0,"require"],[42,26,6,0],[42,27,6,0,"_dependencyMap"],[42,41,6,0],[43,2,7,0],[43,6,7,0,"_validateURL"],[43,18,7,0],[43,21,7,0,"require"],[43,28,7,0],[43,29,7,0,"_dependencyMap"],[43,43,7,0],[44,2,143,0],[44,6,143,0,"_LinkingTypes"],[44,19,143,0],[44,22,143,0,"require"],[44,29,143,0],[44,30,143,0,"_dependencyMap"],[44,44,143,0],[45,2,143,0,"Object"],[45,8,143,0],[45,9,143,0,"keys"],[45,13,143,0],[45,14,143,0,"_LinkingTypes"],[45,27,143,0],[45,29,143,0,"forEach"],[45,36,143,0],[45,47,143,0,"k"],[45,48,143,0],[46,4,143,0],[46,8,143,0,"k"],[46,9,143,0],[46,28,143,0,"Object"],[46,34,143,0],[46,35,143,0,"prototype"],[46,44,143,0],[46,45,143,0,"hasOwnProperty"],[46,59,143,0],[46,60,143,0,"call"],[46,64,143,0],[46,65,143,0,"exports"],[46,72,143,0],[46,74,143,0,"k"],[46,75,143,0],[47,6,143,0,"Object"],[47,12,143,0],[47,13,143,0,"defineProperty"],[47,27,143,0],[47,28,143,0,"exports"],[47,35,143,0],[47,37,143,0,"k"],[47,38,143,0],[48,8,143,0,"enumerable"],[48,18,143,0],[49,8,143,0,"get"],[49,11,143,0],[49,22,143,0,"get"],[49,23,143,0],[50,10,143,0],[50,17,143,0,"_LinkingTypes"],[50,30,143,0],[50,31,143,0,"k"],[50,32,143,0],[51,8,143,0],[52,6,143,0],[53,4,143,0],[54,2,143,0],[55,2,144,0],[55,6,144,0,"_Schemes"],[55,14,144,0],[55,17,144,0,"require"],[55,24,144,0],[55,25,144,0,"_dependencyMap"],[55,39,144,0],[56,2,144,0,"Object"],[56,8,144,0],[56,9,144,0,"keys"],[56,13,144,0],[56,14,144,0,"_Schemes"],[56,22,144,0],[56,24,144,0,"forEach"],[56,31,144,0],[56,42,144,0,"k"],[56,43,144,0],[57,4,144,0],[57,8,144,0,"k"],[57,9,144,0],[57,28,144,0,"Object"],[57,34,144,0],[57,35,144,0,"prototype"],[57,44,144,0],[57,45,144,0,"hasOwnProperty"],[57,59,144,0],[57,60,144,0,"call"],[57,64,144,0],[57,65,144,0,"exports"],[57,72,144,0],[57,74,144,0,"k"],[57,75,144,0],[58,6,144,0,"Object"],[58,12,144,0],[58,13,144,0,"defineProperty"],[58,27,144,0],[58,28,144,0,"exports"],[58,35,144,0],[58,37,144,0,"k"],[58,38,144,0],[59,8,144,0,"enumerable"],[59,18,144,0],[60,8,144,0,"get"],[60,11,144,0],[60,22,144,0,"get"],[60,23,144,0],[61,10,144,0],[61,17,144,0,"_Schemes"],[61,25,144,0],[61,26,144,0,"k"],[61,27,144,0],[62,8,144,0],[63,6,144,0],[64,4,144,0],[65,2,144,0],[66,2,8,0],[67,2,9,0],[68,0,10,0],[69,0,11,0],[70,0,12,0],[71,0,13,0],[72,0,14,0],[73,0,15,0],[74,0,16,0],[75,0,17,0],[76,2,18,7],[76,11,18,16,"addEventListener"],[76,27,18,32,"addEventListener"],[76,28,18,33,"type"],[76,32,18,37],[76,34,18,39,"handler"],[76,41,18,46],[76,43,18,48],[77,4,19,4],[77,11,19,11,"RNLinking"],[77,20,19,20],[77,21,19,20,"default"],[77,28,19,20],[77,29,19,21,"addEventListener"],[77,45,19,37],[77,46,19,38,"type"],[77,50,19,42],[77,52,19,44,"handler"],[77,59,19,51],[77,60,19,52],[78,2,20,0],[79,2,21,0],[80,2,22,0],[81,0,23,0],[82,0,24,0],[83,0,25,0],[84,0,26,0],[85,0,27,0],[86,0,28,0],[87,2,29,7],[87,17,29,22,"parseInitialURLAsync"],[87,37,29,42,"parseInitialURLAsync"],[87,38,29,42],[87,40,29,45],[88,4,30,4],[88,10,30,10,"initialUrl"],[88,20,30,20],[88,23,30,23],[88,29,30,29,"RNLinking"],[88,38,30,38],[88,39,30,38,"default"],[88,46,30,38],[88,47,30,39,"getInitialURL"],[88,60,30,52],[88,61,30,53],[88,62,30,54],[89,4,31,4],[89,8,31,8],[89,9,31,9,"initialUrl"],[89,19,31,19],[89,21,31,21],[90,6,32,8],[90,13,32,15],[91,8,33,12,"scheme"],[91,14,33,18],[91,16,33,20],[91,20,33,24],[92,8,34,12,"hostname"],[92,16,34,20],[92,18,34,22],[92,22,34,26],[93,8,35,12,"path"],[93,12,35,16],[93,14,35,18],[93,18,35,22],[94,8,36,12,"queryParams"],[94,19,36,23],[94,21,36,25],[95,6,37,8],[95,7,37,9],[96,4,38,4],[97,4,39,4],[97,11,39,11],[97,15,39,11,"parse"],[97,25,39,16],[97,26,39,16,"parse"],[97,31,39,16],[97,33,39,17,"initialUrl"],[97,43,39,27],[97,44,39,28],[98,2,40,0],[99,2,41,0],[100,2,42,0],[101,0,43,0],[102,0,44,0],[103,0,45,0],[104,0,46,0],[105,0,47,0],[106,2,48,7],[106,17,48,22,"sendIntent"],[106,27,48,32,"sendIntent"],[106,28,48,33,"action"],[106,34,48,39],[106,36,48,41,"extras"],[106,42,48,47],[106,44,48,49],[107,4,49,4],[107,8,49,8,"Platform"],[107,16,49,16],[107,17,49,16,"default"],[107,24,49,16],[107,25,49,17,"OS"],[107,27,49,19],[107,32,49,24],[107,41,49,33],[107,43,49,35],[108,6,50,8],[108,13,50,15],[108,19,50,21,"RNLinking"],[108,28,50,30],[108,29,50,30,"default"],[108,36,50,30],[108,37,50,31,"sendIntent"],[108,47,50,41],[108,48,50,42,"action"],[108,54,50,48],[108,56,50,50,"extras"],[108,62,50,56],[108,63,50,57],[109,4,51,4],[110,4,52,4],[110,10,52,10],[110,14,52,14,"UnavailabilityError"],[110,30,52,33],[110,31,52,33,"UnavailabilityError"],[110,50,52,33],[110,51,52,34],[110,60,52,43],[110,62,52,45],[110,74,52,57],[110,75,52,58],[111,2,53,0],[112,2,54,0],[113,2,55,0],[114,0,56,0],[115,0,57,0],[116,2,58,7],[116,17,58,22,"openSettings"],[116,29,58,34,"openSettings"],[116,30,58,34],[116,32,58,37],[117,4,59,4],[117,8,59,8,"Platform"],[117,16,59,16],[117,17,59,16,"default"],[117,24,59,16],[117,25,59,17,"OS"],[117,27,59,19],[117,32,59,24],[117,37,59,29],[117,39,59,31],[118,6,60,8],[118,12,60,14],[118,16,60,18,"UnavailabilityError"],[118,32,60,37],[118,33,60,37,"UnavailabilityError"],[118,52,60,37],[118,53,60,38],[118,62,60,47],[118,64,60,49],[118,78,60,63],[118,79,60,64],[119,4,61,4],[120,4,62,4],[120,8,62,8,"RNLinking"],[120,17,62,17],[120,18,62,17,"default"],[120,25,62,17],[120,26,62,18,"openSettings"],[120,38,62,30],[120,40,62,32],[121,6,63,8],[121,13,63,15],[121,19,63,21,"RNLinking"],[121,28,63,30],[121,29,63,30,"default"],[121,36,63,30],[121,37,63,31,"openSettings"],[121,49,63,43],[121,50,63,44],[121,51,63,45],[122,4,64,4],[123,4,65,4],[123,10,65,10,"openURL"],[123,17,65,17],[123,18,65,18],[123,33,65,33],[123,34,65,34],[124,2,66,0],[125,2,67,0],[126,2,68,0],[127,0,69,0],[128,0,70,0],[129,0,71,0],[130,2,72,7],[130,17,72,22,"getInitialURL"],[130,30,72,35,"getInitialURL"],[130,31,72,35],[130,33,72,38],[131,4,73,4],[131,11,73,11],[131,12,73,12],[131,18,73,18,"RNLinking"],[131,27,73,27],[131,28,73,27,"default"],[131,35,73,27],[131,36,73,28,"getInitialURL"],[131,49,73,41],[131,50,73,42],[131,51,73,43],[131,56,73,48],[131,60,73,52],[132,2,74,0],[133,2,75,0],[134,0,76,0],[135,0,77,0],[136,0,78,0],[137,2,79,7],[137,11,79,16,"getLinkingURL"],[137,24,79,29,"getLinkingURL"],[137,25,79,29],[137,27,79,32],[138,4,80,4],[138,11,80,11,"ExpoLinking"],[138,22,80,22],[138,23,80,22,"default"],[138,30,80,22],[138,31,80,23,"getLinkingURL"],[138,44,80,36],[138,45,80,37],[138,46,80,38],[139,2,81,0],[140,2,82,0],[141,2,83,0],[142,0,84,0],[143,0,85,0],[144,0,86,0],[145,0,87,0],[146,0,88,0],[147,0,89,0],[148,0,90,0],[149,2,91,7],[149,17,91,22,"openURL"],[149,24,91,29,"openURL"],[149,25,91,30,"url"],[149,28,91,33],[149,30,91,35],[150,4,92,4],[150,8,92,4,"validateURL"],[150,20,92,15],[150,21,92,15,"validateURL"],[150,32,92,15],[150,34,92,16,"url"],[150,37,92,19],[150,38,92,20],[151,4,93,4],[151,11,93,11],[151,17,93,17,"RNLinking"],[151,26,93,26],[151,27,93,26,"default"],[151,34,93,26],[151,35,93,27,"openURL"],[151,42,93,34],[151,43,93,35,"url"],[151,46,93,38],[151,47,93,39],[152,2,94,0],[153,2,95,0],[154,2,96,0],[155,0,97,0],[156,0,98,0],[157,0,99,0],[158,0,100,0],[159,0,101,0],[160,0,102,0],[161,0,103,0],[162,0,104,0],[163,2,105,7],[163,17,105,22,"canOpenURL"],[163,27,105,32,"canOpenURL"],[163,28,105,33,"url"],[163,31,105,36],[163,33,105,38],[164,4,106,4],[164,8,106,4,"validateURL"],[164,20,106,15],[164,21,106,15,"validateURL"],[164,32,106,15],[164,34,106,16,"url"],[164,37,106,19],[164,38,106,20],[165,4,107,4],[165,11,107,11],[165,17,107,17,"RNLinking"],[165,26,107,26],[165,27,107,26,"default"],[165,34,107,26],[165,35,107,27,"canOpenURL"],[165,45,107,37],[165,46,107,38,"url"],[165,49,107,41],[165,50,107,42],[166,2,108,0],[167,2,109,0],[168,2,110,0],[169,0,111,0],[170,0,112,0],[171,0,113,0],[172,0,114,0],[173,2,115,7],[173,11,115,16,"useURL"],[173,17,115,22,"useURL"],[173,18,115,22],[173,20,115,25],[174,4,116,4],[174,10,116,10],[174,11,116,11,"url"],[174,14,116,14],[174,16,116,16,"setLink"],[174,23,116,23],[174,24,116,24],[174,27,116,27],[174,31,116,27,"useState"],[174,37,116,35],[174,38,116,35,"useState"],[174,46,116,35],[174,48,116,36],[174,52,116,40],[174,53,116,41],[175,4,117,4],[175,13,117,13,"onChange"],[175,21,117,21,"onChange"],[175,22,117,22,"event"],[175,27,117,27],[175,29,117,29],[176,6,118,8,"setLink"],[176,13,118,15],[176,14,118,16,"event"],[176,19,118,21],[176,20,118,22,"url"],[176,23,118,25],[176,24,118,26],[177,4,119,4],[178,4,120,4],[178,8,120,4,"useEffect"],[178,14,120,13],[178,15,120,13,"useEffect"],[178,24,120,13],[178,26,120,14],[178,32,120,20],[179,6,121,8,"getInitialURL"],[179,19,121,21],[179,20,121,22],[179,21,121,23],[179,22,121,24,"then"],[179,26,121,28],[179,27,121,30,"url"],[179,30,121,33],[179,34,121,38,"setLink"],[179,41,121,45],[179,42,121,46,"url"],[179,45,121,49],[179,46,121,50],[179,47,121,51],[180,6,122,8],[180,12,122,14,"subscription"],[180,24,122,26],[180,27,122,29,"addEventListener"],[180,43,122,45],[180,44,122,46],[180,49,122,51],[180,51,122,53,"onChange"],[180,59,122,61],[180,60,122,62],[181,6,123,8],[181,13,123,15],[181,19,123,21,"subscription"],[181,31,123,33],[181,32,123,34,"remove"],[181,38,123,40],[181,39,123,41],[181,40,123,42],[182,4,124,4],[182,5,124,5],[182,7,124,7],[182,9,124,9],[182,10,124,10],[183,4,125,4],[183,11,125,11,"url"],[183,14,125,14],[184,2,126,0],[185,2,127,0],[186,0,128,0],[187,0,129,0],[188,0,130,0],[189,0,131,0],[190,2,132,7],[190,11,132,16,"useLinkingURL"],[190,24,132,29,"useLinkingURL"],[190,25,132,29],[190,27,132,32],[191,4,133,4],[191,10,133,10],[191,11,133,11,"url"],[191,14,133,14],[191,16,133,16,"setLink"],[191,23,133,23],[191,24,133,24],[191,27,133,27],[191,31,133,27,"useState"],[191,37,133,35],[191,38,133,35,"useState"],[191,46,133,35],[191,48,133,36,"ExpoLinking"],[191,59,133,47],[191,60,133,47,"default"],[191,67,133,47],[191,68,133,48,"getLinkingURL"],[191,81,133,61],[191,82,133,62],[192,4,134,4],[192,13,134,13,"onChange"],[192,21,134,21,"onChange"],[192,22,134,22,"event"],[192,27,134,27],[192,29,134,29],[193,6,135,8,"setLink"],[193,13,135,15],[193,14,135,16,"event"],[193,19,135,21],[193,20,135,22,"url"],[193,23,135,25],[193,24,135,26],[194,4,136,4],[195,4,137,4],[195,8,137,4,"useEffect"],[195,14,137,13],[195,15,137,13,"useEffect"],[195,24,137,13],[195,26,137,14],[195,32,137,20],[196,6,138,8],[196,12,138,14,"subscription"],[196,24,138,26],[196,27,138,29,"ExpoLinking"],[196,38,138,40],[196,39,138,40,"default"],[196,46,138,40],[196,47,138,41,"addListener"],[196,58,138,52],[196,59,138,53],[196,74,138,68],[196,76,138,70,"onChange"],[196,84,138,78],[196,85,138,79],[197,6,139,8],[197,13,139,15],[197,19,139,21,"subscription"],[197,31,139,33],[197,32,139,34,"remove"],[197,38,139,40],[197,39,139,41],[197,40,139,42],[198,4,140,4],[198,5,140,5],[198,7,140,7],[198,9,140,9],[198,10,140,10],[199,4,141,4],[199,11,141,11,"url"],[199,14,141,14],[199,18,141,18],[199,22,141,22],[200,2,142,0],[201,0,142,1],[201,3]],"functionMap":{"names":["<global>","addEventListener","parseInitialURLAsync","sendIntent","openSettings","getInitialURL","getLinkingURL","openURL","canOpenURL","useURL","onChange","useEffect$argument_0","getInitialURL.then$argument_0","<anonymous>","useLinkingURL"],"mappings":"AAA;OCiB;CDE;OES;CFW;OGQ;CHK;OIK;CJQ;OKM;CLE;OMK;CNE;OOU;CPG;OQW;CRG;OSO;ICE;KDE;cEC;6BCC,qBD;eEE,2BF;KFC;CTE;OcM;IJE;KIE;cHC;eEE,2BF;KGC;CdE"},"hasCjsExports":false},"type":"js/module"}]}