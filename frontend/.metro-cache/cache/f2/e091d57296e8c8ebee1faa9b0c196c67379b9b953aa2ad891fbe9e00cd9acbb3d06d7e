{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":26},"end":{"line":3,"column":31,"index":57}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.NativeSafeAreaProvider = NativeSafeAreaProvider;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsView = require(_dependencyMap[1], \"react-native-web/dist/exports/View\");\n  var View = _interopDefault(_reactNativeWebDistExportsView);\n  /* eslint-env browser */\n\n  /**\n   * TODO:\n   * Currently insets and frame are based on the window and are not\n   * relative to the provider view. This is inconsistent with iOS and Android.\n   * However in most cases if the provider view covers the screen this is not\n   * an issue.\n   */\n\n  const CSSTransitions = {\n    WebkitTransition: 'webkitTransitionEnd',\n    Transition: 'transitionEnd',\n    MozTransition: 'transitionend',\n    MSTransition: 'msTransitionEnd',\n    OTransition: 'oTransitionEnd'\n  };\n  function NativeSafeAreaProvider({\n    children,\n    style,\n    onInsetsChange\n  }) {\n    React.useEffect(() => {\n      // Skip for SSR.\n      if (typeof document === 'undefined') {\n        return;\n      }\n      const element = createContextElement();\n      document.body.appendChild(element);\n      const onEnd = () => {\n        const {\n          paddingTop,\n          paddingBottom,\n          paddingLeft,\n          paddingRight\n        } = window.getComputedStyle(element);\n        const insets = {\n          top: paddingTop ? parseInt(paddingTop, 10) : 0,\n          bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n          left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n          right: paddingRight ? parseInt(paddingRight, 10) : 0\n        };\n        const frame = {\n          x: 0,\n          y: 0,\n          width: document.documentElement.offsetWidth,\n          height: document.documentElement.offsetHeight\n        };\n        // @ts-ignore: missing properties\n        onInsetsChange({\n          nativeEvent: {\n            insets,\n            frame\n          }\n        });\n      };\n      element.addEventListener(getSupportedTransitionEvent(), onEnd);\n      onEnd();\n      return () => {\n        document.body.removeChild(element);\n        element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n      };\n    }, [onInsetsChange]);\n    return /*#__PURE__*/React.createElement(View.default, {\n      style: style\n    }, children);\n  }\n  let _supportedTransitionEvent = null;\n  function getSupportedTransitionEvent() {\n    if (_supportedTransitionEvent != null) {\n      return _supportedTransitionEvent;\n    }\n    const element = document.createElement('invalidtype');\n    _supportedTransitionEvent = CSSTransitions.Transition;\n    for (const key in CSSTransitions) {\n      if (element.style[key] !== undefined) {\n        _supportedTransitionEvent = CSSTransitions[key];\n        break;\n      }\n    }\n    return _supportedTransitionEvent;\n  }\n  let _supportedEnv = null;\n  function getSupportedEnv() {\n    if (_supportedEnv !== null) {\n      return _supportedEnv;\n    }\n    const {\n      CSS\n    } = window;\n    if (CSS && CSS.supports && CSS.supports('top: constant(safe-area-inset-top)')) {\n      _supportedEnv = 'constant';\n    } else {\n      _supportedEnv = 'env';\n    }\n    return _supportedEnv;\n  }\n  function getInset(side) {\n    return `${getSupportedEnv()}(safe-area-inset-${side})`;\n  }\n  function createContextElement() {\n    const element = document.createElement('div');\n    const {\n      style\n    } = element;\n    style.position = 'fixed';\n    style.left = '0';\n    style.top = '0';\n    style.width = '0';\n    style.height = '0';\n    style.zIndex = '-1';\n    style.overflow = 'hidden';\n    style.visibility = 'hidden';\n    // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n    style.transitionDuration = '0.05s';\n    style.transitionProperty = 'padding';\n    style.transitionDelay = '0s';\n    style.paddingTop = getInset('top');\n    style.paddingBottom = getInset('bottom');\n    style.paddingLeft = getInset('left');\n    style.paddingRight = getInset('right');\n    return element;\n  }\n});","lineCount":155,"map":[[27,2,20,0,"exports"],[27,9,20,0],[27,10,20,0,"NativeSafeAreaProvider"],[27,32,20,0],[27,35,20,0,"NativeSafeAreaProvider"],[27,57,20,0],[28,2,3,0],[28,6,3,0,"_react"],[28,12,3,0],[28,15,3,0,"require"],[28,22,3,0],[28,23,3,0,"_dependencyMap"],[28,37,3,0],[29,2,3,0],[29,6,3,0,"React"],[29,11,3,0],[29,14,3,0,"_interopNamespace"],[29,31,3,0],[29,32,3,0,"_react"],[29,38,3,0],[30,2,3,31],[30,6,3,31,"_reactNativeWebDistExportsView"],[30,36,3,31],[30,39,3,31,"require"],[30,46,3,31],[30,47,3,31,"_dependencyMap"],[30,61,3,31],[31,2,3,31],[31,6,3,31,"View"],[31,10,3,31],[31,13,3,31,"_interopDefault"],[31,28,3,31],[31,29,3,31,"_reactNativeWebDistExportsView"],[31,59,3,31],[32,2,1,0],[34,2,5,0],[35,0,6,0],[36,0,7,0],[37,0,8,0],[38,0,9,0],[39,0,10,0],[40,0,11,0],[42,2,13,0],[42,8,13,6,"CSSTransitions"],[42,22,13,20],[42,25,13,23],[43,4,14,2,"WebkitTransition"],[43,20,14,18],[43,22,14,20],[43,43,14,41],[44,4,15,2,"Transition"],[44,14,15,12],[44,16,15,14],[44,31,15,29],[45,4,16,2,"MozTransition"],[45,17,16,15],[45,19,16,17],[45,34,16,32],[46,4,17,2,"MSTransition"],[46,16,17,14],[46,18,17,16],[46,35,17,33],[47,4,18,2,"OTransition"],[47,15,18,13],[47,17,18,15],[48,2,19,0],[48,3,19,1],[49,2,20,7],[49,11,20,16,"NativeSafeAreaProvider"],[49,33,20,38,"NativeSafeAreaProvider"],[49,34,20,39],[50,4,21,2,"children"],[50,12,21,10],[51,4,22,2,"style"],[51,9,22,7],[52,4,23,2,"onInsetsChange"],[53,2,24,0],[53,3,24,1],[53,5,24,3],[54,4,25,2,"React"],[54,9,25,7],[54,10,25,8,"useEffect"],[54,19,25,17],[54,20,25,18],[54,26,25,24],[55,6,26,4],[56,6,27,4],[56,10,27,8],[56,17,27,15,"document"],[56,25,27,23],[56,30,27,28],[56,41,27,39],[56,43,27,41],[57,8,28,6],[58,6,29,4],[59,6,30,4],[59,12,30,10,"element"],[59,19,30,17],[59,22,30,20,"createContextElement"],[59,42,30,40],[59,43,30,41],[59,44,30,42],[60,6,31,4,"document"],[60,14,31,12],[60,15,31,13,"body"],[60,19,31,17],[60,20,31,18,"appendChild"],[60,31,31,29],[60,32,31,30,"element"],[60,39,31,37],[60,40,31,38],[61,6,32,4],[61,12,32,10,"onEnd"],[61,17,32,15],[61,20,32,18,"onEnd"],[61,21,32,18],[61,26,32,24],[62,8,33,6],[62,14,33,12],[63,10,34,8,"paddingTop"],[63,20,34,18],[64,10,35,8,"paddingBottom"],[64,23,35,21],[65,10,36,8,"paddingLeft"],[65,21,36,19],[66,10,37,8,"paddingRight"],[67,8,38,6],[67,9,38,7],[67,12,38,10,"window"],[67,18,38,16],[67,19,38,17,"getComputedStyle"],[67,35,38,33],[67,36,38,34,"element"],[67,43,38,41],[67,44,38,42],[68,8,39,6],[68,14,39,12,"insets"],[68,20,39,18],[68,23,39,21],[69,10,40,8,"top"],[69,13,40,11],[69,15,40,13,"paddingTop"],[69,25,40,23],[69,28,40,26,"parseInt"],[69,36,40,34],[69,37,40,35,"paddingTop"],[69,47,40,45],[69,49,40,47],[69,51,40,49],[69,52,40,50],[69,55,40,53],[69,56,40,54],[70,10,41,8,"bottom"],[70,16,41,14],[70,18,41,16,"paddingBottom"],[70,31,41,29],[70,34,41,32,"parseInt"],[70,42,41,40],[70,43,41,41,"paddingBottom"],[70,56,41,54],[70,58,41,56],[70,60,41,58],[70,61,41,59],[70,64,41,62],[70,65,41,63],[71,10,42,8,"left"],[71,14,42,12],[71,16,42,14,"paddingLeft"],[71,27,42,25],[71,30,42,28,"parseInt"],[71,38,42,36],[71,39,42,37,"paddingLeft"],[71,50,42,48],[71,52,42,50],[71,54,42,52],[71,55,42,53],[71,58,42,56],[71,59,42,57],[72,10,43,8,"right"],[72,15,43,13],[72,17,43,15,"paddingRight"],[72,29,43,27],[72,32,43,30,"parseInt"],[72,40,43,38],[72,41,43,39,"paddingRight"],[72,53,43,51],[72,55,43,53],[72,57,43,55],[72,58,43,56],[72,61,43,59],[73,8,44,6],[73,9,44,7],[74,8,45,6],[74,14,45,12,"frame"],[74,19,45,17],[74,22,45,20],[75,10,46,8,"x"],[75,11,46,9],[75,13,46,11],[75,14,46,12],[76,10,47,8,"y"],[76,11,47,9],[76,13,47,11],[76,14,47,12],[77,10,48,8,"width"],[77,15,48,13],[77,17,48,15,"document"],[77,25,48,23],[77,26,48,24,"documentElement"],[77,41,48,39],[77,42,48,40,"offsetWidth"],[77,53,48,51],[78,10,49,8,"height"],[78,16,49,14],[78,18,49,16,"document"],[78,26,49,24],[78,27,49,25,"documentElement"],[78,42,49,40],[78,43,49,41,"offsetHeight"],[79,8,50,6],[79,9,50,7],[80,8,51,6],[81,8,52,6,"onInsetsChange"],[81,22,52,20],[81,23,52,21],[82,10,53,8,"nativeEvent"],[82,21,53,19],[82,23,53,21],[83,12,54,10,"insets"],[83,18,54,16],[84,12,55,10,"frame"],[85,10,56,8],[86,8,57,6],[86,9,57,7],[86,10,57,8],[87,6,58,4],[87,7,58,5],[88,6,59,4,"element"],[88,13,59,11],[88,14,59,12,"addEventListener"],[88,30,59,28],[88,31,59,29,"getSupportedTransitionEvent"],[88,58,59,56],[88,59,59,57],[88,60,59,58],[88,62,59,60,"onEnd"],[88,67,59,65],[88,68,59,66],[89,6,60,4,"onEnd"],[89,11,60,9],[89,12,60,10],[89,13,60,11],[90,6,61,4],[90,13,61,11],[90,19,61,17],[91,8,62,6,"document"],[91,16,62,14],[91,17,62,15,"body"],[91,21,62,19],[91,22,62,20,"removeChild"],[91,33,62,31],[91,34,62,32,"element"],[91,41,62,39],[91,42,62,40],[92,8,63,6,"element"],[92,15,63,13],[92,16,63,14,"removeEventListener"],[92,35,63,33],[92,36,63,34,"getSupportedTransitionEvent"],[92,63,63,61],[92,64,63,62],[92,65,63,63],[92,67,63,65,"onEnd"],[92,72,63,70],[92,73,63,71],[93,6,64,4],[93,7,64,5],[94,4,65,2],[94,5,65,3],[94,7,65,5],[94,8,65,6,"onInsetsChange"],[94,22,65,20],[94,23,65,21],[94,24,65,22],[95,4,66,2],[95,11,66,9],[95,24,66,22,"React"],[95,29,66,27],[95,30,66,28,"createElement"],[95,43,66,41],[95,44,66,42,"View"],[95,48,66,46],[95,49,66,46,"default"],[95,56,66,46],[95,58,66,48],[96,6,67,4,"style"],[96,11,67,9],[96,13,67,11,"style"],[97,4,68,2],[97,5,68,3],[97,7,68,5,"children"],[97,15,68,13],[97,16,68,14],[98,2,69,0],[99,2,70,0],[99,6,70,4,"_supportedTransitionEvent"],[99,31,70,29],[99,34,70,32],[99,38,70,36],[100,2,71,0],[100,11,71,9,"getSupportedTransitionEvent"],[100,38,71,36,"getSupportedTransitionEvent"],[100,39,71,36],[100,41,71,39],[101,4,72,2],[101,8,72,6,"_supportedTransitionEvent"],[101,33,72,31],[101,37,72,35],[101,41,72,39],[101,43,72,41],[102,6,73,4],[102,13,73,11,"_supportedTransitionEvent"],[102,38,73,36],[103,4,74,2],[104,4,75,2],[104,10,75,8,"element"],[104,17,75,15],[104,20,75,18,"document"],[104,28,75,26],[104,29,75,27,"createElement"],[104,42,75,40],[104,43,75,41],[104,56,75,54],[104,57,75,55],[105,4,76,2,"_supportedTransitionEvent"],[105,29,76,27],[105,32,76,30,"CSSTransitions"],[105,46,76,44],[105,47,76,45,"Transition"],[105,57,76,55],[106,4,77,2],[106,9,77,7],[106,15,77,13,"key"],[106,18,77,16],[106,22,77,20,"CSSTransitions"],[106,36,77,34],[106,38,77,36],[107,6,78,4],[107,10,78,8,"element"],[107,17,78,15],[107,18,78,16,"style"],[107,23,78,21],[107,24,78,22,"key"],[107,27,78,25],[107,28,78,26],[107,33,78,31,"undefined"],[107,42,78,40],[107,44,78,42],[108,8,79,6,"_supportedTransitionEvent"],[108,33,79,31],[108,36,79,34,"CSSTransitions"],[108,50,79,48],[108,51,79,49,"key"],[108,54,79,52],[108,55,79,53],[109,8,80,6],[110,6,81,4],[111,4,82,2],[112,4,83,2],[112,11,83,9,"_supportedTransitionEvent"],[112,36,83,34],[113,2,84,0],[114,2,85,0],[114,6,85,4,"_supportedEnv"],[114,19,85,17],[114,22,85,20],[114,26,85,24],[115,2,86,0],[115,11,86,9,"getSupportedEnv"],[115,26,86,24,"getSupportedEnv"],[115,27,86,24],[115,29,86,27],[116,4,87,2],[116,8,87,6,"_supportedEnv"],[116,21,87,19],[116,26,87,24],[116,30,87,28],[116,32,87,30],[117,6,88,4],[117,13,88,11,"_supportedEnv"],[117,26,88,24],[118,4,89,2],[119,4,90,2],[119,10,90,8],[120,6,91,4,"CSS"],[121,4,92,2],[121,5,92,3],[121,8,92,6,"window"],[121,14,92,12],[122,4,93,2],[122,8,93,6,"CSS"],[122,11,93,9],[122,15,93,13,"CSS"],[122,18,93,16],[122,19,93,17,"supports"],[122,27,93,25],[122,31,93,29,"CSS"],[122,34,93,32],[122,35,93,33,"supports"],[122,43,93,41],[122,44,93,42],[122,80,93,78],[122,81,93,79],[122,83,93,81],[123,6,94,4,"_supportedEnv"],[123,19,94,17],[123,22,94,20],[123,32,94,30],[124,4,95,2],[124,5,95,3],[124,11,95,9],[125,6,96,4,"_supportedEnv"],[125,19,96,17],[125,22,96,20],[125,27,96,25],[126,4,97,2],[127,4,98,2],[127,11,98,9,"_supportedEnv"],[127,24,98,22],[128,2,99,0],[129,2,100,0],[129,11,100,9,"getInset"],[129,19,100,17,"getInset"],[129,20,100,18,"side"],[129,24,100,22],[129,26,100,24],[130,4,101,2],[130,11,101,9],[130,14,101,12,"getSupportedEnv"],[130,29,101,27],[130,30,101,28],[130,31,101,29],[130,51,101,49,"side"],[130,55,101,53],[130,58,101,56],[131,2,102,0],[132,2,103,0],[132,11,103,9,"createContextElement"],[132,31,103,29,"createContextElement"],[132,32,103,29],[132,34,103,32],[133,4,104,2],[133,10,104,8,"element"],[133,17,104,15],[133,20,104,18,"document"],[133,28,104,26],[133,29,104,27,"createElement"],[133,42,104,40],[133,43,104,41],[133,48,104,46],[133,49,104,47],[134,4,105,2],[134,10,105,8],[135,6,106,4,"style"],[136,4,107,2],[136,5,107,3],[136,8,107,6,"element"],[136,15,107,13],[137,4,108,2,"style"],[137,9,108,7],[137,10,108,8,"position"],[137,18,108,16],[137,21,108,19],[137,28,108,26],[138,4,109,2,"style"],[138,9,109,7],[138,10,109,8,"left"],[138,14,109,12],[138,17,109,15],[138,20,109,18],[139,4,110,2,"style"],[139,9,110,7],[139,10,110,8,"top"],[139,13,110,11],[139,16,110,14],[139,19,110,17],[140,4,111,2,"style"],[140,9,111,7],[140,10,111,8,"width"],[140,15,111,13],[140,18,111,16],[140,21,111,19],[141,4,112,2,"style"],[141,9,112,7],[141,10,112,8,"height"],[141,16,112,14],[141,19,112,17],[141,22,112,20],[142,4,113,2,"style"],[142,9,113,7],[142,10,113,8,"zIndex"],[142,16,113,14],[142,19,113,17],[142,23,113,21],[143,4,114,2,"style"],[143,9,114,7],[143,10,114,8,"overflow"],[143,18,114,16],[143,21,114,19],[143,29,114,27],[144,4,115,2,"style"],[144,9,115,7],[144,10,115,8,"visibility"],[144,20,115,18],[144,23,115,21],[144,31,115,29],[145,4,116,2],[146,4,117,2,"style"],[146,9,117,7],[146,10,117,8,"transitionDuration"],[146,28,117,26],[146,31,117,29],[146,38,117,36],[147,4,118,2,"style"],[147,9,118,7],[147,10,118,8,"transitionProperty"],[147,28,118,26],[147,31,118,29],[147,40,118,38],[148,4,119,2,"style"],[148,9,119,7],[148,10,119,8,"transitionDelay"],[148,25,119,23],[148,28,119,26],[148,32,119,30],[149,4,120,2,"style"],[149,9,120,7],[149,10,120,8,"paddingTop"],[149,20,120,18],[149,23,120,21,"getInset"],[149,31,120,29],[149,32,120,30],[149,37,120,35],[149,38,120,36],[150,4,121,2,"style"],[150,9,121,7],[150,10,121,8,"paddingBottom"],[150,23,121,21],[150,26,121,24,"getInset"],[150,34,121,32],[150,35,121,33],[150,43,121,41],[150,44,121,42],[151,4,122,2,"style"],[151,9,122,7],[151,10,122,8,"paddingLeft"],[151,21,122,19],[151,24,122,22,"getInset"],[151,32,122,30],[151,33,122,31],[151,39,122,37],[151,40,122,38],[152,4,123,2,"style"],[152,9,123,7],[152,10,123,8,"paddingRight"],[152,22,123,20],[152,25,123,23,"getInset"],[152,33,123,31],[152,34,123,32],[152,41,123,39],[152,42,123,40],[153,4,124,2],[153,11,124,9,"element"],[153,18,124,16],[154,2,125,0],[155,0,125,1],[155,3]],"functionMap":{"names":["<global>","NativeSafeAreaProvider","React.useEffect$argument_0","onEnd","<anonymous>","getSupportedTransitionEvent","getSupportedEnv","getInset","createContextElement"],"mappings":"AAA;OCmB;kBCK;kBCO;KD0B;WEG;KFG;GDC;CDI;AKE;CLa;AME;CNa;AOC;CPE;AQC;CRsB"},"hasCjsExports":false},"type":"js/module"}]}