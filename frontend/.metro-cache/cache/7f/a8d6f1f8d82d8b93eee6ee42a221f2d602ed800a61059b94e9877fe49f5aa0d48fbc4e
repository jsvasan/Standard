{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":210},"end":{"line":11,"column":36,"index":246}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useMergeRefs;\n  var _react = require(_dependencyMap[0], \"react\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  /**\n   * Constructs a new ref that forwards new values to each of the given refs. The\n   * given refs will always be invoked in the order that they are supplied.\n   *\n   * WARNING: A known problem of merging refs using this approach is that if any\n   * of the given refs change, the returned callback ref will also be changed. If\n   * the returned callback ref is supplied as a `ref` to a React element, this may\n   * lead to problems with the given refs being invoked more times than desired.\n   */\n  function useMergeRefs() {\n    for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n      refs[_key] = arguments[_key];\n    }\n    return (0, _react.useCallback)(current => {\n      for (var _i = 0, _refs = refs; _i < _refs.length; _i++) {\n        var ref = _refs[_i];\n        if (ref != null) {\n          if (typeof ref === 'function') {\n            ref(current);\n          } else {\n            ref.current = current;\n          }\n        }\n      }\n    }, [...refs] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n  }\n});","lineCount":44,"map":[[6,2,11,0],[6,6,11,0,"_react"],[6,12,11,0],[6,15,11,0,"require"],[6,22,11,0],[6,23,11,0,"_dependencyMap"],[6,37,11,0],[7,2,1,0],[8,0,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[17,2,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,21,15],[26,11,21,24,"useMergeRefs"],[26,23,21,36,"useMergeRefs"],[26,24,21,36],[26,26,21,39],[27,4,22,2],[27,9,22,7],[27,13,22,11,"_len"],[27,17,22,15],[27,20,22,18,"arguments"],[27,29,22,27],[27,30,22,28,"length"],[27,36,22,34],[27,38,22,36,"refs"],[27,42,22,40],[27,45,22,43],[27,49,22,47,"Array"],[27,54,22,52],[27,55,22,53,"_len"],[27,59,22,57],[27,60,22,58],[27,62,22,60,"_key"],[27,66,22,64],[27,69,22,67],[27,70,22,68],[27,72,22,70,"_key"],[27,76,22,74],[27,79,22,77,"_len"],[27,83,22,81],[27,85,22,83,"_key"],[27,89,22,87],[27,91,22,89],[27,93,22,91],[28,6,23,4,"refs"],[28,10,23,8],[28,11,23,9,"_key"],[28,15,23,13],[28,16,23,14],[28,19,23,17,"arguments"],[28,28,23,26],[28,29,23,27,"_key"],[28,33,23,31],[28,34,23,32],[29,4,24,2],[30,4,25,2],[30,11,25,9],[30,15,25,9,"useCallback"],[30,33,25,20],[30,35,25,21,"current"],[30,42,25,28],[30,46,25,32],[31,6,26,4],[31,11,26,9],[31,15,26,13,"_i"],[31,17,26,15],[31,20,26,18],[31,21,26,19],[31,23,26,21,"_refs"],[31,28,26,26],[31,31,26,29,"refs"],[31,35,26,33],[31,37,26,35,"_i"],[31,39,26,37],[31,42,26,40,"_refs"],[31,47,26,45],[31,48,26,46,"length"],[31,54,26,52],[31,56,26,54,"_i"],[31,58,26,56],[31,60,26,58],[31,62,26,60],[32,8,27,6],[32,12,27,10,"ref"],[32,15,27,13],[32,18,27,16,"_refs"],[32,23,27,21],[32,24,27,22,"_i"],[32,26,27,24],[32,27,27,25],[33,8,28,6],[33,12,28,10,"ref"],[33,15,28,13],[33,19,28,17],[33,23,28,21],[33,25,28,23],[34,10,29,8],[34,14,29,12],[34,21,29,19,"ref"],[34,24,29,22],[34,29,29,27],[34,39,29,37],[34,41,29,39],[35,12,30,10,"ref"],[35,15,30,13],[35,16,30,14,"current"],[35,23,30,21],[35,24,30,22],[36,10,31,8],[36,11,31,9],[36,17,31,15],[37,12,32,10,"ref"],[37,15,32,13],[37,16,32,14,"current"],[37,23,32,21],[37,26,32,24,"current"],[37,33,32,31],[38,10,33,8],[39,8,34,6],[40,6,35,4],[41,4,36,2],[41,5,36,3],[41,7,36,5],[41,8,36,6],[41,11,36,9,"refs"],[41,15,36,13],[41,16,36,14],[41,17,36,15],[42,4,37,2],[42,5,37,3],[43,2,38,0],[44,0,38,1],[44,3]],"functionMap":{"names":["<global>","useMergeRefs","<anonymous>"],"mappings":"AAA;eCoB;qBCI;GDW"}},"type":"js/module"}]}