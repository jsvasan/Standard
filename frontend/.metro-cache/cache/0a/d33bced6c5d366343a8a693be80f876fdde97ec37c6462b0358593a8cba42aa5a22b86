{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isEdgeToEdge = exports.controlEdgeToEdgeValues = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  // src/index.android.ts\n  var warnings = /* @__PURE__ */new Set();\n  var isEdgeToEdge = () => {\n    var _a, _b;\n    return _reactNative.TurboModuleRegistry.get(\"RNEdgeToEdge\") != null || ((_b = (_a = _reactNative.TurboModuleRegistry.get(\"DeviceInfo\")) == null ? void 0 : _a.getConstants) == null ? void 0 : _b.call(_a).isEdgeToEdge) === true;\n  };\n  exports.isEdgeToEdge = isEdgeToEdge;\n  var controlEdgeToEdgeValues = values => {\n    if (__DEV__ && isEdgeToEdge()) {\n      var entries = Object.entries(values).filter(_ref => {\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n          value = _ref2[1];\n        return typeof value !== \"undefined\";\n      });\n      var stableKey = entries.join(\" \");\n      if (entries.length < 1 || warnings.has(stableKey)) {\n        return;\n      }\n      warnings.add(stableKey);\n      var isPlural = entries.length > 1;\n      var lastIndex = entries.length - 1;\n      var list = entries.reduce((acc, _ref3, index) => {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 1),\n          name = _ref4[0];\n        return index === 0 ? name : acc + (index === lastIndex ? \" and \" : \", \") + name;\n      }, \"\");\n      console.warn(`${list} ${isPlural ? \"values are\" : \"value is\"} ignored when using react-native-edge-to-edge`);\n    }\n  };\n  exports.controlEdgeToEdgeValues = controlEdgeToEdgeValues;\n});","lineCount":39,"map":[[8,2,1,0],[8,6,1,0,"_reactNative"],[8,18,1,0],[8,21,1,0,"require"],[8,28,1,0],[8,29,1,0,"_dependencyMap"],[8,43,1,0],[9,2,3,0],[10,2,4,0],[10,6,4,4,"warnings"],[10,14,4,12],[10,17,4,15],[10,32,4,31],[10,36,4,35,"Set"],[10,39,4,38],[10,40,4,39],[10,41,4,40],[11,2,5,0],[11,6,5,4,"isEdgeToEdge"],[11,18,5,16],[11,21,5,19,"isEdgeToEdge"],[11,22,5,19],[11,27,5,25],[12,4,6,2],[12,8,6,6,"_a"],[12,10,6,8],[12,12,6,10,"_b"],[12,14,6,12],[13,4,7,2],[13,11,7,9,"TurboModuleRegistry"],[13,43,7,28],[13,44,7,29,"get"],[13,47,7,32],[13,48,7,33],[13,62,7,47],[13,63,7,48],[13,67,7,52],[13,71,7,56],[13,75,7,60],[13,76,7,61],[13,77,7,62,"_b"],[13,79,7,64],[13,82,7,67],[13,83,7,68,"_a"],[13,85,7,70],[13,88,7,73,"TurboModuleRegistry"],[13,120,7,92],[13,121,7,93,"get"],[13,124,7,96],[13,125,7,97],[13,137,7,109],[13,138,7,110],[13,143,7,115],[13,147,7,119],[13,150,7,122],[13,155,7,127],[13,156,7,128],[13,159,7,131,"_a"],[13,161,7,133],[13,162,7,134,"getConstants"],[13,174,7,146],[13,179,7,151],[13,183,7,155],[13,186,7,158],[13,191,7,163],[13,192,7,164],[13,195,7,167,"_b"],[13,197,7,169],[13,198,7,170,"call"],[13,202,7,174],[13,203,7,175,"_a"],[13,205,7,177],[13,206,7,178],[13,207,7,179,"isEdgeToEdge"],[13,219,7,191],[13,225,7,197],[13,229,7,201],[14,2,8,0],[14,3,8,1],[15,2,8,2,"exports"],[15,9,8,2],[15,10,8,2,"isEdgeToEdge"],[15,22,8,2],[15,25,8,2,"isEdgeToEdge"],[15,37,8,2],[16,2,9,0],[16,6,9,4,"controlEdgeToEdgeValues"],[16,29,9,27],[16,32,9,31,"values"],[16,38,9,37],[16,42,9,42],[17,4,10,2],[17,8,10,6,"__DEV__"],[17,15,10,13],[17,19,10,17,"isEdgeToEdge"],[17,31,10,29],[17,32,10,30],[17,33,10,31],[17,35,10,33],[18,6,11,4],[18,10,11,10,"entries"],[18,17,11,17],[18,20,11,20,"Object"],[18,26,11,26],[18,27,11,27,"entries"],[18,34,11,34],[18,35,11,35,"values"],[18,41,11,41],[18,42,11,42],[18,43,11,43,"filter"],[18,49,11,49],[18,50,12,6,"_ref"],[18,54,12,6],[19,8,12,6],[19,12,12,6,"_ref2"],[19,17,12,6],[19,24,12,6,"_slicedToArray2"],[19,39,12,6],[19,40,12,6,"default"],[19,47,12,6],[19,49,12,6,"_ref"],[19,53,12,6],[20,10,12,10,"value"],[20,15,12,15],[20,18,12,15,"_ref2"],[20,23,12,15],[21,8,12,15],[21,15,12,21],[21,22,12,28,"value"],[21,27,12,33],[21,32,12,38],[21,43,12,49],[22,6,12,49],[22,7,13,4],[22,8,13,5],[23,6,14,4],[23,10,14,10,"stableKey"],[23,19,14,19],[23,22,14,22,"entries"],[23,29,14,29],[23,30,14,30,"join"],[23,34,14,34],[23,35,14,35],[23,38,14,38],[23,39,14,39],[24,6,15,4],[24,10,15,8,"entries"],[24,17,15,15],[24,18,15,16,"length"],[24,24,15,22],[24,27,15,25],[24,28,15,26],[24,32,15,30,"warnings"],[24,40,15,38],[24,41,15,39,"has"],[24,44,15,42],[24,45,15,43,"stableKey"],[24,54,15,52],[24,55,15,53],[24,57,15,55],[25,8,16,6],[26,6,17,4],[27,6,18,4,"warnings"],[27,14,18,12],[27,15,18,13,"add"],[27,18,18,16],[27,19,18,17,"stableKey"],[27,28,18,26],[27,29,18,27],[28,6,19,4],[28,10,19,10,"isPlural"],[28,18,19,18],[28,21,19,21,"entries"],[28,28,19,28],[28,29,19,29,"length"],[28,35,19,35],[28,38,19,38],[28,39,19,39],[29,6,20,4],[29,10,20,10,"lastIndex"],[29,19,20,19],[29,22,20,22,"entries"],[29,29,20,29],[29,30,20,30,"length"],[29,36,20,36],[29,39,20,39],[29,40,20,40],[30,6,21,4],[30,10,21,10,"list"],[30,14,21,14],[30,17,21,17,"entries"],[30,24,21,24],[30,25,21,25,"reduce"],[30,31,21,31],[30,32,22,6],[30,33,22,7,"acc"],[30,36,22,10],[30,38,22,10,"_ref3"],[30,43,22,10],[30,45,22,20,"index"],[30,50,22,25],[31,8,22,25],[31,12,22,25,"_ref4"],[31,17,22,25],[31,24,22,25,"_slicedToArray2"],[31,39,22,25],[31,40,22,25,"default"],[31,47,22,25],[31,49,22,25,"_ref3"],[31,54,22,25],[32,10,22,13,"name"],[32,14,22,17],[32,17,22,17,"_ref4"],[32,22,22,17],[33,8,22,17],[33,15,22,30,"index"],[33,20,22,35],[33,25,22,40],[33,26,22,41],[33,29,22,44,"name"],[33,33,22,48],[33,36,22,51,"acc"],[33,39,22,54],[33,43,22,58,"index"],[33,48,22,63],[33,53,22,68,"lastIndex"],[33,62,22,77],[33,65,22,80],[33,72,22,87],[33,75,22,90],[33,79,22,94],[33,80,22,95],[33,83,22,98,"name"],[33,87,22,102],[34,6,22,102],[34,9,23,6],[34,11,24,4],[34,12,24,5],[35,6,25,4,"console"],[35,13,25,11],[35,14,25,12,"warn"],[35,18,25,16],[35,19,26,6],[35,22,26,9,"list"],[35,26,26,13],[35,30,26,17,"isPlural"],[35,38,26,25],[35,41,26,28],[35,53,26,40],[35,56,26,43],[35,66,26,53],[35,113,27,4],[35,114,27,5],[36,4,28,2],[37,2,29,0],[37,3,29,1],[38,2,29,2,"exports"],[38,9,29,2],[38,10,29,2,"controlEdgeToEdgeValues"],[38,33,29,2],[38,36,29,2,"controlEdgeToEdgeValues"],[38,59,29,2],[39,0,29,2],[39,3]],"functionMap":{"names":["<global>","isEdgeToEdge","controlEdgeToEdgeValues","Object.entries.filter$argument_0","entries.reduce$argument_0"],"mappings":"AAA;mBCI;CDG;8BEC;MCG,2CD;MEU,gGF;CFO"}},"type":"js/module"}]}