{"dependencies":[{"name":"./Data/LogBoxData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":59,"index":284}}],"key":"FcZz6T1PfQ3V75b51ZE2xBq3vms=","exportNames":["*"]}},{"name":"./Data/parseLogBoxLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":285},"end":{"line":10,"column":62,"index":347}}],"key":"UHD94YEqeFyYMUmYH0xpXoYaOQs=","exportNames":["*"]}},{"name":"./Data/LogBoxData","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":31,"column":21,"index":802},"end":{"line":31,"column":49,"index":830}}],"key":"flH9/u65tQgLoIbElTTjW+2MqGo=","exportNames":["*"]}},{"name":"./Data/parseLogBoxLog","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":33,"column":4,"index":885},"end":{"line":33,"column":36,"index":917}}],"key":"Zro9/BpYrdGqIuVqjY+69dKkFpQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"ExtendedExceptionData\", {\n    enumerable: true,\n    get: function () {\n      return _parseLogBoxLog.ExtendedExceptionData;\n    }\n  });\n  Object.defineProperty(exports, \"IgnorePattern\", {\n    enumerable: true,\n    get: function () {\n      return _LogBoxData.IgnorePattern;\n    }\n  });\n  Object.defineProperty(exports, \"LogData\", {\n    enumerable: true,\n    get: function () {\n      return _LogBoxData.LogData;\n    }\n  });\n  exports.default = void 0;\n  var _LogBoxData = require(_dependencyMap[0], \"./Data/LogBoxData\");\n  var _parseLogBoxLog = require(_dependencyMap[1], \"./Data/parseLogBoxLog\");\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  let LogBox;\n  /**\n   * LogBox displays logs in the app.\n   */\n  if (__DEV__) {\n    const LogBoxData = require(_dependencyMap[2], \"./Data/LogBoxData\");\n    const {\n      parseLogBoxLog,\n      parseInterpolation\n    } = require(_dependencyMap[3], \"./Data/parseLogBoxLog\");\n    let originalConsoleError;\n    let consoleErrorImpl;\n    let isLogBoxInstalled = false;\n    LogBox = {\n      install() {\n        if (isLogBoxInstalled) {\n          return;\n        }\n        isLogBoxInstalled = true;\n\n        // Trigger lazy initialization of module.\n        // require(\"../NativeModules/specs/NativeLogBox\");\n\n        // IMPORTANT: we only overwrite `console.error` and `console.warn` once.\n        // When we uninstall we keep the same reference and only change its\n        // internal implementation\n        const isFirstInstall = originalConsoleError == null;\n        if (isFirstInstall) {\n          originalConsoleError = console.error.bind(console);\n          console.error = (...args) => {\n            consoleErrorImpl?.(...args);\n          };\n        }\n        consoleErrorImpl = registerError;\n        if (process.env.NODE_ENV === 'test') {\n          LogBoxData.setDisabled(true);\n        }\n      },\n      uninstall() {\n        if (!isLogBoxInstalled) {\n          return;\n        }\n        isLogBoxInstalled = false;\n\n        // IMPORTANT: we don't re-assign to `console` in case the method has been\n        // decorated again after installing LogBox. E.g.:\n        // Before uninstalling: original > LogBox > OtherErrorHandler\n        // After uninstalling:  original > LogBox (noop) > OtherErrorHandler\n        consoleErrorImpl = originalConsoleError;\n        delete console.disableLogBox;\n      },\n      isInstalled() {\n        return isLogBoxInstalled;\n      },\n      ignoreLogs(patterns) {\n        LogBoxData.addIgnorePatterns(patterns);\n      },\n      ignoreAllLogs(value) {\n        LogBoxData.setDisabled(value == null ? true : value);\n      },\n      clearAllLogs() {\n        LogBoxData.clear();\n      },\n      addLog(log) {\n        if (isLogBoxInstalled) {\n          LogBoxData.addLog(log);\n        }\n      },\n      addException(error) {\n        if (isLogBoxInstalled) {\n          LogBoxData.addException(error);\n        }\n      }\n    };\n    const isWarningModuleWarning = (...args) => {\n      return typeof args[0] === 'string' && args[0].startsWith('Warning: ');\n    };\n    const registerError = (...args) => {\n      // Let errors within LogBox itself fall through.\n      if (LogBoxData.isLogBoxErrorMessage(args[0])) {\n        originalConsoleError?.(...args);\n        return;\n      }\n      try {\n        if (!isWarningModuleWarning(...args)) {\n          // Only show LogBox for the 'warning' module, otherwise pass through.\n          // By passing through, this will get picked up by the React console override,\n          // potentially adding the component stack. React then passes it back to the\n          // React Native ExceptionsManager, which reports it to LogBox as an error.\n          //\n          // The 'warning' module needs to be handled here because React internally calls\n          // `console.error('Warning: ')` with the component stack already included.\n          originalConsoleError?.(...args);\n          return;\n        }\n        const {\n          category,\n          message,\n          componentStack\n        } = parseLogBoxLog(args);\n        if (!LogBoxData.isMessageIgnored(message.content)) {\n          // Interpolate the message so they are formatted for adb and other CLIs.\n          // This is different than the message.content above because it includes component stacks.\n          const interpolated = parseInterpolation(args);\n          originalConsoleError?.(interpolated.message.content);\n          LogBoxData.addLog({\n            // Always show the static rendering issues as full screen since they\n            // are too confusing otherwise.\n            level: /did not match\\. Server:/.test(message.content) ? 'fatal' : 'error',\n            category,\n            message,\n            componentStack\n          });\n        }\n      } catch (err) {\n        LogBoxData.reportUnexpectedLogBoxError(err);\n      }\n    };\n  } else {\n    LogBox = {\n      install() {},\n      uninstall() {},\n      isInstalled() {\n        return false;\n      },\n      ignoreLogs(_patterns) {},\n      ignoreAllLogs(_value) {},\n      clearAllLogs() {},\n      addLog(_log) {},\n      addException(_ex) {}\n    };\n  }\n  var _default = exports.default = LogBox;\n});","lineCount":167,"map":[[24,2,9,0],[24,6,9,0,"_LogBoxData"],[24,17,9,0],[24,20,9,0,"require"],[24,27,9,0],[24,28,9,0,"_dependencyMap"],[24,42,9,0],[25,2,10,0],[25,6,10,0,"_parseLogBoxLog"],[25,21,10,0],[25,24,10,0,"require"],[25,31,10,0],[25,32,10,0,"_dependencyMap"],[25,46,10,0],[26,2,1,0],[27,0,2,0],[28,0,3,0],[29,0,4,0],[30,0,5,0],[31,0,6,0],[32,0,7,0],[34,2,14,0],[34,6,14,4,"LogBox"],[34,12,14,19],[35,2,27,0],[36,0,28,0],[37,0,29,0],[38,2,30,0],[38,6,30,4,"__DEV__"],[38,13,30,11],[38,15,30,13],[39,4,31,2],[39,10,31,8,"LogBoxData"],[39,20,31,18],[39,23,31,21,"require"],[39,30,31,28],[39,31,31,28,"_dependencyMap"],[39,45,31,28],[39,69,31,48],[39,70,31,49],[40,4,32,2],[40,10,32,8],[41,6,32,10,"parseLogBoxLog"],[41,20,32,24],[42,6,32,26,"parseInterpolation"],[43,4,32,45],[43,5,32,46],[43,8,33,4,"require"],[43,15,33,11],[43,16,33,11,"_dependencyMap"],[43,30,33,11],[43,58,33,35],[43,59,33,78],[44,4,35,2],[44,8,35,6,"originalConsoleError"],[44,28,35,60],[45,4,36,2],[45,8,36,6,"consoleErrorImpl"],[45,24,36,56],[46,4,38,2],[46,8,38,6,"isLogBoxInstalled"],[46,25,38,32],[46,28,38,35],[46,33,38,40],[47,4,40,2,"LogBox"],[47,10,40,8],[47,13,40,11],[48,6,41,4,"install"],[48,13,41,11,"install"],[48,14,41,11],[48,16,41,20],[49,8,42,6],[49,12,42,10,"isLogBoxInstalled"],[49,29,42,27],[49,31,42,29],[50,10,43,8],[51,8,44,6],[52,8,46,6,"isLogBoxInstalled"],[52,25,46,23],[52,28,46,26],[52,32,46,30],[54,8,48,6],[55,8,49,6],[57,8,51,6],[58,8,52,6],[59,8,53,6],[60,8,54,6],[60,14,54,12,"isFirstInstall"],[60,28,54,26],[60,31,54,29,"originalConsoleError"],[60,51,54,49],[60,55,54,53],[60,59,54,57],[61,8,55,6],[61,12,55,10,"isFirstInstall"],[61,26,55,24],[61,28,55,26],[62,10,56,8,"originalConsoleError"],[62,30,56,28],[62,33,56,31,"console"],[62,40,56,38],[62,41,56,39,"error"],[62,46,56,44],[62,47,56,45,"bind"],[62,51,56,49],[62,52,56,50,"console"],[62,59,56,57],[62,60,56,58],[63,10,58,8,"console"],[63,17,58,15],[63,18,58,16,"error"],[63,23,58,21],[63,26,58,24],[63,27,58,25],[63,30,58,28,"args"],[63,34,58,32],[63,39,58,37],[64,12,59,10,"consoleErrorImpl"],[64,28,59,26],[64,31,59,29],[64,34,59,32,"args"],[64,38,59,36],[64,39,59,37],[65,10,60,8],[65,11,60,9],[66,8,61,6],[67,8,63,6,"consoleErrorImpl"],[67,24,63,22],[67,27,63,25,"registerError"],[67,40,63,38],[68,8,65,6],[68,12,65,10,"process"],[68,19,65,17],[68,20,65,18,"env"],[68,23,65,21],[68,24,65,22,"NODE_ENV"],[68,32,65,30],[68,37,65,35],[68,43,65,41],[68,45,65,43],[69,10,66,8,"LogBoxData"],[69,20,66,18],[69,21,66,19,"setDisabled"],[69,32,66,30],[69,33,66,31],[69,37,66,35],[69,38,66,36],[70,8,67,6],[71,6,68,4],[71,7,68,5],[72,6,70,4,"uninstall"],[72,15,70,13,"uninstall"],[72,16,70,13],[72,18,70,22],[73,8,71,6],[73,12,71,10],[73,13,71,11,"isLogBoxInstalled"],[73,30,71,28],[73,32,71,30],[74,10,72,8],[75,8,73,6],[76,8,75,6,"isLogBoxInstalled"],[76,25,75,23],[76,28,75,26],[76,33,75,31],[78,8,77,6],[79,8,78,6],[80,8,79,6],[81,8,80,6],[82,8,81,6,"consoleErrorImpl"],[82,24,81,22],[82,27,81,25,"originalConsoleError"],[82,47,81,45],[83,8,82,6],[83,15,82,14,"console"],[83,22,82,21],[83,23,82,30,"disableLogBox"],[83,36,82,43],[84,6,83,4],[84,7,83,5],[85,6,85,4,"isInstalled"],[85,17,85,15,"isInstalled"],[85,18,85,15],[85,20,85,27],[86,8,86,6],[86,15,86,13,"isLogBoxInstalled"],[86,32,86,30],[87,6,87,4],[87,7,87,5],[88,6,89,4,"ignoreLogs"],[88,16,89,14,"ignoreLogs"],[88,17,89,15,"patterns"],[88,25,89,49],[88,27,89,57],[89,8,90,6,"LogBoxData"],[89,18,90,16],[89,19,90,17,"addIgnorePatterns"],[89,36,90,34],[89,37,90,35,"patterns"],[89,45,90,43],[89,46,90,44],[90,6,91,4],[90,7,91,5],[91,6,93,4,"ignoreAllLogs"],[91,19,93,17,"ignoreAllLogs"],[91,20,93,18,"value"],[91,25,93,33],[91,27,93,41],[92,8,94,6,"LogBoxData"],[92,18,94,16],[92,19,94,17,"setDisabled"],[92,30,94,28],[92,31,94,29,"value"],[92,36,94,34],[92,40,94,38],[92,44,94,42],[92,47,94,45],[92,51,94,49],[92,54,94,52,"value"],[92,59,94,57],[92,60,94,58],[93,6,95,4],[93,7,95,5],[94,6,97,4,"clearAllLogs"],[94,18,97,16,"clearAllLogs"],[94,19,97,16],[94,21,97,25],[95,8,98,6,"LogBoxData"],[95,18,98,16],[95,19,98,17,"clear"],[95,24,98,22],[95,25,98,23],[95,26,98,24],[96,6,99,4],[96,7,99,5],[97,6,101,4,"addLog"],[97,12,101,10,"addLog"],[97,13,101,11,"log"],[97,16,101,23],[97,18,101,31],[98,8,102,6],[98,12,102,10,"isLogBoxInstalled"],[98,29,102,27],[98,31,102,29],[99,10,103,8,"LogBoxData"],[99,20,103,18],[99,21,103,19,"addLog"],[99,27,103,25],[99,28,103,26,"log"],[99,31,103,29],[99,32,103,30],[100,8,104,6],[101,6,105,4],[101,7,105,5],[102,6,107,4,"addException"],[102,18,107,16,"addException"],[102,19,107,17,"error"],[102,24,107,45],[102,26,107,53],[103,8,108,6],[103,12,108,10,"isLogBoxInstalled"],[103,29,108,27],[103,31,108,29],[104,10,109,8,"LogBoxData"],[104,20,109,18],[104,21,109,19,"addException"],[104,33,109,31],[104,34,109,32,"error"],[104,39,109,37],[104,40,109,38],[105,8,110,6],[106,6,111,4],[107,4,112,2],[107,5,112,3],[108,4,114,2],[108,10,114,8,"isWarningModuleWarning"],[108,32,114,30],[108,35,114,33,"isWarningModuleWarning"],[108,36,114,34],[108,39,114,37,"args"],[108,43,114,46],[108,48,114,51],[109,6,115,4],[109,13,115,11],[109,20,115,18,"args"],[109,24,115,22],[109,25,115,23],[109,26,115,24],[109,27,115,25],[109,32,115,30],[109,40,115,38],[109,44,115,42,"args"],[109,48,115,46],[109,49,115,47],[109,50,115,48],[109,51,115,49],[109,52,115,50,"startsWith"],[109,62,115,60],[109,63,115,61],[109,74,115,72],[109,75,115,73],[110,4,116,2],[110,5,116,3],[111,4,118,2],[111,10,118,8,"registerError"],[111,23,118,21],[111,26,118,24,"registerError"],[111,27,118,25],[111,30,118,28,"args"],[111,34,118,66],[111,39,118,77],[112,6,119,4],[113,6,120,4],[113,10,120,8,"LogBoxData"],[113,20,120,18],[113,21,120,19,"isLogBoxErrorMessage"],[113,41,120,39],[113,42,120,40,"args"],[113,46,120,44],[113,47,120,45],[113,48,120,46],[113,49,120,47],[113,50,120,48],[113,52,120,50],[114,8,121,6,"originalConsoleError"],[114,28,121,26],[114,31,121,29],[114,34,121,32,"args"],[114,38,121,36],[114,39,121,37],[115,8,122,6],[116,6,123,4],[117,6,125,4],[117,10,125,8],[118,8,126,6],[118,12,126,10],[118,13,126,11,"isWarningModuleWarning"],[118,35,126,33],[118,36,126,34],[118,39,126,37,"args"],[118,43,126,41],[118,44,126,42],[118,46,126,44],[119,10,127,8],[120,10,128,8],[121,10,129,8],[122,10,130,8],[123,10,131,8],[124,10,132,8],[125,10,133,8],[126,10,134,8,"originalConsoleError"],[126,30,134,28],[126,33,134,31],[126,36,134,34,"args"],[126,40,134,38],[126,41,134,39],[127,10,135,8],[128,8,136,6],[129,8,138,6],[129,14,138,12],[130,10,138,14,"category"],[130,18,138,22],[131,10,138,24,"message"],[131,17,138,31],[132,10,138,33,"componentStack"],[133,8,138,48],[133,9,138,49],[133,12,138,52,"parseLogBoxLog"],[133,26,138,66],[133,27,138,67,"args"],[133,31,138,71],[133,32,138,72],[134,8,140,6],[134,12,140,10],[134,13,140,11,"LogBoxData"],[134,23,140,21],[134,24,140,22,"isMessageIgnored"],[134,40,140,38],[134,41,140,39,"message"],[134,48,140,46],[134,49,140,47,"content"],[134,56,140,54],[134,57,140,55],[134,59,140,57],[135,10,141,8],[136,10,142,8],[137,10,143,8],[137,16,143,14,"interpolated"],[137,28,143,26],[137,31,143,29,"parseInterpolation"],[137,49,143,47],[137,50,143,48,"args"],[137,54,143,52],[137,55,143,53],[138,10,144,8,"originalConsoleError"],[138,30,144,28],[138,33,144,31,"interpolated"],[138,45,144,43],[138,46,144,44,"message"],[138,53,144,51],[138,54,144,52,"content"],[138,61,144,59],[138,62,144,60],[139,10,146,8,"LogBoxData"],[139,20,146,18],[139,21,146,19,"addLog"],[139,27,146,25],[139,28,146,26],[140,12,147,10],[141,12,148,10],[142,12,149,10,"level"],[142,17,149,15],[142,19,149,17],[142,44,149,42],[142,45,149,43,"test"],[142,49,149,47],[142,50,149,48,"message"],[142,57,149,55],[142,58,149,56,"content"],[142,65,149,63],[142,66,149,64],[142,69,149,67],[142,76,149,74],[142,79,149,77],[142,86,149,84],[143,12,150,10,"category"],[143,20,150,18],[144,12,151,10,"message"],[144,19,151,17],[145,12,152,10,"componentStack"],[146,10,153,8],[146,11,153,9],[146,12,153,10],[147,8,154,6],[148,6,155,4],[148,7,155,5],[148,8,155,6],[148,15,155,13,"err"],[148,18,155,16],[148,20,155,18],[149,8,156,6,"LogBoxData"],[149,18,156,16],[149,19,156,17,"reportUnexpectedLogBoxError"],[149,46,156,44],[149,47,156,45,"err"],[149,50,156,48],[149,51,156,49],[150,6,157,4],[151,4,158,2],[151,5,158,3],[152,2,159,0],[152,3,159,1],[152,9,159,7],[153,4,160,2,"LogBox"],[153,10,160,8],[153,13,160,11],[154,6,161,4,"install"],[154,13,161,11,"install"],[154,14,161,11],[154,16,161,20],[154,17,161,21],[154,18,161,22],[155,6,162,4,"uninstall"],[155,15,162,13,"uninstall"],[155,16,162,13],[155,18,162,22],[155,19,162,23],[155,20,162,24],[156,6,163,4,"isInstalled"],[156,17,163,15,"isInstalled"],[156,18,163,15],[156,20,163,27],[157,8,164,6],[157,15,164,13],[157,20,164,18],[158,6,165,4],[158,7,165,5],[159,6,166,4,"ignoreLogs"],[159,16,166,14,"ignoreLogs"],[159,17,166,15,"_patterns"],[159,26,166,50],[159,28,166,58],[159,29,166,59],[159,30,166,60],[160,6,167,4,"ignoreAllLogs"],[160,19,167,17,"ignoreAllLogs"],[160,20,167,18,"_value"],[160,26,167,34],[160,28,167,42],[160,29,167,43],[160,30,167,44],[161,6,168,4,"clearAllLogs"],[161,18,168,16,"clearAllLogs"],[161,19,168,16],[161,21,168,25],[161,22,168,26],[161,23,168,27],[162,6,169,4,"addLog"],[162,12,169,10,"addLog"],[162,13,169,11,"_log"],[162,17,169,24],[162,19,169,32],[162,20,169,33],[162,21,169,34],[163,6,170,4,"addException"],[163,18,170,16,"addException"],[163,19,170,17,"_ex"],[163,22,170,43],[163,24,170,51],[163,25,170,52],[164,4,171,2],[164,5,171,3],[165,2,172,0],[166,2,172,1],[166,6,172,1,"_default"],[166,14,172,1],[166,17,172,1,"exports"],[166,24,172,1],[166,25,172,1,"default"],[166,32,172,1],[166,35,174,15,"LogBox"],[166,41,174,21],[167,0,174,21],[167,3]],"functionMap":{"names":["<global>","install","console.error","uninstall","isInstalled","ignoreLogs","ignoreAllLogs","clearAllLogs","addLog","addException","isWarningModuleWarning","registerError"],"mappings":"AAA;ICwC;wBCiB;SDE;KDQ;IGE;KHa;IIE;KJE;IKE;KLE;IME;KNE;IOE;KPE;IQE;KRI;ISE;KTI;iCUG;GVE;wBWE;GXwC;ICG,kBD;IGC,oBH;IIC;KJE;IKC,wDL;IMC,wCN;IOC,uBP;IQC,8BR;ISC,iDT"}},"type":"js/module"}]}