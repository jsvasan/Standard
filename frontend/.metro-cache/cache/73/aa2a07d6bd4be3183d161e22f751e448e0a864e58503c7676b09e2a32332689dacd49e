{"dependencies":[{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var invariant = require(_dependencyMap[0], \"invariant\");\n  function processAspectRatio(aspectRatio) {\n    if (typeof aspectRatio === 'number') {\n      return aspectRatio;\n    }\n    if (typeof aspectRatio !== 'string') {\n      if (__DEV__) {\n        invariant(!aspectRatio, 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var matches = aspectRatio.split('/').map(s => s.trim());\n    if (matches.includes('auto')) {\n      if (__DEV__) {\n        invariant(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n    if (__DEV__) {\n      invariant(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n    }\n    if (hasNonNumericValues) {\n      return;\n    }\n    if (matches.length === 2) {\n      return Number(matches[0]) / Number(matches[1]);\n    }\n    return Number(matches[0]);\n  }\n  var _default = processAspectRatio;\n});","lineCount":44,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,63,0,"Object"],[7,8,63,0],[7,9,63,0,"defineProperty"],[7,23,63,0],[7,24,63,0,"exports"],[7,31,63,0],[8,4,63,0,"enumerable"],[8,14,63,0],[9,4,63,0,"get"],[9,7,63,0],[9,18,63,0,"get"],[9,19,63,0],[10,6,63,0],[10,13,63,0,"_default"],[10,21,63,0],[11,4,63,0],[12,2,63,0],[13,2,13,0],[13,6,13,6,"invariant"],[13,15,13,15],[13,18,13,18,"require"],[13,25,13,25],[13,26,13,25,"_dependencyMap"],[13,40,13,25],[13,56,13,37],[13,57,13,38],[14,2,15,0],[14,11,15,9,"processAspectRatio"],[14,29,15,27,"processAspectRatio"],[14,30,15,28,"aspectRatio"],[14,41,15,57],[14,43,15,68],[15,4,16,2],[15,8,16,6],[15,15,16,13,"aspectRatio"],[15,26,16,24],[15,31,16,29],[15,39,16,37],[15,41,16,39],[16,6,17,4],[16,13,17,11,"aspectRatio"],[16,24,17,22],[17,4,18,2],[18,4,19,2],[18,8,19,6],[18,15,19,13,"aspectRatio"],[18,26,19,24],[18,31,19,29],[18,39,19,37],[18,41,19,39],[19,6,20,4],[19,10,20,8,"__DEV__"],[19,17,20,15],[19,19,20,17],[20,8,21,6,"invariant"],[20,17,21,15],[20,18,22,8],[20,19,22,9,"aspectRatio"],[20,30,22,20],[20,32,23,8],[20,111,23,87],[20,113,24,8,"aspectRatio"],[20,124,25,6],[20,125,25,7],[21,6,26,4],[22,6,27,4],[23,4,28,2],[24,4,30,2],[24,8,30,8,"matches"],[24,15,30,15],[24,18,30,18,"aspectRatio"],[24,29,30,29],[24,30,30,30,"split"],[24,35,30,35],[24,36,30,36],[24,39,30,39],[24,40,30,40],[24,41,30,41,"map"],[24,44,30,44],[24,45,30,45,"s"],[24,46,30,46],[24,50,30,50,"s"],[24,51,30,51],[24,52,30,52,"trim"],[24,56,30,56],[24,57,30,57],[24,58,30,58],[24,59,30,59],[25,4,32,2],[25,8,32,6,"matches"],[25,15,32,13],[25,16,32,14,"includes"],[25,24,32,22],[25,25,32,23],[25,31,32,29],[25,32,32,30],[25,34,32,32],[26,6,33,4],[26,10,33,8,"__DEV__"],[26,17,33,15],[26,19,33,17],[27,8,34,6,"invariant"],[27,17,34,15],[27,18,35,8,"matches"],[27,25,35,15],[27,26,35,16,"length"],[27,32,35,22],[27,34,36,8],[27,95,36,69],[27,97,37,8,"aspectRatio"],[27,108,38,6],[27,109,38,7],[28,6,39,4],[29,6,40,4],[30,4,41,2],[31,4,43,2],[31,8,43,8,"hasNonNumericValues"],[31,27,43,27],[31,30,43,30,"matches"],[31,37,43,37],[31,38,43,38,"some"],[31,42,43,42],[31,43,43,43,"n"],[31,44,43,44],[31,48,43,48,"Number"],[31,54,43,54],[31,55,43,55,"isNaN"],[31,60,43,60],[31,61,43,61,"Number"],[31,67,43,67],[31,68,43,68,"n"],[31,69,43,69],[31,70,43,70],[31,71,43,71],[31,72,43,72],[32,4,44,2],[32,8,44,6,"__DEV__"],[32,15,44,13],[32,17,44,15],[33,6,45,4,"invariant"],[33,15,45,13],[33,16,46,6],[33,17,46,7,"hasNonNumericValues"],[33,36,46,26],[33,41,46,31,"matches"],[33,48,46,38],[33,49,46,39,"length"],[33,55,46,45],[33,60,46,50],[33,61,46,51],[33,65,46,55,"matches"],[33,72,46,62],[33,73,46,63,"length"],[33,79,46,69],[33,84,46,74],[33,85,46,75],[33,86,46,76],[33,88,47,6],[33,167,47,85],[33,169,48,6,"aspectRatio"],[33,180,49,4],[33,181,49,5],[34,4,50,2],[35,4,52,2],[35,8,52,6,"hasNonNumericValues"],[35,27,52,25],[35,29,52,27],[36,6,53,4],[37,4,54,2],[38,4,56,2],[38,8,56,6,"matches"],[38,15,56,13],[38,16,56,14,"length"],[38,22,56,20],[38,27,56,25],[38,28,56,26],[38,30,56,28],[39,6,57,4],[39,13,57,11,"Number"],[39,19,57,17],[39,20,57,18,"matches"],[39,27,57,25],[39,28,57,26],[39,29,57,27],[39,30,57,28],[39,31,57,29],[39,34,57,32,"Number"],[39,40,57,38],[39,41,57,39,"matches"],[39,48,57,46],[39,49,57,47],[39,50,57,48],[39,51,57,49],[39,52,57,50],[40,4,58,2],[41,4,60,2],[41,11,60,9,"Number"],[41,17,60,15],[41,18,60,16,"matches"],[41,25,60,23],[41,26,60,24],[41,27,60,25],[41,28,60,26],[41,29,60,27],[42,2,61,0],[43,2,63,0],[43,6,63,0,"_default"],[43,14,63,0],[43,17,63,15,"processAspectRatio"],[43,35,63,33],[44,0,63,34],[44,3]],"functionMap":{"names":["<global>","processAspectRatio","aspectRatio.split.map$argument_0","matches.some$argument_0"],"mappings":"AAA;ACc;6CCe,aD;2CEa,4BF;CDkB"},"hasCjsExports":false},"type":"js/module"}]}