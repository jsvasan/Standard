{"dependencies":[{"name":"./buildUrlForBundle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":173},"end":{"line":7,"column":56,"index":229}}],"key":"1NjLLI7lHLx7L+G4PSbRsIv0MOs=","exportNames":["*"]}},{"name":"./fetchThenEval","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":230},"end":{"line":8,"column":53,"index":283}}],"key":"CkpSmm7Z9XNGaSYMpIQ5HZ169IA=","exportNames":["*"]}},{"name":"../HMRClient","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":24,"index":813},"end":{"line":22,"column":47,"index":836}}],"key":"hi7i7XkJpyPFNy1IRZ0FaGTSaqg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.loadBundleAsync = loadBundleAsync;\n  var _buildUrlForBundle = require(_dependencyMap[0], \"./buildUrlForBundle\");\n  var _fetchThenEval = require(_dependencyMap[1], \"./fetchThenEval\");\n  /**\n   * Copyright Â© 2022 650 Industries.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  /**\n   * Load a bundle for a URL using fetch + eval on native and script tag injection on web.\n   *\n   * @param bundlePath Given a statement like `import('./Bacon')` `bundlePath` would be `Bacon.bundle?params=from-metro`.\n   */\n  async function loadBundleAsync(bundlePath) {\n    const requestUrl = (0, _buildUrlForBundle.buildUrlForBundle)(bundlePath);\n    if (process.env.NODE_ENV === 'production') {\n      return (0, _fetchThenEval.fetchThenEvalAsync)(requestUrl);\n    } else {\n      return (0, _fetchThenEval.fetchThenEvalAsync)(requestUrl).then(() => {\n        const HMRClient = require(_dependencyMap[2], \"../HMRClient\").default;\n        HMRClient.registerBundle(requestUrl);\n      });\n    }\n  }\n});","lineCount":31,"map":[[6,2,7,0],[6,6,7,0,"_buildUrlForBundle"],[6,24,7,0],[6,27,7,0,"require"],[6,34,7,0],[6,35,7,0,"_dependencyMap"],[6,49,7,0],[7,2,8,0],[7,6,8,0,"_fetchThenEval"],[7,20,8,0],[7,23,8,0,"require"],[7,30,8,0],[7,31,8,0,"_dependencyMap"],[7,45,8,0],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[15,2,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,2,15,7],[20,17,15,22,"loadBundleAsync"],[20,32,15,37,"loadBundleAsync"],[20,33,15,38,"bundlePath"],[20,43,15,56],[20,45,15,73],[21,4,16,2],[21,10,16,8,"requestUrl"],[21,20,16,18],[21,23,16,21],[21,27,16,21,"buildUrlForBundle"],[21,63,16,38],[21,65,16,39,"bundlePath"],[21,75,16,49],[21,76,16,50],[22,4,18,2],[22,8,18,6,"process"],[22,15,18,13],[22,16,18,14,"env"],[22,19,18,17],[22,20,18,18,"NODE_ENV"],[22,28,18,26],[22,33,18,31],[22,45,18,43],[22,47,18,45],[23,6,19,4],[23,13,19,11],[23,17,19,11,"fetchThenEvalAsync"],[23,50,19,29],[23,52,19,30,"requestUrl"],[23,62,19,40],[23,63,19,41],[24,4,20,2],[24,5,20,3],[24,11,20,9],[25,6,21,4],[25,13,21,11],[25,17,21,11,"fetchThenEvalAsync"],[25,50,21,29],[25,52,21,30,"requestUrl"],[25,62,21,40],[25,63,21,41],[25,64,21,42,"then"],[25,68,21,46],[25,69,21,47],[25,75,21,53],[26,8,22,6],[26,14,22,12,"HMRClient"],[26,23,22,21],[26,26,22,24,"require"],[26,33,22,31],[26,34,22,31,"_dependencyMap"],[26,48,22,31],[26,67,22,46],[26,68,22,47],[26,69,22,48,"default"],[26,76,22,96],[27,8,23,6,"HMRClient"],[27,17,23,15],[27,18,23,16,"registerBundle"],[27,32,23,30],[27,33,23,31,"requestUrl"],[27,43,23,41],[27,44,23,42],[28,6,24,4],[28,7,24,5],[28,8,24,6],[29,4,25,2],[30,2,26,0],[31,0,26,1],[31,3]],"functionMap":{"names":["<global>","loadBundleAsync","fetchThenEvalAsync.then$argument_0"],"mappings":"AAA;OCc;+CCM;KDG;CDE"}},"type":"js/module"}]}