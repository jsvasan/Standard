{"dependencies":[{"name":"./emptyFunction","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":20,"index":221},"end":{"line":10,"column":46,"index":247}}],"key":"gJNv0bQmPMiKeekrOuLvpREIGCI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   */\n  'use strict';\n\n  var emptyFunction = require(_dependencyMap[0], \"./emptyFunction\");\n  /**\n   * Similar to invariant but only logs a warning if the condition is not met.\n   * This can be used to log issues in development environments in critical\n   * paths. Removing the logging code for production environments will keep the\n   * same logic and follow the same code paths.\n   */\n\n  function printWarning(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n  var warning = process.env.NODE_ENV !== \"production\" ? function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n      printWarning.apply(void 0, [format].concat(args));\n    }\n  } : emptyFunction;\n  module.exports = warning;\n});","lineCount":49,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,2,8,0],[9,14,8,12],[11,2,10,0],[11,6,10,4,"emptyFunction"],[11,19,10,17],[11,22,10,20,"require"],[11,29,10,27],[11,30,10,27,"_dependencyMap"],[11,44,10,27],[11,66,10,45],[11,67,10,46],[12,2,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[19,2,19,0],[19,11,19,9,"printWarning"],[19,23,19,21,"printWarning"],[19,24,19,22,"format"],[19,30,19,28],[19,32,19,30],[20,4,20,2],[20,9,20,7],[20,13,20,11,"_len"],[20,17,20,15],[20,20,20,18,"arguments"],[20,29,20,27],[20,30,20,28,"length"],[20,36,20,34],[20,38,20,36,"args"],[20,42,20,40],[20,45,20,43],[20,49,20,47,"Array"],[20,54,20,52],[20,55,20,53,"_len"],[20,59,20,57],[20,62,20,60],[20,63,20,61],[20,66,20,64,"_len"],[20,70,20,68],[20,73,20,71],[20,74,20,72],[20,77,20,75],[20,78,20,76],[20,79,20,77],[20,81,20,79,"_key"],[20,85,20,83],[20,88,20,86],[20,89,20,87],[20,91,20,89,"_key"],[20,95,20,93],[20,98,20,96,"_len"],[20,102,20,100],[20,104,20,102,"_key"],[20,108,20,106],[20,110,20,108],[20,112,20,110],[21,6,21,4,"args"],[21,10,21,8],[21,11,21,9,"_key"],[21,15,21,13],[21,18,21,16],[21,19,21,17],[21,20,21,18],[21,23,21,21,"arguments"],[21,32,21,30],[21,33,21,31,"_key"],[21,37,21,35],[21,38,21,36],[22,4,22,2],[23,4,24,2],[23,8,24,6,"argIndex"],[23,16,24,14],[23,19,24,17],[23,20,24,18],[24,4,25,2],[24,8,25,6,"message"],[24,15,25,13],[24,18,25,16],[24,29,25,27],[24,32,25,30,"format"],[24,38,25,36],[24,39,25,37,"replace"],[24,46,25,44],[24,47,25,45],[24,52,25,50],[24,54,25,52],[24,66,25,64],[25,6,26,4],[25,13,26,11,"args"],[25,17,26,15],[25,18,26,16,"argIndex"],[25,26,26,24],[25,28,26,26],[25,29,26,27],[26,4,27,2],[26,5,27,3],[26,6,27,4],[27,4,29,2],[27,8,29,6],[27,15,29,13,"console"],[27,22,29,20],[27,27,29,25],[27,38,29,36],[27,40,29,38],[28,6,30,4,"console"],[28,13,30,11],[28,14,30,12,"error"],[28,19,30,17],[28,20,30,18,"message"],[28,27,30,25],[28,28,30,26],[29,4,31,2],[30,4,33,2],[30,8,33,6],[31,6,34,4],[32,6,35,4],[33,6,36,4],[34,6,37,4],[34,12,37,10],[34,16,37,14,"Error"],[34,21,37,19],[34,22,37,20,"message"],[34,29,37,27],[34,30,37,28],[35,4,38,2],[35,5,38,3],[35,6,38,4],[35,13,38,11,"x"],[35,14,38,12],[35,16,38,14],[35,17,38,15],[36,2,39,0],[37,2,41,0],[37,6,41,4,"warning"],[37,13,41,11],[37,16,41,14,"process"],[37,23,41,21],[37,24,41,22,"env"],[37,27,41,25],[37,28,41,26,"NODE_ENV"],[37,36,41,34],[37,41,41,39],[37,53,41,51],[37,56,41,54],[37,66,41,64,"condition"],[37,75,41,73],[37,77,41,75,"format"],[37,83,41,81],[37,85,41,83],[38,4,42,2],[38,8,42,6,"format"],[38,14,42,12],[38,19,42,17,"undefined"],[38,28,42,26],[38,30,42,28],[39,6,43,4],[39,12,43,10],[39,16,43,14,"Error"],[39,21,43,19],[39,22,43,20],[39,81,43,79],[39,84,43,82],[39,102,43,100],[39,103,43,101],[40,4,44,2],[41,4,46,2],[41,8,46,6],[41,9,46,7,"condition"],[41,18,46,16],[41,20,46,18],[42,6,47,4],[42,11,47,9],[42,15,47,13,"_len2"],[42,20,47,18],[42,23,47,21,"arguments"],[42,32,47,30],[42,33,47,31,"length"],[42,39,47,37],[42,41,47,39,"args"],[42,45,47,43],[42,48,47,46],[42,52,47,50,"Array"],[42,57,47,55],[42,58,47,56,"_len2"],[42,63,47,61],[42,66,47,64],[42,67,47,65],[42,70,47,68,"_len2"],[42,75,47,73],[42,78,47,76],[42,79,47,77],[42,82,47,80],[42,83,47,81],[42,84,47,82],[42,86,47,84,"_key2"],[42,91,47,89],[42,94,47,92],[42,95,47,93],[42,97,47,95,"_key2"],[42,102,47,100],[42,105,47,103,"_len2"],[42,110,47,108],[42,112,47,110,"_key2"],[42,117,47,115],[42,119,47,117],[42,121,47,119],[43,8,48,6,"args"],[43,12,48,10],[43,13,48,11,"_key2"],[43,18,48,16],[43,21,48,19],[43,22,48,20],[43,23,48,21],[43,26,48,24,"arguments"],[43,35,48,33],[43,36,48,34,"_key2"],[43,41,48,39],[43,42,48,40],[44,6,49,4],[45,6,51,4,"printWarning"],[45,18,51,16],[45,19,51,17,"apply"],[45,24,51,22],[45,25,51,23],[45,30,51,28],[45,31,51,29],[45,33,51,31],[45,34,51,32,"format"],[45,40,51,38],[45,41,51,39],[45,42,51,40,"concat"],[45,48,51,46],[45,49,51,47,"args"],[45,53,51,51],[45,54,51,52],[45,55,51,53],[46,4,52,2],[47,2,53,0],[47,3,53,1],[47,6,53,4,"emptyFunction"],[47,19,53,17],[48,2,54,0,"module"],[48,8,54,6],[48,9,54,7,"exports"],[48,16,54,14],[48,19,54,17,"warning"],[48,26,54,24],[49,0,54,25],[49,3]],"functionMap":{"names":["<global>","printWarning","format.replace$argument_1","<anonymous>"],"mappings":"AAA;ACkB;oDCM;GDE;CDY;sDGE;CHY"}},"type":"js/module"}]}