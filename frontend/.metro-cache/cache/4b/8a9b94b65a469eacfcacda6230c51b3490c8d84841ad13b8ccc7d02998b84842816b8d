{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  /*\n   * @returns {bool} true if different, false if equal\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var deepDiffer = function deepDiffer(one, two, maxDepth) {\n    if (maxDepth === void 0) {\n      maxDepth = -1;\n    }\n    if (maxDepth === 0) {\n      return true;\n    }\n    if (one === two) {\n      // Short circuit on identical object references instead of traversing them.\n      return false;\n    }\n    if (typeof one === 'function' && typeof two === 'function') {\n      // We consider all functions equal\n      return false;\n    }\n    if (typeof one !== 'object' || one === null) {\n      // Primitives can be directly compared\n      return one !== two;\n    }\n    if (typeof two !== 'object' || two === null) {\n      // We know they are different because the previous case would have triggered\n      // otherwise.\n      return true;\n    }\n    if (one.constructor !== two.constructor) {\n      return true;\n    }\n    if (Array.isArray(one)) {\n      // We know two is also an array because the constructors are equal\n      var len = one.length;\n      if (two.length !== len) {\n        return true;\n      }\n      for (var ii = 0; ii < len; ii++) {\n        if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n          return true;\n        }\n      }\n    } else {\n      for (var key in one) {\n        if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n          return true;\n        }\n      }\n      for (var twoKey in two) {\n        // The only case we haven't checked yet is keys that are in two but aren't\n        // in one, which means they are different.\n        if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  var _default = exports.default = deepDiffer;\n});","lineCount":76,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[15,0,14,0],[16,0,15,0],[17,2,13,0,"Object"],[17,8,13,0],[17,9,13,0,"defineProperty"],[17,23,13,0],[17,24,13,0,"exports"],[17,31,13,0],[18,4,13,0,"value"],[18,9,13,0],[19,2,13,0],[20,2,13,0,"exports"],[20,9,13,0],[20,10,13,0,"default"],[20,17,13,0],[21,2,16,0],[21,6,16,4,"deepDiffer"],[21,16,16,14],[21,19,16,17],[21,28,16,26,"deepDiffer"],[21,38,16,36,"deepDiffer"],[21,39,16,37,"one"],[21,42,16,40],[21,44,16,42,"two"],[21,47,16,45],[21,49,16,47,"maxDepth"],[21,57,16,55],[21,59,16,57],[22,4,17,2],[22,8,17,6,"maxDepth"],[22,16,17,14],[22,21,17,19],[22,26,17,24],[22,27,17,25],[22,29,17,27],[23,6,18,4,"maxDepth"],[23,14,18,12],[23,17,18,15],[23,18,18,16],[23,19,18,17],[24,4,19,2],[25,4,20,2],[25,8,20,6,"maxDepth"],[25,16,20,14],[25,21,20,19],[25,22,20,20],[25,24,20,22],[26,6,21,4],[26,13,21,11],[26,17,21,15],[27,4,22,2],[28,4,23,2],[28,8,23,6,"one"],[28,11,23,9],[28,16,23,14,"two"],[28,19,23,17],[28,21,23,19],[29,6,24,4],[30,6,25,4],[30,13,25,11],[30,18,25,16],[31,4,26,2],[32,4,27,2],[32,8,27,6],[32,15,27,13,"one"],[32,18,27,16],[32,23,27,21],[32,33,27,31],[32,37,27,35],[32,44,27,42,"two"],[32,47,27,45],[32,52,27,50],[32,62,27,60],[32,64,27,62],[33,6,28,4],[34,6,29,4],[34,13,29,11],[34,18,29,16],[35,4,30,2],[36,4,31,2],[36,8,31,6],[36,15,31,13,"one"],[36,18,31,16],[36,23,31,21],[36,31,31,29],[36,35,31,33,"one"],[36,38,31,36],[36,43,31,41],[36,47,31,45],[36,49,31,47],[37,6,32,4],[38,6,33,4],[38,13,33,11,"one"],[38,16,33,14],[38,21,33,19,"two"],[38,24,33,22],[39,4,34,2],[40,4,35,2],[40,8,35,6],[40,15,35,13,"two"],[40,18,35,16],[40,23,35,21],[40,31,35,29],[40,35,35,33,"two"],[40,38,35,36],[40,43,35,41],[40,47,35,45],[40,49,35,47],[41,6,36,4],[42,6,37,4],[43,6,38,4],[43,13,38,11],[43,17,38,15],[44,4,39,2],[45,4,40,2],[45,8,40,6,"one"],[45,11,40,9],[45,12,40,10,"constructor"],[45,23,40,21],[45,28,40,26,"two"],[45,31,40,29],[45,32,40,30,"constructor"],[45,43,40,41],[45,45,40,43],[46,6,41,4],[46,13,41,11],[46,17,41,15],[47,4,42,2],[48,4,43,2],[48,8,43,6,"Array"],[48,13,43,11],[48,14,43,12,"isArray"],[48,21,43,19],[48,22,43,20,"one"],[48,25,43,23],[48,26,43,24],[48,28,43,26],[49,6,44,4],[50,6,45,4],[50,10,45,8,"len"],[50,13,45,11],[50,16,45,14,"one"],[50,19,45,17],[50,20,45,18,"length"],[50,26,45,24],[51,6,46,4],[51,10,46,8,"two"],[51,13,46,11],[51,14,46,12,"length"],[51,20,46,18],[51,25,46,23,"len"],[51,28,46,26],[51,30,46,28],[52,8,47,6],[52,15,47,13],[52,19,47,17],[53,6,48,4],[54,6,49,4],[54,11,49,9],[54,15,49,13,"ii"],[54,17,49,15],[54,20,49,18],[54,21,49,19],[54,23,49,21,"ii"],[54,25,49,23],[54,28,49,26,"len"],[54,31,49,29],[54,33,49,31,"ii"],[54,35,49,33],[54,37,49,35],[54,39,49,37],[55,8,50,6],[55,12,50,10,"deepDiffer"],[55,22,50,20],[55,23,50,21,"one"],[55,26,50,24],[55,27,50,25,"ii"],[55,29,50,27],[55,30,50,28],[55,32,50,30,"two"],[55,35,50,33],[55,36,50,34,"ii"],[55,38,50,36],[55,39,50,37],[55,41,50,39,"maxDepth"],[55,49,50,47],[55,52,50,50],[55,53,50,51],[55,54,50,52],[55,56,50,54],[56,10,51,8],[56,17,51,15],[56,21,51,19],[57,8,52,6],[58,6,53,4],[59,4,54,2],[59,5,54,3],[59,11,54,9],[60,6,55,4],[60,11,55,9],[60,15,55,13,"key"],[60,18,55,16],[60,22,55,20,"one"],[60,25,55,23],[60,27,55,25],[61,8,56,6],[61,12,56,10,"deepDiffer"],[61,22,56,20],[61,23,56,21,"one"],[61,26,56,24],[61,27,56,25,"key"],[61,30,56,28],[61,31,56,29],[61,33,56,31,"two"],[61,36,56,34],[61,37,56,35,"key"],[61,40,56,38],[61,41,56,39],[61,43,56,41,"maxDepth"],[61,51,56,49],[61,54,56,52],[61,55,56,53],[61,56,56,54],[61,58,56,56],[62,10,57,8],[62,17,57,15],[62,21,57,19],[63,8,58,6],[64,6,59,4],[65,6,60,4],[65,11,60,9],[65,15,60,13,"twoKey"],[65,21,60,19],[65,25,60,23,"two"],[65,28,60,26],[65,30,60,28],[66,8,61,6],[67,8,62,6],[68,8,63,6],[68,12,63,10,"one"],[68,15,63,13],[68,16,63,14,"twoKey"],[68,22,63,20],[68,23,63,21],[68,28,63,26,"undefined"],[68,37,63,35],[68,41,63,39,"two"],[68,44,63,42],[68,45,63,43,"twoKey"],[68,51,63,49],[68,52,63,50],[68,57,63,55,"undefined"],[68,66,63,64],[68,68,63,66],[69,10,64,8],[69,17,64,15],[69,21,64,19],[70,8,65,6],[71,6,66,4],[72,4,67,2],[73,4,68,2],[73,11,68,9],[73,16,68,14],[74,2,69,0],[74,3,69,1],[75,2,69,2],[75,6,69,2,"_default"],[75,14,69,2],[75,17,69,2,"exports"],[75,24,69,2],[75,25,69,2,"default"],[75,32,69,2],[75,35,70,15,"deepDiffer"],[75,45,70,25],[76,0,70,25],[76,3]],"functionMap":{"names":["<global>","deepDiffer"],"mappings":"AAA;iBCe;CDqD"}},"type":"js/module"}]}