{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":61,"index":286}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.LogBoxLog = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var LogBoxSymbolication = _interopRequireWildcard(require(_dependencyMap[3], \"./LogBoxSymbolication\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  function componentStackToStack(componentStack) {\n    return componentStack.map(stack => ({\n      file: stack.fileName,\n      methodName: stack.content,\n      lineNumber: stack.location?.row ?? 0,\n      column: stack.location?.column ?? 0,\n      arguments: []\n    }));\n  }\n  var LogBoxLog = exports.LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck2.default)(this, LogBoxLog);\n      this.symbolicated = {\n        stack: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        },\n        component: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        }\n      };\n      this.callbacks = new Map();\n      this.componentStackCache = null;\n      this.level = data.level;\n      this.type = data.type ?? 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = data.symbolicated ?? this.symbolicated;\n    }\n    return (0, _createClass2.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack(type) {\n        if (this.symbolicated[type].status === 'COMPLETE') {\n          return this.symbolicated[type].stack;\n        }\n        return this.getStack(type);\n      }\n    }, {\n      key: \"flushCallbacks\",\n      value: function flushCallbacks(type) {\n        var callbacks = this.callbacks.get(type);\n        var status = this.symbolicated[type].status;\n        if (callbacks) {\n          for (var callback of callbacks) {\n            callback(status);\n          }\n          callbacks.clear();\n        }\n      }\n    }, {\n      key: \"pushCallback\",\n      value: function pushCallback(type, callback) {\n        var callbacks = this.callbacks.get(type);\n        if (!callbacks) {\n          callbacks = new Set();\n          this.callbacks.set(type, callbacks);\n        }\n        callbacks.add(callback);\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(type, callback) {\n        this._symbolicate(type, true, callback);\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(type, callback) {\n        this._symbolicate(type, false, callback);\n      }\n    }, {\n      key: \"_symbolicate\",\n      value: function _symbolicate(type, retry, callback) {\n        if (callback) {\n          this.pushCallback(type, callback);\n        }\n        var status = this.symbolicated[type].status;\n        if (status === 'COMPLETE') {\n          return this.flushCallbacks(type);\n        }\n        if (retry) {\n          LogBoxSymbolication.deleteStack(this.getStack(type));\n          this.handleSymbolicate(type);\n        } else {\n          if (status === 'NONE') {\n            this.handleSymbolicate(type);\n          }\n        }\n      }\n    }, {\n      key: \"getStack\",\n      value: function getStack(type) {\n        if (type === 'component') {\n          if (this.componentStackCache == null) {\n            this.componentStackCache = componentStackToStack(this.componentStack);\n          }\n          return this.componentStackCache;\n        }\n        return this.stack;\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(type) {\n        if (type === 'component' && !this.componentStack?.length) {\n          return;\n        }\n        if (this.symbolicated[type].status !== 'PENDING') {\n          this.updateStatus(type, null, null, null);\n          LogBoxSymbolication.symbolicate(ensureStackFilesHaveParams(this.getStack(type))).then(data => {\n            this.updateStatus(type, null, data?.stack, data?.codeFrame);\n          }, error => {\n            this.updateStatus(type, error, null, null);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(type, error, stack, codeFrame) {\n        var lastStatus = this.symbolicated[type].status;\n        if (error != null) {\n          this.symbolicated[type] = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated[type] = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated[type] = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        var status = this.symbolicated[type].status;\n        if (lastStatus !== status) {\n          if (['COMPLETE', 'FAILED'].includes(status)) {\n            this.flushCallbacks(type);\n          }\n        }\n      }\n    }]);\n  }(); // Sometime the web stacks don't have correct query params, this can lead to Metro errors when it attempts to resolve without a platform.\n  // This will attempt to reconcile the issue by adding the current query params to the stack frames if they exist, or fallback to some common defaults.\n  function ensureStackFilesHaveParams(stack) {\n    var currentSrc = typeof document !== 'undefined' && document.currentScript ? 'src' in document.currentScript && document.currentScript.src || null : null;\n    var currentParams = currentSrc ? new URLSearchParams(currentSrc) : new URLSearchParams({\n      platform: 'web',\n      dev: String(__DEV__)\n    });\n    return stack.map(frame => {\n      if (!frame.file?.startsWith('http') ||\n      // Account for Metro malformed URLs\n      frame.file.includes('&platform=')) return frame;\n      var url = new URL(frame.file);\n      if (url.searchParams.has('platform')) {\n        return frame;\n      }\n      currentParams.forEach((value, key) => {\n        if (url.searchParams.has(key)) return;\n        url.searchParams.set(key, value);\n      });\n      return {\n        ...frame,\n        file: url.toString()\n      };\n    });\n  }\n});","lineCount":206,"map":[[9,2,9,0],[9,6,9,0,"LogBoxSymbolication"],[9,25,9,0],[9,28,9,0,"_interopRequireWildcard"],[9,51,9,0],[9,52,9,0,"require"],[9,59,9,0],[9,60,9,0,"_dependencyMap"],[9,74,9,0],[10,2,9,61],[10,11,9,61,"_interopRequireWildcard"],[10,35,9,61,"e"],[10,36,9,61],[10,38,9,61,"t"],[10,39,9,61],[10,68,9,61,"WeakMap"],[10,75,9,61],[10,81,9,61,"r"],[10,82,9,61],[10,89,9,61,"WeakMap"],[10,96,9,61],[10,100,9,61,"n"],[10,101,9,61],[10,108,9,61,"WeakMap"],[10,115,9,61],[10,127,9,61,"_interopRequireWildcard"],[10,150,9,61],[10,162,9,61,"_interopRequireWildcard"],[10,163,9,61,"e"],[10,164,9,61],[10,166,9,61,"t"],[10,167,9,61],[10,176,9,61,"t"],[10,177,9,61],[10,181,9,61,"e"],[10,182,9,61],[10,186,9,61,"e"],[10,187,9,61],[10,188,9,61,"__esModule"],[10,198,9,61],[10,207,9,61,"e"],[10,208,9,61],[10,214,9,61,"o"],[10,215,9,61],[10,217,9,61,"i"],[10,218,9,61],[10,220,9,61,"f"],[10,221,9,61],[10,226,9,61,"__proto__"],[10,235,9,61],[10,243,9,61,"default"],[10,250,9,61],[10,252,9,61,"e"],[10,253,9,61],[10,270,9,61,"e"],[10,271,9,61],[10,294,9,61,"e"],[10,295,9,61],[10,320,9,61,"e"],[10,321,9,61],[10,330,9,61,"f"],[10,331,9,61],[10,337,9,61,"o"],[10,338,9,61],[10,341,9,61,"t"],[10,342,9,61],[10,345,9,61,"n"],[10,346,9,61],[10,349,9,61,"r"],[10,350,9,61],[10,358,9,61,"o"],[10,359,9,61],[10,360,9,61,"has"],[10,363,9,61],[10,364,9,61,"e"],[10,365,9,61],[10,375,9,61,"o"],[10,376,9,61],[10,377,9,61,"get"],[10,380,9,61],[10,381,9,61,"e"],[10,382,9,61],[10,385,9,61,"o"],[10,386,9,61],[10,387,9,61,"set"],[10,390,9,61],[10,391,9,61,"e"],[10,392,9,61],[10,394,9,61,"f"],[10,395,9,61],[10,409,9,61,"_t"],[10,411,9,61],[10,415,9,61,"e"],[10,416,9,61],[10,432,9,61,"_t"],[10,434,9,61],[10,441,9,61,"hasOwnProperty"],[10,455,9,61],[10,456,9,61,"call"],[10,460,9,61],[10,461,9,61,"e"],[10,462,9,61],[10,464,9,61,"_t"],[10,466,9,61],[10,473,9,61,"i"],[10,474,9,61],[10,478,9,61,"o"],[10,479,9,61],[10,482,9,61,"Object"],[10,488,9,61],[10,489,9,61,"defineProperty"],[10,503,9,61],[10,508,9,61,"Object"],[10,514,9,61],[10,515,9,61,"getOwnPropertyDescriptor"],[10,539,9,61],[10,540,9,61,"e"],[10,541,9,61],[10,543,9,61,"_t"],[10,545,9,61],[10,552,9,61,"i"],[10,553,9,61],[10,554,9,61,"get"],[10,557,9,61],[10,561,9,61,"i"],[10,562,9,61],[10,563,9,61,"set"],[10,566,9,61],[10,570,9,61,"o"],[10,571,9,61],[10,572,9,61,"f"],[10,573,9,61],[10,575,9,61,"_t"],[10,577,9,61],[10,579,9,61,"i"],[10,580,9,61],[10,584,9,61,"f"],[10,585,9,61],[10,586,9,61,"_t"],[10,588,9,61],[10,592,9,61,"e"],[10,593,9,61],[10,594,9,61,"_t"],[10,596,9,61],[10,607,9,61,"f"],[10,608,9,61],[10,613,9,61,"e"],[10,614,9,61],[10,616,9,61,"t"],[10,617,9,61],[11,2,1,0],[12,0,2,0],[13,0,3,0],[14,0,4,0],[15,0,5,0],[16,0,6,0],[17,0,7,0],[19,2,30,0],[19,11,30,9,"componentStackToStack"],[19,32,30,30,"componentStackToStack"],[19,33,30,31,"componentStack"],[19,47,30,61],[19,49,30,70],[20,4,31,2],[20,11,31,9,"componentStack"],[20,25,31,23],[20,26,31,24,"map"],[20,29,31,27],[20,30,31,29,"stack"],[20,35,31,34],[20,40,31,40],[21,6,32,4,"file"],[21,10,32,8],[21,12,32,10,"stack"],[21,17,32,15],[21,18,32,16,"fileName"],[21,26,32,24],[22,6,33,4,"methodName"],[22,16,33,14],[22,18,33,16,"stack"],[22,23,33,21],[22,24,33,22,"content"],[22,31,33,29],[23,6,34,4,"lineNumber"],[23,16,34,14],[23,18,34,16,"stack"],[23,23,34,21],[23,24,34,22,"location"],[23,32,34,30],[23,34,34,32,"row"],[23,37,34,35],[23,41,34,39],[23,42,34,40],[24,6,35,4,"column"],[24,12,35,10],[24,14,35,12,"stack"],[24,19,35,17],[24,20,35,18,"location"],[24,28,35,26],[24,30,35,28,"column"],[24,36,35,34],[24,40,35,38],[24,41,35,39],[25,6,36,4,"arguments"],[25,15,36,13],[25,17,36,15],[26,4,37,2],[26,5,37,3],[26,6,37,4],[26,7,37,5],[27,2,38,0],[28,2,38,1],[28,6,48,13,"LogBoxLog"],[28,15,48,22],[28,18,48,22,"exports"],[28,25,48,22],[28,26,48,22,"LogBoxLog"],[28,35,48,22],[29,4,73,2],[29,13,73,2,"LogBoxLog"],[29,23,74,4,"data"],[29,27,76,5],[29,29,77,4],[30,6,77,4],[30,10,77,4,"_classCallCheck2"],[30,26,77,4],[30,27,77,4,"default"],[30,34,77,4],[30,42,77,4,"LogBoxLog"],[30,51,77,4],[31,6,77,4],[31,11,58,2,"symbolicated"],[31,23,58,14],[31,26,58,57],[32,8,59,4,"stack"],[32,13,59,9],[32,15,59,11],[33,10,60,6,"error"],[33,15,60,11],[33,17,60,13],[33,21,60,17],[34,10,61,6,"stack"],[34,15,61,11],[34,17,61,13],[34,21,61,17],[35,10,62,6,"status"],[35,16,62,12],[35,18,62,14],[36,8,63,4],[36,9,63,5],[37,8,64,4,"component"],[37,17,64,13],[37,19,64,15],[38,10,65,6,"error"],[38,15,65,11],[38,17,65,13],[38,21,65,17],[39,10,66,6,"stack"],[39,15,66,11],[39,17,66,13],[39,21,66,17],[40,10,67,6,"status"],[40,16,67,12],[40,18,67,14],[41,8,68,4],[42,6,69,2],[42,7,69,3],[43,6,69,3],[43,11,71,10,"callbacks"],[43,20,71,19],[43,23,71,66],[43,27,71,70,"Map"],[43,30,71,73],[43,31,71,74],[43,32,71,75],[44,6,71,75],[44,11,153,10,"componentStackCache"],[44,30,153,29],[44,33,153,46],[44,37,153,50],[45,6,78,4],[45,10,78,8],[45,11,78,9,"level"],[45,16,78,14],[45,19,78,17,"data"],[45,23,78,21],[45,24,78,22,"level"],[45,29,78,27],[46,6,79,4],[46,10,79,8],[46,11,79,9,"type"],[46,15,79,13],[46,18,79,16,"data"],[46,22,79,20],[46,23,79,21,"type"],[46,27,79,25],[46,31,79,29],[46,38,79,36],[47,6,80,4],[47,10,80,8],[47,11,80,9,"message"],[47,18,80,16],[47,21,80,19,"data"],[47,25,80,23],[47,26,80,24,"message"],[47,33,80,31],[48,6,81,4],[48,10,81,8],[48,11,81,9,"stack"],[48,16,81,14],[48,19,81,17,"data"],[48,23,81,21],[48,24,81,22,"stack"],[48,29,81,27],[49,6,82,4],[49,10,82,8],[49,11,82,9,"category"],[49,19,82,17],[49,22,82,20,"data"],[49,26,82,24],[49,27,82,25,"category"],[49,35,82,33],[50,6,83,4],[50,10,83,8],[50,11,83,9,"componentStack"],[50,25,83,23],[50,28,83,26,"data"],[50,32,83,30],[50,33,83,31,"componentStack"],[50,47,83,45],[51,6,84,4],[51,10,84,8],[51,11,84,9,"codeFrame"],[51,20,84,18],[51,23,84,21,"data"],[51,27,84,25],[51,28,84,26,"codeFrame"],[51,37,84,35],[52,6,85,4],[52,10,85,8],[52,11,85,9,"isComponentError"],[52,27,85,25],[52,30,85,28,"data"],[52,34,85,32],[52,35,85,33,"isComponentError"],[52,51,85,49],[53,6,86,4],[53,10,86,8],[53,11,86,9,"count"],[53,16,86,14],[53,19,86,17],[53,20,86,18],[54,6,87,4],[54,10,87,8],[54,11,87,9,"symbolicated"],[54,23,87,21],[54,26,87,24,"data"],[54,30,87,28],[54,31,87,29,"symbolicated"],[54,43,87,41],[54,47,87,45],[54,51,87,49],[54,52,87,50,"symbolicated"],[54,64,87,62],[55,4,88,2],[56,4,88,3],[56,15,88,3,"_createClass2"],[56,28,88,3],[56,29,88,3,"default"],[56,36,88,3],[56,38,88,3,"LogBoxLog"],[56,47,88,3],[57,6,88,3,"key"],[57,9,88,3],[58,6,88,3,"value"],[58,11,88,3],[58,13,90,2],[58,22,90,2,"incrementCount"],[58,36,90,16,"incrementCount"],[58,37,90,16],[58,39,90,25],[59,8,91,4],[59,12,91,8],[59,13,91,9,"count"],[59,18,91,14],[59,22,91,18],[59,23,91,19],[60,6,92,2],[61,4,92,3],[62,6,92,3,"key"],[62,9,92,3],[63,6,92,3,"value"],[63,11,92,3],[63,13,94,2],[63,22,94,2,"getAvailableStack"],[63,39,94,19,"getAvailableStack"],[63,40,94,20,"type"],[63,44,94,35],[63,46,94,51],[64,8,95,4],[64,12,95,8],[64,16,95,12],[64,17,95,13,"symbolicated"],[64,29,95,25],[64,30,95,26,"type"],[64,34,95,30],[64,35,95,31],[64,36,95,32,"status"],[64,42,95,38],[64,47,95,43],[64,57,95,53],[64,59,95,55],[65,10,96,6],[65,17,96,13],[65,21,96,17],[65,22,96,18,"symbolicated"],[65,34,96,30],[65,35,96,31,"type"],[65,39,96,35],[65,40,96,36],[65,41,96,37,"stack"],[65,46,96,42],[66,8,97,4],[67,8,98,4],[67,15,98,11],[67,19,98,15],[67,20,98,16,"getStack"],[67,28,98,24],[67,29,98,25,"type"],[67,33,98,29],[67,34,98,30],[68,6,99,2],[69,4,99,3],[70,6,99,3,"key"],[70,9,99,3],[71,6,99,3,"value"],[71,11,99,3],[71,13,101,2],[71,22,101,10,"flushCallbacks"],[71,36,101,24,"flushCallbacks"],[71,37,101,25,"type"],[71,41,101,40],[71,43,101,48],[72,8,102,4],[72,12,102,10,"callbacks"],[72,21,102,19],[72,24,102,22],[72,28,102,26],[72,29,102,27,"callbacks"],[72,38,102,36],[72,39,102,37,"get"],[72,42,102,40],[72,43,102,41,"type"],[72,47,102,45],[72,48,102,46],[73,8,103,4],[73,12,103,10,"status"],[73,18,103,16],[73,21,103,19],[73,25,103,23],[73,26,103,24,"symbolicated"],[73,38,103,36],[73,39,103,37,"type"],[73,43,103,41],[73,44,103,42],[73,45,103,43,"status"],[73,51,103,49],[74,8,104,4],[74,12,104,8,"callbacks"],[74,21,104,17],[74,23,104,19],[75,10,105,6],[75,15,105,11],[75,19,105,17,"callback"],[75,27,105,25],[75,31,105,29,"callbacks"],[75,40,105,38],[75,42,105,40],[76,12,106,8,"callback"],[76,20,106,16],[76,21,106,17,"status"],[76,27,106,23],[76,28,106,24],[77,10,107,6],[78,10,108,6,"callbacks"],[78,19,108,15],[78,20,108,16,"clear"],[78,25,108,21],[78,26,108,22],[78,27,108,23],[79,8,109,4],[80,6,110,2],[81,4,110,3],[82,6,110,3,"key"],[82,9,110,3],[83,6,110,3,"value"],[83,11,110,3],[83,13,112,2],[83,22,112,10,"pushCallback"],[83,34,112,22,"pushCallback"],[83,35,112,23,"type"],[83,39,112,38],[83,41,112,40,"callback"],[83,49,112,71],[83,51,112,79],[84,8,113,4],[84,12,113,8,"callbacks"],[84,21,113,17],[84,24,113,20],[84,28,113,24],[84,29,113,25,"callbacks"],[84,38,113,34],[84,39,113,35,"get"],[84,42,113,38],[84,43,113,39,"type"],[84,47,113,43],[84,48,113,44],[85,8,114,4],[85,12,114,8],[85,13,114,9,"callbacks"],[85,22,114,18],[85,24,114,20],[86,10,115,6,"callbacks"],[86,19,115,15],[86,22,115,18],[86,26,115,22,"Set"],[86,29,115,25],[86,30,115,26],[86,31,115,27],[87,10,116,6],[87,14,116,10],[87,15,116,11,"callbacks"],[87,24,116,20],[87,25,116,21,"set"],[87,28,116,24],[87,29,116,25,"type"],[87,33,116,29],[87,35,116,31,"callbacks"],[87,44,116,40],[87,45,116,41],[88,8,117,4],[89,8,118,4,"callbacks"],[89,17,118,13],[89,18,118,14,"add"],[89,21,118,17],[89,22,118,18,"callback"],[89,30,118,26],[89,31,118,27],[90,6,119,2],[91,4,119,3],[92,6,119,3,"key"],[92,9,119,3],[93,6,119,3,"value"],[93,11,119,3],[93,13,121,2],[93,22,121,2,"retrySymbolicate"],[93,38,121,18,"retrySymbolicate"],[93,39,121,19,"type"],[93,43,121,34],[93,45,121,36,"callback"],[93,53,121,84],[93,55,121,92],[94,8,122,4],[94,12,122,8],[94,13,122,9,"_symbolicate"],[94,25,122,21],[94,26,122,22,"type"],[94,30,122,26],[94,32,122,28],[94,36,122,32],[94,38,122,34,"callback"],[94,46,122,42],[94,47,122,43],[95,6,123,2],[96,4,123,3],[97,6,123,3,"key"],[97,9,123,3],[98,6,123,3,"value"],[98,11,123,3],[98,13,125,2],[98,22,125,2,"symbolicate"],[98,33,125,13,"symbolicate"],[98,34,125,14,"type"],[98,38,125,29],[98,40,125,31,"callback"],[98,48,125,79],[98,50,125,87],[99,8,126,4],[99,12,126,8],[99,13,126,9,"_symbolicate"],[99,25,126,21],[99,26,126,22,"type"],[99,30,126,26],[99,32,126,28],[99,37,126,33],[99,39,126,35,"callback"],[99,47,126,43],[99,48,126,44],[100,6,127,2],[101,4,127,3],[102,6,127,3,"key"],[102,9,127,3],[103,6,127,3,"value"],[103,11,127,3],[103,13,129,2],[103,22,129,10,"_symbolicate"],[103,34,129,22,"_symbolicate"],[103,35,130,4,"type"],[103,39,130,19],[103,41,131,4,"retry"],[103,46,131,18],[103,48,132,4,"callback"],[103,56,132,52],[103,58,133,10],[104,8,134,4],[104,12,134,8,"callback"],[104,20,134,16],[104,22,134,18],[105,10,135,6],[105,14,135,10],[105,15,135,11,"pushCallback"],[105,27,135,23],[105,28,135,24,"type"],[105,32,135,28],[105,34,135,30,"callback"],[105,42,135,38],[105,43,135,39],[106,8,136,4],[107,8,137,4],[107,12,137,10,"status"],[107,18,137,16],[107,21,137,19],[107,25,137,23],[107,26,137,24,"symbolicated"],[107,38,137,36],[107,39,137,37,"type"],[107,43,137,41],[107,44,137,42],[107,45,137,43,"status"],[107,51,137,49],[108,8,139,4],[108,12,139,8,"status"],[108,18,139,14],[108,23,139,19],[108,33,139,29],[108,35,139,31],[109,10,140,6],[109,17,140,13],[109,21,140,17],[109,22,140,18,"flushCallbacks"],[109,36,140,32],[109,37,140,33,"type"],[109,41,140,37],[109,42,140,38],[110,8,141,4],[111,8,143,4],[111,12,143,8,"retry"],[111,17,143,13],[111,19,143,15],[112,10,144,6,"LogBoxSymbolication"],[112,29,144,25],[112,30,144,26,"deleteStack"],[112,41,144,37],[112,42,144,38],[112,46,144,42],[112,47,144,43,"getStack"],[112,55,144,51],[112,56,144,52,"type"],[112,60,144,56],[112,61,144,57],[112,62,144,58],[113,10,145,6],[113,14,145,10],[113,15,145,11,"handleSymbolicate"],[113,32,145,28],[113,33,145,29,"type"],[113,37,145,33],[113,38,145,34],[114,8,146,4],[114,9,146,5],[114,15,146,11],[115,10,147,6],[115,14,147,10,"status"],[115,20,147,16],[115,25,147,21],[115,31,147,27],[115,33,147,29],[116,12,148,8],[116,16,148,12],[116,17,148,13,"handleSymbolicate"],[116,34,148,30],[116,35,148,31,"type"],[116,39,148,35],[116,40,148,36],[117,10,149,6],[118,8,150,4],[119,6,151,2],[120,4,151,3],[121,6,151,3,"key"],[121,9,151,3],[122,6,151,3,"value"],[122,11,151,3],[122,13,155,2],[122,22,155,10,"getStack"],[122,30,155,18,"getStack"],[122,31,155,19,"type"],[122,35,155,34],[122,37,155,43],[123,8,156,4],[123,12,156,8,"type"],[123,16,156,12],[123,21,156,17],[123,32,156,28],[123,34,156,30],[124,10,157,6],[124,14,157,10],[124,18,157,14],[124,19,157,15,"componentStackCache"],[124,38,157,34],[124,42,157,38],[124,46,157,42],[124,48,157,44],[125,12,158,8],[125,16,158,12],[125,17,158,13,"componentStackCache"],[125,36,158,32],[125,39,158,35,"componentStackToStack"],[125,60,158,56],[125,61,158,57],[125,65,158,61],[125,66,158,62,"componentStack"],[125,80,158,76],[125,81,158,77],[126,10,159,6],[127,10,160,6],[127,17,160,13],[127,21,160,17],[127,22,160,18,"componentStackCache"],[127,41,160,37],[128,8,161,4],[129,8,162,4],[129,15,162,11],[129,19,162,15],[129,20,162,16,"stack"],[129,25,162,21],[130,6,163,2],[131,4,163,3],[132,6,163,3,"key"],[132,9,163,3],[133,6,163,3,"value"],[133,11,163,3],[133,13,165,2],[133,22,165,10,"handleSymbolicate"],[133,39,165,27,"handleSymbolicate"],[133,40,165,28,"type"],[133,44,165,43],[133,46,165,51],[134,8,166,4],[134,12,166,8,"type"],[134,16,166,12],[134,21,166,17],[134,32,166,28],[134,36,166,32],[134,37,166,33],[134,41,166,37],[134,42,166,38,"componentStack"],[134,56,166,52],[134,58,166,54,"length"],[134,64,166,60],[134,66,166,62],[135,10,167,6],[136,8,168,4],[137,8,170,4],[137,12,170,8],[137,16,170,12],[137,17,170,13,"symbolicated"],[137,29,170,25],[137,30,170,26,"type"],[137,34,170,30],[137,35,170,31],[137,36,170,32,"status"],[137,42,170,38],[137,47,170,43],[137,56,170,52],[137,58,170,54],[138,10,171,6],[138,14,171,10],[138,15,171,11,"updateStatus"],[138,27,171,23],[138,28,171,24,"type"],[138,32,171,28],[138,34,171,30],[138,38,171,34],[138,40,171,36],[138,44,171,40],[138,46,171,42],[138,50,171,46],[138,51,171,47],[139,10,172,6,"LogBoxSymbolication"],[139,29,172,25],[139,30,172,26,"symbolicate"],[139,41,172,37],[139,42,172,38,"ensureStackFilesHaveParams"],[139,68,172,64],[139,69,172,65],[139,73,172,69],[139,74,172,70,"getStack"],[139,82,172,78],[139,83,172,79,"type"],[139,87,172,83],[139,88,172,84],[139,89,172,85],[139,90,172,86],[139,91,172,87,"then"],[139,95,172,91],[139,96,173,9,"data"],[139,100,173,13],[139,104,173,18],[140,12,174,10],[140,16,174,14],[140,17,174,15,"updateStatus"],[140,29,174,27],[140,30,174,28,"type"],[140,34,174,32],[140,36,174,34],[140,40,174,38],[140,42,174,40,"data"],[140,46,174,44],[140,48,174,46,"stack"],[140,53,174,51],[140,55,174,53,"data"],[140,59,174,57],[140,61,174,59,"codeFrame"],[140,70,174,68],[140,71,174,69],[141,10,175,8],[141,11,175,9],[141,13,176,9,"error"],[141,18,176,14],[141,22,176,19],[142,12,177,10],[142,16,177,14],[142,17,177,15,"updateStatus"],[142,29,177,27],[142,30,177,28,"type"],[142,34,177,32],[142,36,177,34,"error"],[142,41,177,39],[142,43,177,41],[142,47,177,45],[142,49,177,47],[142,53,177,51],[142,54,177,52],[143,10,178,8],[143,11,179,6],[143,12,179,7],[144,8,180,4],[145,6,181,2],[146,4,181,3],[147,6,181,3,"key"],[147,9,181,3],[148,6,181,3,"value"],[148,11,181,3],[148,13,183,2],[148,22,183,10,"updateStatus"],[148,34,183,22,"updateStatus"],[148,35,184,4,"type"],[148,39,184,19],[148,41,185,4,"error"],[148,46,185,24],[148,48,186,4,"stack"],[148,53,186,24],[148,55,187,4,"codeFrame"],[148,64,187,32],[148,66,188,10],[149,8,189,4],[149,12,189,10,"lastStatus"],[149,22,189,20],[149,25,189,23],[149,29,189,27],[149,30,189,28,"symbolicated"],[149,42,189,40],[149,43,189,41,"type"],[149,47,189,45],[149,48,189,46],[149,49,189,47,"status"],[149,55,189,53],[150,8,190,4],[150,12,190,8,"error"],[150,17,190,13],[150,21,190,17],[150,25,190,21],[150,27,190,23],[151,10,191,6],[151,14,191,10],[151,15,191,11,"symbolicated"],[151,27,191,23],[151,28,191,24,"type"],[151,32,191,28],[151,33,191,29],[151,36,191,32],[152,12,192,8,"error"],[152,17,192,13],[153,12,193,8,"stack"],[153,17,193,13],[153,19,193,15],[153,23,193,19],[154,12,194,8,"status"],[154,18,194,14],[154,20,194,16],[155,10,195,6],[155,11,195,7],[156,8,196,4],[156,9,196,5],[156,15,196,11],[156,19,196,15,"stack"],[156,24,196,20],[156,28,196,24],[156,32,196,28],[156,34,196,30],[157,10,197,6],[157,14,197,10,"codeFrame"],[157,23,197,19],[157,25,197,21],[158,12,198,8],[158,16,198,12],[158,17,198,13,"codeFrame"],[158,26,198,22],[158,29,198,25,"codeFrame"],[158,38,198,34],[159,10,199,6],[160,10,201,6],[160,14,201,10],[160,15,201,11,"symbolicated"],[160,27,201,23],[160,28,201,24,"type"],[160,32,201,28],[160,33,201,29],[160,36,201,32],[161,12,202,8,"error"],[161,17,202,13],[161,19,202,15],[161,23,202,19],[162,12,203,8,"stack"],[162,17,203,13],[163,12,204,8,"status"],[163,18,204,14],[163,20,204,16],[164,10,205,6],[164,11,205,7],[165,8,206,4],[165,9,206,5],[165,15,206,11],[166,10,207,6],[166,14,207,10],[166,15,207,11,"symbolicated"],[166,27,207,23],[166,28,207,24,"type"],[166,32,207,28],[166,33,207,29],[166,36,207,32],[167,12,208,8,"error"],[167,17,208,13],[167,19,208,15],[167,23,208,19],[168,12,209,8,"stack"],[168,17,209,13],[168,19,209,15],[168,23,209,19],[169,12,210,8,"status"],[169,18,210,14],[169,20,210,16],[170,10,211,6],[170,11,211,7],[171,8,212,4],[172,8,214,4],[172,12,214,10,"status"],[172,18,214,16],[172,21,214,19],[172,25,214,23],[172,26,214,24,"symbolicated"],[172,38,214,36],[172,39,214,37,"type"],[172,43,214,41],[172,44,214,42],[172,45,214,43,"status"],[172,51,214,49],[173,8,215,4],[173,12,215,8,"lastStatus"],[173,22,215,18],[173,27,215,23,"status"],[173,33,215,29],[173,35,215,31],[174,10,216,6],[174,14,216,10],[174,15,216,11],[174,25,216,21],[174,27,216,23],[174,35,216,31],[174,36,216,32],[174,37,216,33,"includes"],[174,45,216,41],[174,46,216,42,"status"],[174,52,216,48],[174,53,216,49],[174,55,216,51],[175,12,217,8],[175,16,217,12],[175,17,217,13,"flushCallbacks"],[175,31,217,27],[175,32,217,28,"type"],[175,36,217,32],[175,37,217,33],[176,10,218,6],[177,8,219,4],[178,6,220,2],[179,4,220,3],[180,2,220,3],[180,7,223,0],[181,2,224,0],[182,2,225,0],[182,11,225,9,"ensureStackFilesHaveParams"],[182,37,225,35,"ensureStackFilesHaveParams"],[182,38,225,36,"stack"],[182,43,225,48],[182,45,225,57],[183,4,226,2],[183,8,226,8,"currentSrc"],[183,18,226,18],[183,21,227,4],[183,28,227,11,"document"],[183,36,227,19],[183,41,227,24],[183,52,227,35],[183,56,227,39,"document"],[183,64,227,47],[183,65,227,48,"currentScript"],[183,78,227,61],[183,81,228,9],[183,86,228,14],[183,90,228,18,"document"],[183,98,228,26],[183,99,228,27,"currentScript"],[183,112,228,40],[183,116,228,44,"document"],[183,124,228,52],[183,125,228,53,"currentScript"],[183,138,228,66],[183,139,228,67,"src"],[183,142,228,70],[183,146,228,75],[183,150,228,79],[183,153,229,8],[183,157,229,12],[184,4,231,2],[184,8,231,8,"currentParams"],[184,21,231,21],[184,24,231,24,"currentSrc"],[184,34,231,34],[184,37,232,6],[184,41,232,10,"URLSearchParams"],[184,56,232,25],[184,57,232,26,"currentSrc"],[184,67,232,36],[184,68,232,37],[184,71,233,6],[184,75,233,10,"URLSearchParams"],[184,90,233,25],[184,91,233,26],[185,6,234,8,"platform"],[185,14,234,16],[185,16,234,18],[185,21,234,23],[186,6,235,8,"dev"],[186,9,235,11],[186,11,235,13,"String"],[186,17,235,19],[186,18,235,20,"__DEV__"],[186,25,235,27],[187,4,236,6],[187,5,236,7],[187,6,236,8],[188,4,238,2],[188,11,238,9,"stack"],[188,16,238,14],[188,17,238,15,"map"],[188,20,238,18],[188,21,238,20,"frame"],[188,26,238,25],[188,30,238,30],[189,6,239,4],[189,10,240,6],[189,11,240,7,"frame"],[189,16,240,12],[189,17,240,13,"file"],[189,21,240,17],[189,23,240,19,"startsWith"],[189,33,240,29],[189,34,240,30],[189,40,240,36],[189,41,240,37],[190,6,241,6],[191,6,242,6,"frame"],[191,11,242,11],[191,12,242,12,"file"],[191,16,242,16],[191,17,242,17,"includes"],[191,25,242,25],[191,26,242,26],[191,38,242,38],[191,39,242,39],[191,41,244,6],[191,48,244,13,"frame"],[191,53,244,18],[192,6,246,4],[192,10,246,10,"url"],[192,13,246,13],[192,16,246,16],[192,20,246,20,"URL"],[192,23,246,23],[192,24,246,24,"frame"],[192,29,246,29],[192,30,246,30,"file"],[192,34,246,34],[192,35,246,35],[193,6,247,4],[193,10,247,8,"url"],[193,13,247,11],[193,14,247,12,"searchParams"],[193,26,247,24],[193,27,247,25,"has"],[193,30,247,28],[193,31,247,29],[193,41,247,39],[193,42,247,40],[193,44,247,42],[194,8,248,6],[194,15,248,13,"frame"],[194,20,248,18],[195,6,249,4],[196,6,251,4,"currentParams"],[196,19,251,17],[196,20,251,18,"forEach"],[196,27,251,25],[196,28,251,26],[196,29,251,27,"value"],[196,34,251,32],[196,36,251,34,"key"],[196,39,251,37],[196,44,251,42],[197,8,252,6],[197,12,252,10,"url"],[197,15,252,13],[197,16,252,14,"searchParams"],[197,28,252,26],[197,29,252,27,"has"],[197,32,252,30],[197,33,252,31,"key"],[197,36,252,34],[197,37,252,35],[197,39,252,37],[198,8,253,6,"url"],[198,11,253,9],[198,12,253,10,"searchParams"],[198,24,253,22],[198,25,253,23,"set"],[198,28,253,26],[198,29,253,27,"key"],[198,32,253,30],[198,34,253,32,"value"],[198,39,253,37],[198,40,253,38],[199,6,254,4],[199,7,254,5],[199,8,254,6],[200,6,256,4],[200,13,256,11],[201,8,256,13],[201,11,256,16,"frame"],[201,16,256,21],[202,8,256,23,"file"],[202,12,256,27],[202,14,256,29,"url"],[202,17,256,32],[202,18,256,33,"toString"],[202,26,256,41],[202,27,256,42],[203,6,256,44],[203,7,256,45],[204,4,257,2],[204,5,257,3],[204,6,257,4],[205,2,258,0],[206,0,258,1],[206,3]],"functionMap":{"names":["<global>","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","ensureStackFilesHaveParams","stack.map$argument_0","currentParams.forEach$argument_0"],"mappings":"AAA;AC6B;4BCC;IDM;CDC;OGU;ECyB;GDe;EEE;GFE;EGE;GHK;EIE;GJS;EKE;GLO;EME;GNE;EOE;GPE;EQE;GRsB;ESI;GTQ;EUE;QCQ;SDE;QEC;SFE;GVG;EaE;GbqC;CHC;AiBI;mBCa;0BCa;KDG;GDG;CjBC"}},"type":"js/module"}]}