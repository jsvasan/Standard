{"dependencies":[{"name":"../../Core/Devtools/symbolicateStackTrace","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":78}}],"key":"hV8WFuV5m0WnRrAl7up+IGwo1ng=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.deleteStack = deleteStack;\n  exports.symbolicate = symbolicate;\n  var _CoreDevtoolsSymbolicateStackTrace = require(_dependencyMap[0], \"../../Core/Devtools/symbolicateStackTrace\");\n  var symbolicateStackTrace = _interopDefault(_CoreDevtoolsSymbolicateStackTrace);\n  var cache = new Map();\n  var sanitize = _ref => {\n    var maybeStack = _ref.stack,\n      codeFrame = _ref.codeFrame;\n    if (!Array.isArray(maybeStack)) {\n      throw new Error('Expected stack to be an array.');\n    }\n    var stack = [];\n    for (var maybeFrame of maybeStack) {\n      var collapse = false;\n      if ('collapse' in maybeFrame) {\n        if (typeof maybeFrame.collapse !== 'boolean') {\n          throw new Error('Expected stack frame `collapse` to be a boolean.');\n        }\n        collapse = maybeFrame.collapse;\n      }\n      stack.push({\n        column: maybeFrame.column,\n        file: maybeFrame.file,\n        lineNumber: maybeFrame.lineNumber,\n        methodName: maybeFrame.methodName,\n        collapse\n      });\n    }\n    return {\n      stack,\n      codeFrame\n    };\n  };\n  function deleteStack(stack) {\n    cache.delete(stack);\n  }\n  function symbolicate(stack, extraData) {\n    var promise = cache.get(stack);\n    if (promise == null) {\n      promise = (0, symbolicateStackTrace.default)(stack, extraData).then(sanitize);\n      cache.set(stack, promise);\n    }\n    return promise;\n  }\n});","lineCount":56,"map":[[12,2,50,0,"exports"],[12,9,50,0],[12,10,50,0,"deleteStack"],[12,21,50,0],[12,24,50,0,"deleteStack"],[12,35,50,0],[13,2,54,0,"exports"],[13,9,54,0],[13,10,54,0,"symbolicate"],[13,21,54,0],[13,24,54,0,"symbolicate"],[13,35,54,0],[14,2,14,0],[14,6,14,0,"_CoreDevtoolsSymbolicateStackTrace"],[14,40,14,0],[14,43,14,0,"require"],[14,50,14,0],[14,51,14,0,"_dependencyMap"],[14,65,14,0],[15,2,14,0],[15,6,14,0,"symbolicateStackTrace"],[15,27,14,0],[15,30,14,0,"_interopDefault"],[15,45,14,0],[15,46,14,0,"_CoreDevtoolsSymbolicateStackTrace"],[15,80,14,0],[16,2,18,0],[16,6,18,6,"cache"],[16,11,18,56],[16,14,18,59],[16,18,18,63,"Map"],[16,21,18,66],[16,22,18,67],[16,23,18,68],[17,2,23,0],[17,6,23,6,"sanitize"],[17,14,23,14],[17,17,23,17,"_ref"],[17,21,23,17],[17,25,26,54],[18,4,26,54],[18,8,24,9,"maybeStack"],[18,18,24,19],[18,21,24,19,"_ref"],[18,25,24,19],[18,26,24,2,"stack"],[18,31,24,7],[19,6,25,2,"codeFrame"],[19,15,25,11],[19,18,25,11,"_ref"],[19,22,25,11],[19,23,25,2,"codeFrame"],[19,32,25,11],[20,4,27,2],[20,8,27,6],[20,9,27,7,"Array"],[20,14,27,12],[20,15,27,13,"isArray"],[20,22,27,20],[20,23,27,21,"maybeStack"],[20,33,27,31],[20,34,27,32],[20,36,27,34],[21,6,28,4],[21,12,28,10],[21,16,28,14,"Error"],[21,21,28,19],[21,22,28,20],[21,54,28,52],[21,55,28,53],[22,4,29,2],[23,4,30,2],[23,8,30,8,"stack"],[23,13,30,32],[23,16,30,35],[23,18,30,37],[24,4,31,2],[24,9,31,7],[24,13,31,13,"maybeFrame"],[24,23,31,23],[24,27,31,27,"maybeStack"],[24,37,31,37],[24,39,31,39],[25,6,32,4],[25,10,32,8,"collapse"],[25,18,32,16],[25,21,32,19],[25,26,32,24],[26,6,33,4],[26,10,33,8],[26,20,33,18],[26,24,33,22,"maybeFrame"],[26,34,33,32],[26,36,33,34],[27,8,34,6],[27,12,34,10],[27,19,34,17,"maybeFrame"],[27,29,34,27],[27,30,34,28,"collapse"],[27,38,34,36],[27,43,34,41],[27,52,34,50],[27,54,34,52],[28,10,35,8],[28,16,35,14],[28,20,35,18,"Error"],[28,25,35,23],[28,26,35,24],[28,76,35,74],[28,77,35,75],[29,8,36,6],[30,8,37,6,"collapse"],[30,16,37,14],[30,19,37,17,"maybeFrame"],[30,29,37,27],[30,30,37,28,"collapse"],[30,38,37,36],[31,6,38,4],[32,6,39,4,"stack"],[32,11,39,9],[32,12,39,10,"push"],[32,16,39,14],[32,17,39,15],[33,8,40,6,"column"],[33,14,40,12],[33,16,40,14,"maybeFrame"],[33,26,40,24],[33,27,40,25,"column"],[33,33,40,31],[34,8,41,6,"file"],[34,12,41,10],[34,14,41,12,"maybeFrame"],[34,24,41,22],[34,25,41,23,"file"],[34,29,41,27],[35,8,42,6,"lineNumber"],[35,18,42,16],[35,20,42,18,"maybeFrame"],[35,30,42,28],[35,31,42,29,"lineNumber"],[35,41,42,39],[36,8,43,6,"methodName"],[36,18,43,16],[36,20,43,18,"maybeFrame"],[36,30,43,28],[36,31,43,29,"methodName"],[36,41,43,39],[37,8,44,6,"collapse"],[38,6,45,4],[38,7,45,5],[38,8,45,6],[39,4,46,2],[40,4,47,2],[40,11,47,9],[41,6,47,10,"stack"],[41,11,47,15],[42,6,47,17,"codeFrame"],[43,4,47,26],[43,5,47,27],[44,2,48,0],[44,3,48,1],[45,2,50,7],[45,11,50,16,"deleteStack"],[45,22,50,27,"deleteStack"],[45,23,50,28,"stack"],[45,28,50,40],[45,30,50,48],[46,4,51,2,"cache"],[46,9,51,7],[46,10,51,8,"delete"],[46,16,51,14],[46,17,51,15,"stack"],[46,22,51,20],[46,23,51,21],[47,2,52,0],[48,2,54,7],[48,11,54,16,"symbolicate"],[48,22,54,27,"symbolicate"],[48,23,55,2,"stack"],[48,28,55,14],[48,30,56,2,"extraData"],[48,39,56,19],[48,41,57,35],[49,4,58,2],[49,8,58,6,"promise"],[49,15,58,13],[49,18,58,16,"cache"],[49,23,58,21],[49,24,58,22,"get"],[49,27,58,25],[49,28,58,26,"stack"],[49,33,58,31],[49,34,58,32],[50,4,59,2],[50,8,59,6,"promise"],[50,15,59,13],[50,19,59,17],[50,23,59,21],[50,25,59,23],[51,6,60,4,"promise"],[51,13,60,11],[51,16,60,14],[51,20,60,14,"symbolicateStackTrace"],[51,41,60,35],[51,42,60,35,"default"],[51,49,60,35],[51,51,60,36,"stack"],[51,56,60,41],[51,58,60,43,"extraData"],[51,67,60,52],[51,68,60,53],[51,69,60,54,"then"],[51,73,60,58],[51,74,60,59,"sanitize"],[51,82,60,67],[51,83,60,68],[52,6,61,4,"cache"],[52,11,61,9],[52,12,61,10,"set"],[52,15,61,13],[52,16,61,14,"stack"],[52,21,61,19],[52,23,61,21,"promise"],[52,30,61,28],[52,31,61,29],[53,4,62,2],[54,4,64,2],[54,11,64,9,"promise"],[54,18,64,16],[55,2,65,0],[56,0,65,1],[56,3]],"functionMap":{"names":["<global>","sanitize","deleteStack","symbolicate"],"mappings":"AAA;iBCsB;CDyB;OEE;CFE;OGE"},"hasCjsExports":false},"type":"js/module"}]}