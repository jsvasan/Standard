{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var DELAY = 'DELAY';\n  var ERROR = 'ERROR';\n  var LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\n  var NOT_RESPONDER = 'NOT_RESPONDER';\n  var RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\n  var RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\n  var RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\n  var RESPONDER_GRANT = 'RESPONDER_GRANT';\n  var RESPONDER_RELEASE = 'RESPONDER_RELEASE';\n  var RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\n  var Transitions = Object.freeze({\n    NOT_RESPONDER: {\n      DELAY: ERROR,\n      RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n      RESPONDER_RELEASE: ERROR,\n      RESPONDER_TERMINATED: ERROR,\n      LONG_PRESS_DETECTED: ERROR\n    },\n    RESPONDER_INACTIVE_PRESS_START: {\n      DELAY: RESPONDER_ACTIVE_PRESS_START,\n      RESPONDER_GRANT: ERROR,\n      RESPONDER_RELEASE: NOT_RESPONDER,\n      RESPONDER_TERMINATED: NOT_RESPONDER,\n      LONG_PRESS_DETECTED: ERROR\n    },\n    RESPONDER_ACTIVE_PRESS_START: {\n      DELAY: ERROR,\n      RESPONDER_GRANT: ERROR,\n      RESPONDER_RELEASE: NOT_RESPONDER,\n      RESPONDER_TERMINATED: NOT_RESPONDER,\n      LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n    },\n    RESPONDER_ACTIVE_LONG_PRESS_START: {\n      DELAY: ERROR,\n      RESPONDER_GRANT: ERROR,\n      RESPONDER_RELEASE: NOT_RESPONDER,\n      RESPONDER_TERMINATED: NOT_RESPONDER,\n      LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n    },\n    ERROR: {\n      DELAY: NOT_RESPONDER,\n      RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n      RESPONDER_RELEASE: NOT_RESPONDER,\n      RESPONDER_TERMINATED: NOT_RESPONDER,\n      LONG_PRESS_DETECTED: NOT_RESPONDER\n    }\n  });\n  var getElementRole = element => element.getAttribute('role');\n  var getElementType = element => element.tagName.toLowerCase();\n  var isActiveSignal = signal => signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n  var isButtonRole = element => getElementRole(element) === 'button';\n  var isPressStartSignal = signal => signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n  var isTerminalSignal = signal => signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n  var isValidKeyPress = event => {\n    var key = event.key,\n      target = event.target;\n    var isSpacebar = key === ' ' || key === 'Spacebar';\n    var isButtonish = getElementType(target) === 'button' || isButtonRole(target);\n    return key === 'Enter' || isSpacebar && isButtonish;\n  };\n  var DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\n  var DEFAULT_PRESS_DELAY_MS = 50;\n\n  /**\n   * =========================== PressResponder Tutorial ===========================\n   *\n   * The `PressResponder` class helps you create press interactions by analyzing the\n   * geometry of elements and observing when another responder (e.g. ScrollView)\n   * has stolen the touch lock. It offers hooks for your component to provide\n   * interaction feedback to the user:\n   *\n   * - When a press has activated (e.g. highlight an element)\n   * - When a press has deactivated (e.g. un-highlight an element)\n   * - When a press sould trigger an action, meaning it activated and deactivated\n   *   while within the geometry of the element without the lock being stolen.\n   *\n   * A high quality interaction isn't as simple as you might think. There should\n   * be a slight delay before activation. Moving your finger beyond an element's\n   * bounds should trigger deactivation, but moving the same finger back within an\n   * element's bounds should trigger reactivation.\n   *\n   * In order to use `PressResponder`, do the following:\n   *\n   *     const pressResponder = new PressResponder(config);\n   *\n   * 2. Choose the rendered component who should collect the press events. On that\n   *    element, spread `pressability.getEventHandlers()` into its props.\n   *\n   *    return (\n   *      <View {...this.state.pressResponder.getEventHandlers()} />\n   *    );\n   *\n   * 3. Reset `PressResponder` when your component unmounts.\n   *\n   *    componentWillUnmount() {\n   *      this.state.pressResponder.reset();\n   *    }\n   *\n   * ==================== Implementation Details ====================\n   *\n   * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n   * is an abstract box that is extended beyond the `HitRect`.\n   *\n   * # Geometry\n   *\n   *  ┌────────────────────────┐\n   *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n   *  │  │  ┌────────────┐  │  │\n   *  │  │  │ VisualRect │  │  │\n   *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n   *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n   *  │  └──────────────────┘  │\n   *  │       Out Region   o   │\n   *  └────────────────────│───┘\n   *                       └────── When the press is released outside the `HitRect`,\n   *                               the responder is NOT eligible for a \"press\".\n   *\n   * # State Machine\n   *\n   * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n   * │ NOT_RESPONDER │\n   * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n   *     │\n   *     │ RESPONDER_GRANT (HitRect)\n   *     │\n   *     ▼\n   * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n   * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n   * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n   * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n   *\n   * T + DELAY => LONG_PRESS_DELAY + DELAY\n   *\n   * Not drawn are the side effects of each transition. The most important side\n   * effect is the invocation of `onLongPress`. Only when the browser produces a\n   * `click` event is `onPress` invoked.\n   */\n  class PressResponder {\n    constructor(config) {\n      this._eventHandlers = null;\n      this._isPointerTouch = false;\n      this._longPressDelayTimeout = null;\n      this._longPressDispatched = false;\n      this._pressDelayTimeout = null;\n      this._pressOutDelayTimeout = null;\n      this._touchState = NOT_RESPONDER;\n      this._responderElement = null;\n      this.configure(config);\n    }\n    configure(config) {\n      this._config = config;\n    }\n\n    /**\n     * Resets any pending timers. This should be called on unmount.\n     */\n    reset() {\n      this._cancelLongPressDelayTimeout();\n      this._cancelPressDelayTimeout();\n      this._cancelPressOutDelayTimeout();\n    }\n\n    /**\n     * Returns a set of props to spread into the interactive element.\n     */\n    getEventHandlers() {\n      if (this._eventHandlers == null) {\n        this._eventHandlers = this._createEventHandlers();\n      }\n      return this._eventHandlers;\n    }\n    _createEventHandlers() {\n      var start = (event, shouldDelay) => {\n        event.persist();\n        this._cancelPressOutDelayTimeout();\n        this._longPressDispatched = false;\n        this._selectionTerminated = false;\n        this._touchState = NOT_RESPONDER;\n        this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n        this._receiveSignal(RESPONDER_GRANT, event);\n        var delayPressStart = normalizeDelay(this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n        if (shouldDelay !== false && delayPressStart > 0) {\n          this._pressDelayTimeout = setTimeout(() => {\n            this._receiveSignal(DELAY, event);\n          }, delayPressStart);\n        } else {\n          this._receiveSignal(DELAY, event);\n        }\n        var delayLongPress = normalizeDelay(this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n        this._longPressDelayTimeout = setTimeout(() => {\n          this._handleLongPress(event);\n        }, delayLongPress + delayPressStart);\n      };\n      var end = event => {\n        this._receiveSignal(RESPONDER_RELEASE, event);\n      };\n      var keyupHandler = event => {\n        var onPress = this._config.onPress;\n        var target = event.target;\n        if (this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n          end(event);\n          document.removeEventListener('keyup', keyupHandler);\n          var role = target.getAttribute('role');\n          var elementType = getElementType(target);\n          var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n          var isActiveElement = this._responderElement === target;\n          if (onPress != null && !isNativeInteractiveElement && isActiveElement) {\n            onPress(event);\n          }\n          this._responderElement = null;\n        }\n      };\n      return {\n        onStartShouldSetResponder: event => {\n          var disabled = this._config.disabled;\n          if (disabled && isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n          if (disabled == null) {\n            return true;\n          }\n          return !disabled;\n        },\n        onKeyDown: event => {\n          var disabled = this._config.disabled;\n          var key = event.key,\n            target = event.target;\n          if (!disabled && isValidKeyPress(event)) {\n            if (this._touchState === NOT_RESPONDER) {\n              start(event, false);\n              this._responderElement = target;\n              // Listen to 'keyup' on document to account for situations where\n              // focus is moved to another element during 'keydown'.\n              document.addEventListener('keyup', keyupHandler);\n            }\n            var isSpacebarKey = key === ' ' || key === 'Spacebar';\n            var role = getElementRole(target);\n            var isButtonLikeRole = role === 'button' || role === 'menuitem';\n            if (isSpacebarKey && isButtonLikeRole && getElementType(target) !== 'button') {\n              // Prevent spacebar scrolling the window if using non-native button\n              event.preventDefault();\n            }\n            event.stopPropagation();\n          }\n        },\n        onResponderGrant: event => start(event),\n        onResponderMove: event => {\n          if (this._config.onPressMove != null) {\n            this._config.onPressMove(event);\n          }\n          var touch = getTouchFromResponderEvent(event);\n          if (this._touchActivatePosition != null) {\n            var deltaX = this._touchActivatePosition.pageX - touch.pageX;\n            var deltaY = this._touchActivatePosition.pageY - touch.pageY;\n            if (Math.hypot(deltaX, deltaY) > 10) {\n              this._cancelLongPressDelayTimeout();\n            }\n          }\n        },\n        onResponderRelease: event => end(event),\n        onResponderTerminate: event => {\n          if (event.nativeEvent.type === 'selectionchange') {\n            this._selectionTerminated = true;\n          }\n          this._receiveSignal(RESPONDER_TERMINATED, event);\n        },\n        onResponderTerminationRequest: event => {\n          var _this$_config = this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress;\n          // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n          // behavior will be prevented for non-mouse pointers.\n          if (!disabled && onLongPress != null && this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n            return false;\n          }\n          if (cancelable == null) {\n            return true;\n          }\n          return cancelable;\n        },\n        // NOTE: this diverges from react-native in 3 significant ways:\n        // * The `onPress` callback is not connected to the responder system (the native\n        //  `click` event must be used but is dispatched in many scenarios where no pointers\n        //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n        //   `onPress{Start,End}` being called first.\n        // * The `onPress` callback is only be called on the first ancestor of the native\n        //   `click` target that is using the PressResponder.\n        // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n        onClick: event => {\n          var _this$_config2 = this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n          if (!disabled) {\n            // If long press dispatched, cancel default click behavior.\n            // If the responder terminated because text was selected during the gesture,\n            // cancel the default click behavior.\n            event.stopPropagation();\n            if (this._longPressDispatched || this._selectionTerminated) {\n              event.preventDefault();\n            } else if (onPress != null && event.altKey === false) {\n              onPress(event);\n            }\n          } else {\n            if (isButtonRole(event.currentTarget)) {\n              event.stopPropagation();\n            }\n          }\n        },\n        // If `onLongPress` is provided and a touch pointer is being used, prevent the\n        // default context menu from opening.\n        onContextMenu: event => {\n          var _this$_config3 = this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n          if (!disabled) {\n            if (onLongPress != null && this._isPointerTouch && !event.defaultPrevented) {\n              event.preventDefault();\n              event.stopPropagation();\n            }\n          } else {\n            if (isButtonRole(event.currentTarget)) {\n              event.stopPropagation();\n            }\n          }\n        }\n      };\n    }\n\n    /**\n     * Receives a state machine signal, performs side effects of the transition\n     * and stores the new state. Validates the transition as well.\n     */\n    _receiveSignal(signal, event) {\n      var prevState = this._touchState;\n      var nextState = null;\n      if (Transitions[prevState] != null) {\n        nextState = Transitions[prevState][signal];\n      }\n      if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n        return;\n      }\n      if (nextState == null || nextState === ERROR) {\n        console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n      } else if (prevState !== nextState) {\n        this._performTransitionSideEffects(prevState, nextState, signal, event);\n        this._touchState = nextState;\n      }\n    }\n\n    /**\n     * Performs a transition between touchable states and identify any activations\n     * or deactivations (and callback invocations).\n     */\n    _performTransitionSideEffects(prevState, nextState, signal, event) {\n      if (isTerminalSignal(signal)) {\n        // Pressable suppression of contextmenu on windows.\n        // On Windows, the contextmenu is displayed after pointerup.\n        // https://github.com/necolas/react-native-web/issues/2296\n        setTimeout(() => {\n          this._isPointerTouch = false;\n        }, 0);\n        this._touchActivatePosition = null;\n        this._cancelLongPressDelayTimeout();\n      }\n      if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n        var onLongPress = this._config.onLongPress;\n        // Long press is not supported for keyboards because 'click' can be dispatched\n        // immediately (and multiple times) after 'keydown'.\n        if (onLongPress != null && event.nativeEvent.key == null) {\n          onLongPress(event);\n          this._longPressDispatched = true;\n        }\n      }\n      var isPrevActive = isActiveSignal(prevState);\n      var isNextActive = isActiveSignal(nextState);\n      if (!isPrevActive && isNextActive) {\n        this._activate(event);\n      } else if (isPrevActive && !isNextActive) {\n        this._deactivate(event);\n      }\n      if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n        var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n        if (onPress != null) {\n          var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n          if (!isPressCanceledByLongPress) {\n            // If we never activated (due to delays), activate and deactivate now.\n            if (!isNextActive && !isPrevActive) {\n              this._activate(event);\n              this._deactivate(event);\n            }\n          }\n        }\n      }\n      this._cancelPressDelayTimeout();\n    }\n    _activate(event) {\n      var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n      var touch = getTouchFromResponderEvent(event);\n      this._touchActivatePosition = {\n        pageX: touch.pageX,\n        pageY: touch.pageY\n      };\n      if (onPressStart != null) {\n        onPressStart(event);\n      }\n      if (onPressChange != null) {\n        onPressChange(true);\n      }\n    }\n    _deactivate(event) {\n      var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n      function end() {\n        if (onPressEnd != null) {\n          onPressEnd(event);\n        }\n        if (onPressChange != null) {\n          onPressChange(false);\n        }\n      }\n      var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n      if (delayPressEnd > 0) {\n        this._pressOutDelayTimeout = setTimeout(() => {\n          end();\n        }, delayPressEnd);\n      } else {\n        end();\n      }\n    }\n    _handleLongPress(event) {\n      if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n        this._receiveSignal(LONG_PRESS_DETECTED, event);\n      }\n    }\n    _cancelLongPressDelayTimeout() {\n      if (this._longPressDelayTimeout != null) {\n        clearTimeout(this._longPressDelayTimeout);\n        this._longPressDelayTimeout = null;\n      }\n    }\n    _cancelPressDelayTimeout() {\n      if (this._pressDelayTimeout != null) {\n        clearTimeout(this._pressDelayTimeout);\n        this._pressDelayTimeout = null;\n      }\n    }\n    _cancelPressOutDelayTimeout() {\n      if (this._pressOutDelayTimeout != null) {\n        clearTimeout(this._pressOutDelayTimeout);\n        this._pressOutDelayTimeout = null;\n      }\n    }\n  }\n  exports.default = PressResponder;\n  function normalizeDelay(delay, min, fallback) {\n    if (min === void 0) {\n      min = 0;\n    }\n    if (fallback === void 0) {\n      fallback = 0;\n    }\n    return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n  }\n  function getTouchFromResponderEvent(event) {\n    var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n    if (touches != null && touches.length > 0) {\n      return touches[0];\n    }\n    if (changedTouches != null && changedTouches.length > 0) {\n      return changedTouches[0];\n    }\n    return event.nativeEvent;\n  }\n});","lineCount":499,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13,"exports"],[17,9,11,13],[17,10,11,13,"default"],[17,17,11,13],[18,2,13,0],[18,6,13,4,"DELAY"],[18,11,13,9],[18,14,13,12],[18,21,13,19],[19,2,14,0],[19,6,14,4,"ERROR"],[19,11,14,9],[19,14,14,12],[19,21,14,19],[20,2,15,0],[20,6,15,4,"LONG_PRESS_DETECTED"],[20,25,15,23],[20,28,15,26],[20,49,15,47],[21,2,16,0],[21,6,16,4,"NOT_RESPONDER"],[21,19,16,17],[21,22,16,20],[21,37,16,35],[22,2,17,0],[22,6,17,4,"RESPONDER_ACTIVE_LONG_PRESS_START"],[22,39,17,37],[22,42,17,40],[22,77,17,75],[23,2,18,0],[23,6,18,4,"RESPONDER_ACTIVE_PRESS_START"],[23,34,18,32],[23,37,18,35],[23,67,18,65],[24,2,19,0],[24,6,19,4,"RESPONDER_INACTIVE_PRESS_START"],[24,36,19,34],[24,39,19,37],[24,71,19,69],[25,2,20,0],[25,6,20,4,"RESPONDER_GRANT"],[25,21,20,19],[25,24,20,22],[25,41,20,39],[26,2,21,0],[26,6,21,4,"RESPONDER_RELEASE"],[26,23,21,21],[26,26,21,24],[26,45,21,43],[27,2,22,0],[27,6,22,4,"RESPONDER_TERMINATED"],[27,26,22,24],[27,29,22,27],[27,51,22,49],[28,2,23,0],[28,6,23,4,"Transitions"],[28,17,23,15],[28,20,23,18,"Object"],[28,26,23,24],[28,27,23,25,"freeze"],[28,33,23,31],[28,34,23,32],[29,4,24,2,"NOT_RESPONDER"],[29,17,24,15],[29,19,24,17],[30,6,25,4,"DELAY"],[30,11,25,9],[30,13,25,11,"ERROR"],[30,18,25,16],[31,6,26,4,"RESPONDER_GRANT"],[31,21,26,19],[31,23,26,21,"RESPONDER_INACTIVE_PRESS_START"],[31,53,26,51],[32,6,27,4,"RESPONDER_RELEASE"],[32,23,27,21],[32,25,27,23,"ERROR"],[32,30,27,28],[33,6,28,4,"RESPONDER_TERMINATED"],[33,26,28,24],[33,28,28,26,"ERROR"],[33,33,28,31],[34,6,29,4,"LONG_PRESS_DETECTED"],[34,25,29,23],[34,27,29,25,"ERROR"],[35,4,30,2],[35,5,30,3],[36,4,31,2,"RESPONDER_INACTIVE_PRESS_START"],[36,34,31,32],[36,36,31,34],[37,6,32,4,"DELAY"],[37,11,32,9],[37,13,32,11,"RESPONDER_ACTIVE_PRESS_START"],[37,41,32,39],[38,6,33,4,"RESPONDER_GRANT"],[38,21,33,19],[38,23,33,21,"ERROR"],[38,28,33,26],[39,6,34,4,"RESPONDER_RELEASE"],[39,23,34,21],[39,25,34,23,"NOT_RESPONDER"],[39,38,34,36],[40,6,35,4,"RESPONDER_TERMINATED"],[40,26,35,24],[40,28,35,26,"NOT_RESPONDER"],[40,41,35,39],[41,6,36,4,"LONG_PRESS_DETECTED"],[41,25,36,23],[41,27,36,25,"ERROR"],[42,4,37,2],[42,5,37,3],[43,4,38,2,"RESPONDER_ACTIVE_PRESS_START"],[43,32,38,30],[43,34,38,32],[44,6,39,4,"DELAY"],[44,11,39,9],[44,13,39,11,"ERROR"],[44,18,39,16],[45,6,40,4,"RESPONDER_GRANT"],[45,21,40,19],[45,23,40,21,"ERROR"],[45,28,40,26],[46,6,41,4,"RESPONDER_RELEASE"],[46,23,41,21],[46,25,41,23,"NOT_RESPONDER"],[46,38,41,36],[47,6,42,4,"RESPONDER_TERMINATED"],[47,26,42,24],[47,28,42,26,"NOT_RESPONDER"],[47,41,42,39],[48,6,43,4,"LONG_PRESS_DETECTED"],[48,25,43,23],[48,27,43,25,"RESPONDER_ACTIVE_LONG_PRESS_START"],[49,4,44,2],[49,5,44,3],[50,4,45,2,"RESPONDER_ACTIVE_LONG_PRESS_START"],[50,37,45,35],[50,39,45,37],[51,6,46,4,"DELAY"],[51,11,46,9],[51,13,46,11,"ERROR"],[51,18,46,16],[52,6,47,4,"RESPONDER_GRANT"],[52,21,47,19],[52,23,47,21,"ERROR"],[52,28,47,26],[53,6,48,4,"RESPONDER_RELEASE"],[53,23,48,21],[53,25,48,23,"NOT_RESPONDER"],[53,38,48,36],[54,6,49,4,"RESPONDER_TERMINATED"],[54,26,49,24],[54,28,49,26,"NOT_RESPONDER"],[54,41,49,39],[55,6,50,4,"LONG_PRESS_DETECTED"],[55,25,50,23],[55,27,50,25,"RESPONDER_ACTIVE_LONG_PRESS_START"],[56,4,51,2],[56,5,51,3],[57,4,52,2,"ERROR"],[57,9,52,7],[57,11,52,9],[58,6,53,4,"DELAY"],[58,11,53,9],[58,13,53,11,"NOT_RESPONDER"],[58,26,53,24],[59,6,54,4,"RESPONDER_GRANT"],[59,21,54,19],[59,23,54,21,"RESPONDER_INACTIVE_PRESS_START"],[59,53,54,51],[60,6,55,4,"RESPONDER_RELEASE"],[60,23,55,21],[60,25,55,23,"NOT_RESPONDER"],[60,38,55,36],[61,6,56,4,"RESPONDER_TERMINATED"],[61,26,56,24],[61,28,56,26,"NOT_RESPONDER"],[61,41,56,39],[62,6,57,4,"LONG_PRESS_DETECTED"],[62,25,57,23],[62,27,57,25,"NOT_RESPONDER"],[63,4,58,2],[64,2,59,0],[64,3,59,1],[64,4,59,2],[65,2,60,0],[65,6,60,4,"getElementRole"],[65,20,60,18],[65,23,60,21,"element"],[65,30,60,28],[65,34,60,32,"element"],[65,41,60,39],[65,42,60,40,"getAttribute"],[65,54,60,52],[65,55,60,53],[65,61,60,59],[65,62,60,60],[66,2,61,0],[66,6,61,4,"getElementType"],[66,20,61,18],[66,23,61,21,"element"],[66,30,61,28],[66,34,61,32,"element"],[66,41,61,39],[66,42,61,40,"tagName"],[66,49,61,47],[66,50,61,48,"toLowerCase"],[66,61,61,59],[66,62,61,60],[66,63,61,61],[67,2,62,0],[67,6,62,4,"isActiveSignal"],[67,20,62,18],[67,23,62,21,"signal"],[67,29,62,27],[67,33,62,31,"signal"],[67,39,62,37],[67,44,62,42,"RESPONDER_ACTIVE_PRESS_START"],[67,72,62,70],[67,76,62,74,"signal"],[67,82,62,80],[67,87,62,85,"RESPONDER_ACTIVE_LONG_PRESS_START"],[67,120,62,118],[68,2,63,0],[68,6,63,4,"isButtonRole"],[68,18,63,16],[68,21,63,19,"element"],[68,28,63,26],[68,32,63,30,"getElementRole"],[68,46,63,44],[68,47,63,45,"element"],[68,54,63,52],[68,55,63,53],[68,60,63,58],[68,68,63,66],[69,2,64,0],[69,6,64,4,"isPressStartSignal"],[69,24,64,22],[69,27,64,25,"signal"],[69,33,64,31],[69,37,64,35,"signal"],[69,43,64,41],[69,48,64,46,"RESPONDER_INACTIVE_PRESS_START"],[69,78,64,76],[69,82,64,80,"signal"],[69,88,64,86],[69,93,64,91,"RESPONDER_ACTIVE_PRESS_START"],[69,121,64,119],[69,125,64,123,"signal"],[69,131,64,129],[69,136,64,134,"RESPONDER_ACTIVE_LONG_PRESS_START"],[69,169,64,167],[70,2,65,0],[70,6,65,4,"isTerminalSignal"],[70,22,65,20],[70,25,65,23,"signal"],[70,31,65,29],[70,35,65,33,"signal"],[70,41,65,39],[70,46,65,44,"RESPONDER_TERMINATED"],[70,66,65,64],[70,70,65,68,"signal"],[70,76,65,74],[70,81,65,79,"RESPONDER_RELEASE"],[70,98,65,96],[71,2,66,0],[71,6,66,4,"isValidKeyPress"],[71,21,66,19],[71,24,66,22,"event"],[71,29,66,27],[71,33,66,31],[72,4,67,2],[72,8,67,6,"key"],[72,11,67,9],[72,14,67,12,"event"],[72,19,67,17],[72,20,67,18,"key"],[72,23,67,21],[73,6,68,4,"target"],[73,12,68,10],[73,15,68,13,"event"],[73,20,68,18],[73,21,68,19,"target"],[73,27,68,25],[74,4,69,2],[74,8,69,6,"isSpacebar"],[74,18,69,16],[74,21,69,19,"key"],[74,24,69,22],[74,29,69,27],[74,32,69,30],[74,36,69,34,"key"],[74,39,69,37],[74,44,69,42],[74,54,69,52],[75,4,70,2],[75,8,70,6,"isButtonish"],[75,19,70,17],[75,22,70,20,"getElementType"],[75,36,70,34],[75,37,70,35,"target"],[75,43,70,41],[75,44,70,42],[75,49,70,47],[75,57,70,55],[75,61,70,59,"isButtonRole"],[75,73,70,71],[75,74,70,72,"target"],[75,80,70,78],[75,81,70,79],[76,4,71,2],[76,11,71,9,"key"],[76,14,71,12],[76,19,71,17],[76,26,71,24],[76,30,71,28,"isSpacebar"],[76,40,71,38],[76,44,71,42,"isButtonish"],[76,55,71,53],[77,2,72,0],[77,3,72,1],[78,2,73,0],[78,6,73,4,"DEFAULT_LONG_PRESS_DELAY_MS"],[78,33,73,31],[78,36,73,34],[78,39,73,37],[78,40,73,38],[78,41,73,39],[79,2,74,0],[79,6,74,4,"DEFAULT_PRESS_DELAY_MS"],[79,28,74,26],[79,31,74,29],[79,33,74,31],[81,2,76,0],[82,0,77,0],[83,0,78,0],[84,0,79,0],[85,0,80,0],[86,0,81,0],[87,0,82,0],[88,0,83,0],[89,0,84,0],[90,0,85,0],[91,0,86,0],[92,0,87,0],[93,0,88,0],[94,0,89,0],[95,0,90,0],[96,0,91,0],[97,0,92,0],[98,0,93,0],[99,0,94,0],[100,0,95,0],[101,0,96,0],[102,0,97,0],[103,0,98,0],[104,0,99,0],[105,0,100,0],[106,0,101,0],[107,0,102,0],[108,0,103,0],[109,0,104,0],[110,0,105,0],[111,0,106,0],[112,0,107,0],[113,0,108,0],[114,0,109,0],[115,0,110,0],[116,0,111,0],[117,0,112,0],[118,0,113,0],[119,0,114,0],[120,0,115,0],[121,0,116,0],[122,0,117,0],[123,0,118,0],[124,0,119,0],[125,0,120,0],[126,0,121,0],[127,0,122,0],[128,0,123,0],[129,0,124,0],[130,0,125,0],[131,0,126,0],[132,0,127,0],[133,0,128,0],[134,0,129,0],[135,0,130,0],[136,0,131,0],[137,0,132,0],[138,0,133,0],[139,0,134,0],[140,0,135,0],[141,0,136,0],[142,0,137,0],[143,0,138,0],[144,0,139,0],[145,0,140,0],[146,0,141,0],[147,0,142,0],[148,0,143,0],[149,0,144,0],[150,0,145,0],[151,0,146,0],[152,0,147,0],[153,0,148,0],[154,0,149,0],[155,2,150,15],[155,8,150,21,"PressResponder"],[155,22,150,35],[155,23,150,36],[156,4,151,2,"constructor"],[156,15,151,13,"constructor"],[156,16,151,14,"config"],[156,22,151,20],[156,24,151,22],[157,6,152,4],[157,10,152,8],[157,11,152,9,"_eventHandlers"],[157,25,152,23],[157,28,152,26],[157,32,152,30],[158,6,153,4],[158,10,153,8],[158,11,153,9,"_isPointerTouch"],[158,26,153,24],[158,29,153,27],[158,34,153,32],[159,6,154,4],[159,10,154,8],[159,11,154,9,"_longPressDelayTimeout"],[159,33,154,31],[159,36,154,34],[159,40,154,38],[160,6,155,4],[160,10,155,8],[160,11,155,9,"_longPressDispatched"],[160,31,155,29],[160,34,155,32],[160,39,155,37],[161,6,156,4],[161,10,156,8],[161,11,156,9,"_pressDelayTimeout"],[161,29,156,27],[161,32,156,30],[161,36,156,34],[162,6,157,4],[162,10,157,8],[162,11,157,9,"_pressOutDelayTimeout"],[162,32,157,30],[162,35,157,33],[162,39,157,37],[163,6,158,4],[163,10,158,8],[163,11,158,9,"_touchState"],[163,22,158,20],[163,25,158,23,"NOT_RESPONDER"],[163,38,158,36],[164,6,159,4],[164,10,159,8],[164,11,159,9,"_responderElement"],[164,28,159,26],[164,31,159,29],[164,35,159,33],[165,6,160,4],[165,10,160,8],[165,11,160,9,"configure"],[165,20,160,18],[165,21,160,19,"config"],[165,27,160,25],[165,28,160,26],[166,4,161,2],[167,4,162,2,"configure"],[167,13,162,11,"configure"],[167,14,162,12,"config"],[167,20,162,18],[167,22,162,20],[168,6,163,4],[168,10,163,8],[168,11,163,9,"_config"],[168,18,163,16],[168,21,163,19,"config"],[168,27,163,25],[169,4,164,2],[171,4,166,2],[172,0,167,0],[173,0,168,0],[174,4,169,2,"reset"],[174,9,169,7,"reset"],[174,10,169,7],[174,12,169,10],[175,6,170,4],[175,10,170,8],[175,11,170,9,"_cancelLongPressDelayTimeout"],[175,39,170,37],[175,40,170,38],[175,41,170,39],[176,6,171,4],[176,10,171,8],[176,11,171,9,"_cancelPressDelayTimeout"],[176,35,171,33],[176,36,171,34],[176,37,171,35],[177,6,172,4],[177,10,172,8],[177,11,172,9,"_cancelPressOutDelayTimeout"],[177,38,172,36],[177,39,172,37],[177,40,172,38],[178,4,173,2],[180,4,175,2],[181,0,176,0],[182,0,177,0],[183,4,178,2,"getEventHandlers"],[183,20,178,18,"getEventHandlers"],[183,21,178,18],[183,23,178,21],[184,6,179,4],[184,10,179,8],[184,14,179,12],[184,15,179,13,"_eventHandlers"],[184,29,179,27],[184,33,179,31],[184,37,179,35],[184,39,179,37],[185,8,180,6],[185,12,180,10],[185,13,180,11,"_eventHandlers"],[185,27,180,25],[185,30,180,28],[185,34,180,32],[185,35,180,33,"_createEventHandlers"],[185,55,180,53],[185,56,180,54],[185,57,180,55],[186,6,181,4],[187,6,182,4],[187,13,182,11],[187,17,182,15],[187,18,182,16,"_eventHandlers"],[187,32,182,30],[188,4,183,2],[189,4,184,2,"_createEventHandlers"],[189,24,184,22,"_createEventHandlers"],[189,25,184,22],[189,27,184,25],[190,6,185,4],[190,10,185,8,"start"],[190,15,185,13],[190,18,185,16,"start"],[190,19,185,17,"event"],[190,24,185,22],[190,26,185,24,"shouldDelay"],[190,37,185,35],[190,42,185,40],[191,8,186,6,"event"],[191,13,186,11],[191,14,186,12,"persist"],[191,21,186,19],[191,22,186,20],[191,23,186,21],[192,8,187,6],[192,12,187,10],[192,13,187,11,"_cancelPressOutDelayTimeout"],[192,40,187,38],[192,41,187,39],[192,42,187,40],[193,8,188,6],[193,12,188,10],[193,13,188,11,"_longPressDispatched"],[193,33,188,31],[193,36,188,34],[193,41,188,39],[194,8,189,6],[194,12,189,10],[194,13,189,11,"_selectionTerminated"],[194,33,189,31],[194,36,189,34],[194,41,189,39],[195,8,190,6],[195,12,190,10],[195,13,190,11,"_touchState"],[195,24,190,22],[195,27,190,25,"NOT_RESPONDER"],[195,40,190,38],[196,8,191,6],[196,12,191,10],[196,13,191,11,"_isPointerTouch"],[196,28,191,26],[196,31,191,29,"event"],[196,36,191,34],[196,37,191,35,"nativeEvent"],[196,48,191,46],[196,49,191,47,"type"],[196,53,191,51],[196,58,191,56],[196,70,191,68],[197,8,192,6],[197,12,192,10],[197,13,192,11,"_receiveSignal"],[197,27,192,25],[197,28,192,26,"RESPONDER_GRANT"],[197,43,192,41],[197,45,192,43,"event"],[197,50,192,48],[197,51,192,49],[198,8,193,6],[198,12,193,10,"delayPressStart"],[198,27,193,25],[198,30,193,28,"normalizeDelay"],[198,44,193,42],[198,45,193,43],[198,49,193,47],[198,50,193,48,"_config"],[198,57,193,55],[198,58,193,56,"delayPressStart"],[198,73,193,71],[198,75,193,73],[198,76,193,74],[198,78,193,76,"DEFAULT_PRESS_DELAY_MS"],[198,100,193,98],[198,101,193,99],[199,8,194,6],[199,12,194,10,"shouldDelay"],[199,23,194,21],[199,28,194,26],[199,33,194,31],[199,37,194,35,"delayPressStart"],[199,52,194,50],[199,55,194,53],[199,56,194,54],[199,58,194,56],[200,10,195,8],[200,14,195,12],[200,15,195,13,"_pressDelayTimeout"],[200,33,195,31],[200,36,195,34,"setTimeout"],[200,46,195,44],[200,47,195,45],[200,53,195,51],[201,12,196,10],[201,16,196,14],[201,17,196,15,"_receiveSignal"],[201,31,196,29],[201,32,196,30,"DELAY"],[201,37,196,35],[201,39,196,37,"event"],[201,44,196,42],[201,45,196,43],[202,10,197,8],[202,11,197,9],[202,13,197,11,"delayPressStart"],[202,28,197,26],[202,29,197,27],[203,8,198,6],[203,9,198,7],[203,15,198,13],[204,10,199,8],[204,14,199,12],[204,15,199,13,"_receiveSignal"],[204,29,199,27],[204,30,199,28,"DELAY"],[204,35,199,33],[204,37,199,35,"event"],[204,42,199,40],[204,43,199,41],[205,8,200,6],[206,8,201,6],[206,12,201,10,"delayLongPress"],[206,26,201,24],[206,29,201,27,"normalizeDelay"],[206,43,201,41],[206,44,201,42],[206,48,201,46],[206,49,201,47,"_config"],[206,56,201,54],[206,57,201,55,"delayLongPress"],[206,71,201,69],[206,73,201,71],[206,75,201,73],[206,77,201,75,"DEFAULT_LONG_PRESS_DELAY_MS"],[206,104,201,102],[206,105,201,103],[207,8,202,6],[207,12,202,10],[207,13,202,11,"_longPressDelayTimeout"],[207,35,202,33],[207,38,202,36,"setTimeout"],[207,48,202,46],[207,49,202,47],[207,55,202,53],[208,10,203,8],[208,14,203,12],[208,15,203,13,"_handleLongPress"],[208,31,203,29],[208,32,203,30,"event"],[208,37,203,35],[208,38,203,36],[209,8,204,6],[209,9,204,7],[209,11,204,9,"delayLongPress"],[209,25,204,23],[209,28,204,26,"delayPressStart"],[209,43,204,41],[209,44,204,42],[210,6,205,4],[210,7,205,5],[211,6,206,4],[211,10,206,8,"end"],[211,13,206,11],[211,16,206,14,"event"],[211,21,206,19],[211,25,206,23],[212,8,207,6],[212,12,207,10],[212,13,207,11,"_receiveSignal"],[212,27,207,25],[212,28,207,26,"RESPONDER_RELEASE"],[212,45,207,43],[212,47,207,45,"event"],[212,52,207,50],[212,53,207,51],[213,6,208,4],[213,7,208,5],[214,6,209,4],[214,10,209,8,"keyupHandler"],[214,22,209,20],[214,25,209,23,"event"],[214,30,209,28],[214,34,209,32],[215,8,210,6],[215,12,210,10,"onPress"],[215,19,210,17],[215,22,210,20],[215,26,210,24],[215,27,210,25,"_config"],[215,34,210,32],[215,35,210,33,"onPress"],[215,42,210,40],[216,8,211,6],[216,12,211,10,"target"],[216,18,211,16],[216,21,211,19,"event"],[216,26,211,24],[216,27,211,25,"target"],[216,33,211,31],[217,8,212,6],[217,12,212,10],[217,16,212,14],[217,17,212,15,"_touchState"],[217,28,212,26],[217,33,212,31,"NOT_RESPONDER"],[217,46,212,44],[217,50,212,48,"isValidKeyPress"],[217,65,212,63],[217,66,212,64,"event"],[217,71,212,69],[217,72,212,70],[217,74,212,72],[218,10,213,8,"end"],[218,13,213,11],[218,14,213,12,"event"],[218,19,213,17],[218,20,213,18],[219,10,214,8,"document"],[219,18,214,16],[219,19,214,17,"removeEventListener"],[219,38,214,36],[219,39,214,37],[219,46,214,44],[219,48,214,46,"keyupHandler"],[219,60,214,58],[219,61,214,59],[220,10,215,8],[220,14,215,12,"role"],[220,18,215,16],[220,21,215,19,"target"],[220,27,215,25],[220,28,215,26,"getAttribute"],[220,40,215,38],[220,41,215,39],[220,47,215,45],[220,48,215,46],[221,10,216,8],[221,14,216,12,"elementType"],[221,25,216,23],[221,28,216,26,"getElementType"],[221,42,216,40],[221,43,216,41,"target"],[221,49,216,47],[221,50,216,48],[222,10,217,8],[222,14,217,12,"isNativeInteractiveElement"],[222,40,217,38],[222,43,217,41,"role"],[222,47,217,45],[222,52,217,50],[222,58,217,56],[222,62,217,60,"elementType"],[222,73,217,71],[222,78,217,76],[222,81,217,79],[222,85,217,83,"elementType"],[222,96,217,94],[222,101,217,99],[222,109,217,107],[222,113,217,111,"elementType"],[222,124,217,122],[222,129,217,127],[222,136,217,134],[222,140,217,138,"elementType"],[222,151,217,149],[222,156,217,154],[222,164,217,162],[222,168,217,166,"elementType"],[222,179,217,177],[222,184,217,182],[222,194,217,192],[223,10,218,8],[223,14,218,12,"isActiveElement"],[223,29,218,27],[223,32,218,30],[223,36,218,34],[223,37,218,35,"_responderElement"],[223,54,218,52],[223,59,218,57,"target"],[223,65,218,63],[224,10,219,8],[224,14,219,12,"onPress"],[224,21,219,19],[224,25,219,23],[224,29,219,27],[224,33,219,31],[224,34,219,32,"isNativeInteractiveElement"],[224,60,219,58],[224,64,219,62,"isActiveElement"],[224,79,219,77],[224,81,219,79],[225,12,220,10,"onPress"],[225,19,220,17],[225,20,220,18,"event"],[225,25,220,23],[225,26,220,24],[226,10,221,8],[227,10,222,8],[227,14,222,12],[227,15,222,13,"_responderElement"],[227,32,222,30],[227,35,222,33],[227,39,222,37],[228,8,223,6],[229,6,224,4],[229,7,224,5],[230,6,225,4],[230,13,225,11],[231,8,226,6,"onStartShouldSetResponder"],[231,33,226,31],[231,35,226,33,"event"],[231,40,226,38],[231,44,226,42],[232,10,227,8],[232,14,227,12,"disabled"],[232,22,227,20],[232,25,227,23],[232,29,227,27],[232,30,227,28,"_config"],[232,37,227,35],[232,38,227,36,"disabled"],[232,46,227,44],[233,10,228,8],[233,14,228,12,"disabled"],[233,22,228,20],[233,26,228,24,"isButtonRole"],[233,38,228,36],[233,39,228,37,"event"],[233,44,228,42],[233,45,228,43,"currentTarget"],[233,58,228,56],[233,59,228,57],[233,61,228,59],[234,12,229,10,"event"],[234,17,229,15],[234,18,229,16,"stopPropagation"],[234,33,229,31],[234,34,229,32],[234,35,229,33],[235,10,230,8],[236,10,231,8],[236,14,231,12,"disabled"],[236,22,231,20],[236,26,231,24],[236,30,231,28],[236,32,231,30],[237,12,232,10],[237,19,232,17],[237,23,232,21],[238,10,233,8],[239,10,234,8],[239,17,234,15],[239,18,234,16,"disabled"],[239,26,234,24],[240,8,235,6],[240,9,235,7],[241,8,236,6,"onKeyDown"],[241,17,236,15],[241,19,236,17,"event"],[241,24,236,22],[241,28,236,26],[242,10,237,8],[242,14,237,12,"disabled"],[242,22,237,20],[242,25,237,23],[242,29,237,27],[242,30,237,28,"_config"],[242,37,237,35],[242,38,237,36,"disabled"],[242,46,237,44],[243,10,238,8],[243,14,238,12,"key"],[243,17,238,15],[243,20,238,18,"event"],[243,25,238,23],[243,26,238,24,"key"],[243,29,238,27],[244,12,239,10,"target"],[244,18,239,16],[244,21,239,19,"event"],[244,26,239,24],[244,27,239,25,"target"],[244,33,239,31],[245,10,240,8],[245,14,240,12],[245,15,240,13,"disabled"],[245,23,240,21],[245,27,240,25,"isValidKeyPress"],[245,42,240,40],[245,43,240,41,"event"],[245,48,240,46],[245,49,240,47],[245,51,240,49],[246,12,241,10],[246,16,241,14],[246,20,241,18],[246,21,241,19,"_touchState"],[246,32,241,30],[246,37,241,35,"NOT_RESPONDER"],[246,50,241,48],[246,52,241,50],[247,14,242,12,"start"],[247,19,242,17],[247,20,242,18,"event"],[247,25,242,23],[247,27,242,25],[247,32,242,30],[247,33,242,31],[248,14,243,12],[248,18,243,16],[248,19,243,17,"_responderElement"],[248,36,243,34],[248,39,243,37,"target"],[248,45,243,43],[249,14,244,12],[250,14,245,12],[251,14,246,12,"document"],[251,22,246,20],[251,23,246,21,"addEventListener"],[251,39,246,37],[251,40,246,38],[251,47,246,45],[251,49,246,47,"keyupHandler"],[251,61,246,59],[251,62,246,60],[252,12,247,10],[253,12,248,10],[253,16,248,14,"isSpacebarKey"],[253,29,248,27],[253,32,248,30,"key"],[253,35,248,33],[253,40,248,38],[253,43,248,41],[253,47,248,45,"key"],[253,50,248,48],[253,55,248,53],[253,65,248,63],[254,12,249,10],[254,16,249,14,"role"],[254,20,249,18],[254,23,249,21,"getElementRole"],[254,37,249,35],[254,38,249,36,"target"],[254,44,249,42],[254,45,249,43],[255,12,250,10],[255,16,250,14,"isButtonLikeRole"],[255,32,250,30],[255,35,250,33,"role"],[255,39,250,37],[255,44,250,42],[255,52,250,50],[255,56,250,54,"role"],[255,60,250,58],[255,65,250,63],[255,75,250,73],[256,12,251,10],[256,16,251,14,"isSpacebarKey"],[256,29,251,27],[256,33,251,31,"isButtonLikeRole"],[256,49,251,47],[256,53,251,51,"getElementType"],[256,67,251,65],[256,68,251,66,"target"],[256,74,251,72],[256,75,251,73],[256,80,251,78],[256,88,251,86],[256,90,251,88],[257,14,252,12],[258,14,253,12,"event"],[258,19,253,17],[258,20,253,18,"preventDefault"],[258,34,253,32],[258,35,253,33],[258,36,253,34],[259,12,254,10],[260,12,255,10,"event"],[260,17,255,15],[260,18,255,16,"stopPropagation"],[260,33,255,31],[260,34,255,32],[260,35,255,33],[261,10,256,8],[262,8,257,6],[262,9,257,7],[263,8,258,6,"onResponderGrant"],[263,24,258,22],[263,26,258,24,"event"],[263,31,258,29],[263,35,258,33,"start"],[263,40,258,38],[263,41,258,39,"event"],[263,46,258,44],[263,47,258,45],[264,8,259,6,"onResponderMove"],[264,23,259,21],[264,25,259,23,"event"],[264,30,259,28],[264,34,259,32],[265,10,260,8],[265,14,260,12],[265,18,260,16],[265,19,260,17,"_config"],[265,26,260,24],[265,27,260,25,"onPressMove"],[265,38,260,36],[265,42,260,40],[265,46,260,44],[265,48,260,46],[266,12,261,10],[266,16,261,14],[266,17,261,15,"_config"],[266,24,261,22],[266,25,261,23,"onPressMove"],[266,36,261,34],[266,37,261,35,"event"],[266,42,261,40],[266,43,261,41],[267,10,262,8],[268,10,263,8],[268,14,263,12,"touch"],[268,19,263,17],[268,22,263,20,"getTouchFromResponderEvent"],[268,48,263,46],[268,49,263,47,"event"],[268,54,263,52],[268,55,263,53],[269,10,264,8],[269,14,264,12],[269,18,264,16],[269,19,264,17,"_touchActivatePosition"],[269,41,264,39],[269,45,264,43],[269,49,264,47],[269,51,264,49],[270,12,265,10],[270,16,265,14,"deltaX"],[270,22,265,20],[270,25,265,23],[270,29,265,27],[270,30,265,28,"_touchActivatePosition"],[270,52,265,50],[270,53,265,51,"pageX"],[270,58,265,56],[270,61,265,59,"touch"],[270,66,265,64],[270,67,265,65,"pageX"],[270,72,265,70],[271,12,266,10],[271,16,266,14,"deltaY"],[271,22,266,20],[271,25,266,23],[271,29,266,27],[271,30,266,28,"_touchActivatePosition"],[271,52,266,50],[271,53,266,51,"pageY"],[271,58,266,56],[271,61,266,59,"touch"],[271,66,266,64],[271,67,266,65,"pageY"],[271,72,266,70],[272,12,267,10],[272,16,267,14,"Math"],[272,20,267,18],[272,21,267,19,"hypot"],[272,26,267,24],[272,27,267,25,"deltaX"],[272,33,267,31],[272,35,267,33,"deltaY"],[272,41,267,39],[272,42,267,40],[272,45,267,43],[272,47,267,45],[272,49,267,47],[273,14,268,12],[273,18,268,16],[273,19,268,17,"_cancelLongPressDelayTimeout"],[273,47,268,45],[273,48,268,46],[273,49,268,47],[274,12,269,10],[275,10,270,8],[276,8,271,6],[276,9,271,7],[277,8,272,6,"onResponderRelease"],[277,26,272,24],[277,28,272,26,"event"],[277,33,272,31],[277,37,272,35,"end"],[277,40,272,38],[277,41,272,39,"event"],[277,46,272,44],[277,47,272,45],[278,8,273,6,"onResponderTerminate"],[278,28,273,26],[278,30,273,28,"event"],[278,35,273,33],[278,39,273,37],[279,10,274,8],[279,14,274,12,"event"],[279,19,274,17],[279,20,274,18,"nativeEvent"],[279,31,274,29],[279,32,274,30,"type"],[279,36,274,34],[279,41,274,39],[279,58,274,56],[279,60,274,58],[280,12,275,10],[280,16,275,14],[280,17,275,15,"_selectionTerminated"],[280,37,275,35],[280,40,275,38],[280,44,275,42],[281,10,276,8],[282,10,277,8],[282,14,277,12],[282,15,277,13,"_receiveSignal"],[282,29,277,27],[282,30,277,28,"RESPONDER_TERMINATED"],[282,50,277,48],[282,52,277,50,"event"],[282,57,277,55],[282,58,277,56],[283,8,278,6],[283,9,278,7],[284,8,279,6,"onResponderTerminationRequest"],[284,37,279,35],[284,39,279,37,"event"],[284,44,279,42],[284,48,279,46],[285,10,280,8],[285,14,280,12,"_this$_config"],[285,27,280,25],[285,30,280,28],[285,34,280,32],[285,35,280,33,"_config"],[285,42,280,40],[286,12,281,10,"cancelable"],[286,22,281,20],[286,25,281,23,"_this$_config"],[286,38,281,36],[286,39,281,37,"cancelable"],[286,49,281,47],[287,12,282,10,"disabled"],[287,20,282,18],[287,23,282,21,"_this$_config"],[287,36,282,34],[287,37,282,35,"disabled"],[287,45,282,43],[288,12,283,10,"onLongPress"],[288,23,283,21],[288,26,283,24,"_this$_config"],[288,39,283,37],[288,40,283,38,"onLongPress"],[288,51,283,49],[289,10,284,8],[290,10,285,8],[291,10,286,8],[291,14,286,12],[291,15,286,13,"disabled"],[291,23,286,21],[291,27,286,25,"onLongPress"],[291,38,286,36],[291,42,286,40],[291,46,286,44],[291,50,286,48],[291,54,286,52],[291,55,286,53,"_isPointerTouch"],[291,70,286,68],[291,74,286,72,"event"],[291,79,286,77],[291,80,286,78,"nativeEvent"],[291,91,286,89],[291,92,286,90,"type"],[291,96,286,94],[291,101,286,99],[291,114,286,112],[291,116,286,114],[292,12,287,10],[292,19,287,17],[292,24,287,22],[293,10,288,8],[294,10,289,8],[294,14,289,12,"cancelable"],[294,24,289,22],[294,28,289,26],[294,32,289,30],[294,34,289,32],[295,12,290,10],[295,19,290,17],[295,23,290,21],[296,10,291,8],[297,10,292,8],[297,17,292,15,"cancelable"],[297,27,292,25],[298,8,293,6],[298,9,293,7],[299,8,294,6],[300,8,295,6],[301,8,296,6],[302,8,297,6],[303,8,298,6],[304,8,299,6],[305,8,300,6],[306,8,301,6],[307,8,302,6,"onClick"],[307,15,302,13],[307,17,302,15,"event"],[307,22,302,20],[307,26,302,24],[308,10,303,8],[308,14,303,12,"_this$_config2"],[308,28,303,26],[308,31,303,29],[308,35,303,33],[308,36,303,34,"_config"],[308,43,303,41],[309,12,304,10,"disabled"],[309,20,304,18],[309,23,304,21,"_this$_config2"],[309,37,304,35],[309,38,304,36,"disabled"],[309,46,304,44],[310,12,305,10,"onPress"],[310,19,305,17],[310,22,305,20,"_this$_config2"],[310,36,305,34],[310,37,305,35,"onPress"],[310,44,305,42],[311,10,306,8],[311,14,306,12],[311,15,306,13,"disabled"],[311,23,306,21],[311,25,306,23],[312,12,307,10],[313,12,308,10],[314,12,309,10],[315,12,310,10,"event"],[315,17,310,15],[315,18,310,16,"stopPropagation"],[315,33,310,31],[315,34,310,32],[315,35,310,33],[316,12,311,10],[316,16,311,14],[316,20,311,18],[316,21,311,19,"_longPressDispatched"],[316,41,311,39],[316,45,311,43],[316,49,311,47],[316,50,311,48,"_selectionTerminated"],[316,70,311,68],[316,72,311,70],[317,14,312,12,"event"],[317,19,312,17],[317,20,312,18,"preventDefault"],[317,34,312,32],[317,35,312,33],[317,36,312,34],[318,12,313,10],[318,13,313,11],[318,19,313,17],[318,23,313,21,"onPress"],[318,30,313,28],[318,34,313,32],[318,38,313,36],[318,42,313,40,"event"],[318,47,313,45],[318,48,313,46,"altKey"],[318,54,313,52],[318,59,313,57],[318,64,313,62],[318,66,313,64],[319,14,314,12,"onPress"],[319,21,314,19],[319,22,314,20,"event"],[319,27,314,25],[319,28,314,26],[320,12,315,10],[321,10,316,8],[321,11,316,9],[321,17,316,15],[322,12,317,10],[322,16,317,14,"isButtonRole"],[322,28,317,26],[322,29,317,27,"event"],[322,34,317,32],[322,35,317,33,"currentTarget"],[322,48,317,46],[322,49,317,47],[322,51,317,49],[323,14,318,12,"event"],[323,19,318,17],[323,20,318,18,"stopPropagation"],[323,35,318,33],[323,36,318,34],[323,37,318,35],[324,12,319,10],[325,10,320,8],[326,8,321,6],[326,9,321,7],[327,8,322,6],[328,8,323,6],[329,8,324,6,"onContextMenu"],[329,21,324,19],[329,23,324,21,"event"],[329,28,324,26],[329,32,324,30],[330,10,325,8],[330,14,325,12,"_this$_config3"],[330,28,325,26],[330,31,325,29],[330,35,325,33],[330,36,325,34,"_config"],[330,43,325,41],[331,12,326,10,"disabled"],[331,20,326,18],[331,23,326,21,"_this$_config3"],[331,37,326,35],[331,38,326,36,"disabled"],[331,46,326,44],[332,12,327,10,"onLongPress"],[332,23,327,21],[332,26,327,24,"_this$_config3"],[332,40,327,38],[332,41,327,39,"onLongPress"],[332,52,327,50],[333,10,328,8],[333,14,328,12],[333,15,328,13,"disabled"],[333,23,328,21],[333,25,328,23],[334,12,329,10],[334,16,329,14,"onLongPress"],[334,27,329,25],[334,31,329,29],[334,35,329,33],[334,39,329,37],[334,43,329,41],[334,44,329,42,"_isPointerTouch"],[334,59,329,57],[334,63,329,61],[334,64,329,62,"event"],[334,69,329,67],[334,70,329,68,"defaultPrevented"],[334,86,329,84],[334,88,329,86],[335,14,330,12,"event"],[335,19,330,17],[335,20,330,18,"preventDefault"],[335,34,330,32],[335,35,330,33],[335,36,330,34],[336,14,331,12,"event"],[336,19,331,17],[336,20,331,18,"stopPropagation"],[336,35,331,33],[336,36,331,34],[336,37,331,35],[337,12,332,10],[338,10,333,8],[338,11,333,9],[338,17,333,15],[339,12,334,10],[339,16,334,14,"isButtonRole"],[339,28,334,26],[339,29,334,27,"event"],[339,34,334,32],[339,35,334,33,"currentTarget"],[339,48,334,46],[339,49,334,47],[339,51,334,49],[340,14,335,12,"event"],[340,19,335,17],[340,20,335,18,"stopPropagation"],[340,35,335,33],[340,36,335,34],[340,37,335,35],[341,12,336,10],[342,10,337,8],[343,8,338,6],[344,6,339,4],[344,7,339,5],[345,4,340,2],[347,4,342,2],[348,0,343,0],[349,0,344,0],[350,0,345,0],[351,4,346,2,"_receiveSignal"],[351,18,346,16,"_receiveSignal"],[351,19,346,17,"signal"],[351,25,346,23],[351,27,346,25,"event"],[351,32,346,30],[351,34,346,32],[352,6,347,4],[352,10,347,8,"prevState"],[352,19,347,17],[352,22,347,20],[352,26,347,24],[352,27,347,25,"_touchState"],[352,38,347,36],[353,6,348,4],[353,10,348,8,"nextState"],[353,19,348,17],[353,22,348,20],[353,26,348,24],[354,6,349,4],[354,10,349,8,"Transitions"],[354,21,349,19],[354,22,349,20,"prevState"],[354,31,349,29],[354,32,349,30],[354,36,349,34],[354,40,349,38],[354,42,349,40],[355,8,350,6,"nextState"],[355,17,350,15],[355,20,350,18,"Transitions"],[355,31,350,29],[355,32,350,30,"prevState"],[355,41,350,39],[355,42,350,40],[355,43,350,41,"signal"],[355,49,350,47],[355,50,350,48],[356,6,351,4],[357,6,352,4],[357,10,352,8],[357,14,352,12],[357,15,352,13,"_touchState"],[357,26,352,24],[357,31,352,29,"NOT_RESPONDER"],[357,44,352,42],[357,48,352,46,"signal"],[357,54,352,52],[357,59,352,57,"RESPONDER_RELEASE"],[357,76,352,74],[357,78,352,76],[358,8,353,6],[359,6,354,4],[360,6,355,4],[360,10,355,8,"nextState"],[360,19,355,17],[360,23,355,21],[360,27,355,25],[360,31,355,29,"nextState"],[360,40,355,38],[360,45,355,43,"ERROR"],[360,50,355,48],[360,52,355,50],[361,8,356,6,"console"],[361,15,356,13],[361,16,356,14,"error"],[361,21,356,19],[361,22,356,20],[361,55,356,53],[361,58,356,56,"signal"],[361,64,356,62],[361,67,356,65],[361,80,356,78],[361,83,356,81,"prevState"],[361,92,356,90],[361,95,356,93],[361,110,356,108],[361,111,356,109],[362,6,357,4],[362,7,357,5],[362,13,357,11],[362,17,357,15,"prevState"],[362,26,357,24],[362,31,357,29,"nextState"],[362,40,357,38],[362,42,357,40],[363,8,358,6],[363,12,358,10],[363,13,358,11,"_performTransitionSideEffects"],[363,42,358,40],[363,43,358,41,"prevState"],[363,52,358,50],[363,54,358,52,"nextState"],[363,63,358,61],[363,65,358,63,"signal"],[363,71,358,69],[363,73,358,71,"event"],[363,78,358,76],[363,79,358,77],[364,8,359,6],[364,12,359,10],[364,13,359,11,"_touchState"],[364,24,359,22],[364,27,359,25,"nextState"],[364,36,359,34],[365,6,360,4],[366,4,361,2],[368,4,363,2],[369,0,364,0],[370,0,365,0],[371,0,366,0],[372,4,367,2,"_performTransitionSideEffects"],[372,33,367,31,"_performTransitionSideEffects"],[372,34,367,32,"prevState"],[372,43,367,41],[372,45,367,43,"nextState"],[372,54,367,52],[372,56,367,54,"signal"],[372,62,367,60],[372,64,367,62,"event"],[372,69,367,67],[372,71,367,69],[373,6,368,4],[373,10,368,8,"isTerminalSignal"],[373,26,368,24],[373,27,368,25,"signal"],[373,33,368,31],[373,34,368,32],[373,36,368,34],[374,8,369,6],[375,8,370,6],[376,8,371,6],[377,8,372,6,"setTimeout"],[377,18,372,16],[377,19,372,17],[377,25,372,23],[378,10,373,8],[378,14,373,12],[378,15,373,13,"_isPointerTouch"],[378,30,373,28],[378,33,373,31],[378,38,373,36],[379,8,374,6],[379,9,374,7],[379,11,374,9],[379,12,374,10],[379,13,374,11],[380,8,375,6],[380,12,375,10],[380,13,375,11,"_touchActivatePosition"],[380,35,375,33],[380,38,375,36],[380,42,375,40],[381,8,376,6],[381,12,376,10],[381,13,376,11,"_cancelLongPressDelayTimeout"],[381,41,376,39],[381,42,376,40],[381,43,376,41],[382,6,377,4],[383,6,378,4],[383,10,378,8,"isPressStartSignal"],[383,28,378,26],[383,29,378,27,"prevState"],[383,38,378,36],[383,39,378,37],[383,43,378,41,"signal"],[383,49,378,47],[383,54,378,52,"LONG_PRESS_DETECTED"],[383,73,378,71],[383,75,378,73],[384,8,379,6],[384,12,379,10,"onLongPress"],[384,23,379,21],[384,26,379,24],[384,30,379,28],[384,31,379,29,"_config"],[384,38,379,36],[384,39,379,37,"onLongPress"],[384,50,379,48],[385,8,380,6],[386,8,381,6],[387,8,382,6],[387,12,382,10,"onLongPress"],[387,23,382,21],[387,27,382,25],[387,31,382,29],[387,35,382,33,"event"],[387,40,382,38],[387,41,382,39,"nativeEvent"],[387,52,382,50],[387,53,382,51,"key"],[387,56,382,54],[387,60,382,58],[387,64,382,62],[387,66,382,64],[388,10,383,8,"onLongPress"],[388,21,383,19],[388,22,383,20,"event"],[388,27,383,25],[388,28,383,26],[389,10,384,8],[389,14,384,12],[389,15,384,13,"_longPressDispatched"],[389,35,384,33],[389,38,384,36],[389,42,384,40],[390,8,385,6],[391,6,386,4],[392,6,387,4],[392,10,387,8,"isPrevActive"],[392,22,387,20],[392,25,387,23,"isActiveSignal"],[392,39,387,37],[392,40,387,38,"prevState"],[392,49,387,47],[392,50,387,48],[393,6,388,4],[393,10,388,8,"isNextActive"],[393,22,388,20],[393,25,388,23,"isActiveSignal"],[393,39,388,37],[393,40,388,38,"nextState"],[393,49,388,47],[393,50,388,48],[394,6,389,4],[394,10,389,8],[394,11,389,9,"isPrevActive"],[394,23,389,21],[394,27,389,25,"isNextActive"],[394,39,389,37],[394,41,389,39],[395,8,390,6],[395,12,390,10],[395,13,390,11,"_activate"],[395,22,390,20],[395,23,390,21,"event"],[395,28,390,26],[395,29,390,27],[396,6,391,4],[396,7,391,5],[396,13,391,11],[396,17,391,15,"isPrevActive"],[396,29,391,27],[396,33,391,31],[396,34,391,32,"isNextActive"],[396,46,391,44],[396,48,391,46],[397,8,392,6],[397,12,392,10],[397,13,392,11,"_deactivate"],[397,24,392,22],[397,25,392,23,"event"],[397,30,392,28],[397,31,392,29],[398,6,393,4],[399,6,394,4],[399,10,394,8,"isPressStartSignal"],[399,28,394,26],[399,29,394,27,"prevState"],[399,38,394,36],[399,39,394,37],[399,43,394,41,"signal"],[399,49,394,47],[399,54,394,52,"RESPONDER_RELEASE"],[399,71,394,69],[399,73,394,71],[400,8,395,6],[400,12,395,10,"_this$_config4"],[400,26,395,24],[400,29,395,27],[400,33,395,31],[400,34,395,32,"_config"],[400,41,395,39],[401,10,396,8,"_onLongPress"],[401,22,396,20],[401,25,396,23,"_this$_config4"],[401,39,396,37],[401,40,396,38,"onLongPress"],[401,51,396,49],[402,10,397,8,"onPress"],[402,17,397,15],[402,20,397,18,"_this$_config4"],[402,34,397,32],[402,35,397,33,"onPress"],[402,42,397,40],[403,8,398,6],[403,12,398,10,"onPress"],[403,19,398,17],[403,23,398,21],[403,27,398,25],[403,29,398,27],[404,10,399,8],[404,14,399,12,"isPressCanceledByLongPress"],[404,40,399,38],[404,43,399,41,"_onLongPress"],[404,55,399,53],[404,59,399,57],[404,63,399,61],[404,67,399,65,"prevState"],[404,76,399,74],[404,81,399,79,"RESPONDER_ACTIVE_LONG_PRESS_START"],[404,114,399,112],[405,10,400,8],[405,14,400,12],[405,15,400,13,"isPressCanceledByLongPress"],[405,41,400,39],[405,43,400,41],[406,12,401,10],[407,12,402,10],[407,16,402,14],[407,17,402,15,"isNextActive"],[407,29,402,27],[407,33,402,31],[407,34,402,32,"isPrevActive"],[407,46,402,44],[407,48,402,46],[408,14,403,12],[408,18,403,16],[408,19,403,17,"_activate"],[408,28,403,26],[408,29,403,27,"event"],[408,34,403,32],[408,35,403,33],[409,14,404,12],[409,18,404,16],[409,19,404,17,"_deactivate"],[409,30,404,28],[409,31,404,29,"event"],[409,36,404,34],[409,37,404,35],[410,12,405,10],[411,10,406,8],[412,8,407,6],[413,6,408,4],[414,6,409,4],[414,10,409,8],[414,11,409,9,"_cancelPressDelayTimeout"],[414,35,409,33],[414,36,409,34],[414,37,409,35],[415,4,410,2],[416,4,411,2,"_activate"],[416,13,411,11,"_activate"],[416,14,411,12,"event"],[416,19,411,17],[416,21,411,19],[417,6,412,4],[417,10,412,8,"_this$_config5"],[417,24,412,22],[417,27,412,25],[417,31,412,29],[417,32,412,30,"_config"],[417,39,412,37],[418,8,413,6,"onPressChange"],[418,21,413,19],[418,24,413,22,"_this$_config5"],[418,38,413,36],[418,39,413,37,"onPressChange"],[418,52,413,50],[419,8,414,6,"onPressStart"],[419,20,414,18],[419,23,414,21,"_this$_config5"],[419,37,414,35],[419,38,414,36,"onPressStart"],[419,50,414,48],[420,6,415,4],[420,10,415,8,"touch"],[420,15,415,13],[420,18,415,16,"getTouchFromResponderEvent"],[420,44,415,42],[420,45,415,43,"event"],[420,50,415,48],[420,51,415,49],[421,6,416,4],[421,10,416,8],[421,11,416,9,"_touchActivatePosition"],[421,33,416,31],[421,36,416,34],[422,8,417,6,"pageX"],[422,13,417,11],[422,15,417,13,"touch"],[422,20,417,18],[422,21,417,19,"pageX"],[422,26,417,24],[423,8,418,6,"pageY"],[423,13,418,11],[423,15,418,13,"touch"],[423,20,418,18],[423,21,418,19,"pageY"],[424,6,419,4],[424,7,419,5],[425,6,420,4],[425,10,420,8,"onPressStart"],[425,22,420,20],[425,26,420,24],[425,30,420,28],[425,32,420,30],[426,8,421,6,"onPressStart"],[426,20,421,18],[426,21,421,19,"event"],[426,26,421,24],[426,27,421,25],[427,6,422,4],[428,6,423,4],[428,10,423,8,"onPressChange"],[428,23,423,21],[428,27,423,25],[428,31,423,29],[428,33,423,31],[429,8,424,6,"onPressChange"],[429,21,424,19],[429,22,424,20],[429,26,424,24],[429,27,424,25],[430,6,425,4],[431,4,426,2],[432,4,427,2,"_deactivate"],[432,15,427,13,"_deactivate"],[432,16,427,14,"event"],[432,21,427,19],[432,23,427,21],[433,6,428,4],[433,10,428,8,"_this$_config6"],[433,24,428,22],[433,27,428,25],[433,31,428,29],[433,32,428,30,"_config"],[433,39,428,37],[434,8,429,6,"onPressChange"],[434,21,429,19],[434,24,429,22,"_this$_config6"],[434,38,429,36],[434,39,429,37,"onPressChange"],[434,52,429,50],[435,8,430,6,"onPressEnd"],[435,18,430,16],[435,21,430,19,"_this$_config6"],[435,35,430,33],[435,36,430,34,"onPressEnd"],[435,46,430,44],[436,6,431,4],[436,15,431,13,"end"],[436,18,431,16,"end"],[436,19,431,16],[436,21,431,19],[437,8,432,6],[437,12,432,10,"onPressEnd"],[437,22,432,20],[437,26,432,24],[437,30,432,28],[437,32,432,30],[438,10,433,8,"onPressEnd"],[438,20,433,18],[438,21,433,19,"event"],[438,26,433,24],[438,27,433,25],[439,8,434,6],[440,8,435,6],[440,12,435,10,"onPressChange"],[440,25,435,23],[440,29,435,27],[440,33,435,31],[440,35,435,33],[441,10,436,8,"onPressChange"],[441,23,436,21],[441,24,436,22],[441,29,436,27],[441,30,436,28],[442,8,437,6],[443,6,438,4],[444,6,439,4],[444,10,439,8,"delayPressEnd"],[444,23,439,21],[444,26,439,24,"normalizeDelay"],[444,40,439,38],[444,41,439,39],[444,45,439,43],[444,46,439,44,"_config"],[444,53,439,51],[444,54,439,52,"delayPressEnd"],[444,67,439,65],[444,68,439,66],[445,6,440,4],[445,10,440,8,"delayPressEnd"],[445,23,440,21],[445,26,440,24],[445,27,440,25],[445,29,440,27],[446,8,441,6],[446,12,441,10],[446,13,441,11,"_pressOutDelayTimeout"],[446,34,441,32],[446,37,441,35,"setTimeout"],[446,47,441,45],[446,48,441,46],[446,54,441,52],[447,10,442,8,"end"],[447,13,442,11],[447,14,442,12],[447,15,442,13],[448,8,443,6],[448,9,443,7],[448,11,443,9,"delayPressEnd"],[448,24,443,22],[448,25,443,23],[449,6,444,4],[449,7,444,5],[449,13,444,11],[450,8,445,6,"end"],[450,11,445,9],[450,12,445,10],[450,13,445,11],[451,6,446,4],[452,4,447,2],[453,4,448,2,"_handleLongPress"],[453,20,448,18,"_handleLongPress"],[453,21,448,19,"event"],[453,26,448,24],[453,28,448,26],[454,6,449,4],[454,10,449,8],[454,14,449,12],[454,15,449,13,"_touchState"],[454,26,449,24],[454,31,449,29,"RESPONDER_ACTIVE_PRESS_START"],[454,59,449,57],[454,63,449,61],[454,67,449,65],[454,68,449,66,"_touchState"],[454,79,449,77],[454,84,449,82,"RESPONDER_ACTIVE_LONG_PRESS_START"],[454,117,449,115],[454,119,449,117],[455,8,450,6],[455,12,450,10],[455,13,450,11,"_receiveSignal"],[455,27,450,25],[455,28,450,26,"LONG_PRESS_DETECTED"],[455,47,450,45],[455,49,450,47,"event"],[455,54,450,52],[455,55,450,53],[456,6,451,4],[457,4,452,2],[458,4,453,2,"_cancelLongPressDelayTimeout"],[458,32,453,30,"_cancelLongPressDelayTimeout"],[458,33,453,30],[458,35,453,33],[459,6,454,4],[459,10,454,8],[459,14,454,12],[459,15,454,13,"_longPressDelayTimeout"],[459,37,454,35],[459,41,454,39],[459,45,454,43],[459,47,454,45],[460,8,455,6,"clearTimeout"],[460,20,455,18],[460,21,455,19],[460,25,455,23],[460,26,455,24,"_longPressDelayTimeout"],[460,48,455,46],[460,49,455,47],[461,8,456,6],[461,12,456,10],[461,13,456,11,"_longPressDelayTimeout"],[461,35,456,33],[461,38,456,36],[461,42,456,40],[462,6,457,4],[463,4,458,2],[464,4,459,2,"_cancelPressDelayTimeout"],[464,28,459,26,"_cancelPressDelayTimeout"],[464,29,459,26],[464,31,459,29],[465,6,460,4],[465,10,460,8],[465,14,460,12],[465,15,460,13,"_pressDelayTimeout"],[465,33,460,31],[465,37,460,35],[465,41,460,39],[465,43,460,41],[466,8,461,6,"clearTimeout"],[466,20,461,18],[466,21,461,19],[466,25,461,23],[466,26,461,24,"_pressDelayTimeout"],[466,44,461,42],[466,45,461,43],[467,8,462,6],[467,12,462,10],[467,13,462,11,"_pressDelayTimeout"],[467,31,462,29],[467,34,462,32],[467,38,462,36],[468,6,463,4],[469,4,464,2],[470,4,465,2,"_cancelPressOutDelayTimeout"],[470,31,465,29,"_cancelPressOutDelayTimeout"],[470,32,465,29],[470,34,465,32],[471,6,466,4],[471,10,466,8],[471,14,466,12],[471,15,466,13,"_pressOutDelayTimeout"],[471,36,466,34],[471,40,466,38],[471,44,466,42],[471,46,466,44],[472,8,467,6,"clearTimeout"],[472,20,467,18],[472,21,467,19],[472,25,467,23],[472,26,467,24,"_pressOutDelayTimeout"],[472,47,467,45],[472,48,467,46],[473,8,468,6],[473,12,468,10],[473,13,468,11,"_pressOutDelayTimeout"],[473,34,468,32],[473,37,468,35],[473,41,468,39],[474,6,469,4],[475,4,470,2],[476,2,471,0],[477,2,471,1,"exports"],[477,9,471,1],[477,10,471,1,"default"],[477,17,471,1],[477,20,471,1,"PressResponder"],[477,34,471,1],[478,2,472,0],[478,11,472,9,"normalizeDelay"],[478,25,472,23,"normalizeDelay"],[478,26,472,24,"delay"],[478,31,472,29],[478,33,472,31,"min"],[478,36,472,34],[478,38,472,36,"fallback"],[478,46,472,44],[478,48,472,46],[479,4,473,2],[479,8,473,6,"min"],[479,11,473,9],[479,16,473,14],[479,21,473,19],[479,22,473,20],[479,24,473,22],[480,6,474,4,"min"],[480,9,474,7],[480,12,474,10],[480,13,474,11],[481,4,475,2],[482,4,476,2],[482,8,476,6,"fallback"],[482,16,476,14],[482,21,476,19],[482,26,476,24],[482,27,476,25],[482,29,476,27],[483,6,477,4,"fallback"],[483,14,477,12],[483,17,477,15],[483,18,477,16],[484,4,478,2],[485,4,479,2],[485,11,479,9,"Math"],[485,15,479,13],[485,16,479,14,"max"],[485,19,479,17],[485,20,479,18,"min"],[485,23,479,21],[485,25,479,23,"delay"],[485,30,479,28],[485,35,479,33],[485,39,479,37],[485,43,479,41,"delay"],[485,48,479,46],[485,53,479,51],[485,58,479,56],[485,59,479,57],[485,62,479,60,"delay"],[485,67,479,65],[485,70,479,68,"fallback"],[485,78,479,76],[485,79,479,77],[486,2,480,0],[487,2,481,0],[487,11,481,9,"getTouchFromResponderEvent"],[487,37,481,35,"getTouchFromResponderEvent"],[487,38,481,36,"event"],[487,43,481,41],[487,45,481,43],[488,4,482,2],[488,8,482,6,"_event$nativeEvent"],[488,26,482,24],[488,29,482,27,"event"],[488,34,482,32],[488,35,482,33,"nativeEvent"],[488,46,482,44],[489,6,483,4,"changedTouches"],[489,20,483,18],[489,23,483,21,"_event$nativeEvent"],[489,41,483,39],[489,42,483,40,"changedTouches"],[489,56,483,54],[490,6,484,4,"touches"],[490,13,484,11],[490,16,484,14,"_event$nativeEvent"],[490,34,484,32],[490,35,484,33,"touches"],[490,42,484,40],[491,4,485,2],[491,8,485,6,"touches"],[491,15,485,13],[491,19,485,17],[491,23,485,21],[491,27,485,25,"touches"],[491,34,485,32],[491,35,485,33,"length"],[491,41,485,39],[491,44,485,42],[491,45,485,43],[491,47,485,45],[492,6,486,4],[492,13,486,11,"touches"],[492,20,486,18],[492,21,486,19],[492,22,486,20],[492,23,486,21],[493,4,487,2],[494,4,488,2],[494,8,488,6,"changedTouches"],[494,22,488,20],[494,26,488,24],[494,30,488,28],[494,34,488,32,"changedTouches"],[494,48,488,46],[494,49,488,47,"length"],[494,55,488,53],[494,58,488,56],[494,59,488,57],[494,61,488,59],[495,6,489,4],[495,13,489,11,"changedTouches"],[495,27,489,25],[495,28,489,26],[495,29,489,27],[495,30,489,28],[496,4,490,2],[497,4,491,2],[497,11,491,9,"event"],[497,16,491,14],[497,17,491,15,"nativeEvent"],[497,28,491,26],[498,2,492,0],[499,0,492,1],[499,3]],"functionMap":{"names":["<global>","getElementRole","getElementType","isActiveSignal","isButtonRole","isPressStartSignal","isTerminalSignal","isValidKeyPress","PressResponder","constructor","configure","reset","getEventHandlers","_createEventHandlers","start","setTimeout$argument_0","end","keyupHandler","onStartShouldSetResponder","onKeyDown","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onClick","onContextMenu","_receiveSignal","_performTransitionSideEffects","_activate","_deactivate","_handleLongPress","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","normalizeDelay","getTouchFromResponderEvent"],"mappings":"AAA;qBC2D,uCD;qBEC,wCF;qBGC,iGH;mBIC,+CJ;yBKC,8IL;uBMC,yEN;sBOC;CPM;eQ8E;ECC;GDU;EEC;GFE;EGK;GHI;EIK;GJK;EKC;gBCC;6CCU;SDE;+CCK;ODE;KDC;cGC;KHE;uBIC;KJe;iCKE;OLS;iBMC;ONqB;wBOC,qBP;uBQC;ORY;0BSC,mBT;4BUC;OVK;qCWC;OXc;eYS;OZmB;qBaG;Obc;GLE;EmBM;GnBe;EoBM;iBbK;OaE;GpBoC;EqBC;GrBe;EsBC;IdI;KcO;8CfG;OeE;GtBI;EuBC;GvBI;EwBC;GxBK;EyBC;GzBK;E0BC;G1BK;CRC;AmCC;CnCQ;AoCC"}},"type":"js/module"}]}