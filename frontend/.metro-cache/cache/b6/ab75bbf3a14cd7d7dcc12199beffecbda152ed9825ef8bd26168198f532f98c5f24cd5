{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getFileExtension = getFileExtension;\n  exports.getFilename = getFilename;\n  exports.getManifestBaseUrl = getManifestBaseUrl;\n  function getFilename(url) {\n    var _URL = new URL(url, 'https://e'),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams;\n    // When attached to a dev server, we use `unstable_path` to represent the file path. This ensures\n    // the file name is not canonicalized by the browser.\n    // NOTE(EvanBacon): This is technically not tied to `__DEV__` as it's possible to use this while bundling in production\n    // mode.\n    if (__DEV__) {\n      if (searchParams.has('unstable_path')) {\n        var encodedFilePath = decodeURIComponent(searchParams.get('unstable_path'));\n        return getBasename(encodedFilePath);\n      }\n    }\n    return getBasename(pathname);\n  }\n  function getBasename(pathname) {\n    return pathname.substring(pathname.lastIndexOf('/') + 1);\n  }\n  function getFileExtension(url) {\n    var filename = getFilename(url);\n    var dotIndex = filename.lastIndexOf('.');\n    // Ignore leading dots for hidden files\n    return dotIndex > 0 ? filename.substring(dotIndex) : '';\n  }\n  /**\n   * Returns the base URL from a manifest's URL. For example, given a manifest hosted at\n   * https://example.com/app/manifest.json, the base URL would be https://example.com/app/. Query\n   * parameters and fragments also are removed.\n   *\n   * For an Expo-hosted project with a manifest hosted at https://exp.host/@user/project/index.exp, the\n   * base URL would be https://exp.host/@user/project.\n   *\n   * We also normalize the \"exp\" protocol to \"http\" to handle internal URLs with the Expo schemes used\n   * to tell the OS to open the URLs in the the Expo client.\n   */\n  function getManifestBaseUrl(manifestUrl) {\n    var urlObject = new URL(manifestUrl);\n    var nextProtocol = urlObject.protocol;\n    // Change the scheme to http(s) if it is exp(s)\n    if (nextProtocol === 'exp:') {\n      nextProtocol = 'http:';\n    } else if (nextProtocol === 'exps:') {\n      nextProtocol = 'https:';\n    }\n    urlObject.protocol = nextProtocol;\n    // Trim filename, query parameters, and fragment, if any\n    var directory = urlObject.pathname.substring(0, urlObject.pathname.lastIndexOf('/') + 1);\n    urlObject.pathname = directory;\n    urlObject.search = '';\n    urlObject.hash = '';\n    // The URL spec doesn't allow for changing the protocol to `http` or `https`\n    // without a port set so instead, we'll just swap the protocol manually.\n    return urlObject.protocol !== nextProtocol ? urlObject.href.replace(urlObject.protocol, nextProtocol) : urlObject.href;\n  }\n});","lineCount":63,"map":[[8,2,1,7],[8,11,1,16,"getFilename"],[8,22,1,27,"getFilename"],[8,23,1,28,"url"],[8,26,1,31],[8,28,1,33],[9,4,2,4],[9,8,2,4,"_URL"],[9,12,2,4],[9,15,2,39],[9,19,2,43,"URL"],[9,22,2,46],[9,23,2,47,"url"],[9,26,2,50],[9,28,2,52],[9,39,2,63],[9,40,2,64],[10,6,2,12,"pathname"],[10,14,2,20],[10,17,2,20,"_URL"],[10,21,2,20],[10,22,2,12,"pathname"],[10,30,2,20],[11,6,2,22,"searchParams"],[11,18,2,34],[11,21,2,34,"_URL"],[11,25,2,34],[11,26,2,22,"searchParams"],[11,38,2,34],[12,4,3,4],[13,4,4,4],[14,4,5,4],[15,4,6,4],[16,4,7,4],[16,8,7,8,"__DEV__"],[16,15,7,15],[16,17,7,17],[17,6,8,8],[17,10,8,12,"searchParams"],[17,22,8,24],[17,23,8,25,"has"],[17,26,8,28],[17,27,8,29],[17,42,8,44],[17,43,8,45],[17,45,8,47],[18,8,9,12],[18,12,9,18,"encodedFilePath"],[18,27,9,33],[18,30,9,36,"decodeURIComponent"],[18,48,9,54],[18,49,9,55,"searchParams"],[18,61,9,67],[18,62,9,68,"get"],[18,65,9,71],[18,66,9,72],[18,81,9,87],[18,82,9,88],[18,83,9,89],[19,8,10,12],[19,15,10,19,"getBasename"],[19,26,10,30],[19,27,10,31,"encodedFilePath"],[19,42,10,46],[19,43,10,47],[20,6,11,8],[21,4,12,4],[22,4,13,4],[22,11,13,11,"getBasename"],[22,22,13,22],[22,23,13,23,"pathname"],[22,31,13,31],[22,32,13,32],[23,2,14,0],[24,2,15,0],[24,11,15,9,"getBasename"],[24,22,15,20,"getBasename"],[24,23,15,21,"pathname"],[24,31,15,29],[24,33,15,31],[25,4,16,4],[25,11,16,11,"pathname"],[25,19,16,19],[25,20,16,20,"substring"],[25,29,16,29],[25,30,16,30,"pathname"],[25,38,16,38],[25,39,16,39,"lastIndexOf"],[25,50,16,50],[25,51,16,51],[25,54,16,54],[25,55,16,55],[25,58,16,58],[25,59,16,59],[25,60,16,60],[26,2,17,0],[27,2,18,7],[27,11,18,16,"getFileExtension"],[27,27,18,32,"getFileExtension"],[27,28,18,33,"url"],[27,31,18,36],[27,33,18,38],[28,4,19,4],[28,8,19,10,"filename"],[28,16,19,18],[28,19,19,21,"getFilename"],[28,30,19,32],[28,31,19,33,"url"],[28,34,19,36],[28,35,19,37],[29,4,20,4],[29,8,20,10,"dotIndex"],[29,16,20,18],[29,19,20,21,"filename"],[29,27,20,29],[29,28,20,30,"lastIndexOf"],[29,39,20,41],[29,40,20,42],[29,43,20,45],[29,44,20,46],[30,4,21,4],[31,4,22,4],[31,11,22,11,"dotIndex"],[31,19,22,19],[31,22,22,22],[31,23,22,23],[31,26,22,26,"filename"],[31,34,22,34],[31,35,22,35,"substring"],[31,44,22,44],[31,45,22,45,"dotIndex"],[31,53,22,53],[31,54,22,54],[31,57,22,57],[31,59,22,59],[32,2,23,0],[33,2,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,0,28,0],[38,0,29,0],[39,0,30,0],[40,0,31,0],[41,0,32,0],[42,0,33,0],[43,0,34,0],[44,2,35,7],[44,11,35,16,"getManifestBaseUrl"],[44,29,35,34,"getManifestBaseUrl"],[44,30,35,35,"manifestUrl"],[44,41,35,46],[44,43,35,48],[45,4,36,4],[45,8,36,10,"urlObject"],[45,17,36,19],[45,20,36,22],[45,24,36,26,"URL"],[45,27,36,29],[45,28,36,30,"manifestUrl"],[45,39,36,41],[45,40,36,42],[46,4,37,4],[46,8,37,8,"nextProtocol"],[46,20,37,20],[46,23,37,23,"urlObject"],[46,32,37,32],[46,33,37,33,"protocol"],[46,41,37,41],[47,4,38,4],[48,4,39,4],[48,8,39,8,"nextProtocol"],[48,20,39,20],[48,25,39,25],[48,31,39,31],[48,33,39,33],[49,6,40,8,"nextProtocol"],[49,18,40,20],[49,21,40,23],[49,28,40,30],[50,4,41,4],[50,5,41,5],[50,11,42,9],[50,15,42,13,"nextProtocol"],[50,27,42,25],[50,32,42,30],[50,39,42,37],[50,41,42,39],[51,6,43,8,"nextProtocol"],[51,18,43,20],[51,21,43,23],[51,29,43,31],[52,4,44,4],[53,4,45,4,"urlObject"],[53,13,45,13],[53,14,45,14,"protocol"],[53,22,45,22],[53,25,45,25,"nextProtocol"],[53,37,45,37],[54,4,46,4],[55,4,47,4],[55,8,47,10,"directory"],[55,17,47,19],[55,20,47,22,"urlObject"],[55,29,47,31],[55,30,47,32,"pathname"],[55,38,47,40],[55,39,47,41,"substring"],[55,48,47,50],[55,49,47,51],[55,50,47,52],[55,52,47,54,"urlObject"],[55,61,47,63],[55,62,47,64,"pathname"],[55,70,47,72],[55,71,47,73,"lastIndexOf"],[55,82,47,84],[55,83,47,85],[55,86,47,88],[55,87,47,89],[55,90,47,92],[55,91,47,93],[55,92,47,94],[56,4,48,4,"urlObject"],[56,13,48,13],[56,14,48,14,"pathname"],[56,22,48,22],[56,25,48,25,"directory"],[56,34,48,34],[57,4,49,4,"urlObject"],[57,13,49,13],[57,14,49,14,"search"],[57,20,49,20],[57,23,49,23],[57,25,49,25],[58,4,50,4,"urlObject"],[58,13,50,13],[58,14,50,14,"hash"],[58,18,50,18],[58,21,50,21],[58,23,50,23],[59,4,51,4],[60,4,52,4],[61,4,53,4],[61,11,53,11,"urlObject"],[61,20,53,20],[61,21,53,21,"protocol"],[61,29,53,29],[61,34,53,34,"nextProtocol"],[61,46,53,46],[61,49,54,10,"urlObject"],[61,58,54,19],[61,59,54,20,"href"],[61,63,54,24],[61,64,54,25,"replace"],[61,71,54,32],[61,72,54,33,"urlObject"],[61,81,54,42],[61,82,54,43,"protocol"],[61,90,54,51],[61,92,54,53,"nextProtocol"],[61,104,54,65],[61,105,54,66],[61,108,55,10,"urlObject"],[61,117,55,19],[61,118,55,20,"href"],[61,122,55,24],[62,2,56,0],[63,0,56,1],[63,3]],"functionMap":{"names":["<global>","getFilename","getBasename","getFileExtension","getManifestBaseUrl"],"mappings":"AAA,OC;CDa;AEC;CFE;OGC;CHK;OIY;CJqB"}},"type":"js/module"}]}