{"dependencies":[{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":225},"end":{"line":13,"column":65,"index":290}}],"key":"SfRhzMj3Ex6qA89WTFEUm9Lj49A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectSpread = require(_dependencyMap[0], \"@babel/runtime/helpers/objectSpread2\");\n  var _objectSpread = _interopDefault(_babelRuntimeHelpersObjectSpread);\n  class Info {\n    constructor() {\n      this.any_blank_count = 0;\n      this.any_blank_ms = 0;\n      this.any_blank_speed_sum = 0;\n      this.mostly_blank_count = 0;\n      this.mostly_blank_ms = 0;\n      this.pixels_blank = 0;\n      this.pixels_sampled = 0;\n      this.pixels_scrolled = 0;\n      this.total_time_spent = 0;\n      this.sample_count = 0;\n    }\n  }\n  var DEBUG = false;\n  var _listeners = [];\n  var _minSampleCount = 10;\n  var _sampleRate = DEBUG ? 1 : null;\n\n  /**\n   * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n   * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n   * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n   *\n   * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n   * `SceneTracker.getActiveScene` to determine the context of the events.\n   */\n  class FillRateHelper {\n    static addListener(callback) {\n      if (_sampleRate === null) {\n        console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');\n      }\n      _listeners.push(callback);\n      return {\n        remove: () => {\n          _listeners = _listeners.filter(listener => callback !== listener);\n        }\n      };\n    }\n    static setSampleRate(sampleRate) {\n      _sampleRate = sampleRate;\n    }\n    static setMinSampleCount(minSampleCount) {\n      _minSampleCount = minSampleCount;\n    }\n    constructor(getFrameMetrics) {\n      this._anyBlankStartTime = null;\n      this._enabled = false;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n      this._getFrameMetrics = getFrameMetrics;\n      this._enabled = (_sampleRate || 0) > Math.random();\n      this._resetData();\n    }\n    activate() {\n      if (this._enabled && this._samplesStartTime == null) {\n        DEBUG && console.debug('FillRateHelper: activate');\n        this._samplesStartTime = global.performance.now();\n      }\n    }\n    deactivateAndFlush() {\n      if (!this._enabled) {\n        return;\n      }\n      var start = this._samplesStartTime; // const for flow\n      if (start == null) {\n        DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n        return;\n      }\n      if (this._info.sample_count < _minSampleCount) {\n        // Don't bother with under-sampled events.\n        this._resetData();\n        return;\n      }\n      var total_time_spent = global.performance.now() - start;\n      var info = (0, _objectSpread.default)((0, _objectSpread.default)({}, this._info), {}, {\n        total_time_spent\n      });\n      if (DEBUG) {\n        var derived = {\n          avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n          avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n          avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n          any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n          any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n          mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n          mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n        };\n        for (var key in derived) {\n          // $FlowFixMe[prop-missing]\n          derived[key] = Math.round(1000 * derived[key]) / 1000;\n        }\n        console.debug('FillRateHelper deactivateAndFlush: ', {\n          derived,\n          info\n        });\n      }\n      _listeners.forEach(listener => listener(info));\n      this._resetData();\n    }\n    computeBlankness(props, cellsAroundViewport, scrollMetrics) {\n      if (!this._enabled || props.getItemCount(props.data) === 0 || cellsAroundViewport.last < cellsAroundViewport.first || this._samplesStartTime == null) {\n        return 0;\n      }\n      var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength;\n\n      // Denominator metrics that we track for all events - most of the time there is no blankness and\n      // we want to capture that.\n      this._info.sample_count++;\n      this._info.pixels_sampled += Math.round(visibleLength);\n      this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n      var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n      // Whether blank now or not, record the elapsed time blank if we were blank last time.\n      var now = global.performance.now();\n      if (this._anyBlankStartTime != null) {\n        this._info.any_blank_ms += now - this._anyBlankStartTime;\n      }\n      this._anyBlankStartTime = null;\n      if (this._mostlyBlankStartTime != null) {\n        this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n      }\n      this._mostlyBlankStartTime = null;\n      var blankTop = 0;\n      var first = cellsAroundViewport.first;\n      var firstFrame = this._getFrameMetrics(first, props);\n      while (first <= cellsAroundViewport.last && (!firstFrame || !firstFrame.inLayout)) {\n        firstFrame = this._getFrameMetrics(first, props);\n        first++;\n      }\n      // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n      // as blank.\n      if (firstFrame && first > 0) {\n        blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n      }\n      var blankBottom = 0;\n      var last = cellsAroundViewport.last;\n      var lastFrame = this._getFrameMetrics(last, props);\n      while (last >= cellsAroundViewport.first && (!lastFrame || !lastFrame.inLayout)) {\n        lastFrame = this._getFrameMetrics(last, props);\n        last--;\n      }\n      // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n      // footer as blank.\n      if (lastFrame && last < props.getItemCount(props.data) - 1) {\n        var bottomEdge = lastFrame.offset + lastFrame.length;\n        blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n      }\n      var pixels_blank = Math.round(blankTop + blankBottom);\n      var blankness = pixels_blank / visibleLength;\n      if (blankness > 0) {\n        this._anyBlankStartTime = now;\n        this._info.any_blank_speed_sum += scrollSpeed;\n        this._info.any_blank_count++;\n        this._info.pixels_blank += pixels_blank;\n        if (blankness > 0.5) {\n          this._mostlyBlankStartTime = now;\n          this._info.mostly_blank_count++;\n        }\n      } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n        this.deactivateAndFlush();\n      }\n      return blankness;\n    }\n    enabled() {\n      return this._enabled;\n    }\n    _resetData() {\n      this._anyBlankStartTime = null;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n    }\n  }\n  var _default = FillRateHelper;\n});","lineCount":209,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13],[17,11,11,13,"_interopDefault"],[17,27,11,13,"e"],[17,28,11,13],[18,4,11,13],[18,11,11,13,"e"],[18,12,11,13],[18,16,11,13,"e"],[18,17,11,13],[18,18,11,13,"__esModule"],[18,28,11,13],[18,31,11,13,"e"],[18,32,11,13],[19,6,11,13,"default"],[19,13,11,13],[19,15,11,13,"e"],[20,4,11,13],[21,2,11,13],[22,2,192,0,"Object"],[22,8,192,0],[22,9,192,0,"defineProperty"],[22,23,192,0],[22,24,192,0,"exports"],[22,31,192,0],[23,4,192,0,"enumerable"],[23,14,192,0],[24,4,192,0,"get"],[24,7,192,0],[24,18,192,0,"get"],[24,19,192,0],[25,6,192,0],[25,13,192,0,"_default"],[25,21,192,0],[26,4,192,0],[27,2,192,0],[28,2,13,0],[28,6,13,0,"_babelRuntimeHelpersObjectSpread"],[28,38,13,0],[28,41,13,0,"require"],[28,48,13,0],[28,49,13,0,"_dependencyMap"],[28,63,13,0],[29,2,13,0],[29,6,13,0,"_objectSpread"],[29,19,13,0],[29,22,13,0,"_interopDefault"],[29,37,13,0],[29,38,13,0,"_babelRuntimeHelpersObjectSpread"],[29,70,13,0],[30,2,14,0],[30,8,14,6,"Info"],[30,12,14,10],[30,13,14,11],[31,4,15,2,"constructor"],[31,15,15,13,"constructor"],[31,16,15,13],[31,18,15,16],[32,6,16,4],[32,10,16,8],[32,11,16,9,"any_blank_count"],[32,26,16,24],[32,29,16,27],[32,30,16,28],[33,6,17,4],[33,10,17,8],[33,11,17,9,"any_blank_ms"],[33,23,17,21],[33,26,17,24],[33,27,17,25],[34,6,18,4],[34,10,18,8],[34,11,18,9,"any_blank_speed_sum"],[34,30,18,28],[34,33,18,31],[34,34,18,32],[35,6,19,4],[35,10,19,8],[35,11,19,9,"mostly_blank_count"],[35,29,19,27],[35,32,19,30],[35,33,19,31],[36,6,20,4],[36,10,20,8],[36,11,20,9,"mostly_blank_ms"],[36,26,20,24],[36,29,20,27],[36,30,20,28],[37,6,21,4],[37,10,21,8],[37,11,21,9,"pixels_blank"],[37,23,21,21],[37,26,21,24],[37,27,21,25],[38,6,22,4],[38,10,22,8],[38,11,22,9,"pixels_sampled"],[38,25,22,23],[38,28,22,26],[38,29,22,27],[39,6,23,4],[39,10,23,8],[39,11,23,9,"pixels_scrolled"],[39,26,23,24],[39,29,23,27],[39,30,23,28],[40,6,24,4],[40,10,24,8],[40,11,24,9,"total_time_spent"],[40,27,24,25],[40,30,24,28],[40,31,24,29],[41,6,25,4],[41,10,25,8],[41,11,25,9,"sample_count"],[41,23,25,21],[41,26,25,24],[41,27,25,25],[42,4,26,2],[43,2,27,0],[44,2,28,0],[44,6,28,4,"DEBUG"],[44,11,28,9],[44,14,28,12],[44,19,28,17],[45,2,29,0],[45,6,29,4,"_listeners"],[45,16,29,14],[45,19,29,17],[45,21,29,19],[46,2,30,0],[46,6,30,4,"_minSampleCount"],[46,21,30,19],[46,24,30,22],[46,26,30,24],[47,2,31,0],[47,6,31,4,"_sampleRate"],[47,17,31,15],[47,20,31,18,"DEBUG"],[47,25,31,23],[47,28,31,26],[47,29,31,27],[47,32,31,30],[47,36,31,34],[49,2,33,0],[50,0,34,0],[51,0,35,0],[52,0,36,0],[53,0,37,0],[54,0,38,0],[55,0,39,0],[56,0,40,0],[57,2,41,0],[57,8,41,6,"FillRateHelper"],[57,22,41,20],[57,23,41,21],[58,4,42,2],[58,11,42,9,"addListener"],[58,22,42,20,"addListener"],[58,23,42,21,"callback"],[58,31,42,29],[58,33,42,31],[59,6,43,4],[59,10,43,8,"_sampleRate"],[59,21,43,19],[59,26,43,24],[59,30,43,28],[59,32,43,30],[60,8,44,6,"console"],[60,15,44,13],[60,16,44,14,"warn"],[60,20,44,18],[60,21,44,19],[60,80,44,78],[60,81,44,79],[61,6,45,4],[62,6,46,4,"_listeners"],[62,16,46,14],[62,17,46,15,"push"],[62,21,46,19],[62,22,46,20,"callback"],[62,30,46,28],[62,31,46,29],[63,6,47,4],[63,13,47,11],[64,8,48,6,"remove"],[64,14,48,12],[64,16,48,14,"remove"],[64,17,48,14],[64,22,48,20],[65,10,49,8,"_listeners"],[65,20,49,18],[65,23,49,21,"_listeners"],[65,33,49,31],[65,34,49,32,"filter"],[65,40,49,38],[65,41,49,39,"listener"],[65,49,49,47],[65,53,49,51,"callback"],[65,61,49,59],[65,66,49,64,"listener"],[65,74,49,72],[65,75,49,73],[66,8,50,6],[67,6,51,4],[67,7,51,5],[68,4,52,2],[69,4,53,2],[69,11,53,9,"setSampleRate"],[69,24,53,22,"setSampleRate"],[69,25,53,23,"sampleRate"],[69,35,53,33],[69,37,53,35],[70,6,54,4,"_sampleRate"],[70,17,54,15],[70,20,54,18,"sampleRate"],[70,30,54,28],[71,4,55,2],[72,4,56,2],[72,11,56,9,"setMinSampleCount"],[72,28,56,26,"setMinSampleCount"],[72,29,56,27,"minSampleCount"],[72,43,56,41],[72,45,56,43],[73,6,57,4,"_minSampleCount"],[73,21,57,19],[73,24,57,22,"minSampleCount"],[73,38,57,36],[74,4,58,2],[75,4,59,2,"constructor"],[75,15,59,13,"constructor"],[75,16,59,14,"getFrameMetrics"],[75,31,59,29],[75,33,59,31],[76,6,60,4],[76,10,60,8],[76,11,60,9,"_anyBlankStartTime"],[76,29,60,27],[76,32,60,30],[76,36,60,34],[77,6,61,4],[77,10,61,8],[77,11,61,9,"_enabled"],[77,19,61,17],[77,22,61,20],[77,27,61,25],[78,6,62,4],[78,10,62,8],[78,11,62,9,"_info"],[78,16,62,14],[78,19,62,17],[78,23,62,21,"Info"],[78,27,62,25],[78,28,62,26],[78,29,62,27],[79,6,63,4],[79,10,63,8],[79,11,63,9,"_mostlyBlankStartTime"],[79,32,63,30],[79,35,63,33],[79,39,63,37],[80,6,64,4],[80,10,64,8],[80,11,64,9,"_samplesStartTime"],[80,28,64,26],[80,31,64,29],[80,35,64,33],[81,6,65,4],[81,10,65,8],[81,11,65,9,"_getFrameMetrics"],[81,27,65,25],[81,30,65,28,"getFrameMetrics"],[81,45,65,43],[82,6,66,4],[82,10,66,8],[82,11,66,9,"_enabled"],[82,19,66,17],[82,22,66,20],[82,23,66,21,"_sampleRate"],[82,34,66,32],[82,38,66,36],[82,39,66,37],[82,43,66,41,"Math"],[82,47,66,45],[82,48,66,46,"random"],[82,54,66,52],[82,55,66,53],[82,56,66,54],[83,6,67,4],[83,10,67,8],[83,11,67,9,"_resetData"],[83,21,67,19],[83,22,67,20],[83,23,67,21],[84,4,68,2],[85,4,69,2,"activate"],[85,12,69,10,"activate"],[85,13,69,10],[85,15,69,13],[86,6,70,4],[86,10,70,8],[86,14,70,12],[86,15,70,13,"_enabled"],[86,23,70,21],[86,27,70,25],[86,31,70,29],[86,32,70,30,"_samplesStartTime"],[86,49,70,47],[86,53,70,51],[86,57,70,55],[86,59,70,57],[87,8,71,6,"DEBUG"],[87,13,71,11],[87,17,71,15,"console"],[87,24,71,22],[87,25,71,23,"debug"],[87,30,71,28],[87,31,71,29],[87,57,71,55],[87,58,71,56],[88,8,72,6],[88,12,72,10],[88,13,72,11,"_samplesStartTime"],[88,30,72,28],[88,33,72,31,"global"],[88,39,72,37],[88,40,72,38,"performance"],[88,51,72,49],[88,52,72,50,"now"],[88,55,72,53],[88,56,72,54],[88,57,72,55],[89,6,73,4],[90,4,74,2],[91,4,75,2,"deactivateAndFlush"],[91,22,75,20,"deactivateAndFlush"],[91,23,75,20],[91,25,75,23],[92,6,76,4],[92,10,76,8],[92,11,76,9],[92,15,76,13],[92,16,76,14,"_enabled"],[92,24,76,22],[92,26,76,24],[93,8,77,6],[94,6,78,4],[95,6,79,4],[95,10,79,8,"start"],[95,15,79,13],[95,18,79,16],[95,22,79,20],[95,23,79,21,"_samplesStartTime"],[95,40,79,38],[95,41,79,39],[95,42,79,40],[96,6,80,4],[96,10,80,8,"start"],[96,15,80,13],[96,19,80,17],[96,23,80,21],[96,25,80,23],[97,8,81,6,"DEBUG"],[97,13,81,11],[97,17,81,15,"console"],[97,24,81,22],[97,25,81,23,"debug"],[97,30,81,28],[97,31,81,29],[97,86,81,84],[97,87,81,85],[98,8,82,6],[99,6,83,4],[100,6,84,4],[100,10,84,8],[100,14,84,12],[100,15,84,13,"_info"],[100,20,84,18],[100,21,84,19,"sample_count"],[100,33,84,31],[100,36,84,34,"_minSampleCount"],[100,51,84,49],[100,53,84,51],[101,8,85,6],[102,8,86,6],[102,12,86,10],[102,13,86,11,"_resetData"],[102,23,86,21],[102,24,86,22],[102,25,86,23],[103,8,87,6],[104,6,88,4],[105,6,89,4],[105,10,89,8,"total_time_spent"],[105,26,89,24],[105,29,89,27,"global"],[105,35,89,33],[105,36,89,34,"performance"],[105,47,89,45],[105,48,89,46,"now"],[105,51,89,49],[105,52,89,50],[105,53,89,51],[105,56,89,54,"start"],[105,61,89,59],[106,6,90,4],[106,10,90,8,"info"],[106,14,90,12],[106,17,90,15],[106,21,90,15,"_objectSpread"],[106,34,90,28],[106,35,90,28,"default"],[106,42,90,28],[106,44,90,29],[106,48,90,29,"_objectSpread"],[106,61,90,42],[106,62,90,42,"default"],[106,69,90,42],[106,71,90,43],[106,72,90,44],[106,73,90,45],[106,75,90,47],[106,79,90,51],[106,80,90,52,"_info"],[106,85,90,57],[106,86,90,58],[106,88,90,60],[106,89,90,61],[106,90,90,62],[106,92,90,64],[107,8,91,6,"total_time_spent"],[108,6,92,4],[108,7,92,5],[108,8,92,6],[109,6,93,4],[109,10,93,8,"DEBUG"],[109,15,93,13],[109,17,93,15],[110,8,94,6],[110,12,94,10,"derived"],[110,19,94,17],[110,22,94,20],[111,10,95,8,"avg_blankness"],[111,23,95,21],[111,25,95,23],[111,29,95,27],[111,30,95,28,"_info"],[111,35,95,33],[111,36,95,34,"pixels_blank"],[111,48,95,46],[111,51,95,49],[111,55,95,53],[111,56,95,54,"_info"],[111,61,95,59],[111,62,95,60,"pixels_sampled"],[111,76,95,74],[112,10,96,8,"avg_speed"],[112,19,96,17],[112,21,96,19],[112,25,96,23],[112,26,96,24,"_info"],[112,31,96,29],[112,32,96,30,"pixels_scrolled"],[112,47,96,45],[112,51,96,49,"total_time_spent"],[112,67,96,65],[112,70,96,68],[112,74,96,72],[112,75,96,73],[113,10,97,8,"avg_speed_when_any_blank"],[113,34,97,32],[113,36,97,34],[113,40,97,38],[113,41,97,39,"_info"],[113,46,97,44],[113,47,97,45,"any_blank_speed_sum"],[113,66,97,64],[113,69,97,67],[113,73,97,71],[113,74,97,72,"_info"],[113,79,97,77],[113,80,97,78,"any_blank_count"],[113,95,97,93],[114,10,98,8,"any_blank_per_min"],[114,27,98,25],[114,29,98,27],[114,33,98,31],[114,34,98,32,"_info"],[114,39,98,37],[114,40,98,38,"any_blank_count"],[114,55,98,53],[114,59,98,57,"total_time_spent"],[114,75,98,73],[114,78,98,76],[114,82,98,80],[114,85,98,83],[114,87,98,85],[114,88,98,86],[115,10,99,8,"any_blank_time_frac"],[115,29,99,27],[115,31,99,29],[115,35,99,33],[115,36,99,34,"_info"],[115,41,99,39],[115,42,99,40,"any_blank_ms"],[115,54,99,52],[115,57,99,55,"total_time_spent"],[115,73,99,71],[116,10,100,8,"mostly_blank_per_min"],[116,30,100,28],[116,32,100,30],[116,36,100,34],[116,37,100,35,"_info"],[116,42,100,40],[116,43,100,41,"mostly_blank_count"],[116,61,100,59],[116,65,100,63,"total_time_spent"],[116,81,100,79],[116,84,100,82],[116,88,100,86],[116,91,100,89],[116,93,100,91],[116,94,100,92],[117,10,101,8,"mostly_blank_time_frac"],[117,32,101,30],[117,34,101,32],[117,38,101,36],[117,39,101,37,"_info"],[117,44,101,42],[117,45,101,43,"mostly_blank_ms"],[117,60,101,58],[117,63,101,61,"total_time_spent"],[118,8,102,6],[118,9,102,7],[119,8,103,6],[119,13,103,11],[119,17,103,15,"key"],[119,20,103,18],[119,24,103,22,"derived"],[119,31,103,29],[119,33,103,31],[120,10,104,8],[121,10,105,8,"derived"],[121,17,105,15],[121,18,105,16,"key"],[121,21,105,19],[121,22,105,20],[121,25,105,23,"Math"],[121,29,105,27],[121,30,105,28,"round"],[121,35,105,33],[121,36,105,34],[121,40,105,38],[121,43,105,41,"derived"],[121,50,105,48],[121,51,105,49,"key"],[121,54,105,52],[121,55,105,53],[121,56,105,54],[121,59,105,57],[121,63,105,61],[122,8,106,6],[123,8,107,6,"console"],[123,15,107,13],[123,16,107,14,"debug"],[123,21,107,19],[123,22,107,20],[123,59,107,57],[123,61,107,59],[124,10,108,8,"derived"],[124,17,108,15],[125,10,109,8,"info"],[126,8,110,6],[126,9,110,7],[126,10,110,8],[127,6,111,4],[128,6,112,4,"_listeners"],[128,16,112,14],[128,17,112,15,"forEach"],[128,24,112,22],[128,25,112,23,"listener"],[128,33,112,31],[128,37,112,35,"listener"],[128,45,112,43],[128,46,112,44,"info"],[128,50,112,48],[128,51,112,49],[128,52,112,50],[129,6,113,4],[129,10,113,8],[129,11,113,9,"_resetData"],[129,21,113,19],[129,22,113,20],[129,23,113,21],[130,4,114,2],[131,4,115,2,"computeBlankness"],[131,20,115,18,"computeBlankness"],[131,21,115,19,"props"],[131,26,115,24],[131,28,115,26,"cellsAroundViewport"],[131,47,115,45],[131,49,115,47,"scrollMetrics"],[131,62,115,60],[131,64,115,62],[132,6,116,4],[132,10,116,8],[132,11,116,9],[132,15,116,13],[132,16,116,14,"_enabled"],[132,24,116,22],[132,28,116,26,"props"],[132,33,116,31],[132,34,116,32,"getItemCount"],[132,46,116,44],[132,47,116,45,"props"],[132,52,116,50],[132,53,116,51,"data"],[132,57,116,55],[132,58,116,56],[132,63,116,61],[132,64,116,62],[132,68,116,66,"cellsAroundViewport"],[132,87,116,85],[132,88,116,86,"last"],[132,92,116,90],[132,95,116,93,"cellsAroundViewport"],[132,114,116,112],[132,115,116,113,"first"],[132,120,116,118],[132,124,116,122],[132,128,116,126],[132,129,116,127,"_samplesStartTime"],[132,146,116,144],[132,150,116,148],[132,154,116,152],[132,156,116,154],[133,8,117,6],[133,15,117,13],[133,16,117,14],[134,6,118,4],[135,6,119,4],[135,10,119,8,"dOffset"],[135,17,119,15],[135,20,119,18,"scrollMetrics"],[135,33,119,31],[135,34,119,32,"dOffset"],[135,41,119,39],[136,8,120,6,"offset"],[136,14,120,12],[136,17,120,15,"scrollMetrics"],[136,30,120,28],[136,31,120,29,"offset"],[136,37,120,35],[137,8,121,6,"velocity"],[137,16,121,14],[137,19,121,17,"scrollMetrics"],[137,32,121,30],[137,33,121,31,"velocity"],[137,41,121,39],[138,8,122,6,"visibleLength"],[138,21,122,19],[138,24,122,22,"scrollMetrics"],[138,37,122,35],[138,38,122,36,"visibleLength"],[138,51,122,49],[140,6,124,4],[141,6,125,4],[142,6,126,4],[142,10,126,8],[142,11,126,9,"_info"],[142,16,126,14],[142,17,126,15,"sample_count"],[142,29,126,27],[142,31,126,29],[143,6,127,4],[143,10,127,8],[143,11,127,9,"_info"],[143,16,127,14],[143,17,127,15,"pixels_sampled"],[143,31,127,29],[143,35,127,33,"Math"],[143,39,127,37],[143,40,127,38,"round"],[143,45,127,43],[143,46,127,44,"visibleLength"],[143,59,127,57],[143,60,127,58],[144,6,128,4],[144,10,128,8],[144,11,128,9,"_info"],[144,16,128,14],[144,17,128,15,"pixels_scrolled"],[144,32,128,30],[144,36,128,34,"Math"],[144,40,128,38],[144,41,128,39,"round"],[144,46,128,44],[144,47,128,45,"Math"],[144,51,128,49],[144,52,128,50,"abs"],[144,55,128,53],[144,56,128,54,"dOffset"],[144,63,128,61],[144,64,128,62],[144,65,128,63],[145,6,129,4],[145,10,129,8,"scrollSpeed"],[145,21,129,19],[145,24,129,22,"Math"],[145,28,129,26],[145,29,129,27,"round"],[145,34,129,32],[145,35,129,33,"Math"],[145,39,129,37],[145,40,129,38,"abs"],[145,43,129,41],[145,44,129,42,"velocity"],[145,52,129,50],[145,53,129,51],[145,56,129,54],[145,60,129,58],[145,61,129,59],[145,62,129,60],[145,63,129,61],[147,6,131,4],[148,6,132,4],[148,10,132,8,"now"],[148,13,132,11],[148,16,132,14,"global"],[148,22,132,20],[148,23,132,21,"performance"],[148,34,132,32],[148,35,132,33,"now"],[148,38,132,36],[148,39,132,37],[148,40,132,38],[149,6,133,4],[149,10,133,8],[149,14,133,12],[149,15,133,13,"_anyBlankStartTime"],[149,33,133,31],[149,37,133,35],[149,41,133,39],[149,43,133,41],[150,8,134,6],[150,12,134,10],[150,13,134,11,"_info"],[150,18,134,16],[150,19,134,17,"any_blank_ms"],[150,31,134,29],[150,35,134,33,"now"],[150,38,134,36],[150,41,134,39],[150,45,134,43],[150,46,134,44,"_anyBlankStartTime"],[150,64,134,62],[151,6,135,4],[152,6,136,4],[152,10,136,8],[152,11,136,9,"_anyBlankStartTime"],[152,29,136,27],[152,32,136,30],[152,36,136,34],[153,6,137,4],[153,10,137,8],[153,14,137,12],[153,15,137,13,"_mostlyBlankStartTime"],[153,36,137,34],[153,40,137,38],[153,44,137,42],[153,46,137,44],[154,8,138,6],[154,12,138,10],[154,13,138,11,"_info"],[154,18,138,16],[154,19,138,17,"mostly_blank_ms"],[154,34,138,32],[154,38,138,36,"now"],[154,41,138,39],[154,44,138,42],[154,48,138,46],[154,49,138,47,"_mostlyBlankStartTime"],[154,70,138,68],[155,6,139,4],[156,6,140,4],[156,10,140,8],[156,11,140,9,"_mostlyBlankStartTime"],[156,32,140,30],[156,35,140,33],[156,39,140,37],[157,6,141,4],[157,10,141,8,"blankTop"],[157,18,141,16],[157,21,141,19],[157,22,141,20],[158,6,142,4],[158,10,142,8,"first"],[158,15,142,13],[158,18,142,16,"cellsAroundViewport"],[158,37,142,35],[158,38,142,36,"first"],[158,43,142,41],[159,6,143,4],[159,10,143,8,"firstFrame"],[159,20,143,18],[159,23,143,21],[159,27,143,25],[159,28,143,26,"_getFrameMetrics"],[159,44,143,42],[159,45,143,43,"first"],[159,50,143,48],[159,52,143,50,"props"],[159,57,143,55],[159,58,143,56],[160,6,144,4],[160,13,144,11,"first"],[160,18,144,16],[160,22,144,20,"cellsAroundViewport"],[160,41,144,39],[160,42,144,40,"last"],[160,46,144,44],[160,51,144,49],[160,52,144,50,"firstFrame"],[160,62,144,60],[160,66,144,64],[160,67,144,65,"firstFrame"],[160,77,144,75],[160,78,144,76,"inLayout"],[160,86,144,84],[160,87,144,85],[160,89,144,87],[161,8,145,6,"firstFrame"],[161,18,145,16],[161,21,145,19],[161,25,145,23],[161,26,145,24,"_getFrameMetrics"],[161,42,145,40],[161,43,145,41,"first"],[161,48,145,46],[161,50,145,48,"props"],[161,55,145,53],[161,56,145,54],[162,8,146,6,"first"],[162,13,146,11],[162,15,146,13],[163,6,147,4],[164,6,148,4],[165,6,149,4],[166,6,150,4],[166,10,150,8,"firstFrame"],[166,20,150,18],[166,24,150,22,"first"],[166,29,150,27],[166,32,150,30],[166,33,150,31],[166,35,150,33],[167,8,151,6,"blankTop"],[167,16,151,14],[167,19,151,17,"Math"],[167,23,151,21],[167,24,151,22,"min"],[167,27,151,25],[167,28,151,26,"visibleLength"],[167,41,151,39],[167,43,151,41,"Math"],[167,47,151,45],[167,48,151,46,"max"],[167,51,151,49],[167,52,151,50],[167,53,151,51],[167,55,151,53,"firstFrame"],[167,65,151,63],[167,66,151,64,"offset"],[167,72,151,70],[167,75,151,73,"offset"],[167,81,151,79],[167,82,151,80],[167,83,151,81],[168,6,152,4],[169,6,153,4],[169,10,153,8,"blankBottom"],[169,21,153,19],[169,24,153,22],[169,25,153,23],[170,6,154,4],[170,10,154,8,"last"],[170,14,154,12],[170,17,154,15,"cellsAroundViewport"],[170,36,154,34],[170,37,154,35,"last"],[170,41,154,39],[171,6,155,4],[171,10,155,8,"lastFrame"],[171,19,155,17],[171,22,155,20],[171,26,155,24],[171,27,155,25,"_getFrameMetrics"],[171,43,155,41],[171,44,155,42,"last"],[171,48,155,46],[171,50,155,48,"props"],[171,55,155,53],[171,56,155,54],[172,6,156,4],[172,13,156,11,"last"],[172,17,156,15],[172,21,156,19,"cellsAroundViewport"],[172,40,156,38],[172,41,156,39,"first"],[172,46,156,44],[172,51,156,49],[172,52,156,50,"lastFrame"],[172,61,156,59],[172,65,156,63],[172,66,156,64,"lastFrame"],[172,75,156,73],[172,76,156,74,"inLayout"],[172,84,156,82],[172,85,156,83],[172,87,156,85],[173,8,157,6,"lastFrame"],[173,17,157,15],[173,20,157,18],[173,24,157,22],[173,25,157,23,"_getFrameMetrics"],[173,41,157,39],[173,42,157,40,"last"],[173,46,157,44],[173,48,157,46,"props"],[173,53,157,51],[173,54,157,52],[174,8,158,6,"last"],[174,12,158,10],[174,14,158,12],[175,6,159,4],[176,6,160,4],[177,6,161,4],[178,6,162,4],[178,10,162,8,"lastFrame"],[178,19,162,17],[178,23,162,21,"last"],[178,27,162,25],[178,30,162,28,"props"],[178,35,162,33],[178,36,162,34,"getItemCount"],[178,48,162,46],[178,49,162,47,"props"],[178,54,162,52],[178,55,162,53,"data"],[178,59,162,57],[178,60,162,58],[178,63,162,61],[178,64,162,62],[178,66,162,64],[179,8,163,6],[179,12,163,10,"bottomEdge"],[179,22,163,20],[179,25,163,23,"lastFrame"],[179,34,163,32],[179,35,163,33,"offset"],[179,41,163,39],[179,44,163,42,"lastFrame"],[179,53,163,51],[179,54,163,52,"length"],[179,60,163,58],[180,8,164,6,"blankBottom"],[180,19,164,17],[180,22,164,20,"Math"],[180,26,164,24],[180,27,164,25,"min"],[180,30,164,28],[180,31,164,29,"visibleLength"],[180,44,164,42],[180,46,164,44,"Math"],[180,50,164,48],[180,51,164,49,"max"],[180,54,164,52],[180,55,164,53],[180,56,164,54],[180,58,164,56,"offset"],[180,64,164,62],[180,67,164,65,"visibleLength"],[180,80,164,78],[180,83,164,81,"bottomEdge"],[180,93,164,91],[180,94,164,92],[180,95,164,93],[181,6,165,4],[182,6,166,4],[182,10,166,8,"pixels_blank"],[182,22,166,20],[182,25,166,23,"Math"],[182,29,166,27],[182,30,166,28,"round"],[182,35,166,33],[182,36,166,34,"blankTop"],[182,44,166,42],[182,47,166,45,"blankBottom"],[182,58,166,56],[182,59,166,57],[183,6,167,4],[183,10,167,8,"blankness"],[183,19,167,17],[183,22,167,20,"pixels_blank"],[183,34,167,32],[183,37,167,35,"visibleLength"],[183,50,167,48],[184,6,168,4],[184,10,168,8,"blankness"],[184,19,168,17],[184,22,168,20],[184,23,168,21],[184,25,168,23],[185,8,169,6],[185,12,169,10],[185,13,169,11,"_anyBlankStartTime"],[185,31,169,29],[185,34,169,32,"now"],[185,37,169,35],[186,8,170,6],[186,12,170,10],[186,13,170,11,"_info"],[186,18,170,16],[186,19,170,17,"any_blank_speed_sum"],[186,38,170,36],[186,42,170,40,"scrollSpeed"],[186,53,170,51],[187,8,171,6],[187,12,171,10],[187,13,171,11,"_info"],[187,18,171,16],[187,19,171,17,"any_blank_count"],[187,34,171,32],[187,36,171,34],[188,8,172,6],[188,12,172,10],[188,13,172,11,"_info"],[188,18,172,16],[188,19,172,17,"pixels_blank"],[188,31,172,29],[188,35,172,33,"pixels_blank"],[188,47,172,45],[189,8,173,6],[189,12,173,10,"blankness"],[189,21,173,19],[189,24,173,22],[189,27,173,25],[189,29,173,27],[190,10,174,8],[190,14,174,12],[190,15,174,13,"_mostlyBlankStartTime"],[190,36,174,34],[190,39,174,37,"now"],[190,42,174,40],[191,10,175,8],[191,14,175,12],[191,15,175,13,"_info"],[191,20,175,18],[191,21,175,19,"mostly_blank_count"],[191,39,175,37],[191,41,175,39],[192,8,176,6],[193,6,177,4],[193,7,177,5],[193,13,177,11],[193,17,177,15,"scrollSpeed"],[193,28,177,26],[193,31,177,29],[193,35,177,33],[193,39,177,37,"Math"],[193,43,177,41],[193,44,177,42,"abs"],[193,47,177,45],[193,48,177,46,"dOffset"],[193,55,177,53],[193,56,177,54],[193,59,177,57],[193,60,177,58],[193,62,177,60],[194,8,178,6],[194,12,178,10],[194,13,178,11,"deactivateAndFlush"],[194,31,178,29],[194,32,178,30],[194,33,178,31],[195,6,179,4],[196,6,180,4],[196,13,180,11,"blankness"],[196,22,180,20],[197,4,181,2],[198,4,182,2,"enabled"],[198,11,182,9,"enabled"],[198,12,182,9],[198,14,182,12],[199,6,183,4],[199,13,183,11],[199,17,183,15],[199,18,183,16,"_enabled"],[199,26,183,24],[200,4,184,2],[201,4,185,2,"_resetData"],[201,14,185,12,"_resetData"],[201,15,185,12],[201,17,185,15],[202,6,186,4],[202,10,186,8],[202,11,186,9,"_anyBlankStartTime"],[202,29,186,27],[202,32,186,30],[202,36,186,34],[203,6,187,4],[203,10,187,8],[203,11,187,9,"_info"],[203,16,187,14],[203,19,187,17],[203,23,187,21,"Info"],[203,27,187,25],[203,28,187,26],[203,29,187,27],[204,6,188,4],[204,10,188,8],[204,11,188,9,"_mostlyBlankStartTime"],[204,32,188,30],[204,35,188,33],[204,39,188,37],[205,6,189,4],[205,10,189,8],[205,11,189,9,"_samplesStartTime"],[205,28,189,26],[205,31,189,29],[205,35,189,33],[206,4,190,2],[207,2,191,0],[208,2,192,0],[208,6,192,0,"_default"],[208,14,192,0],[208,17,192,15,"FillRateHelper"],[208,31,192,29],[209,0,192,30],[209,3]],"functionMap":{"names":["<global>","Info","Info#constructor","FillRateHelper","FillRateHelper.addListener","remove","_listeners.filter$argument_0","FillRateHelper.setSampleRate","FillRateHelper.setMinSampleCount","FillRateHelper#constructor","FillRateHelper#activate","FillRateHelper#deactivateAndFlush","_listeners.forEach$argument_0","FillRateHelper#computeBlankness","FillRateHelper#enabled","FillRateHelper#_resetData"],"mappings":"AAA;ACa;ECC;GDW;CDC;AGc;ECC;cCM;uCCC,iCD;ODC;GDE;EIC;GJE;EKC;GLE;EMC;GNS;EOC;GPK;EQC;uBCqC,0BD;GRE;EUC;GVkE;EWC;GXE;EYC;GZK;CHC"},"hasCjsExports":false},"type":"js/module"}]}