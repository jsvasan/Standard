{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return memoizeOne;\n    }\n  });\n  var safeIsNaN = Number.isNaN || function ponyfill(value) {\n    return typeof value === 'number' && value !== value;\n  };\n  function isEqual(first, second) {\n    if (first === second) {\n      return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n      return true;\n    }\n    return false;\n  }\n  function areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n      return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n      if (!isEqual(newInputs[i], lastInputs[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) {\n      isEqual = areInputsEqual;\n    }\n    var cache = null;\n    function memoized() {\n      var newArgs = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        newArgs[_i] = arguments[_i];\n      }\n      if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n        return cache.lastResult;\n      }\n      var lastResult = resultFn.apply(this, newArgs);\n      cache = {\n        lastResult: lastResult,\n        lastArgs: newArgs,\n        lastThis: this\n      };\n      return lastResult;\n    }\n    memoized.clear = function clear() {\n      cache = null;\n    };\n    return memoized;\n  }\n});","lineCount":62,"map":[[7,2,51,0,"Object"],[7,8,51,0],[7,9,51,0,"defineProperty"],[7,23,51,0],[7,24,51,0,"exports"],[7,31,51,0],[8,4,51,0,"enumerable"],[8,14,51,0],[9,4,51,0,"get"],[9,7,51,0],[9,18,51,0,"get"],[9,19,51,0],[10,6,51,0],[10,13,51,9,"memoizeOne"],[10,23,51,19],[11,4,51,19],[12,2,51,19],[13,2,1,0],[13,6,1,4,"safeIsNaN"],[13,15,1,13],[13,18,1,16,"Number"],[13,24,1,22],[13,25,1,23,"isNaN"],[13,30,1,28],[13,34,2,4],[13,43,2,13,"ponyfill"],[13,51,2,21,"ponyfill"],[13,52,2,22,"value"],[13,57,2,27],[13,59,2,29],[14,4,3,8],[14,11,3,15],[14,18,3,22,"value"],[14,23,3,27],[14,28,3,32],[14,36,3,40],[14,40,3,44,"value"],[14,45,3,49],[14,50,3,54,"value"],[14,55,3,59],[15,2,4,4],[15,3,4,5],[16,2,5,0],[16,11,5,9,"isEqual"],[16,18,5,16,"isEqual"],[16,19,5,17,"first"],[16,24,5,22],[16,26,5,24,"second"],[16,32,5,30],[16,34,5,32],[17,4,6,4],[17,8,6,8,"first"],[17,13,6,13],[17,18,6,18,"second"],[17,24,6,24],[17,26,6,26],[18,6,7,8],[18,13,7,15],[18,17,7,19],[19,4,8,4],[20,4,9,4],[20,8,9,8,"safeIsNaN"],[20,17,9,17],[20,18,9,18,"first"],[20,23,9,23],[20,24,9,24],[20,28,9,28,"safeIsNaN"],[20,37,9,37],[20,38,9,38,"second"],[20,44,9,44],[20,45,9,45],[20,47,9,47],[21,6,10,8],[21,13,10,15],[21,17,10,19],[22,4,11,4],[23,4,12,4],[23,11,12,11],[23,16,12,16],[24,2,13,0],[25,2,14,0],[25,11,14,9,"areInputsEqual"],[25,25,14,23,"areInputsEqual"],[25,26,14,24,"newInputs"],[25,35,14,33],[25,37,14,35,"lastInputs"],[25,47,14,45],[25,49,14,47],[26,4,15,4],[26,8,15,8,"newInputs"],[26,17,15,17],[26,18,15,18,"length"],[26,24,15,24],[26,29,15,29,"lastInputs"],[26,39,15,39],[26,40,15,40,"length"],[26,46,15,46],[26,48,15,48],[27,6,16,8],[27,13,16,15],[27,18,16,20],[28,4,17,4],[29,4,18,4],[29,9,18,9],[29,13,18,13,"i"],[29,14,18,14],[29,17,18,17],[29,18,18,18],[29,20,18,20,"i"],[29,21,18,21],[29,24,18,24,"newInputs"],[29,33,18,33],[29,34,18,34,"length"],[29,40,18,40],[29,42,18,42,"i"],[29,43,18,43],[29,45,18,45],[29,47,18,47],[30,6,19,8],[30,10,19,12],[30,11,19,13,"isEqual"],[30,18,19,20],[30,19,19,21,"newInputs"],[30,28,19,30],[30,29,19,31,"i"],[30,30,19,32],[30,31,19,33],[30,33,19,35,"lastInputs"],[30,43,19,45],[30,44,19,46,"i"],[30,45,19,47],[30,46,19,48],[30,47,19,49],[30,49,19,51],[31,8,20,12],[31,15,20,19],[31,20,20,24],[32,6,21,8],[33,4,22,4],[34,4,23,4],[34,11,23,11],[34,15,23,15],[35,2,24,0],[36,2,26,0],[36,11,26,9,"memoizeOne"],[36,21,26,19,"memoizeOne"],[36,22,26,20,"resultFn"],[36,30,26,28],[36,32,26,30,"isEqual"],[36,39,26,37],[36,41,26,39],[37,4,27,4],[37,8,27,8,"isEqual"],[37,15,27,15],[37,20,27,20],[37,25,27,25],[37,26,27,26],[37,28,27,28],[38,6,27,30,"isEqual"],[38,13,27,37],[38,16,27,40,"areInputsEqual"],[38,30,27,54],[39,4,27,56],[40,4,28,4],[40,8,28,8,"cache"],[40,13,28,13],[40,16,28,16],[40,20,28,20],[41,4,29,4],[41,13,29,13,"memoized"],[41,21,29,21,"memoized"],[41,22,29,21],[41,24,29,24],[42,6,30,8],[42,10,30,12,"newArgs"],[42,17,30,19],[42,20,30,22],[42,22,30,24],[43,6,31,8],[43,11,31,13],[43,15,31,17,"_i"],[43,17,31,19],[43,20,31,22],[43,21,31,23],[43,23,31,25,"_i"],[43,25,31,27],[43,28,31,30,"arguments"],[43,37,31,39],[43,38,31,40,"length"],[43,44,31,46],[43,46,31,48,"_i"],[43,48,31,50],[43,50,31,52],[43,52,31,54],[44,8,32,12,"newArgs"],[44,15,32,19],[44,16,32,20,"_i"],[44,18,32,22],[44,19,32,23],[44,22,32,26,"arguments"],[44,31,32,35],[44,32,32,36,"_i"],[44,34,32,38],[44,35,32,39],[45,6,33,8],[46,6,34,8],[46,10,34,12,"cache"],[46,15,34,17],[46,19,34,21,"cache"],[46,24,34,26],[46,25,34,27,"lastThis"],[46,33,34,35],[46,38,34,40],[46,42,34,44],[46,46,34,48,"isEqual"],[46,53,34,55],[46,54,34,56,"newArgs"],[46,61,34,63],[46,63,34,65,"cache"],[46,68,34,70],[46,69,34,71,"lastArgs"],[46,77,34,79],[46,78,34,80],[46,80,34,82],[47,8,35,12],[47,15,35,19,"cache"],[47,20,35,24],[47,21,35,25,"lastResult"],[47,31,35,35],[48,6,36,8],[49,6,37,8],[49,10,37,12,"lastResult"],[49,20,37,22],[49,23,37,25,"resultFn"],[49,31,37,33],[49,32,37,34,"apply"],[49,37,37,39],[49,38,37,40],[49,42,37,44],[49,44,37,46,"newArgs"],[49,51,37,53],[49,52,37,54],[50,6,38,8,"cache"],[50,11,38,13],[50,14,38,16],[51,8,39,12,"lastResult"],[51,18,39,22],[51,20,39,24,"lastResult"],[51,30,39,34],[52,8,40,12,"lastArgs"],[52,16,40,20],[52,18,40,22,"newArgs"],[52,25,40,29],[53,8,41,12,"lastThis"],[53,16,41,20],[53,18,41,22],[54,6,42,8],[54,7,42,9],[55,6,43,8],[55,13,43,15,"lastResult"],[55,23,43,25],[56,4,44,4],[57,4,45,4,"memoized"],[57,12,45,12],[57,13,45,13,"clear"],[57,18,45,18],[57,21,45,21],[57,30,45,30,"clear"],[57,35,45,35,"clear"],[57,36,45,35],[57,38,45,38],[58,6,46,8,"cache"],[58,11,46,13],[58,14,46,16],[58,18,46,20],[59,4,47,4],[59,5,47,5],[60,4,48,4],[60,11,48,11,"memoized"],[60,19,48,19],[61,2,49,0],[62,0,49,1],[62,3]],"functionMap":{"names":["<global>","ponyfill","isEqual","areInputsEqual","memoizeOne","memoized","clear"],"mappings":"AAA;ICC;KDE;AEC;CFQ;AGC;CHU;AIE;ICG;KDe;qBEC;KFE;CJE"},"hasCjsExports":false},"type":"js/module"}]}